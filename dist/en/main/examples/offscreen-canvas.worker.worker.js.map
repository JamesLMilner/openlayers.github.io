{"version":3,"file":"offscreen-canvas.worker.worker.js","mappings":"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ACA,IACA,GAEJ,cAAiB,CACb,GACA,GACA,GACA,GAEJ,cAAiB,CACb,GACA,GACA,GACA,GAEJ,cAAiB,CACb,EACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,EACA,IACA,GAEJ,SAAY,CACR,IACA,GACA,IACA,GAEJ,YAAe,CACX,EACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,IACA,IACA,GAEJ,WAAc,CACV,GACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,GACA,GACA,GAEJ,YAAe,CACX,IACA,IACA,IACA,GAEJ,YAAe,CACX,GACA,IACA,GACA,GAEJ,QAAW,CACP,IACA,EACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,KAAQ,CACJ,IACA,IACA,EACA,GAEJ,UAAa,CACT,IACA,IACA,GACA,GAEJ,KAAQ,CACJ,IACA,IACA,IACA,GAEJ,MAAS,CACL,EACA,IACA,EACA,GAEJ,YAAe,CACX,IACA,IACA,GACA,GAEJ,KAAQ,CACJ,IACA,IACA,IACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,GACA,GACA,GAEJ,OAAU,CACN,GACA,EACA,IACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,cAAiB,CACb,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,EACA,GAEJ,aAAgB,CACZ,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,qBAAwB,CACpB,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,YAAe,CAC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","sources":["webpack:///../node_modules/ieee754/index.js","webpack:///../node_modules/json-stringify-safe/stringify.js","webpack:///../node_modules/pbf/index.js","webpack:///../node_modules/rbush/rbush.min.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///../src/ol/util.js","webpack:///../src/ol/proj/Units.js","webpack:///../src/ol/proj/Projection.js","webpack:///../src/ol/proj/epsg3857.js","webpack:///../src/ol/proj/epsg4326.js","webpack:///../src/ol/proj/projections.js","webpack:///../src/ol/proj/transforms.js","webpack:///../src/ol/extent/Relationship.js","webpack:///../src/ol/extent.js","webpack:///../src/ol/coordinate.js","webpack:///../src/ol/math.js","webpack:///../src/ol/sphere.js","webpack:///../src/ol/console.js","webpack:///../src/ol/proj.js","webpack:///../src/ol/format/Feature.js","webpack:///../src/ol/events/Event.js","webpack:///../src/ol/ObjectEventType.js","webpack:///../src/ol/Disposable.js","webpack:///../src/ol/array.js","webpack:///../src/ol/functions.js","webpack:///../src/ol/obj.js","webpack:///../src/ol/events/Target.js","webpack:///../src/ol/events/EventType.js","webpack:///../src/ol/events.js","webpack:///../src/ol/Observable.js","webpack:///../src/ol/Object.js","webpack:///../src/ol/has.js","webpack:///../src/ol/asserts.js","webpack:///../src/ol/transform.js","webpack:///../src/ol/geom/flat/transform.js","webpack:///../src/ol/geom/Geometry.js","webpack:///../src/ol/geom/SimpleGeometry.js","webpack:///../src/ol/geom/flat/closest.js","webpack:///../src/ol/geom/flat/deflate.js","webpack:///../src/ol/geom/flat/simplify.js","webpack:///../src/ol/geom/flat/segments.js","webpack:///../src/ol/geom/flat/inflate.js","webpack:///../src/ol/geom/flat/interpolate.js","webpack:///../src/ol/geom/flat/contains.js","webpack:///../src/ol/geom/flat/intersectsextent.js","webpack:///../src/ol/geom/flat/length.js","webpack:///../src/ol/geom/LineString.js","webpack:///../src/ol/geom/MultiLineString.js","webpack:///../src/ol/geom/Point.js","webpack:///../src/ol/geom/MultiPoint.js","webpack:///../src/ol/geom/flat/area.js","webpack:///../src/ol/geom/LinearRing.js","webpack:///../src/ol/geom/flat/interiorpoint.js","webpack:///../src/ol/geom/flat/reverse.js","webpack:///../src/ol/geom/flat/orient.js","webpack:///../src/ol/geom/Polygon.js","webpack:///../src/ol/geom/flat/center.js","webpack:///../src/ol/geom/MultiPolygon.js","webpack:///../src/ol/render/Feature.js","webpack:///../src/ol/format/MVT.js","webpack:///../src/ol/structs/PriorityQueue.js","webpack:///../src/ol/TileState.js","webpack:///../src/ol/TileQueue.js","webpack:///../src/ol/layer/Property.js","webpack:///../src/ol/layer/Base.js","webpack:///../src/ol/render/EventType.js","webpack:///../src/ol/ViewHint.js","webpack:///../src/ol/ViewProperty.js","webpack:///../src/ol/tilegrid/common.js","webpack:///../src/ol/centerconstraint.js","webpack:///../src/ol/resolutionconstraint.js","webpack:///../src/ol/rotationconstraint.js","webpack:///../src/ol/easing.js","webpack:///../src/ol/View.js","webpack:///../src/ol/layer/Layer.js","webpack:///../src/ol/ImageState.js","webpack:///../src/ol/size.js","webpack:///../src/ol/style/Image.js","webpack:///../src/ol/color.js","webpack:///../src/ol/colorlike.js","webpack:///../src/ol/dom.js","webpack:///../src/ol/css.js","webpack:///../src/ol/render/canvas.js","webpack:///../src/ol/style/RegularShape.js","webpack:///../src/ol/style/Circle.js","webpack:///../src/ol/style/Fill.js","webpack:///../src/ol/style/Stroke.js","webpack:///../src/ol/style/Style.js","webpack:///../src/ol/Image.js","webpack:///../src/ol/style/IconImageCache.js","webpack:///../src/ol/style/IconImage.js","webpack:///../src/ol/style/Icon.js","webpack:///../src/ol/style/Text.js","webpack:///../src/ol/expr/expression.js","webpack:///../src/ol/expr/cpu.js","webpack:///../src/ol/render/canvas/style.js","webpack:///../src/ol/layer/BaseVector.js","webpack:///../src/ol/render/canvas/Instruction.js","webpack:///../src/ol/render/VectorContext.js","webpack:///../src/ol/render/canvas/Builder.js","webpack:///../src/ol/render/canvas/ImageBuilder.js","webpack:///../src/ol/render/canvas/LineStringBuilder.js","webpack:///../src/ol/render/canvas/PolygonBuilder.js","webpack:///../src/ol/geom/flat/linechunk.js","webpack:///../src/ol/geom/flat/straightchunk.js","webpack:///../src/ol/render/canvas/TextBuilder.js","webpack:///../src/ol/render/canvas/BuilderGroup.js","webpack:///../src/ol/geom/flat/textpath.js","webpack:///../src/ol/render/canvas/Executor.js","webpack:///../src/ol/render/canvas/ExecutorGroup.js","webpack:///../src/ol/renderer/Layer.js","webpack:///../src/ol/render/Event.js","webpack:///../src/ol/renderer/canvas/Layer.js","webpack:///../src/ol/Tile.js","webpack:///../src/ol/ImageTile.js","webpack:///../src/ol/reproj/Triangulation.js","webpack:///../src/ol/reproj.js","webpack:///../src/ol/reproj/Tile.js","webpack:///../src/ol/reproj/common.js","webpack:///../src/ol/TileRange.js","webpack:///../src/ol/renderer/canvas/TileLayer.js","webpack:///../src/ol/render/canvas/Immediate.js","webpack:///../src/ol/render/canvas/hitdetect.js","webpack:///../src/ol/renderer/vector.js","webpack:///../src/ol/renderer/canvas/VectorTileLayer.js","webpack:///../src/ol/layer/TileProperty.js","webpack:///../src/ol/layer/VectorTile.js","webpack:///../src/ol/VectorTile.js","webpack:///../src/ol/structs/LRUCache.js","webpack:///../src/ol/tilecoord.js","webpack:///../src/ol/TileCache.js","webpack:///../src/ol/tilegrid/TileGrid.js","webpack:///../src/ol/source/TileEventType.js","webpack:///../src/ol/source/Source.js","webpack:///../src/ol/tilegrid.js","webpack:///../src/ol/source/Tile.js","webpack:///../src/ol/tileurlfunction.js","webpack:///../src/ol/source/UrlTile.js","webpack:///../src/ol/VectorRenderTile.js","webpack:///../src/ol/featureloader.js","webpack:///../src/ol/source/VectorTile.js","webpack:///../node_modules/ol-mapbox-style/dist/index.js","webpack:///./offscreen-canvas.worker.js"],"sourcesContent":["/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","exports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return \"[Circular ~]\"\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|Array<Array<number>>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return 2;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {import(\"../geom/Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n  /**\n   * @return {Array<number>|Array<Array<number>>} Ends or endss.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n}\n\nRenderFeature.prototype.getEndss = RenderFeature.prototype.getEnds;\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [options] Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1]\n          );\n          coordsLen += 2;\n        }\n      } else {\n        throw new Error('Invalid command found in the PBF');\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        values,\n        id\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n            ? new LineString(flatCoordinates, 'XY')\n            : geometryType === 'MultiPoint'\n            ? new MultiPoint(flatCoordinates, 'XY')\n            : geometryType === 'MultiLineString'\n            ? new MultiLineString(flatCoordinates, 'XY', ends)\n            : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return features;\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n          ? pbf.readDouble()\n          : tag === 4\n          ? pbf.readVarint64()\n          : tag === 5\n          ? pbf.readVarint()\n          : tag === 6\n          ? pbf.readSVarint()\n          : tag === 7\n          ? pbf.readBoolean()\n          : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../geom/Geometry.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../geom/Geometry.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue'\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number'\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`'\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`'\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.'\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/color\n */\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    throw new Error('Invalid color');\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`'\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(this.getExtent(), requestResolution, this.getPixelRatio())\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e)\n          )\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n * @param {string} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time'\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided'\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`'\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\n\nimport {ascending} from '../array.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Number: 'number',\n  String: 'string',\n  Get: 'get',\n  Var: 'var',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Expression} Parser\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Number]: createParser(withArgs(1, Infinity, AnyType), NumberType),\n  [Ops.String]: createParser(withArgs(1, Infinity, AnyType), StringType),\n  [Ops.Get]: createParser(withGetArgs, AnyType),\n  [Ops.Var]: createParser(withVarArgs, AnyType),\n  [Ops.Resolution]: createParser(withNoArgs, NumberType),\n  [Ops.Any]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.All]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.Not]: createParser(withArgs(1, 1, BooleanType), BooleanType),\n  [Ops.Equal]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.NotEqual]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    withArgs(2, 2, AnyType),\n    BooleanType\n  ),\n  [Ops.LessThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.LessThanOrEqualTo]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.Multiply]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Divide]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Add]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Subtract]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Clamp]: createParser(withArgs(3, 3, NumberType), NumberType),\n  [Ops.Mod]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Pow]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Abs]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Floor]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Ceil]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Round]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Sin]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Cos]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Atan]: createParser(withArgs(1, 2, NumberType), NumberType),\n  [Ops.Sqrt]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Match]: createParser(\n    withArgs(4, Infinity, StringType | NumberType),\n    AnyType\n  ),\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Array<Expression>} ArgValidator\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for get operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for var operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for var operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.variables.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgs(minArgs, maxArgs, argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for operation ${operation}, got ${argCount}`\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      throw new Error(\n        `Expected ${minArgs} to ${maxArgs} arguments for operation ${operation}, got ${argCount}`\n      );\n    }\n\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            ` : got ${gotType} but expected ${expectedType}`\n        );\n      }\n      args[i] = expression;\n    }\n\n    return args;\n  };\n}\n\n/**\n * @param {ArgValidator} argValidator The argument validator.\n * @param {number} returnType The return type.\n * @return {Parser} The parser.\n */\nfunction createParser(argValidator, returnType) {\n  return function (encoded, context) {\n    const operator = encoded[0];\n    const args = argValidator(encoded, context);\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context);\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = expression.args[0];\n  if (!(nameExpression instanceof LiteralExpression)) {\n    throw new Error('Expected literal name');\n  }\n  const name = nameExpression.value;\n  if (typeof name !== 'string') {\n    throw new Error('Expected string name');\n  }\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    for (let i = 0; i < length; ++i) {\n      styles[i] = evaluators[i](evaluationContext);\n    }\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'fill-color',\n    context\n  );\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context\n  );\n\n  const text = new Text({});\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align'\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline'\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units'\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units'\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(flatStyle, prefix + 'declutter');\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const radius = optionalNumber(flatStyle, prefix + 'radius');\n  const radius1 = optionalNumber(flatStyle, prefix + 'radius1');\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius1,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== 'vector'\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === 'vector'\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    if (declutter) {\n      tile.declutterExecutorGroups[layerUid] = [];\n    }\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        builderExtent,\n        resolution,\n        pixelRatio\n      );\n      const declutterBuilderGroup = declutter\n        ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n        : undefined;\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutterBuilderGroup\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer()\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n      if (declutterBuilderGroup) {\n        const declutterExecutorGroup = new CanvasExecutorGroup(\n          null,\n          resolution,\n          pixelRatio,\n          source.getOverlaps(),\n          declutterBuilderGroup.finish(),\n          layer.getRenderBuffer()\n        );\n        tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n      }\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n      if (declutterExecutorGroups) {\n        executorGroups.push(declutterExecutorGroups);\n      }\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures =\n          executorGroups === declutterExecutorGroups\n            ? frameState.declutterTree.all().map((item) => item.value)\n            : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice()\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile\n        .getSourceTiles()\n        .reduce(function (accumulator, sourceTile) {\n          return accumulator.concat(sourceTile.getFeatures());\n        }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection)\n          )\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.getLayer().getOpacity();\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const declutterExecutorGroups =\n        tile.declutterExecutorGroups[getUid(this.getLayer())];\n      if (declutterExecutorGroups) {\n        for (let j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n          declutterExecutorGroups[j].execute(\n            this.context,\n            1,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            undefined,\n            frameState.declutterTree\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset\n      )\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layer.getOpacity();\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes)\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      if (currentClip) {\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]]\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          1,\n          transform,\n          rotation,\n          hifi,\n          replayTypes\n        );\n      }\n      if (contextSaved) {\n        context.restore();\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder group for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio)\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        renderScale,\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()]\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options} [options] Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Object} */ (Object.assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(\n      /** @type {import(\"./BaseVector.js\").Options<import(\"../source/VectorTile.js\").default>} */ (\n        baseOptions\n      )\n    );\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    assert(\n      renderMode == 'hybrid' || renderMode == 'vector',\n      \"`renderMode` must be `'hybrid'` or `'vector'`\"\n    );\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already'\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      '`resolutions` must be sorted in descending order'\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal'\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal'\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.'\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(\n            range,\n            'The {-y} placeholder requires a tile grid with extent'\n          );\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {fromKey, getCacheKeyForTileKey, getKeyZXY} from '../tilecoord.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache = new TileCache(this.tileCache.highWaterMark);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.tileCache;\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const z = fromKey(tileCache.peekFirstKey())[0];\n    const tileGrid = this.tileGrid;\n    tileCache.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n    this.sourceTileCache.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    const usedSourceTiles = Object.keys(usedTiles).reduce((acc, key) => {\n      const cacheKey = getCacheKeyForTileKey(key);\n      const tile = tileCache.peek(cacheKey);\n      if (tile) {\n        const sourceTiles = tile.sourceTiles;\n        for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n          acc[sourceTiles[i].getKey()] = true;\n        }\n      }\n      return acc;\n    }, {});\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache.expireCache(usedSourceTiles);\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection\n        );\n        const sourceTile = this.sourceTileCache.containsKey(tileUrl)\n          ? this.sourceTileCache.get(tileUrl)\n          : new this.tileClass(\n              sourceTileCoord,\n              tileUrl ? TileState.IDLE : TileState.EMPTY,\n              tileUrl,\n              this.format_,\n              this.tileLoadFunction\n            );\n        tile.sourceTiles.push(sourceTile);\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0]\n          );\n          this.sourceTileCache.set(tileUrl, sourceTile);\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR\n          )\n            ? TileState.ERROR\n            : TileState.LOADED\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const coordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    let tile;\n    if (this.tileCache.containsKey(coordKey)) {\n      tile = this.tileCache.get(coordKey);\n      if (tile.key === key) {\n        return tile;\n      }\n    }\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        empty =\n          empty &&\n          !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n      });\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection)\n    );\n\n    newTile.key = key;\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      this.tileCache.replace(coordKey, newTile);\n    } else {\n      this.tileCache.set(coordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    super.updateCacheSize(tileCount * 2, projection);\n    this.sourceTileCache.highWaterMark =\n      this.getTileCacheForProjection(projection).highWaterMark;\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile)\n      );\n    }\n  );\n}\n","import Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\nimport { registerFont, checkedFonts } from 'ol/render/canvas.js';\nimport { expandUrl } from 'ol/tileurlfunction.js';\nimport { getUid } from 'ol/util.js';\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport Layer from 'ol/layer/Layer.js';\nimport LayerGroup from 'ol/layer/Group.js';\nimport MVT from 'ol/format/MVT.js';\nimport Map from 'ol/Map.js';\nimport Raster from 'ol/source/Raster.js';\nimport Source from 'ol/source/Source.js';\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource, { defaultLoadFunction } from 'ol/source/VectorTile.js';\nimport View from 'ol/View.js';\nimport { get as get$1, METERS_PER_UNIT, fromLonLat, equivalent, getUserProjection } from 'ol/proj.js';\nimport { bbox } from 'ol/loadingstrategy.js';\nimport { createXYZ } from 'ol/tilegrid.js';\nimport { getTopLeft } from 'ol/extent.js';\nimport BaseEvent from 'ol/events/Event.js';\nimport EventType from 'ol/events/EventType.js';\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar csscolorparser = {};\n\nvar parseCSSColor_1;\n// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n    'transparent': [\n        0,\n        0,\n        0,\n        0\n    ],\n    'aliceblue': [\n        240,\n        248,\n        255,\n        1\n    ],\n    'antiquewhite': [\n        250,\n        235,\n        215,\n        1\n    ],\n    'aqua': [\n        0,\n        255,\n        255,\n        1\n    ],\n    'aquamarine': [\n        127,\n        255,\n        212,\n        1\n    ],\n    'azure': [\n        240,\n        255,\n        255,\n        1\n    ],\n    'beige': [\n        245,\n        245,\n        220,\n        1\n    ],\n    'bisque': [\n        255,\n        228,\n        196,\n        1\n    ],\n    'black': [\n        0,\n        0,\n        0,\n        1\n    ],\n    'blanchedalmond': [\n        255,\n        235,\n        205,\n        1\n    ],\n    'blue': [\n        0,\n        0,\n        255,\n        1\n    ],\n    'blueviolet': [\n        138,\n        43,\n        226,\n        1\n    ],\n    'brown': [\n        165,\n        42,\n        42,\n        1\n    ],\n    'burlywood': [\n        222,\n        184,\n        135,\n        1\n    ],\n    'cadetblue': [\n        95,\n        158,\n        160,\n        1\n    ],\n    'chartreuse': [\n        127,\n        255,\n        0,\n        1\n    ],\n    'chocolate': [\n        210,\n        105,\n        30,\n        1\n    ],\n    'coral': [\n        255,\n        127,\n        80,\n        1\n    ],\n    'cornflowerblue': [\n        100,\n        149,\n        237,\n        1\n    ],\n    'cornsilk': [\n        255,\n        248,\n        220,\n        1\n    ],\n    'crimson': [\n        220,\n        20,\n        60,\n        1\n    ],\n    'cyan': [\n        0,\n        255,\n        255,\n        1\n    ],\n    'darkblue': [\n        0,\n        0,\n        139,\n        1\n    ],\n    'darkcyan': [\n        0,\n        139,\n        139,\n        1\n    ],\n    'darkgoldenrod': [\n        184,\n        134,\n        11,\n        1\n    ],\n    'darkgray': [\n        169,\n        169,\n        169,\n        1\n    ],\n    'darkgreen': [\n        0,\n        100,\n        0,\n        1\n    ],\n    'darkgrey': [\n        169,\n        169,\n        169,\n        1\n    ],\n    'darkkhaki': [\n        189,\n        183,\n        107,\n        1\n    ],\n    'darkmagenta': [\n        139,\n        0,\n        139,\n        1\n    ],\n    'darkolivegreen': [\n        85,\n        107,\n        47,\n        1\n    ],\n    'darkorange': [\n        255,\n        140,\n        0,\n        1\n    ],\n    'darkorchid': [\n        153,\n        50,\n        204,\n        1\n    ],\n    'darkred': [\n        139,\n        0,\n        0,\n        1\n    ],\n    'darksalmon': [\n        233,\n        150,\n        122,\n        1\n    ],\n    'darkseagreen': [\n        143,\n        188,\n        143,\n        1\n    ],\n    'darkslateblue': [\n        72,\n        61,\n        139,\n        1\n    ],\n    'darkslategray': [\n        47,\n        79,\n        79,\n        1\n    ],\n    'darkslategrey': [\n        47,\n        79,\n        79,\n        1\n    ],\n    'darkturquoise': [\n        0,\n        206,\n        209,\n        1\n    ],\n    'darkviolet': [\n        148,\n        0,\n        211,\n        1\n    ],\n    'deeppink': [\n        255,\n        20,\n        147,\n        1\n    ],\n    'deepskyblue': [\n        0,\n        191,\n        255,\n        1\n    ],\n    'dimgray': [\n        105,\n        105,\n        105,\n        1\n    ],\n    'dimgrey': [\n        105,\n        105,\n        105,\n        1\n    ],\n    'dodgerblue': [\n        30,\n        144,\n        255,\n        1\n    ],\n    'firebrick': [\n        178,\n        34,\n        34,\n        1\n    ],\n    'floralwhite': [\n        255,\n        250,\n        240,\n        1\n    ],\n    'forestgreen': [\n        34,\n        139,\n        34,\n        1\n    ],\n    'fuchsia': [\n        255,\n        0,\n        255,\n        1\n    ],\n    'gainsboro': [\n        220,\n        220,\n        220,\n        1\n    ],\n    'ghostwhite': [\n        248,\n        248,\n        255,\n        1\n    ],\n    'gold': [\n        255,\n        215,\n        0,\n        1\n    ],\n    'goldenrod': [\n        218,\n        165,\n        32,\n        1\n    ],\n    'gray': [\n        128,\n        128,\n        128,\n        1\n    ],\n    'green': [\n        0,\n        128,\n        0,\n        1\n    ],\n    'greenyellow': [\n        173,\n        255,\n        47,\n        1\n    ],\n    'grey': [\n        128,\n        128,\n        128,\n        1\n    ],\n    'honeydew': [\n        240,\n        255,\n        240,\n        1\n    ],\n    'hotpink': [\n        255,\n        105,\n        180,\n        1\n    ],\n    'indianred': [\n        205,\n        92,\n        92,\n        1\n    ],\n    'indigo': [\n        75,\n        0,\n        130,\n        1\n    ],\n    'ivory': [\n        255,\n        255,\n        240,\n        1\n    ],\n    'khaki': [\n        240,\n        230,\n        140,\n        1\n    ],\n    'lavender': [\n        230,\n        230,\n        250,\n        1\n    ],\n    'lavenderblush': [\n        255,\n        240,\n        245,\n        1\n    ],\n    'lawngreen': [\n        124,\n        252,\n        0,\n        1\n    ],\n    'lemonchiffon': [\n        255,\n        250,\n        205,\n        1\n    ],\n    'lightblue': [\n        173,\n        216,\n        230,\n        1\n    ],\n    'lightcoral': [\n        240,\n        128,\n        128,\n        1\n    ],\n    'lightcyan': [\n        224,\n        255,\n        255,\n        1\n    ],\n    'lightgoldenrodyellow': [\n        250,\n        250,\n        210,\n        1\n    ],\n    'lightgray': [\n        211,\n        211,\n        211,\n        1\n    ],\n    'lightgreen': [\n        144,\n        238,\n        144,\n        1\n    ],\n    'lightgrey': [\n        211,\n        211,\n        211,\n        1\n    ],\n    'lightpink': [\n        255,\n        182,\n        193,\n        1\n    ],\n    'lightsalmon': [\n        255,\n        160,\n        122,\n        1\n    ],\n    'lightseagreen': [\n        32,\n        178,\n        170,\n        1\n    ],\n    'lightskyblue': [\n        135,\n        206,\n        250,\n        1\n    ],\n    'lightslategray': [\n        119,\n        136,\n        153,\n        1\n    ],\n    'lightslategrey': [\n        119,\n        136,\n        153,\n        1\n    ],\n    'lightsteelblue': [\n        176,\n        196,\n        222,\n        1\n    ],\n    'lightyellow': [\n        255,\n        255,\n        224,\n        1\n    ],\n    'lime': [\n        0,\n        255,\n        0,\n        1\n    ],\n    'limegreen': [\n        50,\n        205,\n        50,\n        1\n    ],\n    'linen': [\n        250,\n        240,\n        230,\n        1\n    ],\n    'magenta': [\n        255,\n        0,\n        255,\n        1\n    ],\n    'maroon': [\n        128,\n        0,\n        0,\n        1\n    ],\n    'mediumaquamarine': [\n        102,\n        205,\n        170,\n        1\n    ],\n    'mediumblue': [\n        0,\n        0,\n        205,\n        1\n    ],\n    'mediumorchid': [\n        186,\n        85,\n        211,\n        1\n    ],\n    'mediumpurple': [\n        147,\n        112,\n        219,\n        1\n    ],\n    'mediumseagreen': [\n        60,\n        179,\n        113,\n        1\n    ],\n    'mediumslateblue': [\n        123,\n        104,\n        238,\n        1\n    ],\n    'mediumspringgreen': [\n        0,\n        250,\n        154,\n        1\n    ],\n    'mediumturquoise': [\n        72,\n        209,\n        204,\n        1\n    ],\n    'mediumvioletred': [\n        199,\n        21,\n        133,\n        1\n    ],\n    'midnightblue': [\n        25,\n        25,\n        112,\n        1\n    ],\n    'mintcream': [\n        245,\n        255,\n        250,\n        1\n    ],\n    'mistyrose': [\n        255,\n        228,\n        225,\n        1\n    ],\n    'moccasin': [\n        255,\n        228,\n        181,\n        1\n    ],\n    'navajowhite': [\n        255,\n        222,\n        173,\n        1\n    ],\n    'navy': [\n        0,\n        0,\n        128,\n        1\n    ],\n    'oldlace': [\n        253,\n        245,\n        230,\n        1\n    ],\n    'olive': [\n        128,\n        128,\n        0,\n        1\n    ],\n    'olivedrab': [\n        107,\n        142,\n        35,\n        1\n    ],\n    'orange': [\n        255,\n        165,\n        0,\n        1\n    ],\n    'orangered': [\n        255,\n        69,\n        0,\n        1\n    ],\n    'orchid': [\n        218,\n        112,\n        214,\n        1\n    ],\n    'palegoldenrod': [\n        238,\n        232,\n        170,\n        1\n    ],\n    'palegreen': [\n        152,\n        251,\n        152,\n        1\n    ],\n    'paleturquoise': [\n        175,\n        238,\n        238,\n        1\n    ],\n    'palevioletred': [\n        219,\n        112,\n        147,\n        1\n    ],\n    'papayawhip': [\n        255,\n        239,\n        213,\n        1\n    ],\n    'peachpuff': [\n        255,\n        218,\n        185,\n        1\n    ],\n    'peru': [\n        205,\n        133,\n        63,\n        1\n    ],\n    'pink': [\n        255,\n        192,\n        203,\n        1\n    ],\n    'plum': [\n        221,\n        160,\n        221,\n        1\n    ],\n    'powderblue': [\n        176,\n        224,\n        230,\n        1\n    ],\n    'purple': [\n        128,\n        0,\n        128,\n        1\n    ],\n    'rebeccapurple': [\n        102,\n        51,\n        153,\n        1\n    ],\n    'red': [\n        255,\n        0,\n        0,\n        1\n    ],\n    'rosybrown': [\n        188,\n        143,\n        143,\n        1\n    ],\n    'royalblue': [\n        65,\n        105,\n        225,\n        1\n    ],\n    'saddlebrown': [\n        139,\n        69,\n        19,\n        1\n    ],\n    'salmon': [\n        250,\n        128,\n        114,\n        1\n    ],\n    'sandybrown': [\n        244,\n        164,\n        96,\n        1\n    ],\n    'seagreen': [\n        46,\n        139,\n        87,\n        1\n    ],\n    'seashell': [\n        255,\n        245,\n        238,\n        1\n    ],\n    'sienna': [\n        160,\n        82,\n        45,\n        1\n    ],\n    'silver': [\n        192,\n        192,\n        192,\n        1\n    ],\n    'skyblue': [\n        135,\n        206,\n        235,\n        1\n    ],\n    'slateblue': [\n        106,\n        90,\n        205,\n        1\n    ],\n    'slategray': [\n        112,\n        128,\n        144,\n        1\n    ],\n    'slategrey': [\n        112,\n        128,\n        144,\n        1\n    ],\n    'snow': [\n        255,\n        250,\n        250,\n        1\n    ],\n    'springgreen': [\n        0,\n        255,\n        127,\n        1\n    ],\n    'steelblue': [\n        70,\n        130,\n        180,\n        1\n    ],\n    'tan': [\n        210,\n        180,\n        140,\n        1\n    ],\n    'teal': [\n        0,\n        128,\n        128,\n        1\n    ],\n    'thistle': [\n        216,\n        191,\n        216,\n        1\n    ],\n    'tomato': [\n        255,\n        99,\n        71,\n        1\n    ],\n    'turquoise': [\n        64,\n        224,\n        208,\n        1\n    ],\n    'violet': [\n        238,\n        130,\n        238,\n        1\n    ],\n    'wheat': [\n        245,\n        222,\n        179,\n        1\n    ],\n    'white': [\n        255,\n        255,\n        255,\n        1\n    ],\n    'whitesmoke': [\n        245,\n        245,\n        245,\n        1\n    ],\n    'yellow': [\n        255,\n        255,\n        0,\n        1\n    ],\n    'yellowgreen': [\n        154,\n        205,\n        50,\n        1\n    ]\n};\nfunction clamp_css_byte(i) {\n    // Clamp to integer 0 .. 255.\n    i = Math.round(i);\n    // Seems to be what Chrome does (vs truncation).\n    return i < 0 ? 0 : i > 255 ? 255 : i;\n}\nfunction clamp_css_float(f) {\n    // Clamp to float 0.0 .. 1.0.\n    return f < 0 ? 0 : f > 1 ? 1 : f;\n}\nfunction parse_css_int(str) {\n    // int or percentage.\n    if (str[str.length - 1] === '%')\n        return clamp_css_byte(parseFloat(str) / 100 * 255);\n    return clamp_css_byte(parseInt(str));\n}\nfunction parse_css_float(str) {\n    // float or percentage.\n    if (str[str.length - 1] === '%')\n        return clamp_css_float(parseFloat(str) / 100);\n    return clamp_css_float(parseFloat(str));\n}\nfunction css_hue_to_rgb(m1, m2, h) {\n    if (h < 0)\n        h += 1;\n    else if (h > 1)\n        h -= 1;\n    if (h * 6 < 1)\n        return m1 + (m2 - m1) * h * 6;\n    if (h * 2 < 1)\n        return m2;\n    if (h * 3 < 2)\n        return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n    return m1;\n}\nfunction parseCSSColor(css_str) {\n    // Remove all whitespace, not compliant, but should just be more accepting.\n    var str = css_str.replace(/ /g, '').toLowerCase();\n    // Color keywords (and transparent) lookup.\n    if (str in kCSSColorTable)\n        return kCSSColorTable[str].slice();\n    // dup.\n    // #abc and #abc123 syntax.\n    if (str[0] === '#') {\n        if (str.length === 4) {\n            var iv = parseInt(str.substr(1), 16);\n            // TODO(deanm): Stricter parsing.\n            if (!(iv >= 0 && iv <= 4095))\n                return null;\n            // Covers NaN.\n            return [\n                (iv & 3840) >> 4 | (iv & 3840) >> 8,\n                iv & 240 | (iv & 240) >> 4,\n                iv & 15 | (iv & 15) << 4,\n                1\n            ];\n        } else if (str.length === 7) {\n            var iv = parseInt(str.substr(1), 16);\n            // TODO(deanm): Stricter parsing.\n            if (!(iv >= 0 && iv <= 16777215))\n                return null;\n            // Covers NaN.\n            return [\n                (iv & 16711680) >> 16,\n                (iv & 65280) >> 8,\n                iv & 255,\n                1\n            ];\n        }\n        return null;\n    }\n    var op = str.indexOf('('), ep = str.indexOf(')');\n    if (op !== -1 && ep + 1 === str.length) {\n        var fname = str.substr(0, op);\n        var params = str.substr(op + 1, ep - (op + 1)).split(',');\n        var alpha = 1;\n        // To allow case fallthrough.\n        switch (fname) {\n        case 'rgba':\n            if (params.length !== 4)\n                return null;\n            alpha = parse_css_float(params.pop());\n        // Fall through.\n        case 'rgb':\n            if (params.length !== 3)\n                return null;\n            return [\n                parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha\n            ];\n        case 'hsla':\n            if (params.length !== 4)\n                return null;\n            alpha = parse_css_float(params.pop());\n        // Fall through.\n        case 'hsl':\n            if (params.length !== 3)\n                return null;\n            var h = (parseFloat(params[0]) % 360 + 360) % 360 / 360;\n            // 0 .. 1\n            // NOTE(deanm): According to the CSS spec s/l should only be\n            // percentages, but we don't bother and let float or percentage.\n            var s = parse_css_float(params[1]);\n            var l = parse_css_float(params[2]);\n            var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n            var m1 = l * 2 - m2;\n            return [\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h + 1 / 3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h - 1 / 3) * 255),\n                alpha\n            ];\n        default:\n            return null;\n        }\n    }\n    return null;\n}\ntry {\n    parseCSSColor_1 = csscolorparser.parseCSSColor = parseCSSColor;\n} catch (e) {\n}\n\n//      \n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n    constructor(r, g, b, a = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n    /**\n     * Parses valid CSS color strings and returns a `Color` instance.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input) {\n        if (!input) {\n            return undefined;\n        }\n        if (input instanceof Color) {\n            return input;\n        }\n        if (typeof input !== 'string') {\n            return undefined;\n        }\n        const rgba = parseCSSColor_1(input);\n        if (!rgba) {\n            return undefined;\n        }\n        return new Color(rgba[0] / 255 * rgba[3], rgba[1] / 255 * rgba[3], rgba[2] / 255 * rgba[3], rgba[3]);\n    }\n    /**\n     * Returns an RGBA string representing the color value.\n     *\n     * @returns An RGBA string.\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString() {\n        const [r, g, b, a] = this.toArray();\n        return `rgba(${ Math.round(r) },${ Math.round(g) },${ Math.round(b) },${ a })`;\n    }\n    /**\n     * Returns an RGBA array of values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 255].\n     */\n    toArray() {\n        const {r, g, b, a} = this;\n        return a === 0 ? [\n            0,\n            0,\n            0,\n            0\n        ] : [\n            r * 255 / a,\n            g * 255 / a,\n            b * 255 / a,\n            a\n        ];\n    }\n    /**\n     * Returns a RGBA array of float values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01() {\n        const {r, g, b, a} = this;\n        return a === 0 ? [\n            0,\n            0,\n            0,\n            0\n        ] : [\n            r / a,\n            g / a,\n            b / a,\n            a\n        ];\n    }\n    /**\n     * Returns an RGBA array of values representing the color, premultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01PremultipliedAlpha() {\n        const {r, g, b, a} = this;\n        return [\n            r,\n            g,\n            b,\n            a\n        ];\n    }\n}\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nColor.blue = new Color(0, 0, 1, 1);\nvar Color$1 = Color;\n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? [\n        'literal',\n        value\n    ] : value;\n}\nfunction convertFunction(parameters, propertySpec) {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    stops = stops.map(stop => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [\n                stop[0],\n                convertTokenString(stop[1])\n            ];\n        }\n        return [\n            stop[0],\n            convertLiteral(stop[1])\n        ];\n    });\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\nfunction convertIdentityFunction(parameters, propertySpec) {\n    const get = [\n        'get',\n        parameters.property\n    ];\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? [\n            'string',\n            get\n        ] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        const expression = [\n            propertySpec.type === 'color' ? 'to-color' : propertySpec.type,\n            get,\n            convertLiteral(parameters.default)\n        ];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n    case 'hcl':\n        return 'interpolate-hcl';\n    case 'lab':\n        return 'interpolate-lab';\n    default:\n        return 'interpolate';\n    }\n}\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([\n            stop[0].value,\n            stop[1]\n        ]);\n    }\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [\n            getInterpolateOperator(parameters),\n            ['linear'],\n            ['zoom']\n        ];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n        return expression;\n    } else {\n        const expression = [\n            'step',\n            ['zoom']\n        ];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return expression;\n    }\n}\nfunction coalesce(a, b) {\n    if (a !== undefined)\n        return a;\n    if (b !== undefined)\n        return b;\n}\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = [\n        'get',\n        parameters.property\n    ];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push([\n                '==',\n                get,\n                stop[0]\n            ], stop[1]);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'categorical') {\n        const expression = [\n            'match',\n            get\n        ];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'interval') {\n        const expression = [\n            'step',\n            [\n                'number',\n                get\n            ]\n        ];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            [\n                '==',\n                [\n                    'typeof',\n                    get\n                ],\n                'number'\n            ],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? ['linear'] : [\n                'exponential',\n                base\n            ],\n            [\n                'number',\n                get\n            ]\n        ];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            [\n                '==',\n                [\n                    'typeof',\n                    get\n                ],\n                'number'\n            ],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error(`Unknown property function type ${ type }`);\n    }\n}\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = [\n            'step',\n            input\n        ];\n        isStep = true;\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? ['linear'] : [\n                'exponential',\n                base\n            ],\n            input\n        ];\n    } else {\n        throw new Error(`Unknown zoom function type \"${ type }\"`);\n    }\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n    fixupDegenerateStepCurve(expression);\n    return expression;\n}\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        return propertySpec.expression.interpolated ? 'exponential' : 'interval';\n    }\n}\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nfunction convertTokenString(s) {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0)\n            result.push(literal);\n        result.push([\n            'get',\n            match[1]\n        ]);\n    }\n    if (result.length === 1) {\n        return s;\n    }\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return [\n            'to-string',\n            result[1]\n        ];\n    }\n    return result;\n}\n\n//      \nclass ParsingError extends Error {\n    constructor(key, message) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\nvar ParsingError$1 = ParsingError;\n\n//      \n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n    constructor(parent, bindings = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n    concat(bindings) {\n        return new Scope(this, bindings);\n    }\n    get(name) {\n        if (this.bindings[name]) {\n            return this.bindings[name];\n        }\n        if (this.parent) {\n            return this.parent.get(name);\n        }\n        throw new Error(`${ name } not found in scope.`);\n    }\n    has(name) {\n        if (this.bindings[name])\n            return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\nvar Scope$1 = Scope;\n\n//      \nconst NullType = { kind: 'null' };\nconst NumberType = { kind: 'number' };\nconst StringType = { kind: 'string' };\nconst BooleanType = { kind: 'boolean' };\nconst ColorType = { kind: 'color' };\nconst ObjectType = { kind: 'object' };\nconst ValueType = { kind: 'value' };\nconst ErrorType = { kind: 'error' };\nconst CollatorType = { kind: 'collator' };\nconst FormattedType = { kind: 'formatted' };\nconst ResolvedImageType = { kind: 'resolvedImage' };\nfunction array$1(itemType, N) {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\nfunction toString$1(type) {\n    if (type.kind === 'array') {\n        const itemType = toString$1(type.itemType);\n        return typeof type.N === 'number' ? `array<${ itemType }, ${ type.N }>` : type.itemType.kind === 'value' ? 'array' : `array<${ itemType }>`;\n    } else {\n        return type.kind;\n    }\n}\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array$1(ValueType),\n    ResolvedImageType\n];\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nfunction checkSubtype(expected, t) {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' && (t.N === 0 && t.itemType.kind === 'value' || !checkSubtype(expected.itemType, t.itemType)) && (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n    return `Expected ${ toString$1(expected) } but found ${ toString$1(t) } instead.`;\n}\nfunction isValidType(provided, allowedTypes) {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\nfunction isValidNativeType(provided, allowedTypes) {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        } else if (t === 'array') {\n            return Array.isArray(provided);\n        } else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        } else {\n            return t === typeof provided;\n        }\n    });\n}\n\n//      \n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\nclass Collator {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [], {\n            sensitivity: this.sensitivity,\n            usage: 'search'\n        });\n    }\n    compare(lhs, rhs) {\n        return this.collator.compare(lhs, rhs);\n    }\n    resolvedLocale() {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : []).resolvedOptions().locale;\n    }\n}\n\n//      \nclass FormattedSection {\n    constructor(text, image, scale, fontStack, textColor) {\n        // combine characters so that diacritic marks are not separate code points\n        this.text = text.normalize ? text.normalize() : text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n    }\n}\nclass Formatted {\n    constructor(sections) {\n        this.sections = sections;\n    }\n    static fromString(unformatted) {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n    }\n    isEmpty() {\n        if (this.sections.length === 0)\n            return true;\n        return !this.sections.some(section => section.text.length !== 0 || section.image && section.image.name.length !== 0);\n    }\n    static factory(text) {\n        if (text instanceof Formatted) {\n            return text;\n        } else {\n            return Formatted.fromString(text);\n        }\n    }\n    toString() {\n        if (this.sections.length === 0)\n            return '';\n        return this.sections.map(section => section.text).join('');\n    }\n    serialize() {\n        const serialized = ['format'];\n        for (const section of this.sections) {\n            if (section.image) {\n                serialized.push([\n                    'image',\n                    section.image.name\n                ]);\n                continue;\n            }\n            serialized.push(section.text);\n            const options = {};\n            if (section.fontStack) {\n                options['text-font'] = [\n                    'literal',\n                    section.fontStack.split(',')\n                ];\n            }\n            if (section.scale) {\n                options['font-scale'] = section.scale;\n            }\n            if (section.textColor) {\n                options['text-color'] = ['rgba'].concat(section.textColor.toArray());\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n\n//      \nclass ResolvedImage {\n    constructor(options) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n    toString() {\n        return this.name;\n    }\n    static fromString(name) {\n        if (!name)\n            return null;\n        // treat empty values as no image\n        return new ResolvedImage({\n            name,\n            available: false\n        });\n    }\n    serialize() {\n        return [\n            'image',\n            this.name\n        ];\n    }\n}\n\nfunction validateRGBA(r, g, b, a) {\n    if (!(typeof r === 'number' && r >= 0 && r <= 255 && typeof g === 'number' && g >= 0 && g <= 255 && typeof b === 'number' && b >= 0 && b <= 255)) {\n        const value = typeof a === 'number' ? [\n            r,\n            g,\n            b,\n            a\n        ] : [\n            r,\n            g,\n            b\n        ];\n        return `Invalid rgba value [${ value.join(', ') }]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n    if (!(typeof a === 'undefined' || typeof a === 'number' && a >= 0 && a <= 1)) {\n        return `Invalid rgba value [${ [\n            r,\n            g,\n            b,\n            a\n        ].join(', ') }]: 'a' must be between 0 and 1.`;\n    }\n    return null;\n}\nfunction isValue(mixed) {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color$1) {\n        return true;\n    } else if (mixed instanceof Collator) {\n        return true;\n    } else if (mixed instanceof Formatted) {\n        return true;\n    } else if (mixed instanceof ResolvedImage) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\nfunction typeOf(value) {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color$1) {\n        return ColorType;\n    } else if (value instanceof Collator) {\n        return CollatorType;\n    } else if (value instanceof Formatted) {\n        return FormattedType;\n    } else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType;\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n        return array$1(itemType || ValueType, length);\n    } else {\n        return ObjectType;\n    }\n}\nfunction toString(value) {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color$1 || value instanceof Formatted || value instanceof ResolvedImage) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nclass Literal {\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${ args.length - 1 } instead.`);\n        if (!isValue(args[1]))\n            return context.error(`invalid value`);\n        const value = args[1];\n        let type = typeOf(value);\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (type.kind === 'array' && type.N === 0 && expected && expected.kind === 'array' && (typeof expected.N !== 'number' || expected.N === 0)) {\n            type = expected;\n        }\n        return new Literal(type, value);\n    }\n    evaluate() {\n        return this.value;\n    }\n    eachChild() {\n    }\n    outputDefined() {\n        return true;\n    }\n    serialize() {\n        if (this.type.kind === 'array' || this.type.kind === 'object') {\n            return [\n                'literal',\n                this.value\n            ];\n        } else if (this.value instanceof Color$1) {\n            // Constant-folding can generate Literal expressions that you\n            // couldn't actually generate with a \"literal\" expression,\n            // so we have to implement an equivalent serialization here\n            return ['rgba'].concat(this.value.toArray());\n        } else if (this.value instanceof Formatted) {\n            // Same as Color\n            return this.value.serialize();\n        } else {\n            return this.value;\n        }\n    }\n}\nvar Literal$1 = Literal;\n\n//      \nclass RuntimeError {\n    constructor(message) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n    toJSON() {\n        return this.message;\n    }\n}\nvar RuntimeError$1 = RuntimeError;\n\nconst types$2 = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\nclass Assertion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n        let i = 1;\n        let type;\n        const name = args[0];\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types$2) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types$2[type];\n                i++;\n            } else {\n                itemType = ValueType;\n            }\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null && (typeof args[2] !== 'number' || args[2] < 0 || args[2] !== Math.floor(args[2]))) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n            type = array$1(itemType, N);\n        } else {\n            type = types$2[name];\n        }\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Assertion(type, parsed);\n    }\n    evaluate(ctx) {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            } else if (i === this.args.length - 1) {\n                throw new RuntimeError$1(`Expected value to be of type ${ toString$1(this.type) }, but found ${ toString$1(typeOf(value)) } instead.`);\n            }\n        }\n        return null;\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n    serialize() {\n        const type = this.type;\n        const serialized = [type.kind];\n        if (type.kind === 'array') {\n            const itemType = type.itemType;\n            if (itemType.kind === 'string' || itemType.kind === 'number' || itemType.kind === 'boolean') {\n                serialized.push(itemType.kind);\n                const N = type.N;\n                if (typeof N === 'number' || this.args.length > 1) {\n                    serialized.push(N);\n                }\n            }\n        }\n        return serialized.concat(this.args.map(arg => arg.serialize()));\n    }\n}\nvar Assertion$1 = Assertion;\n\n//      \nclass FormatExpression {\n    constructor(sections) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error(`Expected at least one argument.`);\n        }\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object') {\n            return context.error(`First argument must be an image or text section.`);\n        }\n        const sections = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = args[i];\n            if (nextTokenMayBeObject && typeof arg === 'object' && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale)\n                        return null;\n                }\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array$1(StringType));\n                    if (!font)\n                        return null;\n                }\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor)\n                        return null;\n                }\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n            } else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content)\n                    return null;\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error(`Formatted text type must be 'string', 'value', 'image' or 'null'.`);\n                nextTokenMayBeObject = true;\n                sections.push({\n                    content,\n                    scale: null,\n                    font: null,\n                    textColor: null\n                });\n            }\n        }\n        return new FormatExpression(sections);\n    }\n    evaluate(ctx) {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null);\n            }\n            return new FormattedSection(toString(evaluatedContent), null, section.scale ? section.scale.evaluate(ctx) : null, section.font ? section.font.evaluate(ctx).join(',') : null, section.textColor ? section.textColor.evaluate(ctx) : null);\n        };\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n    eachChild(fn) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n        }\n    }\n    outputDefined() {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n    serialize() {\n        const serialized = ['format'];\n        for (const section of this.sections) {\n            serialized.push(section.content.serialize());\n            const options = {};\n            if (section.scale) {\n                options['font-scale'] = section.scale.serialize();\n            }\n            if (section.font) {\n                options['text-font'] = section.font.serialize();\n            }\n            if (section.textColor) {\n                options['text-color'] = section.textColor.serialize();\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n\n//      \nclass ImageExpression {\n    constructor(input) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2) {\n            return context.error(`Expected two arguments.`);\n        }\n        const name = context.parse(args[1], 1, StringType);\n        if (!name)\n            return context.error(`No image name provided.`);\n        return new ImageExpression(name);\n    }\n    evaluate(ctx) {\n        const evaluatedImageName = this.input.evaluate(ctx);\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages)\n            value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n        return value;\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n    serialize() {\n        return [\n            'image',\n            this.input.serialize()\n        ];\n    }\n}\n\nconst types$1 = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n        const name = args[0];\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error(`Expected one argument.`);\n        const type = types$1[name];\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Coercion(type, parsed);\n    }\n    evaluate(ctx) {\n        if (this.type.kind === 'boolean') {\n            return Boolean(this.args[0].evaluate(ctx));\n        } else if (this.type.kind === 'color') {\n            let input;\n            let error;\n            for (const arg of this.args) {\n                input = arg.evaluate(ctx);\n                error = null;\n                if (input instanceof Color$1) {\n                    return input;\n                } else if (typeof input === 'string') {\n                    const c = ctx.parseColor(input);\n                    if (c)\n                        return c;\n                } else if (Array.isArray(input)) {\n                    if (input.length < 3 || input.length > 4) {\n                        error = `Invalid rbga value ${ JSON.stringify(input) }: expected an array containing either three or four numeric values.`;\n                    } else {\n                        error = validateRGBA(input[0], input[1], input[2], input[3]);\n                    }\n                    if (!error) {\n                        return new Color$1(input[0] / 255, input[1] / 255, input[2] / 255, input[3]);\n                    }\n                }\n            }\n            throw new RuntimeError$1(error || `Could not parse color from value '${ typeof input === 'string' ? input : String(JSON.stringify(input)) }'`);\n        } else if (this.type.kind === 'number') {\n            let value = null;\n            for (const arg of this.args) {\n                value = arg.evaluate(ctx);\n                if (value === null)\n                    return 0;\n                const num = Number(value);\n                if (isNaN(num))\n                    continue;\n                return num;\n            }\n            throw new RuntimeError$1(`Could not convert ${ JSON.stringify(value) } to number.`);\n        } else if (this.type.kind === 'formatted') {\n            // There is no explicit 'to-formatted' but this coercion can be implicitly\n            // created by properties that expect the 'formatted' type.\n            return Formatted.fromString(toString(this.args[0].evaluate(ctx)));\n        } else if (this.type.kind === 'resolvedImage') {\n            return ResolvedImage.fromString(toString(this.args[0].evaluate(ctx)));\n        } else {\n            return toString(this.args[0].evaluate(ctx));\n        }\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n    serialize() {\n        if (this.type.kind === 'formatted') {\n            return new FormatExpression([{\n                    content: this.args[0],\n                    scale: null,\n                    font: null,\n                    textColor: null\n                }]).serialize();\n        }\n        if (this.type.kind === 'resolvedImage') {\n            return new ImageExpression(this.args[0]).serialize();\n        }\n        const serialized = [`to-${ this.type.kind }`];\n        this.eachChild(child => {\n            serialized.push(child.serialize());\n        });\n        return serialized;\n    }\n}\nvar Coercion$1 = Coercion;\n\n//      \nconst geometryTypes = [\n    'Unknown',\n    'Point',\n    'LineString',\n    'Polygon'\n];\nclass EvaluationContext {\n    constructor() {\n        this.globals = null;\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n        this.featureTileCoord = null;\n        this.featureDistanceData = null;\n    }\n    id() {\n        return this.feature && this.feature.id !== undefined ? this.feature.id : null;\n    }\n    geometryType() {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n    geometry() {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n    canonicalID() {\n        return this.canonical;\n    }\n    properties() {\n        return this.feature && this.feature.properties || {};\n    }\n    distanceFromCenter() {\n        if (this.featureTileCoord && this.featureDistanceData) {\n            const c = this.featureDistanceData.center;\n            const scale = this.featureDistanceData.scale;\n            const {x, y} = this.featureTileCoord;\n            // Calculate the distance vector `d` (left handed)\n            const dX = x * scale - c[0];\n            const dY = y * scale - c[1];\n            // The bearing vector `b` (left handed)\n            const bX = this.featureDistanceData.bearing[0];\n            const bY = this.featureDistanceData.bearing[1];\n            // Distance is calculated as `dot(d, v)`\n            const dist = bX * dX + bY * dY;\n            return dist;\n        }\n        return 0;\n    }\n    parseColor(input) {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color$1.parse(input);\n        }\n        return cached;\n    }\n}\nvar EvaluationContext$1 = EvaluationContext;\n\n//      \nclass CompoundExpression {\n    constructor(name, type, evaluate, args) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n    evaluate(ctx) {\n        return this._evaluate(ctx, this.args);\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        return [this.name].concat(this.args.map(arg => arg.serialize()));\n    }\n    static parse(args, context) {\n        const op = args[0];\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${ op }\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ? definition[0] : definition.type;\n        const availableOverloads = Array.isArray(definition) ? [[\n                definition[1],\n                definition[2]\n            ]] : definition.overloads;\n        const overloads = availableOverloads.filter(([signature]) => !Array.isArray(signature) || // varags\n        signature.length === args.length - 1    // correct param count\n);\n        let signatureContext = null;\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext$1(context.registry, context.path, null, context.scope);\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ? params[i - 1] : params.type;\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${ params.length } arguments, but found ${ parsedArgs.length } instead.`);\n                    continue;\n                }\n            }\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        } else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected.map(([params]) => stringifySignature(params)).join(' | ');\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed)\n                    return null;\n                actualTypes.push(toString$1(parsed.type));\n            }\n            context.error(`Expected arguments of type ${ signatures }, but found (${ actualTypes.join(', ') }) instead.`);\n        }\n        return null;\n    }\n    static register(registry, definitions) {\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\nfunction stringifySignature(signature) {\n    if (Array.isArray(signature)) {\n        return `(${ signature.map(toString$1).join(', ') })`;\n    } else {\n        return `(${ toString$1(signature.type) }...)`;\n    }\n}\nvar CompoundExpression$1 = CompoundExpression;\n\n//      \nclass CollatorExpression {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`Expected one argument.`);\n        const options = args[1];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error(`Collator options argument must be an object.`);\n        const caseSensitive = context.parse(options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive)\n            return null;\n        const diacriticSensitive = context.parse(options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive)\n            return null;\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n    evaluate(ctx) {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n    eachChild(fn) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n    outputDefined() {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n    serialize() {\n        const options = {};\n        options['case-sensitive'] = this.caseSensitive.serialize();\n        options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        return [\n            'collator',\n            options\n        ];\n    }\n}\n\n//      \n// minX, minY, maxX, maxY\nconst EXTENT = 8192;\nfunction updateBBox(bbox, coord) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\nfunction mercatorXfromLng(lng) {\n    return (180 + lng) / 360;\n}\nfunction mercatorYfromLat(lat) {\n    return (180 - 180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360))) / 360;\n}\nfunction boxWithinBox(bbox1, bbox2) {\n    if (bbox1[0] <= bbox2[0])\n        return false;\n    if (bbox1[2] >= bbox2[2])\n        return false;\n    if (bbox1[1] <= bbox2[1])\n        return false;\n    if (bbox1[3] >= bbox2[3])\n        return false;\n    return true;\n}\nfunction getTileCoordinates(p, canonical) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [\n        Math.round(x * tilesAtZoom * EXTENT),\n        Math.round(y * tilesAtZoom * EXTENT)\n    ];\n}\nfunction onBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return x1 * y2 - x2 * y1 === 0 && x1 * x2 <= 0 && y1 * y2 <= 0;\n}\nfunction rayIntersect(p, p1, p2) {\n    return p1[1] > p[1] !== p2[1] > p[1] && p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0];\n}\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings) {\n    let inside = false;\n    for (let i = 0, len = rings.length; i < len; i++) {\n        const ring = rings[i];\n        for (let j = 0, len2 = ring.length; j < len2 - 1; j++) {\n            if (onBoundary(point, ring[j], ring[j + 1]))\n                return false;\n            if (rayIntersect(point, ring[j], ring[j + 1]))\n                inside = !inside;\n        }\n    }\n    return inside;\n}\nfunction pointWithinPolygons(point, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (pointWithinPolygon(point, polygons[i]))\n            return true;\n    }\n    return false;\n}\nfunction perp(v1, v2) {\n    return v1[0] * v2[1] - v1[1] * v2[0];\n}\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = x1 * y3 - x3 * y1;\n    const det2 = x2 * y3 - x3 * y2;\n    if (det1 > 0 && det2 < 0 || det1 < 0 && det2 > 0)\n        return true;\n    return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction lineIntersectLine(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [\n        b[0] - a[0],\n        b[1] - a[1]\n    ];\n    const vectorQ = [\n        d[0] - c[0],\n        d[1] - c[1]\n    ];\n    if (perp(vectorQ, vectorP) === 0)\n        return false;\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b))\n        return true;\n    return false;\n}\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (lineIntersectLine(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (let i = 0; i < line.length; ++i) {\n        if (!pointWithinPolygon(line[i], polygon)) {\n            return false;\n        }\n    }\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction lineStringWithinPolygons(line, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (lineStringWithinPolygon(line, polygons[i]))\n            return true;\n    }\n    return false;\n}\nfunction getTilePolygon(coordinates, bbox, canonical) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\nfunction getTilePolygons(coordinates, bbox, canonical) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = p[0] - polyBBox[0] > halfWorldSize ? -worldSize : polyBBox[0] - p[0] > halfWorldSize ? worldSize : 0;\n        if (shift === 0) {\n            shift = p[0] - polyBBox[2] > halfWorldSize ? -worldSize : polyBBox[2] - p[0] > halfWorldSize ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [\n        canonical.x * EXTENT,\n        canonical.y * EXTENT\n    ];\n    const tilePoints = [];\n    if (!geometry)\n        return tilePoints;\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [\n                point.x + shifts[0],\n                point.y + shifts[1]\n            ];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [\n        canonical.x * EXTENT,\n        canonical.y * EXTENT\n    ];\n    const tileLines = [];\n    if (!geometry)\n        return tileLines;\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [\n                point.x + shifts[0],\n                point.y + shifts[1]\n            ];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\nfunction pointsWithinPolygons(ctx, polygonGeometry) {\n    const pointBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    const polyBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nfunction linesWithinPolygons(ctx, polygonGeometry) {\n    const lineBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    const polyBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nclass Within {\n    constructor(geojson, geometries) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${ args.length - 1 } instead.`);\n        if (isValue(args[1])) {\n            const geojson = args[1];\n            if (geojson.type === 'FeatureCollection') {\n                for (let i = 0; i < geojson.features.length; ++i) {\n                    const type = geojson.features[i].geometry.type;\n                    if (type === 'Polygon' || type === 'MultiPolygon') {\n                        return new Within(geojson, geojson.features[i].geometry);\n                    }\n                }\n            } else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            } else if (geojson.type === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error(`'within' expression requires valid geojson object that contains polygon geometry type.`);\n    }\n    evaluate(ctx) {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            } else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n    eachChild() {\n    }\n    outputDefined() {\n        return true;\n    }\n    serialize() {\n        return [\n            'within',\n            this.geojson\n        ];\n    }\n}\nvar Within$1 = Within;\n\n//      \nfunction isFeatureConstant(e) {\n    if (e instanceof CompoundExpression$1) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'properties' || e.name === 'geometry-type' || e.name === 'id') {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n    if (e instanceof Within$1) {\n        return false;\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isStateConstant(e) {\n    if (e instanceof CompoundExpression$1) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isGlobalPropertyConstant(e, properties) {\n    if (e instanceof CompoundExpression$1 && properties.indexOf(e.name) >= 0) {\n        return false;\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) {\n            result = false;\n        }\n    });\n    return result;\n}\n\n//      \nclass Var {\n    constructor(name, boundExpression) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n    static parse(args, context) {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error(`'var' expression requires exactly one string literal argument.`);\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${ name }\". Make sure \"${ name }\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n        return new Var(name, context.scope.get(name));\n    }\n    evaluate(ctx) {\n        return this.boundExpression.evaluate(ctx);\n    }\n    eachChild() {\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        return [\n            'var',\n            this.name\n        ];\n    }\n}\nvar Var$1 = Var;\n\n//      \n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n    // The expected type of this expression. Provided only to allow Expression\n    // implementations to infer argument types: Expression#parse() need not\n    // check that the output type of the parsed expression matches\n    // `expectedType`.\n    constructor(registry, path = [], expectedType, scope = new Scope$1(), errors = []) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${ part }]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n    }\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(expr, index, expectedType, bindings, options = {}) {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n    _parse(expr, options) {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = [\n                'literal',\n                expr\n            ];\n        }\n        function annotate(parsed, type, typeAnnotation) {\n            if (typeAnnotation === 'assert') {\n                return new Assertion$1(type, [parsed]);\n            } else if (typeAnnotation === 'coerce') {\n                return new Coercion$1(type, [parsed]);\n            } else {\n                return parsed;\n            }\n        }\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error(`Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].`);\n            }\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${ typeof op } instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed)\n                    return null;\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal$1) && parsed.type.kind !== 'resolvedImage' && isConstant(parsed)) {\n                    const ec = new EvaluationContext$1();\n                    try {\n                        parsed = new Literal$1(parsed.type, parsed.evaluate(ec));\n                    } catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n                return parsed;\n            }\n            return this.error(`Unknown expression \"${ op }\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        } else if (typeof expr === 'undefined') {\n            return this.error(`'undefined' value invalid. Use null instead.`);\n        } else if (typeof expr === 'object') {\n            return this.error(`Bare objects invalid. Use [\"literal\", {...}] instead.`);\n        } else {\n            return this.error(`Expected an array, but found ${ typeof expr } instead.`);\n        }\n    }\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index, expectedType, bindings) {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(this.registry, path, expectedType || null, scope, this.errors);\n    }\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error, ...keys) {\n        const key = `${ this.key }${ keys.map(k => `[${ k }]`).join('') }`;\n        this.errors.push(new ParsingError$1(key, error));\n    }\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     */\n    checkSubtype(expected, t) {\n        const error = checkSubtype(expected, t);\n        if (error)\n            this.error(error);\n        return error;\n    }\n}\nvar ParsingContext$1 = ParsingContext;\nfunction isConstant(expression) {\n    if (expression instanceof Var$1) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression$1 && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    } else if (expression instanceof Within$1) {\n        return false;\n    }\n    const isTypeAnnotation = expression instanceof Coercion$1 || expression instanceof Assertion$1;\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal$1;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n    return isFeatureConstant(expression) && isGlobalPropertyConstant(expression, [\n        'zoom',\n        'heatmap-density',\n        'line-progress',\n        'sky-radial-progress',\n        'accumulated',\n        'is-supported-script',\n        'pitch',\n        'distance-from-center'\n    ]);\n}\n\n//      \n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nfunction findStopLessThanOrEqualTo(stops, input) {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) {\n                // Search complete\n                return currentIndex;\n            }\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError$1('Input is not a number.');\n        }\n    }\n    return 0;\n}\n\n//      \nclass Step {\n    constructor(type, input, stops) {\n        this.type = type;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static parse(args, context) {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${ args.length - 1 }.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n            const labelKey = i;\n            const valueKey = i + 1;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([\n                label,\n                parsed\n            ]);\n        }\n        return new Step(outputType, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n    serialize() {\n        const serialized = [\n            'step',\n            this.input.serialize()\n        ];\n        for (let i = 0; i < this.labels.length; i++) {\n            if (i > 0) {\n                serialized.push(this.labels[i]);\n            }\n            serialized.push(this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\nvar Step$1 = Step;\n\n/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nvar unitbezier = UnitBezier;\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3 * p1x;\n    this.bx = 3 * (p2x - p1x) - this.cx;\n    this.ax = 1 - this.cx - this.bx;\n    this.cy = 3 * p1y;\n    this.by = 3 * (p2y - p1y) - this.cy;\n    this.ay = 1 - this.cy - this.by;\n    this.p1x = p1x;\n    this.p1y = p2y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\nUnitBezier.prototype.sampleCurveX = function (t) {\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n    return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\nUnitBezier.prototype.sampleCurveY = function (t) {\n    return ((this.ay * t + this.by) * t + this.cy) * t;\n};\nUnitBezier.prototype.sampleCurveDerivativeX = function (t) {\n    return (3 * this.ax * t + 2 * this.bx) * t + this.cx;\n};\nUnitBezier.prototype.solveCurveX = function (x, epsilon) {\n    if (typeof epsilon === 'undefined')\n        epsilon = 0.000001;\n    var t0, t1, t2, x2, i;\n    // First try a few iterations of Newton's method -- normally very fast.\n    for (t2 = x, i = 0; i < 8; i++) {\n        x2 = this.sampleCurveX(t2) - x;\n        if (Math.abs(x2) < epsilon)\n            return t2;\n        var d2 = this.sampleCurveDerivativeX(t2);\n        if (Math.abs(d2) < 0.000001)\n            break;\n        t2 = t2 - x2 / d2;\n    }\n    // Fall back to the bisection method for reliability.\n    t0 = 0;\n    t1 = 1;\n    t2 = x;\n    if (t2 < t0)\n        return t0;\n    if (t2 > t1)\n        return t1;\n    while (t0 < t1) {\n        x2 = this.sampleCurveX(t2);\n        if (Math.abs(x2 - x) < epsilon)\n            return t2;\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n        t2 = (t1 - t0) * 0.5 + t0;\n    }\n    // Failure.\n    return t2;\n};\nUnitBezier.prototype.solve = function (x, epsilon) {\n    return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};\n\nvar UnitBezier$1 = /*@__PURE__*/getDefaultExportFromCjs(unitbezier);\n\n//      \nfunction number(a, b, t) {\n    return a * (1 - t) + b * t;\n}\nfunction color(from, to, t) {\n    return new Color$1(number(from.r, to.r, t), number(from.g, to.g, t), number(from.b, to.b, t), number(from.a, to.a, t));\n}\nfunction array(from, to, t) {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    });\n}\n\nvar interpolate = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tnumber: number,\n\tcolor: color,\n\tarray: array\n});\n\n//      \n// Constants\nconst Xn = 0.95047,\n    // D65 standard referent\n    Yn = 1, Zn = 1.08883, t0 = 4 / 29, t1 = 6 / 29, t2 = 3 * t1 * t1, t3 = t1 * t1 * t1, deg2rad$1 = Math.PI / 180, rad2deg = 180 / Math.PI;\n// Utilities\nfunction xyz2lab(t) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\nfunction lab2xyz(t) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\nfunction xyz2rgb(x) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\nfunction rgb2xyz(x) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n// LAB\nfunction rgbToLab(rgbColor) {\n    const b = rgb2xyz(rgbColor.r), a = rgb2xyz(rgbColor.g), l = rgb2xyz(rgbColor.b), x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn), y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.072175 * l) / Yn), z = xyz2lab((0.0193339 * b + 0.119192 * a + 0.9503041 * l) / Zn);\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\nfunction labToRgb(labColor) {\n    let y = (labColor.l + 16) / 116, x = isNaN(labColor.a) ? y : y + labColor.a / 500, z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color$1(xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n    xyz2rgb(-0.969266 * x + 1.8760108 * y + 0.041556 * z), xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z), labColor.alpha);\n}\nfunction interpolateLab(from, to, t) {\n    return {\n        l: number(from.l, to.l, t),\n        a: number(from.a, to.a, t),\n        b: number(from.b, to.b, t),\n        alpha: number(from.alpha, to.alpha, t)\n    };\n}\n// HCL\nfunction rgbToHcl(rgbColor) {\n    const {l, a, b} = rgbToLab(rgbColor);\n    const h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l,\n        alpha: rgbColor.a\n    };\n}\nfunction hclToRgb(hclColor) {\n    const h = hclColor.h * deg2rad$1, c = hclColor.c, l = hclColor.l;\n    return labToRgb({\n        l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\nfunction interpolateHue(a, b, t) {\n    const d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\nfunction interpolateHcl(from, to, t) {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: number(from.c, to.c, t),\n        l: number(from.l, to.l, t),\n        alpha: number(from.alpha, to.alpha, t)\n    };\n}\nconst lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\nconst hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n\n//      \nclass Interpolate {\n    constructor(type, operator, interpolation, input, stops) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static interpolationFactor(interpolation, input, lower, upper) {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        } else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        } else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier$1(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n    static parse(args, context) {\n        let [operator, interpolation, input, ...rest] = args;\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error(`Expected an interpolation type expression.`, 1);\n        }\n        if (interpolation[0] === 'linear') {\n            interpolation = { name: 'linear' };\n        } else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error(`Exponential interpolation requires a numeric base.`, 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        } else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (controlPoints.length !== 4 || controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: controlPoints\n            };\n        } else {\n            return context.error(`Unknown interpolation type ${ String(interpolation[0]) }`, 1, 0);\n        }\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${ args.length - 1 }.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n        input = context.parse(input, 2, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        } else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([\n                label,\n                parsed\n            ]);\n        }\n        if (outputType.kind !== 'number' && outputType.kind !== 'color' && !(outputType.kind === 'array' && outputType.itemType.kind === 'number' && typeof outputType.N === 'number')) {\n            return context.error(`Type ${ toString$1(outputType) } is not interpolatable.`);\n        }\n        return new Interpolate(outputType, operator, interpolation, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n        if (this.operator === 'interpolate') {\n            return interpolate[this.type.kind.toLowerCase()](outputLower, outputUpper, t);    // eslint-disable-line import/namespace\n        } else if (this.operator === 'interpolate-hcl') {\n            return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n        } else {\n            return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n    serialize() {\n        let interpolation;\n        if (this.interpolation.name === 'linear') {\n            interpolation = ['linear'];\n        } else if (this.interpolation.name === 'exponential') {\n            if (this.interpolation.base === 1) {\n                interpolation = ['linear'];\n            } else {\n                interpolation = [\n                    'exponential',\n                    this.interpolation.base\n                ];\n            }\n        } else {\n            interpolation = ['cubic-bezier'].concat(this.interpolation.controlPoints);\n        }\n        const serialized = [\n            this.operator,\n            interpolation,\n            this.input.serialize()\n        ];\n        for (let i = 0; i < this.labels.length; i++) {\n            serialized.push(this.labels[i], this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\nvar Interpolate$1 = Interpolate;\n\nclass Coalesce {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error('Expectected at least one argument.');\n        }\n        let outputType = null;\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, { typeAnnotation: 'omit' });\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType && parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n        return needsAnnotation ? new Coalesce(ValueType, parsedArgs) : new Coalesce(outputType, parsedArgs);\n    }\n    evaluate(ctx) {\n        let result = null;\n        let argCount = 0;\n        let firstImage;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                // set to first image\n                if (!firstImage) {\n                    firstImage = result;\n                }\n                result = null;\n                // if we reach the end, return the first image\n                if (argCount === this.args.length) {\n                    return firstImage;\n                }\n            }\n            if (result !== null)\n                break;\n        }\n        return result;\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n    serialize() {\n        const serialized = ['coalesce'];\n        this.eachChild(child => {\n            serialized.push(child.serialize());\n        });\n        return serialized;\n    }\n}\nvar Coalesce$1 = Coalesce;\n\n//      \nclass Let {\n    constructor(bindings, result) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n    evaluate(ctx) {\n        return this.result.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${ args.length - 1 } instead.`);\n        const bindings = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${ typeof name } instead.`, i);\n            }\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error(`Variable names must contain only alphanumeric characters or '_'.`, i);\n            }\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value)\n                return null;\n            bindings.push([\n                name,\n                value\n            ]);\n        }\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result)\n            return null;\n        return new Let(bindings, result);\n    }\n    outputDefined() {\n        return this.result.outputDefined();\n    }\n    serialize() {\n        const serialized = ['let'];\n        for (const [name, expr] of this.bindings) {\n            serialized.push(name, expr.serialize());\n        }\n        serialized.push(this.result.serialize());\n        return serialized;\n    }\n}\nvar Let$1 = Let;\n\n//      \nclass At {\n    constructor(type, index, input) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${ args.length - 1 } instead.`);\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array$1(context.expectedType || ValueType));\n        if (!index || !input)\n            return null;\n        const t = input.type;\n        return new At(t.itemType, index, input);\n    }\n    evaluate(ctx) {\n        const index = this.index.evaluate(ctx);\n        const array = this.input.evaluate(ctx);\n        if (index < 0) {\n            throw new RuntimeError$1(`Array index out of bounds: ${ index } < 0.`);\n        }\n        if (index >= array.length) {\n            throw new RuntimeError$1(`Array index out of bounds: ${ index } > ${ array.length - 1 }.`);\n        }\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError$1(`Array index must be an integer, but found ${ index } instead.`);\n        }\n        return array[index];\n    }\n    eachChild(fn) {\n        fn(this.index);\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        return [\n            'at',\n            this.index.serialize(),\n            this.input.serialize()\n        ];\n    }\n}\nvar At$1 = At;\n\n//      \nclass In {\n    constructor(needle, haystack) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n    static parse(args, context) {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${ args.length - 1 } instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [\n                BooleanType,\n                StringType,\n                NumberType,\n                NullType,\n                ValueType\n            ])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${ toString$1(needle.type) } instead`);\n        }\n        return new In(needle, haystack);\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (haystack == null)\n            return false;\n        if (!isValidNativeType(needle, [\n                'boolean',\n                'string',\n                'number',\n                'null'\n            ])) {\n            throw new RuntimeError$1(`Expected first argument to be of type boolean, string, number or null, but found ${ toString$1(typeOf(needle)) } instead.`);\n        }\n        if (!isValidNativeType(haystack, [\n                'string',\n                'array'\n            ])) {\n            throw new RuntimeError$1(`Expected second argument to be of type array or string, but found ${ toString$1(typeOf(haystack)) } instead.`);\n        }\n        return haystack.indexOf(needle) >= 0;\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n    outputDefined() {\n        return true;\n    }\n    serialize() {\n        return [\n            'in',\n            this.needle.serialize(),\n            this.haystack.serialize()\n        ];\n    }\n}\nvar In$1 = In;\n\n//      \nclass IndexOf {\n    constructor(needle, haystack, fromIndex) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${ args.length - 1 } instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [\n                BooleanType,\n                StringType,\n                NumberType,\n                NullType,\n                ValueType\n            ])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${ toString$1(needle.type) } instead`);\n        }\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex)\n                return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        } else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (!isValidNativeType(needle, [\n                'boolean',\n                'string',\n                'number',\n                'null'\n            ])) {\n            throw new RuntimeError$1(`Expected first argument to be of type boolean, string, number or null, but found ${ toString$1(typeOf(needle)) } instead.`);\n        }\n        if (!isValidNativeType(haystack, [\n                'string',\n                'array'\n            ])) {\n            throw new RuntimeError$1(`Expected second argument to be of type array or string, but found ${ toString$1(typeOf(haystack)) } instead.`);\n        }\n        if (this.fromIndex) {\n            const fromIndex = this.fromIndex.evaluate(ctx);\n            return haystack.indexOf(needle, fromIndex);\n        }\n        return haystack.indexOf(needle);\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        if (this.fromIndex != null && this.fromIndex !== undefined) {\n            const fromIndex = this.fromIndex.serialize();\n            return [\n                'index-of',\n                this.needle.serialize(),\n                this.haystack.serialize(),\n                fromIndex\n            ];\n        }\n        return [\n            'index-of',\n            this.needle.serialize(),\n            this.haystack.serialize()\n        ];\n    }\n}\nvar IndexOf$1 = IndexOf;\n\n// Map input label values to output expression index\nclass Match {\n    constructor(inputType, outputType, input, cases, outputs, otherwise) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${ args.length - 1 }.`);\n        if (args.length % 2 !== 1)\n            return context.error(`Expected an even number of arguments.`);\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error(`Branch labels must be numbers or strings.`);\n                } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${ Number.MAX_SAFE_INTEGER }.`);\n                } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error(`Numeric branch labels must be integer values.`);\n                } else if (!inputType) {\n                    inputType = typeOf(label);\n                } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n                cases[String(label)] = outputs.length;\n            }\n            const result = context.parse(value, i, outputType);\n            if (!result)\n                return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input)\n            return null;\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype(inputType, input.type)) {\n            return null;\n        }\n        return new Match(inputType, outputType, input, cases, outputs, otherwise);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const output = typeOf(input) === this.inputType && this.outputs[this.cases[input]] || this.otherwise;\n        return output.evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n    serialize() {\n        const serialized = [\n            'match',\n            this.input.serialize()\n        ];\n        // Sort so serialization has an arbitrary defined order, even though\n        // branch order doesn't affect evaluation\n        const sortedLabels = Object.keys(this.cases).sort();\n        // Group branches by unique match expression to support condensed\n        // serializations of the form [case1, case2, ...] -> matchExpression\n        const groupedByOutput = [];\n        const outputLookup = {};\n        // lookup index into groupedByOutput for a given output expression\n        for (const label of sortedLabels) {\n            const outputIndex = outputLookup[this.cases[label]];\n            if (outputIndex === undefined) {\n                // First time seeing this output, add it to the end of the grouped list\n                outputLookup[this.cases[label]] = groupedByOutput.length;\n                groupedByOutput.push([\n                    this.cases[label],\n                    [label]\n                ]);\n            } else {\n                // We've seen this expression before, add the label to that output's group\n                groupedByOutput[outputIndex][1].push(label);\n            }\n        }\n        const coerceLabel = label => this.inputType.kind === 'number' ? Number(label) : label;\n        for (const [outputIndex, labels] of groupedByOutput) {\n            if (labels.length === 1) {\n                // Only a single label matches this output expression\n                serialized.push(coerceLabel(labels[0]));\n            } else {\n                // Array of literal labels pointing to this output expression\n                serialized.push(labels.map(coerceLabel));\n            }\n            serialized.push(this.outputs[outputIndex].serialize());\n        }\n        serialized.push(this.otherwise.serialize());\n        return serialized;\n    }\n}\nvar Match$1 = Match;\n\nclass Case {\n    constructor(type, branches, otherwise) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${ args.length - 1 }.`);\n        if (args.length % 2 !== 0)\n            return context.error(`Expected an odd number of arguments.`);\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test)\n                return null;\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result)\n                return null;\n            branches.push([\n                test,\n                result\n            ]);\n            outputType = outputType || result.type;\n        }\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        return new Case(outputType, branches, otherwise);\n    }\n    evaluate(ctx) {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n    serialize() {\n        const serialized = ['case'];\n        this.eachChild(child => {\n            serialized.push(child.serialize());\n        });\n        return serialized;\n    }\n}\nvar Case$1 = Case;\n\n//      \nclass Slice {\n    constructor(type, input, beginIndex, endIndex) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${ args.length - 1 } instead.`);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n        if (!input || !beginIndex)\n            return null;\n        if (!isValidType(input.type, [\n                array$1(ValueType),\n                StringType,\n                ValueType\n            ])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${ toString$1(input.type) } instead`);\n        }\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex)\n                return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        } else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const beginIndex = this.beginIndex.evaluate(ctx);\n        if (!isValidNativeType(input, [\n                'string',\n                'array'\n            ])) {\n            throw new RuntimeError$1(`Expected first argument to be of type array or string, but found ${ toString$1(typeOf(input)) } instead.`);\n        }\n        if (this.endIndex) {\n            const endIndex = this.endIndex.evaluate(ctx);\n            return input.slice(beginIndex, endIndex);\n        }\n        return input.slice(beginIndex);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        if (this.endIndex != null && this.endIndex !== undefined) {\n            const endIndex = this.endIndex.serialize();\n            return [\n                'slice',\n                this.input.serialize(),\n                this.beginIndex.serialize(),\n                endIndex\n            ];\n        }\n        return [\n            'slice',\n            this.input.serialize(),\n            this.beginIndex.serialize()\n        ];\n    }\n}\nvar Slice$1 = Slice;\n\n//      \nfunction isComparableType(op, type) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' || type.kind === 'string' || type.kind === 'number' || type.kind === 'null' || type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' || type.kind === 'number' || type.kind === 'value';\n    }\n}\nfunction eq(ctx, a, b) {\n    return a === b;\n}\nfunction neq(ctx, a, b) {\n    return a !== b;\n}\nfunction lt(ctx, a, b) {\n    return a < b;\n}\nfunction gt(ctx, a, b) {\n    return a > b;\n}\nfunction lteq(ctx, a, b) {\n    return a <= b;\n}\nfunction gteq(ctx, a, b) {\n    return a >= b;\n}\nfunction eqCollate(ctx, a, b, c) {\n    return c.compare(a, b) === 0;\n}\nfunction neqCollate(ctx, a, b, c) {\n    return !eqCollate(ctx, a, b, c);\n}\nfunction ltCollate(ctx, a, b, c) {\n    return c.compare(a, b) < 0;\n}\nfunction gtCollate(ctx, a, b, c) {\n    return c.compare(a, b) > 0;\n}\nfunction lteqCollate(ctx, a, b, c) {\n    return c.compare(a, b) <= 0;\n}\nfunction gteqCollate(ctx, a, b, c) {\n    return c.compare(a, b) >= 0;\n}\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op, compareBasic, compareWithCollator) {\n    const isOrderComparison = op !== '==' && op !== '!=';\n    return class Comparison {\n        constructor(lhs, rhs, collator) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n        static parse(args, context) {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error(`Expected two or three arguments.`);\n            const op = args[0];\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs)\n                return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${ op }\" comparisons are not supported for type '${ toString$1(lhs.type) }'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs)\n                return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${ op }\" comparisons are not supported for type '${ toString$1(rhs.type) }'.`);\n            }\n            if (lhs.type.kind !== rhs.type.kind && lhs.type.kind !== 'value' && rhs.type.kind !== 'value') {\n                return context.error(`Cannot compare types '${ toString$1(lhs.type) }' and '${ toString$1(rhs.type) }'.`);\n            }\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion$1(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion$1(lhs.type, [rhs]);\n                }\n            }\n            let collator = null;\n            if (args.length === 4) {\n                if (lhs.type.kind !== 'string' && rhs.type.kind !== 'string' && lhs.type.kind !== 'value' && rhs.type.kind !== 'value') {\n                    return context.error(`Cannot use collator to compare non-string types.`);\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator)\n                    return null;\n            }\n            return new Comparison(lhs, rhs, collator);\n        }\n        evaluate(ctx) {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError$1(`Expected arguments for \"${ op }\" to be (string, string) or (number, number), but found (${ lt.kind }, ${ rt.kind }) instead.`);\n                }\n            }\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n            return this.collator ? compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) : compareBasic(ctx, lhs, rhs);\n        }\n        eachChild(fn) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n        outputDefined() {\n            return true;\n        }\n        serialize() {\n            const serialized = [op];\n            this.eachChild(child => {\n                serialized.push(child.serialize());\n            });\n            return serialized;\n        }\n    };\n}\nconst Equals = makeComparison('==', eq, eqCollate);\nconst NotEquals = makeComparison('!=', neq, neqCollate);\nconst LessThan = makeComparison('<', lt, ltCollate);\nconst GreaterThan = makeComparison('>', gt, gtCollate);\nconst LessThanOrEqual = makeComparison('<=', lteq, lteqCollate);\nconst GreaterThanOrEqual = makeComparison('>=', gteq, gteqCollate);\n\n//      \nclass NumberFormat {\n    // BCP 47 language tag\n    // ISO 4217 currency code, required if style=currency\n    // Simple units sanctioned for use in ECMAScript, required if style=unit. https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier\n    // Default 0\n    // Default 3\n    constructor(number, locale, currency, unit, minFractionDigits, maxFractionDigits) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.unit = unit;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error(`Expected two arguments.`);\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number)\n            return null;\n        const options = args[2];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error(`NumberFormat options argument must be an object.`);\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency)\n                return null;\n        }\n        let unit = null;\n        if (options['unit']) {\n            unit = context.parse(options['unit'], 1, StringType);\n            if (!unit)\n                return null;\n        }\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits)\n                return null;\n        }\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits)\n                return null;\n        }\n        return new NumberFormat(number, locale, currency, unit, minFractionDigits, maxFractionDigits);\n    }\n    evaluate(ctx) {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [], {\n            style: this.currency && 'currency' || this.unit && 'unit' || 'decimal',\n            currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n            unit: this.unit ? this.unit.evaluate(ctx) : undefined,\n            minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n            maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined\n        }).format(this.number.evaluate(ctx));\n    }\n    eachChild(fn) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.unit) {\n            fn(this.unit);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        const options = {};\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        if (this.currency) {\n            options['currency'] = this.currency.serialize();\n        }\n        if (this.unit) {\n            options['unit'] = this.unit.serialize();\n        }\n        if (this.minFractionDigits) {\n            options['min-fraction-digits'] = this.minFractionDigits.serialize();\n        }\n        if (this.maxFractionDigits) {\n            options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n        }\n        return [\n            'number-format',\n            this.number.serialize(),\n            options\n        ];\n    }\n}\n\n//      \nclass Length {\n    constructor(input) {\n        this.type = NumberType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${ args.length - 1 } instead.`);\n        const input = context.parse(args[1], 1);\n        if (!input)\n            return null;\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${ toString$1(input.type) } instead.`);\n        return new Length(input);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        } else if (Array.isArray(input)) {\n            return input.length;\n        } else {\n            throw new RuntimeError$1(`Expected value to be of type string or array, but found ${ toString$1(typeOf(input)) } instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        const serialized = ['length'];\n        this.eachChild(child => {\n            serialized.push(child.serialize());\n        });\n        return serialized;\n    }\n}\nvar Length$1 = Length;\n\n//      \nconst expressions = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion$1,\n    'at': At$1,\n    'boolean': Assertion$1,\n    'case': Case$1,\n    'coalesce': Coalesce$1,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In$1,\n    'index-of': IndexOf$1,\n    'interpolate': Interpolate$1,\n    'interpolate-hcl': Interpolate$1,\n    'interpolate-lab': Interpolate$1,\n    'length': Length$1,\n    'let': Let$1,\n    'literal': Literal$1,\n    'match': Match$1,\n    'number': Assertion$1,\n    'number-format': NumberFormat,\n    'object': Assertion$1,\n    'slice': Slice$1,\n    'step': Step$1,\n    'string': Assertion$1,\n    'to-boolean': Coercion$1,\n    'to-color': Coercion$1,\n    'to-number': Coercion$1,\n    'to-string': Coercion$1,\n    'var': Var$1,\n    'within': Within$1\n};\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error)\n        throw new RuntimeError$1(error);\n    return new Color$1(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\nfunction has(key, obj) {\n    return key in obj;\n}\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = i + j >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\nfunction varargs(type) {\n    return { type };\n}\nCompoundExpression$1.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => {\n            throw new RuntimeError$1(v.evaluate(ctx));\n        }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => toString$1(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array$1(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [\n            NumberType,\n            NumberType,\n            NumberType\n        ],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [\n            NumberType,\n            NumberType,\n            NumberType,\n            NumberType\n        ],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ],\n            [\n                [\n                    StringType,\n                    ObjectType\n                ],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ],\n            [\n                [\n                    StringType,\n                    ObjectType\n                ],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        ctx => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        ctx => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        ctx => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        ctx => ctx.globals.zoom\n    ],\n    'pitch': [\n        NumberType,\n        [],\n        ctx => ctx.globals.pitch || 0\n    ],\n    'distance-from-center': [\n        NumberType,\n        [],\n        ctx => ctx.distanceFromCenter()\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        ctx => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        ctx => ctx.globals.lineProgress || 0\n    ],\n    'sky-radial-progress': [\n        NumberType,\n        [],\n        ctx => ctx.globals.skyRadialProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        ctx => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [\n                    NumberType,\n                    NumberType\n                ],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ],\n            [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [\n            NumberType,\n            NumberType\n        ],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [\n            NumberType,\n            NumberType\n        ],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [\n            NumberType,\n            NumberType\n        ],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => ctx.properties()[k.value] === v.value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === v.value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === v.value\n    ],\n    'filter-<': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => k.value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        ctx => ctx.id() !== null && ctx.id() !== undefined\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array$1(StringType)],\n        (ctx, [v]) => v.value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array$1(ValueType)],\n        (ctx, [v]) => v.value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [\n            StringType,\n            array$1(ValueType)\n        ],\n        // assumes v is an array literal\n        (ctx, [k, v]) => v.value.indexOf(ctx.properties()[k.value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [\n            StringType,\n            array$1(ValueType)\n        ],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[k.value], v.value, 0, v.value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [\n                    BooleanType,\n                    BooleanType\n                ],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [\n                    BooleanType,\n                    BooleanType\n                ],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => toString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\nvar definitions = expressions;\n\n//      \n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\nfunction success(value) {\n    return {\n        result: 'success',\n        value\n    };\n}\nfunction error(value) {\n    return {\n        result: 'error',\n        value\n    };\n}\n\n//      \nfunction supportsPropertyExpression(spec) {\n    return spec['property-type'] === 'data-driven';\n}\nfunction supportsZoomExpression(spec) {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\nfunction supportsInterpolation(spec) {\n    return !!spec.expression && spec.expression.interpolated;\n}\n\nfunction isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nclass StyleExpression {\n    constructor(expression, propertySpec) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext$1();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection, featureTileCoord, featureDistanceData) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n        return this.expression.evaluate(this._evaluator);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection, featureTileCoord, featureDistanceData) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            // eslint-disable-next-line no-self-compare\n            if (val === null || val === undefined || typeof val === 'number' && val !== val) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError$1(`Expected value to be one of ${ Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ') }, but found ${ JSON.stringify(val) } instead.`);\n            }\n            return val;\n        } catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\nfunction isExpression(expression) {\n    return Array.isArray(expression) && expression.length > 0 && typeof expression[0] === 'string' && expression[0] in definitions;\n}\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nfunction createExpression(expression, propertySpec) {\n    const parser = new ParsingContext$1(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined, propertySpec && propertySpec.type === 'string' ? { typeAnnotation: 'coerce' } : undefined);\n    if (!parsed) {\n        return error(parser.errors);\n    }\n    return success(new StyleExpression(parsed, propertySpec));\n}\nclass ZoomConstantExpression {\n    constructor(kind, expression) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'constant' && !isStateConstant(expression.expression);\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\nclass ZoomDependentExpression {\n    constructor(kind, expression, zoomStops, interpolationType) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'camera' && !isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    interpolationFactor(input, lower, upper) {\n        if (this.interpolationType) {\n            return Interpolate$1.interpolationFactor(this.interpolationType, input, lower, upper);\n        } else {\n            return 0;\n        }\n    }\n}\nfunction createPropertyExpression(expression, propertySpec) {\n    expression = createExpression(expression, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n    const parsed = expression.value.expression;\n    const isFeatureConstant$1 = isFeatureConstant(parsed);\n    if (!isFeatureConstant$1 && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError$1('', 'data expressions not supported')]);\n    }\n    const isZoomConstant = isGlobalPropertyConstant(parsed, [\n        'zoom',\n        'pitch',\n        'distance-from-center'\n    ]);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError$1('', 'zoom expressions not supported')]);\n    }\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ParsingError$1('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    } else if (zoomCurve instanceof ParsingError$1) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate$1 && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError$1('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n    if (!zoomCurve) {\n        return success(isFeatureConstant$1 ? new ZoomConstantExpression('constant', expression.value) : new ZoomConstantExpression('source', expression.value));\n    }\n    const interpolationType = zoomCurve instanceof Interpolate$1 ? zoomCurve.interpolation : undefined;\n    return success(isFeatureConstant$1 ? new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType) : new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType));\n}\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression) {\n    let result = null;\n    if (expression instanceof Let$1) {\n        result = findZoomCurve(expression.result);\n    } else if (expression instanceof Coalesce$1) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n    } else if ((expression instanceof Step$1 || expression instanceof Interpolate$1) && expression.input instanceof CompoundExpression$1 && expression.input.name === 'zoom') {\n        result = expression;\n    }\n    if (result instanceof ParsingError$1) {\n        return result;\n    }\n    expression.eachChild(child => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError$1) {\n            result = childResult;\n        } else if (!result && childResult) {\n            result = new ParsingError$1('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError$1('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n    return result;\n}\nfunction getExpectedType(spec) {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n    if (spec.type === 'array') {\n        return array$1(types[spec.value] || ValueType, spec.length);\n    }\n    return types[spec.type];\n}\nfunction getDefaultValue(spec) {\n    if (spec.type === 'color' && (isFunction(spec.default) || Array.isArray(spec.default))) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color$1(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color$1.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n\n//      \n// Turn jsonlint-lines-primitives objects into primitive objects\nfunction unbundle(value) {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\nfunction deepUnbundle(value) {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n    return unbundle(value);\n}\n\nvar spec = {\"$version\":8,\"$root\":{\"version\":{\"required\":true,\"type\":\"enum\",\"values\":[8]},\"name\":{\"type\":\"string\"},\"metadata\":{\"type\":\"*\"},\"center\":{\"type\":\"array\",\"value\":\"number\"},\"zoom\":{\"type\":\"number\"},\"bearing\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\"},\"pitch\":{\"type\":\"number\",\"default\":0,\"units\":\"degrees\"},\"light\":{\"type\":\"light\"},\"terrain\":{\"type\":\"terrain\"},\"fog\":{\"type\":\"fog\"},\"sources\":{\"required\":true,\"type\":\"sources\"},\"sprite\":{\"type\":\"string\"},\"glyphs\":{\"type\":\"string\"},\"transition\":{\"type\":\"transition\"},\"projection\":{\"type\":\"projection\"},\"layers\":{\"required\":true,\"type\":\"array\",\"value\":\"layer\"}},\"sources\":{\"*\":{\"type\":\"source\"}},\"source\":[\"source_vector\",\"source_raster\",\"source_raster_dem\",\"source_geojson\",\"source_video\",\"source_image\"],\"source_vector\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"vector\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"scheme\":{\"type\":\"enum\",\"values\":{\"xyz\":{},\"tms\":{}},\"default\":\"xyz\"},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"attribution\":{\"type\":\"string\"},\"promoteId\":{\"type\":\"promoteId\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_raster\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"raster\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"tileSize\":{\"type\":\"number\",\"default\":512,\"units\":\"pixels\"},\"scheme\":{\"type\":\"enum\",\"values\":{\"xyz\":{},\"tms\":{}},\"default\":\"xyz\"},\"attribution\":{\"type\":\"string\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_raster_dem\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"raster-dem\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"tileSize\":{\"type\":\"number\",\"default\":512,\"units\":\"pixels\"},\"attribution\":{\"type\":\"string\"},\"encoding\":{\"type\":\"enum\",\"values\":{\"terrarium\":{},\"mapbox\":{}},\"default\":\"mapbox\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_geojson\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"geojson\":{}}},\"data\":{\"type\":\"*\"},\"maxzoom\":{\"type\":\"number\",\"default\":18},\"attribution\":{\"type\":\"string\"},\"buffer\":{\"type\":\"number\",\"default\":128,\"maximum\":512,\"minimum\":0},\"filter\":{\"type\":\"*\"},\"tolerance\":{\"type\":\"number\",\"default\":0.375},\"cluster\":{\"type\":\"boolean\",\"default\":false},\"clusterRadius\":{\"type\":\"number\",\"default\":50,\"minimum\":0},\"clusterMaxZoom\":{\"type\":\"number\"},\"clusterMinPoints\":{\"type\":\"number\"},\"clusterProperties\":{\"type\":\"*\"},\"lineMetrics\":{\"type\":\"boolean\",\"default\":false},\"generateId\":{\"type\":\"boolean\",\"default\":false},\"promoteId\":{\"type\":\"promoteId\"}},\"source_video\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"video\":{}}},\"urls\":{\"required\":true,\"type\":\"array\",\"value\":\"string\"},\"coordinates\":{\"required\":true,\"type\":\"array\",\"length\":4,\"value\":{\"type\":\"array\",\"length\":2,\"value\":\"number\"}}},\"source_image\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"image\":{}}},\"url\":{\"required\":true,\"type\":\"string\"},\"coordinates\":{\"required\":true,\"type\":\"array\",\"length\":4,\"value\":{\"type\":\"array\",\"length\":2,\"value\":\"number\"}}},\"layer\":{\"id\":{\"type\":\"string\",\"required\":true},\"type\":{\"type\":\"enum\",\"values\":{\"fill\":{},\"line\":{},\"symbol\":{},\"circle\":{},\"heatmap\":{},\"fill-extrusion\":{},\"raster\":{},\"hillshade\":{},\"background\":{},\"sky\":{}},\"required\":true},\"metadata\":{\"type\":\"*\"},\"source\":{\"type\":\"string\"},\"source-layer\":{\"type\":\"string\"},\"minzoom\":{\"type\":\"number\",\"minimum\":0,\"maximum\":24},\"maxzoom\":{\"type\":\"number\",\"minimum\":0,\"maximum\":24},\"filter\":{\"type\":\"filter\"},\"layout\":{\"type\":\"layout\"},\"paint\":{\"type\":\"paint\"}},\"layout\":[\"layout_fill\",\"layout_line\",\"layout_circle\",\"layout_heatmap\",\"layout_fill-extrusion\",\"layout_symbol\",\"layout_raster\",\"layout_hillshade\",\"layout_background\",\"layout_sky\"],\"layout_background\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_sky\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_fill\":{\"fill-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_circle\":{\"circle-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_heatmap\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_fill-extrusion\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"},\"fill-extrusion-edge-radius\":{\"type\":\"number\",\"private\":true,\"default\":0,\"minimum\":0,\"maximum\":1,\"property-type\":\"constant\"}},\"layout_line\":{\"line-cap\":{\"type\":\"enum\",\"values\":{\"butt\":{},\"round\":{},\"square\":{}},\"default\":\"butt\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-join\":{\"type\":\"enum\",\"values\":{\"bevel\":{},\"round\":{},\"miter\":{}},\"default\":\"miter\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-miter-limit\":{\"type\":\"number\",\"default\":2,\"requires\":[{\"line-join\":\"miter\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-round-limit\":{\"type\":\"number\",\"default\":1.05,\"requires\":[{\"line-join\":\"round\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_symbol\":{\"symbol-placement\":{\"type\":\"enum\",\"values\":{\"point\":{},\"line\":{},\"line-center\":{}},\"default\":\"point\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-spacing\":{\"type\":\"number\",\"default\":250,\"minimum\":1,\"units\":\"pixels\",\"requires\":[{\"symbol-placement\":\"line\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-avoid-edges\":{\"type\":\"boolean\",\"default\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"symbol-z-order\":{\"type\":\"enum\",\"values\":{\"auto\":{},\"viewport-y\":{},\"source\":{}},\"default\":\"auto\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-allow-overlap\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-ignore-placement\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-optional\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\",\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-rotation-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-size\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"units\":\"factor of the original icon size\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-text-fit\":{\"type\":\"enum\",\"values\":{\"none\":{},\"width\":{},\"height\":{},\"both\":{}},\"default\":\"none\",\"requires\":[\"icon-image\",\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-text-fit-padding\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[0,0,0,0],\"units\":\"pixels\",\"requires\":[\"icon-image\",\"text-field\",{\"icon-text-fit\":[\"both\",\"width\",\"height\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-image\":{\"type\":\"resolvedImage\",\"tokens\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-padding\":{\"type\":\"number\",\"default\":2,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-keep-upright\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\",{\"icon-rotation-alignment\":\"map\"},{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-offset\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-anchor\":{\"type\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"default\":\"center\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-rotation-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-field\":{\"type\":\"formatted\",\"default\":\"\",\"tokens\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-font\":{\"type\":\"array\",\"value\":\"string\",\"default\":[\"Open Sans Regular\",\"Arial Unicode MS Regular\"],\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-size\":{\"type\":\"number\",\"default\":16,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-max-width\":{\"type\":\"number\",\"default\":10,\"minimum\":0,\"units\":\"ems\",\"requires\":[\"text-field\",{\"symbol-placement\":[\"point\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-line-height\":{\"type\":\"number\",\"default\":1.2,\"units\":\"ems\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-letter-spacing\":{\"type\":\"number\",\"default\":0,\"units\":\"ems\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-justify\":{\"type\":\"enum\",\"values\":{\"auto\":{},\"left\":{},\"center\":{},\"right\":{}},\"default\":\"center\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-radial-offset\":{\"type\":\"number\",\"units\":\"ems\",\"default\":0,\"requires\":[\"text-field\"],\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]}},\"text-variable-anchor\":{\"type\":\"array\",\"value\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"requires\":[\"text-field\",{\"symbol-placement\":[\"point\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-anchor\":{\"type\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"default\":\"center\",\"requires\":[\"text-field\",{\"!\":\"text-variable-anchor\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-max-angle\":{\"type\":\"number\",\"default\":45,\"units\":\"degrees\",\"requires\":[\"text-field\",{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-writing-mode\":{\"type\":\"array\",\"value\":\"enum\",\"values\":{\"horizontal\":{},\"vertical\":{}},\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-padding\":{\"type\":\"number\",\"default\":2,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-keep-upright\":{\"type\":\"boolean\",\"default\":true,\"requires\":[\"text-field\",{\"text-rotation-alignment\":\"map\"},{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-transform\":{\"type\":\"enum\",\"values\":{\"none\":{},\"uppercase\":{},\"lowercase\":{}},\"default\":\"none\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-offset\":{\"type\":\"array\",\"value\":\"number\",\"units\":\"ems\",\"length\":2,\"default\":[0,0],\"requires\":[\"text-field\",{\"!\":\"text-radial-offset\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-allow-overlap\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-ignore-placement\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-optional\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\",\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_raster\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_hillshade\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"filter\":{\"type\":\"array\",\"value\":\"*\"},\"filter_symbol\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\",\"pitch\",\"distance-from-center\"]}},\"filter_fill\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_line\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_circle\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_fill-extrusion\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_heatmap\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_operator\":{\"type\":\"enum\",\"values\":{\"==\":{},\"!=\":{},\">\":{},\">=\":{},\"<\":{},\"<=\":{},\"in\":{},\"!in\":{},\"all\":{},\"any\":{},\"none\":{},\"has\":{},\"!has\":{},\"within\":{}}},\"geometry_type\":{\"type\":\"enum\",\"values\":{\"Point\":{},\"LineString\":{},\"Polygon\":{}}},\"function\":{\"expression\":{\"type\":\"expression\"},\"stops\":{\"type\":\"array\",\"value\":\"function_stop\"},\"base\":{\"type\":\"number\",\"default\":1,\"minimum\":0},\"property\":{\"type\":\"string\",\"default\":\"$zoom\"},\"type\":{\"type\":\"enum\",\"values\":{\"identity\":{},\"exponential\":{},\"interval\":{},\"categorical\":{}},\"default\":\"exponential\"},\"colorSpace\":{\"type\":\"enum\",\"values\":{\"rgb\":{},\"lab\":{},\"hcl\":{}},\"default\":\"rgb\"},\"default\":{\"type\":\"*\",\"required\":false}},\"function_stop\":{\"type\":\"array\",\"minimum\":0,\"maximum\":24,\"value\":[\"number\",\"color\"],\"length\":2},\"expression\":{\"type\":\"array\",\"value\":\"*\",\"minimum\":1},\"expression_name\":{\"type\":\"enum\",\"values\":{\"let\":{\"group\":\"Variable binding\"},\"var\":{\"group\":\"Variable binding\"},\"literal\":{\"group\":\"Types\"},\"array\":{\"group\":\"Types\"},\"at\":{\"group\":\"Lookup\"},\"in\":{\"group\":\"Lookup\"},\"index-of\":{\"group\":\"Lookup\"},\"slice\":{\"group\":\"Lookup\"},\"case\":{\"group\":\"Decision\"},\"match\":{\"group\":\"Decision\"},\"coalesce\":{\"group\":\"Decision\"},\"step\":{\"group\":\"Ramps, scales, curves\"},\"interpolate\":{\"group\":\"Ramps, scales, curves\"},\"interpolate-hcl\":{\"group\":\"Ramps, scales, curves\"},\"interpolate-lab\":{\"group\":\"Ramps, scales, curves\"},\"ln2\":{\"group\":\"Math\"},\"pi\":{\"group\":\"Math\"},\"e\":{\"group\":\"Math\"},\"typeof\":{\"group\":\"Types\"},\"string\":{\"group\":\"Types\"},\"number\":{\"group\":\"Types\"},\"boolean\":{\"group\":\"Types\"},\"object\":{\"group\":\"Types\"},\"collator\":{\"group\":\"Types\"},\"format\":{\"group\":\"Types\"},\"image\":{\"group\":\"Types\"},\"number-format\":{\"group\":\"Types\"},\"to-string\":{\"group\":\"Types\"},\"to-number\":{\"group\":\"Types\"},\"to-boolean\":{\"group\":\"Types\"},\"to-rgba\":{\"group\":\"Color\"},\"to-color\":{\"group\":\"Types\"},\"rgb\":{\"group\":\"Color\"},\"rgba\":{\"group\":\"Color\"},\"get\":{\"group\":\"Lookup\"},\"has\":{\"group\":\"Lookup\"},\"length\":{\"group\":\"Lookup\"},\"properties\":{\"group\":\"Feature data\"},\"feature-state\":{\"group\":\"Feature data\"},\"geometry-type\":{\"group\":\"Feature data\"},\"id\":{\"group\":\"Feature data\"},\"zoom\":{\"group\":\"Camera\"},\"pitch\":{\"group\":\"Camera\"},\"distance-from-center\":{\"group\":\"Camera\"},\"heatmap-density\":{\"group\":\"Heatmap\"},\"line-progress\":{\"group\":\"Feature data\"},\"sky-radial-progress\":{\"group\":\"sky\"},\"accumulated\":{\"group\":\"Feature data\"},\"+\":{\"group\":\"Math\"},\"*\":{\"group\":\"Math\"},\"-\":{\"group\":\"Math\"},\"/\":{\"group\":\"Math\"},\"%\":{\"group\":\"Math\"},\"^\":{\"group\":\"Math\"},\"sqrt\":{\"group\":\"Math\"},\"log10\":{\"group\":\"Math\"},\"ln\":{\"group\":\"Math\"},\"log2\":{\"group\":\"Math\"},\"sin\":{\"group\":\"Math\"},\"cos\":{\"group\":\"Math\"},\"tan\":{\"group\":\"Math\"},\"asin\":{\"group\":\"Math\"},\"acos\":{\"group\":\"Math\"},\"atan\":{\"group\":\"Math\"},\"min\":{\"group\":\"Math\"},\"max\":{\"group\":\"Math\"},\"round\":{\"group\":\"Math\"},\"abs\":{\"group\":\"Math\"},\"ceil\":{\"group\":\"Math\"},\"floor\":{\"group\":\"Math\"},\"distance\":{\"group\":\"Math\"},\"==\":{\"group\":\"Decision\"},\"!=\":{\"group\":\"Decision\"},\">\":{\"group\":\"Decision\"},\"<\":{\"group\":\"Decision\"},\">=\":{\"group\":\"Decision\"},\"<=\":{\"group\":\"Decision\"},\"all\":{\"group\":\"Decision\"},\"any\":{\"group\":\"Decision\"},\"!\":{\"group\":\"Decision\"},\"within\":{\"group\":\"Decision\"},\"is-supported-script\":{\"group\":\"String\"},\"upcase\":{\"group\":\"String\"},\"downcase\":{\"group\":\"String\"},\"concat\":{\"group\":\"String\"},\"resolved-locale\":{\"group\":\"String\"}}},\"fog\":{\"range\":{\"type\":\"array\",\"default\":[0.5,10],\"minimum\":-20,\"maximum\":20,\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]}},\"color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#ffffff\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"high-color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#245cdf\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"space-color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],4,\"#010b19\",7,\"#367ab9\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"horizon-blend\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],4,0.2,7,0.1],\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"star-intensity\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],5,0.35,6,0],\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true}},\"light\":{\"anchor\":{\"type\":\"enum\",\"default\":\"viewport\",\"values\":{\"map\":{},\"viewport\":{}},\"property-type\":\"data-constant\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]}},\"position\":{\"type\":\"array\",\"default\":[1.15,210,30],\"length\":3,\"value\":\"number\",\"property-type\":\"data-constant\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]}},\"color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#ffffff\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"intensity\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":0.5,\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true}},\"projection\":{\"name\":{\"type\":\"enum\",\"values\":{\"albers\":{},\"equalEarth\":{},\"equirectangular\":{},\"lambertConformalConic\":{},\"mercator\":{},\"naturalEarth\":{},\"winkelTripel\":{},\"globe\":{}},\"default\":\"mercator\",\"required\":true},\"center\":{\"type\":\"array\",\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"minimum\":[-180,-90],\"maximum\":[180,90],\"transition\":false,\"requires\":[{\"name\":[\"albers\",\"lambertConformalConic\"]}]},\"parallels\":{\"type\":\"array\",\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"minimum\":[-90,-90],\"maximum\":[90,90],\"transition\":false,\"requires\":[{\"name\":[\"albers\",\"lambertConformalConic\"]}]}},\"terrain\":{\"source\":{\"type\":\"string\",\"required\":true},\"exaggeration\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":1,\"minimum\":0,\"maximum\":1000,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true,\"requires\":[\"source\"]}},\"paint\":[\"paint_fill\",\"paint_line\",\"paint_circle\",\"paint_heatmap\",\"paint_fill-extrusion\",\"paint_symbol\",\"paint_raster\",\"paint_hillshade\",\"paint_background\",\"paint_sky\"],\"paint_fill\":{\"fill-antialias\":{\"type\":\"boolean\",\"default\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"fill-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-outline-color\":{\"type\":\"color\",\"transition\":true,\"requires\":[{\"!\":\"fill-pattern\"},{\"fill-antialias\":true}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"fill-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"}},\"paint_fill-extrusion\":{\"fill-extrusion-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"fill-extrusion-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"fill-extrusion-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-height\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"meters\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-base\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"meters\",\"transition\":true,\"requires\":[\"fill-extrusion-height\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-vertical-gradient\":{\"type\":\"boolean\",\"default\":true,\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-ambient-occlusion-intensity\":{\"property-type\":\"data-constant\",\"type\":\"number\",\"private\":true,\"default\":0,\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"fill-extrusion-ambient-occlusion-radius\":{\"property-type\":\"data-constant\",\"type\":\"number\",\"private\":true,\"default\":3,\"minimum\":0,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true,\"requires\":[\"fill-extrusion-edge-radius\"]}},\"paint_line\":{\"line-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"line-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"line-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-width\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-gap-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-offset\":{\"type\":\"number\",\"default\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-dasharray\":{\"type\":\"array\",\"value\":\"number\",\"minimum\":0,\"transition\":false,\"units\":\"line widths\",\"requires\":[{\"!\":\"line-pattern\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-gradient\":{\"type\":\"color\",\"transition\":false,\"requires\":[{\"!\":\"line-pattern\"},{\"source\":\"geojson\",\"has\":{\"lineMetrics\":true}}],\"expression\":{\"interpolated\":true,\"parameters\":[\"line-progress\"]},\"property-type\":\"color-ramp\"},\"line-trim-offset\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"minimum\":[0,0],\"maximum\":[1,1],\"transition\":false,\"requires\":[{\"source\":\"geojson\",\"has\":{\"lineMetrics\":true}}],\"property-type\":\"constant\"}},\"paint_circle\":{\"circle-radius\":{\"type\":\"number\",\"default\":5,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-blur\":{\"type\":\"number\",\"default\":0,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"circle-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-pitch-scale\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"viewport\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-stroke-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-stroke-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-stroke-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"}},\"paint_heatmap\":{\"heatmap-radius\":{\"type\":\"number\",\"default\":30,\"minimum\":1,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"heatmap-weight\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"heatmap-intensity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"heatmap-color\":{\"type\":\"color\",\"default\":[\"interpolate\",[\"linear\"],[\"heatmap-density\"],0,\"rgba(0, 0, 255, 0)\",0.1,\"royalblue\",0.3,\"cyan\",0.5,\"lime\",0.7,\"yellow\",1,\"red\"],\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"heatmap-density\"]},\"property-type\":\"color-ramp\"},\"heatmap-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_symbol\":{\"icon-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-color\":{\"type\":\"color\",\"default\":\"rgba(0, 0, 0, 0)\",\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"icon-image\",\"icon-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"overridable\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-color\":{\"type\":\"color\",\"default\":\"rgba(0, 0, 0, 0)\",\"transition\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"text-field\",\"text-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_raster\":{\"raster-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-hue-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"transition\":true,\"units\":\"degrees\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-brightness-min\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-brightness-max\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-saturation\":{\"type\":\"number\",\"default\":0,\"minimum\":-1,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-contrast\":{\"type\":\"number\",\"default\":0,\"minimum\":-1,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-resampling\":{\"type\":\"enum\",\"values\":{\"linear\":{},\"nearest\":{}},\"default\":\"linear\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-fade-duration\":{\"type\":\"number\",\"default\":300,\"minimum\":0,\"transition\":false,\"units\":\"milliseconds\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_hillshade\":{\"hillshade-illumination-direction\":{\"type\":\"number\",\"default\":335,\"minimum\":0,\"maximum\":359,\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-illumination-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"viewport\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-exaggeration\":{\"type\":\"number\",\"default\":0.5,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-shadow-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-highlight-color\":{\"type\":\"color\",\"default\":\"#FFFFFF\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-accent-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_background\":{\"background-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"background-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"background-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"background-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_sky\":{\"sky-type\":{\"type\":\"enum\",\"values\":{\"gradient\":{},\"atmosphere\":{}},\"default\":\"atmosphere\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-atmosphere-sun\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"units\":\"degrees\",\"minimum\":[0,0],\"maximum\":[360,180],\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-atmosphere-sun-intensity\":{\"type\":\"number\",\"requires\":[{\"sky-type\":\"atmosphere\"}],\"default\":10,\"minimum\":0,\"maximum\":100,\"transition\":false,\"property-type\":\"data-constant\"},\"sky-gradient-center\":{\"type\":\"array\",\"requires\":[{\"sky-type\":\"gradient\"}],\"value\":\"number\",\"default\":[0,0],\"length\":2,\"units\":\"degrees\",\"minimum\":[0,0],\"maximum\":[360,180],\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-gradient-radius\":{\"type\":\"number\",\"requires\":[{\"sky-type\":\"gradient\"}],\"default\":90,\"minimum\":0,\"maximum\":180,\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-gradient\":{\"type\":\"color\",\"default\":[\"interpolate\",[\"linear\"],[\"sky-radial-progress\"],0.8,\"#87ceeb\",1,\"white\"],\"transition\":false,\"requires\":[{\"sky-type\":\"gradient\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"sky-radial-progress\"]},\"property-type\":\"color-ramp\"},\"sky-atmosphere-halo-color\":{\"type\":\"color\",\"default\":\"white\",\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"property-type\":\"data-constant\"},\"sky-atmosphere-color\":{\"type\":\"color\",\"default\":\"white\",\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"property-type\":\"data-constant\"},\"sky-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"transition\":{\"duration\":{\"type\":\"number\",\"default\":300,\"minimum\":0,\"units\":\"milliseconds\"},\"delay\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"milliseconds\"}},\"property-type\":{\"data-driven\":{\"type\":\"property-type\"},\"color-ramp\":{\"type\":\"property-type\"},\"data-constant\":{\"type\":\"property-type\"},\"constant\":{\"type\":\"property-type\"}},\"promoteId\":{\"*\":{\"type\":\"string\"}}};\n\n//      \nfunction isExpressionFilter(filter) {\n    if (filter === true || filter === false) {\n        return true;\n    }\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n    case 'in':\n        return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n    case 'any':\n    case 'all':\n        for (const f of filter.slice(1)) {\n            if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n    default:\n        return true;\n    }\n}\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @param {string} layerType the type of the layer this filter will be applied to.\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter, layerType = 'fill') {\n    if (filter === null || filter === undefined) {\n        return {\n            filter: () => true,\n            needGeometry: false,\n            needFeature: false\n        };\n    }\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n    const filterExp = filter;\n    let staticFilter = true;\n    try {\n        staticFilter = extractStaticFilter(filterExp);\n    } catch (e) {\n        console.warn(`Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\nand paste the contents of this message in the report.\nThank you!\nFilter Expression:\n${ JSON.stringify(filterExp, null, 2) }\n        `);\n    }\n    // Compile the static component of the filter\n    const filterSpec = spec[`filter_${ layerType }`];\n    const compiledStaticFilter = createExpression(staticFilter, filterSpec);\n    let filterFunc = null;\n    if (compiledStaticFilter.result === 'error') {\n        throw new Error(compiledStaticFilter.value.map(err => `${ err.key }: ${ err.message }`).join(', '));\n    } else {\n        filterFunc = (globalProperties, feature, canonical) => compiledStaticFilter.value.evaluate(globalProperties, feature, {}, canonical);\n    }\n    // If the static component is not equal to the entire filter then we have a dynamic component\n    // Compile the dynamic component separately\n    let dynamicFilterFunc = null;\n    let needFeature = null;\n    if (staticFilter !== filterExp) {\n        const compiledDynamicFilter = createExpression(filterExp, filterSpec);\n        if (compiledDynamicFilter.result === 'error') {\n            throw new Error(compiledDynamicFilter.value.map(err => `${ err.key }: ${ err.message }`).join(', '));\n        } else {\n            dynamicFilterFunc = (globalProperties, feature, canonical, featureTileCoord, featureDistanceData) => compiledDynamicFilter.value.evaluate(globalProperties, feature, {}, canonical, undefined, undefined, featureTileCoord, featureDistanceData);\n            needFeature = !isFeatureConstant(compiledDynamicFilter.value.expression);\n        }\n    }\n    filterFunc = filterFunc;\n    const needGeometry = geometryNeeded(staticFilter);\n    return {\n        filter: filterFunc,\n        dynamicFilter: dynamicFilterFunc ? dynamicFilterFunc : undefined,\n        needGeometry,\n        needFeature: !!needFeature\n    };\n}\nfunction extractStaticFilter(filter) {\n    if (!isDynamicFilter(filter)) {\n        return filter;\n    }\n    // Shallow copy so we can replace expressions in-place\n    let result = deepUnbundle(filter);\n    // 1. Union branches\n    unionDynamicBranches(result);\n    // 2. Collapse dynamic conditions to  `true`\n    result = collapseDynamicBooleanExpressions(result);\n    return result;\n}\nfunction collapseDynamicBooleanExpressions(expression) {\n    if (!Array.isArray(expression)) {\n        return expression;\n    }\n    const collapsed = collapsedExpression(expression);\n    if (collapsed === true) {\n        return collapsed;\n    } else {\n        return collapsed.map(subExpression => collapseDynamicBooleanExpressions(subExpression));\n    }\n}\n/**\n * Traverses the expression and replaces all instances of branching on a\n * `dynamic` conditional (such as `['pitch']` or `['distance-from-center']`)\n * into an `any` expression.\n * This ensures that all possible outcomes of a `dynamic` branch are considered\n * when evaluating the expression upfront during filtering.\n *\n * @param {Array<any>} filter the filter expression mutated in-place.\n */\nfunction unionDynamicBranches(filter) {\n    let isBranchingDynamically = false;\n    const branches = [];\n    if (filter[0] === 'case') {\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[i]);\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'match') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n        for (let i = 2; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'step') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n    }\n    if (isBranchingDynamically) {\n        filter.length = 0;\n        filter.push('any', ...branches);\n    }\n    // traverse and recurse into children\n    for (let i = 1; i < filter.length; i++) {\n        unionDynamicBranches(filter[i]);\n    }\n}\nfunction isDynamicFilter(filter) {\n    // Base Cases\n    if (!Array.isArray(filter)) {\n        return false;\n    }\n    if (isRootExpressionDynamic(filter[0])) {\n        return true;\n    }\n    for (let i = 1; i < filter.length; i++) {\n        const child = filter[i];\n        if (isDynamicFilter(child)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isRootExpressionDynamic(expression) {\n    return expression === 'pitch' || expression === 'distance-from-center';\n}\nconst dynamicConditionExpressions = new Set([\n    'in',\n    '==',\n    '!=',\n    '>',\n    '>=',\n    '<',\n    '<=',\n    'to-boolean'\n]);\nfunction collapsedExpression(expression) {\n    if (dynamicConditionExpressions.has(expression[0])) {\n        for (let i = 1; i < expression.length; i++) {\n            const param = expression[i];\n            if (isDynamicFilter(param)) {\n                return true;\n            }\n        }\n    }\n    return expression;\n}\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter))\n        return false;\n    if (filter[0] === 'within')\n        return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index]))\n            return true;\n    }\n    return false;\n}\nfunction convertFilter(filter) {\n    if (!filter)\n        return true;\n    const op = filter[0];\n    if (filter.length <= 1)\n        return op !== 'any';\n    const converted = op === '==' ? convertComparisonOp(filter[1], filter[2], '==') : op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) : op === '<' || op === '>' || op === '<=' || op === '>=' ? convertComparisonOp(filter[1], filter[2], op) : op === 'any' ? convertDisjunctionOp(filter.slice(1)) : op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) : op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) : op === 'in' ? convertInOp(filter[1], filter.slice(2)) : op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) : op === 'has' ? convertHasOp(filter[1]) : op === '!has' ? convertNegation(convertHasOp(filter[1])) : op === 'within' ? filter : true;\n    return converted;\n}\nfunction convertComparisonOp(property, value, op) {\n    switch (property) {\n    case '$type':\n        return [\n            `filter-type-${ op }`,\n            value\n        ];\n    case '$id':\n        return [\n            `filter-id-${ op }`,\n            value\n        ];\n    default:\n        return [\n            `filter-${ op }`,\n            property,\n            value\n        ];\n    }\n}\nfunction convertDisjunctionOp(filters) {\n    return ['any'].concat(filters.map(convertFilter));\n}\nfunction convertInOp(property, values) {\n    if (values.length === 0) {\n        return false;\n    }\n    switch (property) {\n    case '$type':\n        return [\n            `filter-type-in`,\n            [\n                'literal',\n                values\n            ]\n        ];\n    case '$id':\n        return [\n            `filter-id-in`,\n            [\n                'literal',\n                values\n            ]\n        ];\n    default:\n        if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n            return [\n                'filter-in-large',\n                property,\n                [\n                    'literal',\n                    values.sort(compare)\n                ]\n            ];\n        } else {\n            return [\n                'filter-in-small',\n                property,\n                [\n                    'literal',\n                    values\n                ]\n            ];\n        }\n    }\n}\nfunction convertHasOp(property) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [`filter-has-id`];\n    default:\n        return [\n            `filter-has`,\n            property\n        ];\n    }\n}\nfunction convertNegation(filter) {\n    return [\n        '!',\n        filter\n    ];\n}\n\n//      \nvar refProperties = [\n    'type',\n    'source',\n    'source-layer',\n    'minzoom',\n    'maxzoom',\n    'filter',\n    'layout'\n];\n\n//      \nfunction deref(layer, parent) {\n    const result = {};\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n    refProperties.forEach(k => {\n        if (k in parent) {\n            result[k] = parent[k];\n        }\n    });\n    return result;\n}\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nfunction derefLayers(layers) {\n    layers = layers.slice();\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[layers[i].ref]);\n        }\n    }\n    return layers;\n}\n\nvar fontWeights = {\n    thin: 100,\n    hairline: 100,\n    'ultra-light': 100,\n    'extra-light': 100,\n    light: 200,\n    book: 300,\n    regular: 400,\n    normal: 400,\n    plain: 400,\n    roman: 400,\n    standard: 400,\n    medium: 500,\n    'semi-bold': 600,\n    'demi-bold': 600,\n    bold: 700,\n    heavy: 800,\n    black: 800,\n    'extra-bold': 800,\n    'ultra-black': 900,\n    'extra-black': 900,\n    'ultra-bold': 900,\n    'heavy-black': 900,\n    fat: 900,\n    poster: 900\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\nvar fontCache = {};\nvar mapboxToCssFont = function (fonts, size, lineHeight) {\n    var cssData = fontCache[fonts];\n    if (!cssData) {\n        if (!Array.isArray(fonts)) {\n            fonts = [fonts];\n        }\n        var weight = 400;\n        var style = 'normal';\n        var fontFamilies = [];\n        var haveWeight, haveStyle;\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            var parts = font.split(' ');\n            var maybeWeight = parts[parts.length - 1].toLowerCase();\n            if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n                style = haveStyle ? style : maybeWeight;\n                parts.pop();\n                maybeWeight = parts[parts.length - 1].toLowerCase();\n            } else if (italicRE.test(maybeWeight)) {\n                maybeWeight = maybeWeight.replace(italicRE, '');\n                style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n            }\n            for (var w in fontWeights) {\n                var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n                if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n                    weight = haveWeight ? weight : fontWeights[w];\n                    parts.pop();\n                    if (previousPart && w.startsWith(previousPart)) {\n                        parts.pop();\n                    }\n                    break;\n                }\n            }\n            if (!haveWeight && typeof maybeWeight == 'number') {\n                weight = maybeWeight;\n            }\n            var fontFamily = parts.join(sp).replace('Klokantech Noto Sans', 'Noto Sans');\n            if (fontFamily.indexOf(sp) !== -1) {\n                fontFamily = '\"' + fontFamily + '\"';\n            }\n            fontFamilies.push(fontFamily);\n        }\n        // CSS font property: font-style font-weight font-size/line-height font-family\n        cssData = fontCache[fonts] = [\n            style,\n            weight,\n            fontFamilies\n        ];\n    }\n    return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n};\n\nvar mb2css = /*@__PURE__*/getDefaultExportFromCjs(mapboxToCssFont);\n\nconst mapboxBaseUrl = 'https://api.mapbox.com';\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\nfunction getMapboxPath(url) {\n    const startsWith = 'mapbox://';\n    if (url.indexOf(startsWith) !== 0) {\n        return '';\n    }\n    return url.slice(startsWith.length);\n}\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\nfunction normalizeSpriteUrl(url, token, styleUrl) {\n    const mapboxPath = getMapboxPath(url);\n    if (!mapboxPath) {\n        return decodeURI(new URL(url, styleUrl).href);\n    }\n    const startsWith = 'sprites/';\n    if (mapboxPath.indexOf(startsWith) !== 0) {\n        throw new Error(`unexpected sprites url: ${ url }`);\n    }\n    const sprite = mapboxPath.slice(startsWith.length);\n    return `${ mapboxBaseUrl }/styles/v1/${ sprite }/sprite?access_token=${ token }`;\n}\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\nfunction normalizeStyleUrl(url, token) {\n    const mapboxPath = getMapboxPath(url);\n    if (!mapboxPath) {\n        return decodeURI(new URL(url, location.href).href);\n    }\n    const startsWith = 'styles/';\n    if (mapboxPath.indexOf(startsWith) !== 0) {\n        throw new Error(`unexpected style url: ${ url }`);\n    }\n    const style = mapboxPath.slice(startsWith.length);\n    return `${ mapboxBaseUrl }/styles/v1/${ style }?&access_token=${ token }`;\n}\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {string} A vector tile template.\n * @private\n */\nfunction normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n    const urlObject = new URL(url, styleUrl);\n    const mapboxPath = getMapboxPath(url);\n    if (!mapboxPath) {\n        if (!token) {\n            return decodeURI(urlObject.href);\n        }\n        urlObject.searchParams.set(tokenParam, token);\n        return decodeURI(urlObject.href);\n    }\n    if (mapboxPath === 'mapbox.satellite') {\n        const sizeFactor = window.devicePixelRatio >= 1.5 ? '@2x' : '';\n        return `https://api.mapbox.com/v4/${ mapboxPath }/{z}/{x}/{y}${ sizeFactor }.webp?access_token=${ token }`;\n    }\n    return `https://{a-d}.tiles.mapbox.com/v4/${ mapboxPath }/{z}/{x}/{y}.vector.pbf?access_token=${ token }`;\n}\n\n/** @typedef {import(\"ol\").Map} Map */\n/** @typedef {import(\"ol/layer\").Layer} Layer */\n/** @typedef {import(\"ol/layer\").Group} LayerGroup */\n/** @typedef {import(\"ol/layer\").Vector} VectorLayer */\n/** @typedef {import(\"ol/layer\").VectorTile} VectorTileLayer */\n/** @typedef {import(\"ol/source\").Source} Source */\nconst functionCacheByStyleId = {};\nconst filterCacheByStyleId = {};\nlet styleId = 0;\nfunction getStyleId(glStyle) {\n    if (!glStyle.id) {\n        glStyle.id = styleId++;\n    }\n    return glStyle.id;\n}\nfunction getStyleFunctionKey(glStyle, olLayer) {\n    return getStyleId(glStyle) + '.' + getUid(olLayer);\n}\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Function cache.\n */\nfunction getFunctionCache(glStyle) {\n    let functionCache = functionCacheByStyleId[glStyle.id];\n    if (!functionCache) {\n        functionCache = {};\n        functionCacheByStyleId[getStyleId(glStyle)] = functionCache;\n    }\n    return functionCache;\n}\nfunction clearFunctionCache() {\n    for (const key in functionCacheByStyleId) {\n        delete functionCacheByStyleId[key];\n    }\n}\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Filter cache.\n */\nfunction getFilterCache(glStyle) {\n    let filterCache = filterCacheByStyleId[glStyle.id];\n    if (!filterCache) {\n        filterCache = {};\n        filterCacheByStyleId[getStyleId(glStyle)] = filterCache;\n    }\n    return filterCache;\n}\nfunction deg2rad(degrees) {\n    return degrees * Math.PI / 180;\n}\nconst defaultResolutions = (function () {\n    const resolutions = [];\n    for (let res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n        resolutions.push(res);\n    }\n    return resolutions;\n}());\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nfunction createCanvas(width, height) {\n    if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') {\n        // eslint-disable-line\n        return new OffscreenCanvas(width, height);\n    }\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n}\nfunction getZoomForResolution(resolution, resolutions) {\n    let i = 0;\n    const ii = resolutions.length;\n    for (; i < ii; ++i) {\n        const candidate = resolutions[i];\n        if (candidate < resolution && i + 1 < ii) {\n            const zoomFactor = resolutions[i] / resolutions[i + 1];\n            return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n        }\n    }\n    return ii - 1;\n}\nconst pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options={}] Options.\n * @param {{request?: Request}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nfunction fetchResource(resourceType, url, options = {}, metadata) {\n    if (url in pendingRequests) {\n        if (metadata) {\n            metadata.request = pendingRequests[url][0];\n        }\n        return pendingRequests[url][1];\n    }\n    const request = options.transformRequest ? options.transformRequest(url, resourceType) || new Request(url) : new Request(url);\n    if (!request.headers.get('Accept')) {\n        request.headers.set('Accept', 'application/json');\n    }\n    if (metadata) {\n        metadata.request = request;\n    }\n    const pendingRequest = fetch(request).then(function (response) {\n        delete pendingRequests[url];\n        return response.ok ? response.json() : Promise.reject(new Error('Error fetching source ' + url));\n    }).catch(function (error) {\n        delete pendingRequests[url];\n        return Promise.reject(new Error('Error fetching source ' + url));\n    });\n    pendingRequests[url] = [\n        request,\n        pendingRequest\n    ];\n    return pendingRequest;\n}\nfunction getGlStyle(glStyleOrUrl, options) {\n    if (typeof glStyleOrUrl === 'string') {\n        if (glStyleOrUrl.trim().startsWith('{')) {\n            try {\n                const glStyle = JSON.parse(glStyleOrUrl);\n                return Promise.resolve(glStyle);\n            } catch (error) {\n                return Promise.reject(error);\n            }\n        } else {\n            glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n            return fetchResource('Style', glStyleOrUrl, options);\n        }\n    } else {\n        return Promise.resolve(glStyleOrUrl);\n    }\n}\nfunction getTransformedTilesUrl(tilesUrl, options) {\n    if (options.transformRequest) {\n        const transformedRequest = options.transformRequest(tilesUrl, 'Tiles');\n        if (transformedRequest instanceof Request) {\n            return decodeURI(transformedRequest.url);\n        }\n    }\n    return tilesUrl;\n}\nconst tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Object} TileJson\n */\nfunction getTileJson(glSource, styleUrl, options = {}) {\n    const cacheKey = [\n        styleUrl,\n        JSON.stringify(glSource)\n    ].toString();\n    let promise = tilejsonCache[cacheKey];\n    if (!promise || options.transformRequest) {\n        const url = glSource.url;\n        if (url && !glSource.tiles) {\n            const normalizedSourceUrl = normalizeSourceUrl(url, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href);\n            if (url.startsWith('mapbox://')) {\n                promise = Promise.resolve(Object.assign({}, glSource, {\n                    url: undefined,\n                    tiles: expandUrl(normalizedSourceUrl)\n                }));\n            } else {\n                const metadata = {};\n                promise = fetchResource('Source', normalizedSourceUrl, options, metadata).then(function (tileJson) {\n                    tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n                        if (tileJson.scheme === 'tms') {\n                            tileUrl = tileUrl.replace('{y}', '{-y}');\n                        }\n                        return getTransformedTilesUrl(normalizeSourceUrl(tileUrl, options.accessToken, options.accessTokenParam || 'access_token', metadata.request.url), options);\n                    });\n                    return Promise.resolve(tileJson);\n                });\n            }\n        } else {\n            glSource = Object.assign({}, glSource, {\n                tiles: glSource.tiles.map(function (tileUrl) {\n                    if (glSource.scheme === 'tms') {\n                        tileUrl = tileUrl.replace('{y}', '{-y}');\n                    }\n                    return getTransformedTilesUrl(normalizeSourceUrl(tileUrl, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href), options);\n                })\n            });\n            promise = Promise.resolve(Object.assign({}, glSource));\n        }\n        tilejsonCache[cacheKey] = promise;\n    }\n    return promise;\n}\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} spriteImage Sprite image id.\n * @param {{x: number, y: number, width: number, height: number, pixelRatio: number}} spriteImageData Sprite image data.\n * @param {number} haloWidth Halo width.\n * @param {{r: number, g: number, b: number, a: number}} haloColor Halo color.\n * @return {HTMLCanvasElement} Canvas element with the halo.\n */\nfunction drawIconHalo(spriteImage, spriteImageData, haloWidth, haloColor) {\n    const imageCanvas = document.createElement('canvas');\n    const imgSize = [\n        2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.width,\n        2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.height\n    ];\n    imageCanvas.width = imgSize[0];\n    imageCanvas.height = imgSize[1];\n    const imageContext = imageCanvas.getContext('2d');\n    imageContext.drawImage(spriteImage, spriteImageData.x, spriteImageData.y, spriteImageData.width, spriteImageData.height, haloWidth * spriteImageData.pixelRatio, haloWidth * spriteImageData.pixelRatio, spriteImageData.width, spriteImageData.height);\n    const imageData = imageContext.getImageData(0, 0, imgSize[0], imgSize[1]);\n    imageContext.globalCompositeOperation = 'destination-over';\n    imageContext.fillStyle = `rgba(${ haloColor.r * 255 },${ haloColor.g * 255 },${ haloColor.b * 255 },${ haloColor.a })`;\n    const data = imageData.data;\n    for (let i = 0, ii = imageData.width; i < ii; ++i) {\n        for (let j = 0, jj = imageData.height; j < jj; ++j) {\n            const index = (j * ii + i) * 4;\n            const alpha = data[index + 3];\n            if (alpha > 0) {\n                imageContext.arc(i, j, haloWidth * spriteImageData.pixelRatio, 0, 2 * Math.PI);\n            }\n        }\n    }\n    imageContext.fill();\n    return imageCanvas;\n}\nfunction smoothstep(min, max, value) {\n    const x = Math.max(0, Math.min(1, (value - min) / (max - min)));\n    return x * x * (3 - 2 * x);\n}\n/**\n * @param {HTMLImageElement} image SDF image\n * @param {{x: number, y: number, width: number, height: number}} area Area to unSDF\n * @param {{r: number, g: number, b: number, a: number}} color Color to use\n * @return {HTMLCanvasElement} Regular image\n */\nfunction drawSDF(image, area, color) {\n    const imageCanvas = document.createElement('canvas');\n    imageCanvas.width = area.width;\n    imageCanvas.height = area.height;\n    const imageContext = imageCanvas.getContext('2d');\n    imageContext.drawImage(image, area.x, area.y, area.width, area.height, 0, 0, area.width, area.height);\n    const imageData = imageContext.getImageData(0, 0, area.width, area.height);\n    const data = imageData.data;\n    for (let i = 0, ii = imageData.width; i < ii; ++i) {\n        for (let j = 0, jj = imageData.height; j < jj; ++j) {\n            const index = (j * ii + i) * 4;\n            const dist = data[index + 3] / 255;\n            const buffer = 0.75;\n            const gamma = 0.1;\n            const alpha = smoothstep(buffer - gamma, buffer + gamma, dist);\n            if (alpha > 0) {\n                data[index + 0] = Math.round(255 * color.r * alpha);\n                data[index + 1] = Math.round(255 * color.g * alpha);\n                data[index + 2] = Math.round(255 * color.b * alpha);\n                data[index + 3] = Math.round(255 * alpha);\n            } else {\n                data[index + 3] = 0;\n            }\n        }\n    }\n    imageContext.putImageData(imageData, 0, 0);\n    return imageCanvas;\n}    /**\n * @typedef {import(\"./apply.js\").Options} Options\n * @typedef {import('./apply.js').ResourceType} ResourceType\n * @private\n */\n\nconst hairSpacePool = Array(256).join('\\u200A');\nfunction applyLetterSpacing(text, letterSpacing) {\n    if (letterSpacing >= 0.05) {\n        let textWithLetterSpacing = '';\n        const lines = text.split('\\n');\n        const joinSpaceString = hairSpacePool.slice(0, Math.round(letterSpacing / 0.1));\n        for (let l = 0, ll = lines.length; l < ll; ++l) {\n            if (l > 0) {\n                textWithLetterSpacing += '\\n';\n            }\n            textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n        }\n        return textWithLetterSpacing;\n    }\n    return text;\n}\nlet measureContext;\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvas(1, 1).getContext('2d');\n    }\n    return measureContext;\n}\nfunction measureText(text, letterSpacing) {\n    return getMeasureContext().measureText(text).width + (text.length - 1) * letterSpacing;\n}\nconst measureCache = {};\nfunction wrapText(text, font, em, letterSpacing) {\n    if (text.indexOf('\\n') !== -1) {\n        const hardLines = text.split('\\n');\n        const lines = [];\n        for (let i = 0, ii = hardLines.length; i < ii; ++i) {\n            lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n        }\n        return lines.join('\\n');\n    }\n    const key = em + ',' + font + ',' + text + ',' + letterSpacing;\n    let wrappedText = measureCache[key];\n    if (!wrappedText) {\n        const words = text.split(' ');\n        if (words.length > 1) {\n            const ctx = getMeasureContext();\n            ctx.font = font;\n            const oneEm = ctx.measureText('M').width;\n            const maxWidth = oneEm * em;\n            let line = '';\n            const lines = [];\n            // Pass 1 - wrap lines to not exceed maxWidth\n            for (let i = 0, ii = words.length; i < ii; ++i) {\n                const word = words[i];\n                const testLine = line + (line ? ' ' : '') + word;\n                if (measureText(testLine, letterSpacing) <= maxWidth) {\n                    line = testLine;\n                } else {\n                    if (line) {\n                        lines.push(line);\n                    }\n                    line = word;\n                }\n            }\n            if (line) {\n                lines.push(line);\n            }\n            // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n            for (let i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n                const line = lines[i];\n                if (measureText(line, letterSpacing) < maxWidth * 0.35) {\n                    const prevWidth = i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n                    const nextWidth = i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n                    lines.splice(i, 1);\n                    ii -= 1;\n                    if (prevWidth < nextWidth) {\n                        lines[i - 1] += ' ' + line;\n                        i -= 1;\n                    } else {\n                        lines[i] = line + ' ' + lines[i];\n                    }\n                }\n            }\n            // Pass 3 - try to fill 80% of maxWidth for each line\n            for (let i = 0, ii = lines.length - 1; i < ii; ++i) {\n                const line = lines[i];\n                const next = lines[i + 1];\n                if (measureText(line, letterSpacing) > maxWidth * 0.7 && measureText(next, letterSpacing) < maxWidth * 0.6) {\n                    const lineWords = line.split(' ');\n                    const lastWord = lineWords.pop();\n                    if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n                        lines[i] = lineWords.join(' ');\n                        lines[i + 1] = lastWord + ' ' + next;\n                    }\n                    ii -= 1;\n                }\n            }\n            wrappedText = lines.join('\\n');\n        } else {\n            wrappedText = text;\n        }\n        wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n        measureCache[key] = wrappedText;\n    }\n    return wrappedText;\n}\nconst fontFamilyRegEx = /font-family: ?([^;]*);/;\nconst stripQuotesRegEx = /(\"|')/g;\nlet loadedFontFamilies;\nfunction hasFontFamily(family) {\n    if (!loadedFontFamilies) {\n        loadedFontFamilies = {};\n        const styleSheets = document.styleSheets;\n        for (let i = 0, ii = styleSheets.length; i < ii; ++i) {\n            const styleSheet = styleSheets[i];\n            try {\n                const cssRules = styleSheet.rules || styleSheet.cssRules;\n                if (cssRules) {\n                    for (let j = 0, jj = cssRules.length; j < jj; ++j) {\n                        const cssRule = cssRules[j];\n                        if (cssRule.type == 5) {\n                            const match = cssRule.cssText.match(fontFamilyRegEx);\n                            loadedFontFamilies[match[1].replace(stripQuotesRegEx, '')] = true;\n                        }\n                    }\n                }\n            } catch (e) {\n            }\n        }\n    }\n    return family in loadedFontFamilies;\n}\nconst processedFontFamilies = {};\n/**\n * @param {Array} fonts Fonts.\n * @param {string} [templateUrl] Template URL.\n * @return {Array} Processed fonts.\n * @private\n */\nfunction getFonts(fonts, templateUrl = 'https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css') {\n    const fontsKey = fonts.toString();\n    if (fontsKey in processedFontFamilies) {\n        return processedFontFamilies[fontsKey];\n    }\n    const fontDescriptions = [];\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n        fonts[i] = fonts[i].replace('Arial Unicode MS', 'Arial');\n        const font = fonts[i];\n        const cssFont = mb2css(font, 1);\n        registerFont(cssFont);\n        const parts = cssFont.split(' ');\n        fontDescriptions.push([\n            parts.slice(3).join(' ').replace(/\"/g, ''),\n            parts[1],\n            parts[0]\n        ]);\n    }\n    for (let i = 0, ii = fontDescriptions.length; i < ii; ++i) {\n        const fontDescription = fontDescriptions[i];\n        const family = fontDescription[0];\n        if (!hasFontFamily(family)) {\n            if (checkedFonts.get(`${ fontDescription[2] }\\n${ fontDescription[1] } \\n${ family }`) !== 100) {\n                const fontUrl = templateUrl.replace('{font-family}', family.replace(/ /g, '-').toLowerCase()).replace('{Font+Family}', family.replace(/ /g, '+')).replace('{fontweight}', fontDescription[1]).replace('{-fontstyle}', fontDescription[2].replace('normal', '').replace(/(.+)/, '-$1')).replace('{fontstyle}', fontDescription[2]);\n                if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n                    const markup = document.createElement('link');\n                    markup.href = fontUrl;\n                    markup.rel = 'stylesheet';\n                    document.head.appendChild(markup);\n                }\n            }\n        }\n    }\n    processedFontFamilies[fontsKey] = fonts;\n    return fonts;\n}\n\n/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n */\nconst types = {\n    'Point': 1,\n    'MultiPoint': 1,\n    'LineString': 2,\n    'MultiLineString': 2,\n    'Polygon': 3,\n    'MultiPolygon': 3\n};\nconst anchor = {\n    'center': [\n        0.5,\n        0.5\n    ],\n    'left': [\n        0,\n        0.5\n    ],\n    'right': [\n        1,\n        0.5\n    ],\n    'top': [\n        0.5,\n        0\n    ],\n    'bottom': [\n        0.5,\n        1\n    ],\n    'top-left': [\n        0,\n        0\n    ],\n    'top-right': [\n        1,\n        0\n    ],\n    'bottom-left': [\n        0,\n        1\n    ],\n    'bottom-right': [\n        1,\n        1\n    ]\n};\nconst expressionData = function (rawExpression, propertySpec) {\n    const compiledExpression = createPropertyExpression(rawExpression, propertySpec);\n    if (compiledExpression.result === 'error') {\n        throw new Error(compiledExpression.value.map(err => `${ err.key }: ${ err.message }`).join(', '));\n    }\n    return compiledExpression.value;\n};\nconst emptyObj$1 = {};\nconst zoomObj = { zoom: 0 };\nlet renderFeatureCoordinates, renderFeature;\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nfunction getValue(layer, layoutOrPaint, property, zoom, feature, functionCache, featureState) {\n    const layerId = layer.id;\n    if (!functionCache) {\n        functionCache = {};\n        console.warn('No functionCache provided to getValue()');    //eslint-disable-line no-console\n    }\n    if (!functionCache[layerId]) {\n        functionCache[layerId] = {};\n    }\n    const functions = functionCache[layerId];\n    if (!functions[property]) {\n        let value = (layer[layoutOrPaint] || emptyObj$1)[property];\n        const propertySpec = spec[`${ layoutOrPaint }_${ layer.type }`][property];\n        if (value === undefined) {\n            value = propertySpec.default;\n        }\n        let isExpr = isExpression(value);\n        if (!isExpr && isFunction(value)) {\n            value = convertFunction(value, propertySpec);\n            isExpr = true;\n        }\n        if (isExpr) {\n            const compiledExpression = expressionData(value, propertySpec);\n            functions[property] = compiledExpression.evaluate.bind(compiledExpression);\n        } else {\n            if (propertySpec.type == 'color') {\n                value = Color$1.parse(value);\n            }\n            functions[property] = function () {\n                return value;\n            };\n        }\n    }\n    zoomObj.zoom = zoom;\n    return functions[property](zoomObj, feature, featureState);\n}\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getIconDeclutterMode(layer, zoom, feature, functionCache) {\n    const allowOverlap = getValue(layer, 'layout', 'icon-allow-overlap', zoom, feature, functionCache);\n    if (!allowOverlap) {\n        return 'declutter';\n    }\n    const ignorePlacement = getValue(layer, 'layout', 'icon-ignore-placement', zoom, feature, functionCache);\n    if (!ignorePlacement) {\n        return 'obstacle';\n    }\n    return 'none';\n}\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {number} zoom Zoom.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, zoom, filterCache) {\n    if (!filterCache) {\n        console.warn('No filterCache provided to evaluateFilter()');    //eslint-disable-line no-console\n    }\n    if (!(layerId in filterCache)) {\n        filterCache[layerId] = createFilter(filter).filter;\n    }\n    zoomObj.zoom = zoom;\n    return filterCache[layerId](zoomObj, feature);\n}\nlet renderTransparentEnabled = false;\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nfunction renderTransparent(enabled) {\n    if (enabled !== renderTransparentEnabled) {\n        clearFunctionCache();\n        renderTransparentEnabled = enabled;\n    }\n}\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n    if (color) {\n        if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n            return undefined;\n        }\n        const a = color.a;\n        opacity = opacity === undefined ? 1 : opacity;\n        return a === 0 ? 'transparent' : 'rgba(' + Math.round(color.r * 255 / a) + ',' + Math.round(color.g * 255 / a) + ',' + Math.round(color.b * 255 / a) + ',' + a * opacity + ')';\n    }\n    return color;\n}\nconst templateRegEx = /\\{[^{}}]*\\}/g;\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n    return text.replace(templateRegEx, function (match) {\n        return properties[match.slice(1, -1)] || '';\n    });\n}\nlet recordLayer = false;\n/**\n * Turns recording of the Mapbox Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nfunction recordStyleLayer(record = false) {\n    recordLayer = record;\n}\nconst styleFunctionArgs = {};\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox Style object.\n * @param {string} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox Style object.\n * @param {function(Array<string>, string=):Array<string>} getFonts Function that\n * receives a font stack and the url template from the GL style's `metadata['ol:webfonts']`\n * property (if set) as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nfunction stylefunction(olLayer, glStyle, sourceOrLayers, resolutions = defaultResolutions, spriteData = undefined, spriteImageUrl = undefined, getFonts = undefined, getImage = undefined) {\n    if (typeof glStyle == 'string') {\n        glStyle = JSON.parse(glStyle);\n    }\n    if (glStyle.version != 8) {\n        throw new Error('glStyle version 8 required.');\n    }\n    styleFunctionArgs[getStyleFunctionKey(glStyle, olLayer)] = Array.from(arguments);\n    let spriteImage, spriteImageSize;\n    let spriteImageUnSDFed;\n    if (spriteImageUrl) {\n        if (typeof Image !== 'undefined') {\n            const img = new Image();\n            img.crossOrigin = 'anonymous';\n            img.onload = function () {\n                spriteImage = img;\n                spriteImageSize = [\n                    img.width,\n                    img.height\n                ];\n                olLayer.changed();\n                img.onload = null;\n            };\n            img.src = spriteImageUrl;\n        } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            //eslint-disable-line\n            const worker = self;\n            // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n            worker.postMessage({\n                action: 'loadImage',\n                src: spriteImageUrl\n            });\n            worker.addEventListener('message', function handler(event) {\n                if (event.data.action === 'imageLoaded' && event.data.src === spriteImageUrl) {\n                    spriteImage = event.data.image;\n                    spriteImageSize = [\n                        spriteImage.width,\n                        spriteImage.height\n                    ];\n                }\n            });\n        }\n    }\n    const allLayers = derefLayers(glStyle.layers);\n    const layersBySourceLayer = {};\n    const mapboxLayers = [];\n    const iconImageCache = {};\n    const patternCache = {};\n    const functionCache = getFunctionCache(glStyle);\n    const filterCache = getFilterCache(glStyle);\n    let mapboxSource;\n    for (let i = 0, ii = allLayers.length; i < ii; ++i) {\n        const layer = allLayers[i];\n        const layerId = layer.id;\n        if (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers || sourceOrLayers.indexOf(layerId) !== -1) {\n            const sourceLayer = layer['source-layer'];\n            if (!mapboxSource) {\n                mapboxSource = layer.source;\n                const source = glStyle.sources[mapboxSource];\n                if (!source) {\n                    throw new Error(`Source \"${ mapboxSource }\" is not defined`);\n                }\n                const type = source.type;\n                if (type !== 'vector' && type !== 'geojson') {\n                    throw new Error(`Source \"${ mapboxSource }\" is not of type \"vector\" or \"geojson\", but \"${ type }\"`);\n                }\n            } else if (layer.source !== mapboxSource) {\n                throw new Error(`Layer \"${ layerId }\" does not use source \"${ mapboxSource }`);\n            }\n            let layers = layersBySourceLayer[sourceLayer];\n            if (!layers) {\n                layers = [];\n                layersBySourceLayer[sourceLayer] = layers;\n            }\n            layers.push({\n                layer: layer,\n                index: i\n            });\n            mapboxLayers.push(layerId);\n        }\n    }\n    const textHalo = new Stroke();\n    const textColor = new Fill();\n    const styles = [];\n    /**\n   * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {string} [onlyLayer] Calculate style for this layer only.\n   * @return {Array<import(\"ol/style/Style\").default>} Style.\n   */\n    const styleFunction = function (feature, resolution, onlyLayer) {\n        const properties = feature.getProperties();\n        const layers = layersBySourceLayer[properties.layer];\n        if (!layers) {\n            return undefined;\n        }\n        let zoom = resolutions.indexOf(resolution);\n        if (zoom == -1) {\n            zoom = getZoomForResolution(resolution, resolutions);\n        }\n        const type = types[feature.getGeometry().getType()];\n        const f = {\n            id: feature.getId(),\n            properties: properties,\n            type: type\n        };\n        const featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n        let stylesLength = -1;\n        let featureBelongsToLayer;\n        for (let i = 0, ii = layers.length; i < ii; ++i) {\n            const layerData = layers[i];\n            const layer = layerData.layer;\n            const layerId = layer.id;\n            if (onlyLayer !== undefined && onlyLayer !== layerId) {\n                continue;\n            }\n            const layout = layer.layout || emptyObj$1;\n            const paint = layer.paint || emptyObj$1;\n            if (layout.visibility === 'none' || 'minzoom' in layer && zoom < layer.minzoom || 'maxzoom' in layer && zoom >= layer.maxzoom) {\n                continue;\n            }\n            const filter = layer.filter;\n            if (!filter || evaluateFilter(layerId, filter, f, zoom, filterCache)) {\n                featureBelongsToLayer = layer;\n                let color, opacity, fill, stroke, strokeColor, style;\n                const index = layerData.index;\n                if (type == 3 && (layer.type == 'fill' || layer.type == 'fill-extrusion')) {\n                    opacity = getValue(layer, 'paint', layer.type + '-opacity', zoom, f, functionCache, featureState);\n                    if (layer.type + '-pattern' in paint) {\n                        const fillIcon = getValue(layer, 'paint', layer.type + '-pattern', zoom, f, functionCache, featureState);\n                        if (fillIcon) {\n                            const icon = typeof fillIcon === 'string' ? fromTemplate(fillIcon, properties) : fillIcon.toString();\n                            if (spriteImage && spriteData && spriteData[icon]) {\n                                ++stylesLength;\n                                style = styles[stylesLength];\n                                if (!style || !style.getFill() || style.getStroke() || style.getText()) {\n                                    style = new Style({ fill: new Fill() });\n                                    styles[stylesLength] = style;\n                                }\n                                fill = style.getFill();\n                                style.setZIndex(index);\n                                const icon_cache_key = icon + '.' + opacity;\n                                let pattern = patternCache[icon_cache_key];\n                                if (!pattern) {\n                                    const spriteImageData = spriteData[icon];\n                                    const canvas = createCanvas(spriteImageData.width, spriteImageData.height);\n                                    const ctx = canvas.getContext('2d');\n                                    ctx.globalAlpha = opacity;\n                                    ctx.drawImage(spriteImage, spriteImageData.x, spriteImageData.y, spriteImageData.width, spriteImageData.height, 0, 0, spriteImageData.width, spriteImageData.height);\n                                    pattern = ctx.createPattern(canvas, 'repeat');\n                                    patternCache[icon_cache_key] = pattern;\n                                }\n                                fill.setColor(pattern);\n                            }\n                        }\n                    } else {\n                        color = colorWithOpacity(getValue(layer, 'paint', layer.type + '-color', zoom, f, functionCache, featureState), opacity);\n                        if (layer.type + '-outline-color' in paint) {\n                            strokeColor = colorWithOpacity(getValue(layer, 'paint', layer.type + '-outline-color', zoom, f, functionCache, featureState), opacity);\n                        }\n                        if (!strokeColor) {\n                            strokeColor = color;\n                        }\n                        if (color || strokeColor) {\n                            ++stylesLength;\n                            style = styles[stylesLength];\n                            if (!style || color && !style.getFill() || !color && style.getFill() || strokeColor && !style.getStroke() || !strokeColor && style.getStroke() || style.getText()) {\n                                style = new Style({\n                                    fill: color ? new Fill() : undefined,\n                                    stroke: strokeColor ? new Stroke() : undefined\n                                });\n                                styles[stylesLength] = style;\n                            }\n                            if (color) {\n                                fill = style.getFill();\n                                fill.setColor(color);\n                            }\n                            if (strokeColor) {\n                                stroke = style.getStroke();\n                                stroke.setColor(strokeColor);\n                                stroke.setWidth(0.5);\n                            }\n                            style.setZIndex(index);\n                        }\n                    }\n                }\n                if (type != 1 && layer.type == 'line') {\n                    color = !('line-pattern' in paint) && 'line-color' in paint ? colorWithOpacity(getValue(layer, 'paint', 'line-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'line-opacity', zoom, f, functionCache, featureState)) : undefined;\n                    const width = getValue(layer, 'paint', 'line-width', zoom, f, functionCache, featureState);\n                    if (color && width > 0) {\n                        ++stylesLength;\n                        style = styles[stylesLength];\n                        if (!style || !style.getStroke() || style.getFill() || style.getText()) {\n                            style = new Style({ stroke: new Stroke() });\n                            styles[stylesLength] = style;\n                        }\n                        stroke = style.getStroke();\n                        stroke.setLineCap(getValue(layer, 'layout', 'line-cap', zoom, f, functionCache, featureState));\n                        stroke.setLineJoin(getValue(layer, 'layout', 'line-join', zoom, f, functionCache, featureState));\n                        stroke.setMiterLimit(getValue(layer, 'layout', 'line-miter-limit', zoom, f, functionCache, featureState));\n                        stroke.setColor(color);\n                        stroke.setWidth(width);\n                        stroke.setLineDash(paint['line-dasharray'] ? getValue(layer, 'paint', 'line-dasharray', zoom, f, functionCache, featureState).map(function (x) {\n                            return x * width;\n                        }) : null);\n                        style.setZIndex(index);\n                    }\n                }\n                let hasImage = false;\n                let text = null;\n                let placementAngle = 0;\n                let icon, iconImg, skipLabel;\n                if ((type == 1 || type == 2) && 'icon-image' in layout) {\n                    const iconImage = getValue(layer, 'layout', 'icon-image', zoom, f, functionCache, featureState);\n                    if (iconImage) {\n                        icon = typeof iconImage === 'string' ? fromTemplate(iconImage, properties) : iconImage.toString();\n                        let styleGeom = undefined;\n                        const imageElement = getImage ? getImage(olLayer, icon) : undefined;\n                        if (spriteImage && spriteData && spriteData[icon] || imageElement) {\n                            const iconRotationAlignment = getValue(layer, 'layout', 'icon-rotation-alignment', zoom, f, functionCache, featureState);\n                            if (type == 2) {\n                                const geom = feature.getGeometry();\n                                // ol package and ol-debug.js only\n                                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                                    const extent = geom.getExtent();\n                                    const size = Math.sqrt(Math.max(Math.pow((extent[2] - extent[0]) / resolution, 2), Math.pow((extent[3] - extent[1]) / resolution, 2)));\n                                    if (size > 150) {\n                                        //FIXME Do not hard-code a size of 150\n                                        const midpoint = geom.getType() === 'MultiLineString' ? geom.getFlatMidpoints() : geom.getFlatMidpoint();\n                                        if (!renderFeature) {\n                                            renderFeatureCoordinates = [\n                                                NaN,\n                                                NaN\n                                            ];\n                                            renderFeature = new RenderFeature('Point', renderFeatureCoordinates, [], {}, null);\n                                        }\n                                        styleGeom = renderFeature;\n                                        renderFeatureCoordinates[0] = midpoint[0];\n                                        renderFeatureCoordinates[1] = midpoint[1];\n                                        const placement = getValue(layer, 'layout', 'symbol-placement', zoom, f, functionCache, featureState);\n                                        if (placement === 'line' && iconRotationAlignment === 'map') {\n                                            const stride = geom.getStride();\n                                            const coordinates = geom.getFlatCoordinates();\n                                            for (let i = 0, ii = coordinates.length - stride; i < ii; i += stride) {\n                                                const x1 = coordinates[i];\n                                                const y1 = coordinates[i + 1];\n                                                const x2 = coordinates[i + stride];\n                                                const y2 = coordinates[i + stride + 1];\n                                                const minX = Math.min(x1, x2);\n                                                const minY = Math.min(y1, y2);\n                                                const maxX = Math.max(x1, x2);\n                                                const maxY = Math.max(y1, y2);\n                                                if (midpoint[0] >= minX && midpoint[0] <= maxX && midpoint[1] >= minY && midpoint[1] <= maxY) {\n                                                    placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                                                    break;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            if (type !== 2 || styleGeom) {\n                                const iconSize = getValue(layer, 'layout', 'icon-size', zoom, f, functionCache, featureState);\n                                const iconColor = paint['icon-color'] !== undefined ? getValue(layer, 'paint', 'icon-color', zoom, f, functionCache, featureState) : null;\n                                if (!iconColor || iconColor.a !== 0) {\n                                    const haloColor = getValue(layer, 'paint', 'icon-halo-color', zoom, f, functionCache, featureState);\n                                    const haloWidth = getValue(layer, 'paint', 'icon-halo-width', zoom, f, functionCache, featureState);\n                                    let iconCacheKey = `${ icon }.${ iconSize }.${ haloWidth }.${ haloColor }`;\n                                    if (iconColor !== null) {\n                                        iconCacheKey += `.${ iconColor }`;\n                                    }\n                                    iconImg = iconImageCache[iconCacheKey];\n                                    if (!iconImg) {\n                                        const declutterMode = getIconDeclutterMode(layer, zoom, f, functionCache);\n                                        let displacement;\n                                        if ('icon-offset' in layout) {\n                                            displacement = getValue(layer, 'layout', 'icon-offset', zoom, f, functionCache, featureState).slice(0);\n                                            displacement[1] *= -1;\n                                        }\n                                        let color = iconColor ? [\n                                            iconColor.r * 255,\n                                            iconColor.g * 255,\n                                            iconColor.b * 255,\n                                            iconColor.a\n                                        ] : undefined;\n                                        if (imageElement) {\n                                            const iconOptions = {\n                                                color: color,\n                                                rotateWithView: iconRotationAlignment === 'map',\n                                                displacement: displacement,\n                                                declutterMode: declutterMode\n                                            };\n                                            if (typeof imageElement === 'string') {\n                                                // it is a src URL\n                                                iconOptions.src = imageElement;\n                                            } else {\n                                                iconOptions.img = imageElement;\n                                                iconOptions.imgSize = [\n                                                    imageElement.width,\n                                                    imageElement.height\n                                                ];\n                                            }\n                                            iconImg = new Icon(iconOptions);\n                                        } else {\n                                            const spriteImageData = spriteData[icon];\n                                            let img, imgSize, size, offset;\n                                            if (haloWidth) {\n                                                if (spriteImageData.sdf) {\n                                                    img = drawIconHalo(drawSDF(spriteImage, spriteImageData, iconColor), {\n                                                        x: 0,\n                                                        y: 0,\n                                                        width: spriteImageData.width,\n                                                        height: spriteImageData.height,\n                                                        pixelRatio: spriteImageData.pixelRatio\n                                                    }, haloWidth, haloColor);\n                                                    color = undefined;    // do not tint haloed icons\n                                                } else {\n                                                    img = drawIconHalo(spriteImage, spriteImageData, haloWidth, haloColor);\n                                                }\n                                                imgSize = [\n                                                    img.width,\n                                                    img.height\n                                                ];\n                                            } else {\n                                                if (spriteImageData.sdf) {\n                                                    if (!spriteImageUnSDFed) {\n                                                        spriteImageUnSDFed = drawSDF(spriteImage, {\n                                                            x: 0,\n                                                            y: 0,\n                                                            width: spriteImageSize[0],\n                                                            height: spriteImageSize[1]\n                                                        }, {\n                                                            r: 1,\n                                                            g: 1,\n                                                            b: 1,\n                                                            a: 1\n                                                        });\n                                                    }\n                                                    img = spriteImageUnSDFed;\n                                                } else {\n                                                    img = spriteImage;\n                                                }\n                                                imgSize = spriteImageSize;\n                                                size = [\n                                                    spriteImageData.width,\n                                                    spriteImageData.height\n                                                ];\n                                                offset = [\n                                                    spriteImageData.x,\n                                                    spriteImageData.y\n                                                ];\n                                            }\n                                            iconImg = new Icon({\n                                                color: color,\n                                                img: img,\n                                                imgSize: imgSize,\n                                                size: size,\n                                                offset: offset,\n                                                rotateWithView: iconRotationAlignment === 'map',\n                                                scale: iconSize / spriteImageData.pixelRatio,\n                                                displacement: displacement,\n                                                declutterMode: declutterMode\n                                            });\n                                        }\n                                        iconImageCache[iconCacheKey] = iconImg;\n                                    }\n                                }\n                                if (iconImg) {\n                                    ++stylesLength;\n                                    style = styles[stylesLength];\n                                    if (!style || !style.getImage() || style.getFill() || style.getStroke()) {\n                                        style = new Style();\n                                        styles[stylesLength] = style;\n                                    }\n                                    style.setGeometry(styleGeom);\n                                    iconImg.setRotation(placementAngle + deg2rad(getValue(layer, 'layout', 'icon-rotate', zoom, f, functionCache, featureState)));\n                                    iconImg.setOpacity(getValue(layer, 'paint', 'icon-opacity', zoom, f, functionCache, featureState));\n                                    iconImg.setAnchor(anchor[getValue(layer, 'layout', 'icon-anchor', zoom, f, functionCache, featureState)]);\n                                    style.setImage(iconImg);\n                                    text = style.getText();\n                                    style.setText(undefined);\n                                    style.setZIndex(index);\n                                    hasImage = true;\n                                    skipLabel = false;\n                                }\n                            } else {\n                                skipLabel = true;\n                            }\n                        }\n                    }\n                }\n                if (type == 1 && layer.type === 'circle') {\n                    ++stylesLength;\n                    style = styles[stylesLength];\n                    if (!style || !style.getImage() || style.getFill() || style.getStroke()) {\n                        style = new Style();\n                        styles[stylesLength] = style;\n                    }\n                    const circleRadius = 'circle-radius' in paint ? getValue(layer, 'paint', 'circle-radius', zoom, f, functionCache, featureState) : 5;\n                    const circleStrokeColor = colorWithOpacity(getValue(layer, 'paint', 'circle-stroke-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'circle-stroke-opacity', zoom, f, functionCache, featureState));\n                    const circleColor = colorWithOpacity(getValue(layer, 'paint', 'circle-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'circle-opacity', zoom, f, functionCache, featureState));\n                    const circleStrokeWidth = getValue(layer, 'paint', 'circle-stroke-width', zoom, f, functionCache, featureState);\n                    const cache_key = circleRadius + '.' + circleStrokeColor + '.' + circleColor + '.' + circleStrokeWidth;\n                    iconImg = iconImageCache[cache_key];\n                    if (!iconImg) {\n                        iconImg = new Circle({\n                            radius: circleRadius,\n                            stroke: circleStrokeColor && circleStrokeWidth > 0 ? new Stroke({\n                                width: circleStrokeWidth,\n                                color: circleStrokeColor\n                            }) : undefined,\n                            fill: circleColor ? new Fill({ color: circleColor }) : undefined,\n                            declutterMode: 'none'\n                        });\n                        iconImageCache[cache_key] = iconImg;\n                    }\n                    style.setImage(iconImg);\n                    text = style.getText();\n                    style.setText(undefined);\n                    style.setGeometry(undefined);\n                    style.setZIndex(index);\n                    hasImage = true;\n                }\n                let label, font, textLineHeight, textSize, letterSpacing, maxTextWidth;\n                if ('text-field' in layout) {\n                    textSize = Math.round(getValue(layer, 'layout', 'text-size', zoom, f, functionCache, featureState));\n                    const fontArray = getValue(layer, 'layout', 'text-font', zoom, f, functionCache, featureState);\n                    textLineHeight = getValue(layer, 'layout', 'text-line-height', zoom, f, functionCache, featureState);\n                    font = mb2css(getFonts ? getFonts(fontArray, glStyle.metadata ? glStyle.metadata['ol:webfonts'] : undefined) : fontArray, textSize, textLineHeight);\n                    if (!font.includes('sans-serif')) {\n                        font += ',sans-serif';\n                    }\n                    letterSpacing = getValue(layer, 'layout', 'text-letter-spacing', zoom, f, functionCache, featureState);\n                    maxTextWidth = getValue(layer, 'layout', 'text-max-width', zoom, f, functionCache, featureState);\n                    const textField = getValue(layer, 'layout', 'text-field', zoom, f, functionCache, featureState);\n                    if (typeof textField === 'object' && textField.sections) {\n                        if (textField.sections.length === 1) {\n                            label = textField.toString();\n                        } else {\n                            label = textField.sections.reduce((acc, chunk, i) => {\n                                const fonts = chunk.fontStack ? chunk.fontStack.split(',') : fontArray;\n                                const chunkFont = mb2css(getFonts ? getFonts(fonts) : fonts, textSize * (chunk.scale || 1), textLineHeight);\n                                let text = chunk.text;\n                                if (text === '\\n') {\n                                    acc.push('\\n', '');\n                                    return acc;\n                                }\n                                if (type == 2) {\n                                    acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                                    return;\n                                }\n                                text = wrapText(text, chunkFont, maxTextWidth, letterSpacing).split('\\n');\n                                for (let i = 0, ii = text.length; i < ii; ++i) {\n                                    if (i > 0) {\n                                        acc.push('\\n', '');\n                                    }\n                                    acc.push(text[i], chunkFont);\n                                }\n                                return acc;\n                            }, []);\n                        }\n                    } else {\n                        label = fromTemplate(textField, properties).trim();\n                    }\n                    opacity = getValue(layer, 'paint', 'text-opacity', zoom, f, functionCache, featureState);\n                }\n                if (label && opacity && !skipLabel) {\n                    if (!hasImage) {\n                        ++stylesLength;\n                        style = styles[stylesLength];\n                        if (!style || !style.getText() || style.getFill() || style.getStroke()) {\n                            style = new Style();\n                            styles[stylesLength] = style;\n                        }\n                        style.setImage(undefined);\n                        style.setGeometry(undefined);\n                    }\n                    if (!style.getText()) {\n                        style.setText(text || new Text({\n                            padding: [\n                                2,\n                                2,\n                                2,\n                                2\n                            ]\n                        }));\n                    }\n                    text = style.getText();\n                    const textTransform = layout['text-transform'];\n                    if (textTransform == 'uppercase') {\n                        label = Array.isArray(label) ? label.map((t, i) => i % 2 ? t : t.toUpperCase()) : label.toUpperCase();\n                    } else if (textTransform == 'lowercase') {\n                        label = Array.isArray(label) ? label.map((t, i) => i % 2 ? t : t.toLowerCase()) : label.toLowerCase();\n                    }\n                    const wrappedLabel = Array.isArray(label) ? label : type == 2 ? applyLetterSpacing(label, letterSpacing) : wrapText(label, font, maxTextWidth, letterSpacing);\n                    text.setText(wrappedLabel);\n                    text.setFont(font);\n                    text.setRotation(deg2rad(getValue(layer, 'layout', 'text-rotate', zoom, f, functionCache, featureState)));\n                    const textAnchor = getValue(layer, 'layout', 'text-anchor', zoom, f, functionCache, featureState);\n                    const placement = hasImage || type == 1 ? 'point' : getValue(layer, 'layout', 'symbol-placement', zoom, f, functionCache, featureState);\n                    let textAlign;\n                    if (placement === 'line-center') {\n                        text.setPlacement('line');\n                        textAlign = 'center';\n                    } else {\n                        text.setPlacement(placement);\n                    }\n                    if (placement === 'line' && typeof text.setRepeat === 'function') {\n                        const symbolSpacing = getValue(layer, 'layout', 'symbol-spacing', zoom, f, functionCache, featureState);\n                        text.setRepeat(symbolSpacing * 2);\n                    }\n                    text.setOverflow(placement === 'point');\n                    let textHaloWidth = getValue(layer, 'paint', 'text-halo-width', zoom, f, functionCache, featureState);\n                    const textOffset = getValue(layer, 'layout', 'text-offset', zoom, f, functionCache, featureState);\n                    const textTranslate = getValue(layer, 'paint', 'text-translate', zoom, f, functionCache, featureState);\n                    // Text offset has to take halo width and line height into account\n                    let vOffset = 0;\n                    let hOffset = 0;\n                    if (placement == 'point') {\n                        textAlign = 'center';\n                        if (textAnchor.indexOf('left') !== -1) {\n                            textAlign = 'left';\n                            hOffset = textHaloWidth;\n                        } else if (textAnchor.indexOf('right') !== -1) {\n                            textAlign = 'right';\n                            hOffset = -textHaloWidth;\n                        }\n                        const textRotationAlignment = getValue(layer, 'layout', 'text-rotation-alignment', zoom, f, functionCache, featureState);\n                        text.setRotateWithView(textRotationAlignment == 'map');\n                    } else {\n                        text.setMaxAngle(deg2rad(getValue(layer, 'layout', 'text-max-angle', zoom, f, functionCache, featureState)) * label.length / wrappedLabel.length);\n                        text.setRotateWithView(false);\n                    }\n                    text.setTextAlign(textAlign);\n                    let textBaseline = 'middle';\n                    if (textAnchor.indexOf('bottom') == 0) {\n                        textBaseline = 'bottom';\n                        vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n                    } else if (textAnchor.indexOf('top') == 0) {\n                        textBaseline = 'top';\n                        vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n                    }\n                    text.setTextBaseline(textBaseline);\n                    const textJustify = getValue(layer, 'layout', 'text-justify', zoom, f, functionCache, featureState);\n                    text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n                    text.setOffsetX(textOffset[0] * textSize + hOffset + textTranslate[0]);\n                    text.setOffsetY(textOffset[1] * textSize + vOffset + textTranslate[1]);\n                    textColor.setColor(colorWithOpacity(getValue(layer, 'paint', 'text-color', zoom, f, functionCache, featureState), opacity));\n                    text.setFill(textColor);\n                    const haloColor = colorWithOpacity(getValue(layer, 'paint', 'text-halo-color', zoom, f, functionCache, featureState), opacity);\n                    if (haloColor) {\n                        textHalo.setColor(haloColor);\n                        // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n                        // Halo width must be doubled because it is applied around the center of the text outline\n                        textHaloWidth *= 2;\n                        // 1/4 of text size (spec) x 2\n                        const halfTextSize = 0.5 * textSize;\n                        textHalo.setWidth(textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize);\n                        text.setStroke(textHalo);\n                    } else {\n                        text.setStroke(undefined);\n                    }\n                    const textPadding = getValue(layer, 'layout', 'text-padding', zoom, f, functionCache, featureState);\n                    const padding = text.getPadding();\n                    if (textPadding !== padding[0]) {\n                        padding[0] = textPadding;\n                        padding[1] = textPadding;\n                        padding[2] = textPadding;\n                        padding[3] = textPadding;\n                    }\n                    style.setZIndex(index);\n                }\n            }\n        }\n        if (stylesLength > -1) {\n            styles.length = stylesLength + 1;\n            if (recordLayer) {\n                if ('set' in feature) {\n                    // ol/Feature\n                    feature.set('mapbox-layer', featureBelongsToLayer);\n                } else {\n                    // ol/render/Feature\n                    feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n                }\n            }\n            return styles;\n        }\n        return undefined;\n    };\n    olLayer.setStyle(styleFunction);\n    olLayer.set('mapbox-source', mapboxSource);\n    olLayer.set('mapbox-layers', mapboxLayers);\n    olLayer.set('mapbox-featurestate', olLayer.get('mapbox-featurestate') || {});\n    return styleFunction;\n}\n/**\n * Get the the style for a specific Mapbox layer only. This can be useful for creating a legend.\n * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature OpenLayers feature.\n * @param {number} resolution View resolution.\n * @param {import(\"ol/layer\").Vector|import(\"ol/layer\").VectorTile} olLayer OpenLayers layer.\n * @param {string} layerId Id of the Mapbox layer to get the style for\n * @return {Array<import(\"ol/style\").Style>} Styles for the provided Mapbox layer.\n */\nfunction getStyleForLayer(feature, resolution, olLayer, layerId) {\n    const evaluateStyle = olLayer.getStyleFunction();\n    if (evaluateStyle.length === 3) {\n        // @ts-ignore\n        return evaluateStyle(feature, resolution, layerId);\n    }\n    return undefined;\n}\n\n/**\n * Generates a shaded relief image given elevation data.  Uses a 3x3\n * neighborhood for determining slope and aspect.\n * @param {Array<ImageData>} inputs Array of input images.\n * @param {Object} data Data added in the \"beforeoperations\" event.\n * @return {ImageData} Output image.\n */\nfunction hillshade(inputs, data) {\n    const elevationImage = inputs[0];\n    const width = elevationImage.width;\n    const height = elevationImage.height;\n    const elevationData = elevationImage.data;\n    const shadeData = new Uint8ClampedArray(elevationData.length);\n    const dp = data.resolution * 2;\n    const maxX = width - 1;\n    const maxY = height - 1;\n    const pixel = [\n        0,\n        0,\n        0,\n        0\n    ];\n    const twoPi = 2 * Math.PI;\n    const halfPi = Math.PI / 2;\n    const sunEl = Math.PI * data.sunEl / 180;\n    const sunAz = Math.PI * data.sunAz / 180;\n    const cosSunEl = Math.cos(sunEl);\n    const sinSunEl = Math.sin(sunEl);\n    const highlightColor = data.highlightColor;\n    const shadowColor = data.shadowColor;\n    const accentColor = data.accentColor;\n    const encoding = data.encoding;\n    let pixelX, pixelY, x0, x1, y0, y1, offset, z0, z1, dzdx, dzdy, slope, aspect, accent, scaled, shade, scaledAccentColor, compositeShadeColor, clamp, slopeScaleBase, scaledSlope, cosIncidence;\n    function calculateElevation(pixel, encoding = 'mapbox') {\n        // The method used to extract elevations from the DEM.\n        //\n        // The supported methods are the Mapbox format\n        // (red * 256 * 256 + green * 256 + blue) * 0.1 - 10000\n        // and the Terrarium format\n        // (red * 256 + green + blue / 256) - 32768\n        //\n        if (encoding === 'mapbox') {\n            return (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1 - 10000;\n        }\n        if (encoding === 'terrarium') {\n            return pixel[0] * 256 + pixel[1] + pixel[2] / 256 - 32768;\n        }\n    }\n    for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n        y0 = pixelY === 0 ? 0 : pixelY - 1;\n        y1 = pixelY === maxY ? maxY : pixelY + 1;\n        for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n            x0 = pixelX === 0 ? 0 : pixelX - 1;\n            x1 = pixelX === maxX ? maxX : pixelX + 1;\n            // determine elevation for (x0, pixelY)\n            offset = (pixelY * width + x0) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z0 = data.vert * calculateElevation(pixel, encoding);\n            // determine elevation for (x1, pixelY)\n            offset = (pixelY * width + x1) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z1 = data.vert * calculateElevation(pixel, encoding);\n            dzdx = (z1 - z0) / dp;\n            // determine elevation for (pixelX, y0)\n            offset = (y0 * width + pixelX) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z0 = data.vert * calculateElevation(pixel, encoding);\n            // determine elevation for (pixelX, y1)\n            offset = (y1 * width + pixelX) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z1 = data.vert * calculateElevation(pixel, encoding);\n            dzdy = (z1 - z0) / dp;\n            aspect = Math.atan2(dzdy, -dzdx);\n            if (aspect < 0) {\n                aspect = halfPi - aspect;\n            } else if (aspect > halfPi) {\n                aspect = twoPi - aspect + halfPi;\n            } else {\n                aspect = halfPi - aspect;\n            }\n            // Bootstrap slope and corresponding incident values\n            slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n            cosIncidence = sinSunEl * Math.cos(slope) + cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n            accent = Math.cos(slope);\n            // 255 for Hex colors\n            scaled = 255 * cosIncidence;\n            /*\n       * The following is heavily inspired\n       * by [Maplibre's equivalent WebGL shader](https://github.com/maplibre/maplibre-gl-js/blob/main/src/shaders/hillshade.fragment.glsl)\n       */\n            // Forces given value to stay between two given extremes\n            clamp = Math.min(Math.max(2 * data.sunEl, 0), 1);\n            // Intensity basis for hillshade opacity\n            slopeScaleBase = 1.875 - data.opacity * 1.75;\n            // Intensity interpolation so that higher intensity values create more opaque hillshading\n            scaledSlope = data.opacity !== 0.5 ? halfPi * ((Math.pow(slopeScaleBase, slope) - 1) / (Math.pow(slopeScaleBase, halfPi) - 1)) : slope;\n            // Accent hillshade color with given accentColor to emphasize rougher terrain\n            scaledAccentColor = {\n                r: (1 - accent) * accentColor.r * clamp * 255,\n                g: (1 - accent) * accentColor.g * clamp * 255,\n                b: (1 - accent) * accentColor.b * clamp * 255,\n                a: (1 - accent) * accentColor.a * clamp * 255\n            };\n            // Allows highlight vs shadow discrimination\n            shade = Math.abs(((aspect + sunAz) / Math.PI + 0.5) % 2 - 1);\n            // Creates a composite color mix between highlight & shadow colors to emphasize slopes\n            compositeShadeColor = {\n                r: (highlightColor.r * (1 - shade) + shadowColor.r * shade) * scaled,\n                g: (highlightColor.g * (1 - shade) + shadowColor.g * shade) * scaled,\n                b: (highlightColor.b * (1 - shade) + shadowColor.b * shade) * scaled,\n                a: (highlightColor.a * (1 - shade) + shadowColor.a * shade) * scaled\n            };\n            // Fill in result color value\n            offset = (pixelY * width + pixelX) * 4;\n            shadeData[offset] = scaledAccentColor.r * (1 - shade) + compositeShadeColor.r;\n            shadeData[offset + 1] = scaledAccentColor.g * (1 - shade) + compositeShadeColor.g;\n            shadeData[offset + 2] = scaledAccentColor.b * (1 - shade) + compositeShadeColor.b;\n            // Key opacity on the scaledSlope to improve legibility by increasing higher elevation rates' contrast\n            shadeData[offset + 3] = elevationData[offset + 3] * data.opacity * clamp * Math.sin(scaledSlope);\n        }\n    }\n    return new ImageData(shadeData, width, height);\n}\n\n/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n/**\n * @typedef {Object} FeatureIdentifier\n * @property {string|number} id The feature id.\n * @property {string} source The source id.\n */\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken] Access token for 'mapbox://' urls.\n * @property {function(string, ResourceType): (Request|void)} [transformRequest]\n * Function for controlling how `ol-mapbox-style` fetches resources. Can be used for modifying\n * the url, adding headers or setting credentials options. Called with the url and the resource\n * type as arguments, this function is supposed to return a `Request` object. Without a return value,\n * the original request will not be modified. For `Tiles` and `GeoJSON` resources, only the `url` of\n * the returned request will be respected.\n * @property {string} [projection='EPSG:3857'] Only useful when working with non-standard projections.\n * Code of a projection registered with OpenLayers. All sources of the style must be provided in this\n * projection. The projection must also have a valid extent defined, which will be used to determine the\n * origin and resolutions of the tile grid for all tiled sources of the style. When provided, the bbox\n * placeholder in tile and geojson urls changes: the default is `{bbox-epsg-3857}`, when projection is e.g.\n * set to `EPSG:4326`, the bbox placeholder will be `{bbox-epsg-4326}`.\n * @property {Array<number>} [resolutions] Only useful when working with non-standard projections.\n * Resolutions for mapping resolution to the `zoom` used in the Mapbox style.\n * @property {string} [styleUrl] URL of the Mapbox GL style. Required for styles that were provided\n * as object, when they contain a relative sprite url, or sources referencing data by relative url.\n * @property {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image for an icon name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function be used for icons not in the sprite or to override sprite icons.\n * @property {string} [accessTokenParam='access_token'] Access token param. For internal use.\n */\n/**\n * @typedef {Object} ApplyStyleOptions\n * @property {string} [source=''] Source. Default is `''`, which causes the first source in the\n * style to be used.\n * @property {Array<string>} [layers] Layers. If no source is provided, the layers with the\n * provided ids will be used from the style's `layers` array. All layers need to use the same source.\n * @property {boolean} [updateSource=true] Update or create vector (tile) layer source with parameters\n * specified for the source in the mapbox style definition.\n */\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n/**\n * @param {import(\"ol/proj/Projection.js\").default} projection Projection.\n * @param {number} [tileSize=512] Tile size.\n * @return {Array<number>} Resolutions.\n */\nfunction getTileResolutions(projection, tileSize = 512) {\n    return projection.getExtent() ? createXYZ({\n        extent: projection.getExtent(),\n        tileSize: tileSize,\n        maxZoom: 22\n    }).getResolutions() : defaultResolutions;\n}\n/**\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Options} Completed options with accessToken and accessTokenParam.\n */\nfunction completeOptions(styleUrl, options) {\n    if (!options.accessToken) {\n        options = Object.assign({}, options);\n        const searchParams = new URL(styleUrl).searchParams;\n        // The last search parameter is the access token\n        searchParams.forEach((value, key) => {\n            options.accessToken = value;\n            options.accessTokenParam = key;\n        });\n    }\n    return options;\n}\n/**\n * Applies a style function to an `ol/layer/VectorTile` or `ol/layer/Vector`\n * with an `ol/source/VectorTile` or an `ol/source/Vector`. If the layer does not have a source\n * yet, it will be created and populated from the information in the `glStyle` (unless `updateSource` is\n * set to `false`).\n *\n * **Example:**\n * ```js\n * import {applyStyle} from 'ol-mapbox-style';\n * import {VectorTile} from 'ol/layer.js';\n *\n * const layer = new VectorTile({declutter: true});\n * applyStyle(layer, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n *\n * The style function will render all layers from the `glStyle` object that use the source\n * of the first layer, the specified `source`, or a subset of layers from the same source. The\n * source needs to be a `\"type\": \"vector\"` or `\"type\": \"geojson\"` source.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * @param {VectorTileLayer|VectorLayer} layer OpenLayers layer. When the layer has a source configured,\n * it will be modified to use the configuration from the glStyle's `source`. Options specified on the\n * layer's source will override those from the glStyle's `source`, except for `url` and\n * `tileUrlFunction`. When the source projection is the default (`EPSG:3857`), the `tileGrid` will\n * also be overridden. If you'd rather not have ol-mapbox-style modify the source, configure `applyStyle()`\n * with the `updateSource: false` option.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>|Options&ApplyStyleOptions} [sourceOrLayersOrOptions] Options or\n * `source` key or an array of layer `id`s from the Mapbox Style object. When a `source` key is\n * provided, all layers for the specified source will be included in the style function. When layer\n * `id`s are provided, they must be from layers that use the same source. When not provided or a falsey\n * value, all layers using the first source specified in the glStyle will be rendered.\n * @param {Options&ApplyStyleOptions|string} [optionsOrPath] **Deprecated**. Options. Alternatively the path of the style file\n * (only required when a relative path is used for the `\"sprite\"` property of the style).\n * @param {Array<number>} [resolutions] **Deprecated**. Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections, can also be supplied with\n * options.\n * @return {Promise} Promise which will be resolved when the style can be used\n * for rendering.\n */\nfunction applyStyle(layer, glStyle, sourceOrLayersOrOptions = '', optionsOrPath = {}, resolutions = undefined) {\n    let styleUrl, sourceId;\n    /** @type {Options&ApplyStyleOptions} */\n    let options;\n    let sourceOrLayers;\n    let updateSource = true;\n    if (typeof sourceOrLayersOrOptions !== 'string' && !Array.isArray(sourceOrLayersOrOptions)) {\n        options = sourceOrLayersOrOptions;\n        sourceOrLayers = options.source || options.layers;\n        optionsOrPath = options;\n    } else {\n        sourceOrLayers = sourceOrLayersOrOptions;\n    }\n    if (typeof optionsOrPath === 'string') {\n        styleUrl = optionsOrPath;\n        options = {};\n    } else {\n        styleUrl = optionsOrPath.styleUrl;\n        options = optionsOrPath;\n    }\n    if (options.updateSource === false) {\n        updateSource = false;\n    }\n    if (!resolutions) {\n        resolutions = options.resolutions;\n    }\n    if (!styleUrl && typeof glStyle === 'string' && !glStyle.trim().startsWith('{')) {\n        styleUrl = glStyle;\n    }\n    if (styleUrl) {\n        styleUrl = styleUrl.startsWith('data:') ? location.href : normalizeStyleUrl(styleUrl, options.accessToken);\n        options = completeOptions(styleUrl, options);\n    }\n    return new Promise(function (resolve, reject) {\n        // TODO: figure out where best place to check source type is\n        // Note that the source arg is an array of gl layer ids and each must be\n        // dereferenced to get source type to validate\n        getGlStyle(glStyle, options).then(function (glStyle) {\n            if (glStyle.version != 8) {\n                return reject(new Error('glStyle version 8 required.'));\n            }\n            if (!(layer instanceof VectorLayer || layer instanceof VectorTileLayer)) {\n                return reject(new Error('Can only apply to VectorLayer or VectorTileLayer'));\n            }\n            const type = layer instanceof VectorTileLayer ? 'vector' : 'geojson';\n            if (!sourceOrLayers) {\n                sourceId = Object.keys(glStyle.sources).find(function (key) {\n                    return glStyle.sources[key].type === type;\n                });\n                sourceOrLayers = sourceId;\n            } else if (Array.isArray(sourceOrLayers)) {\n                sourceId = glStyle.layers.find(function (layer) {\n                    return layer.id === sourceOrLayers[0];\n                }).source;\n            } else {\n                sourceId = sourceOrLayers;\n            }\n            if (!sourceId) {\n                return reject(new Error(`No ${ type } source found in the glStyle.`));\n            }\n            function assignSource() {\n                if (!updateSource) {\n                    return Promise.resolve();\n                }\n                if (layer instanceof VectorTileLayer) {\n                    return setupVectorSource(glStyle.sources[sourceId], styleUrl, options).then(function (source) {\n                        const targetSource = layer.getSource();\n                        if (!targetSource) {\n                            layer.setSource(source);\n                        } else if (source !== targetSource) {\n                            targetSource.setTileUrlFunction(source.getTileUrlFunction());\n                            if (typeof targetSource.setUrls === 'function' && typeof source.getUrls === 'function') {\n                                // to get correct keys for tile cache and queue\n                                targetSource.setUrls(source.getUrls());\n                            }\n                            //@ts-ignore\n                            if (!targetSource.format_) {\n                                //@ts-ignore\n                                targetSource.format_ = source.format_;\n                            }\n                            if (!targetSource.getAttributions()) {\n                                targetSource.setAttributions(source.getAttributions());\n                            }\n                            if (targetSource.getTileLoadFunction() === defaultLoadFunction) {\n                                targetSource.setTileLoadFunction(source.getTileLoadFunction());\n                            }\n                            if (equivalent(targetSource.getProjection(), source.getProjection())) {\n                                targetSource.tileGrid = source.getTileGrid();\n                            }\n                        }\n                        if (!isFinite(layer.getMaxResolution()) && !isFinite(layer.getMinZoom())) {\n                            const tileGrid = layer.getSource().getTileGrid();\n                            layer.setMaxResolution(tileGrid.getResolution(tileGrid.getMinZoom()));\n                        }\n                    });\n                }\n                const glSource = glStyle.sources[sourceId];\n                let source = layer.getSource();\n                if (!source || source.get('mapbox-source') !== glSource) {\n                    source = setupGeoJSONSource(glSource, styleUrl, options);\n                }\n                const targetSource = layer.getSource();\n                if (!targetSource) {\n                    layer.setSource(source);\n                } else if (source !== targetSource) {\n                    if (!targetSource.getAttributions()) {\n                        targetSource.setAttributions(source.getAttributions());\n                    }\n                    //@ts-ignore\n                    if (!targetSource.format_) {\n                        //@ts-ignore\n                        targetSource.format_ = source.getFormat();\n                    }\n                    //@ts-ignore\n                    targetSource.url_ = source.getUrl();\n                }\n                return Promise.resolve();\n            }\n            let spriteScale, spriteData, spriteImageUrl, style;\n            function onChange() {\n                if (!style && (!glStyle.sprite || spriteData)) {\n                    if (options.projection && !resolutions) {\n                        const projection = get$1(options.projection);\n                        const units = projection.getUnits();\n                        if (units !== 'm') {\n                            resolutions = defaultResolutions.map(resolution => resolution / METERS_PER_UNIT[units]);\n                        }\n                    }\n                    style = stylefunction(layer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, options.getImage);\n                    if (!layer.getStyle()) {\n                        reject(new Error(`Nothing to show for source [${ sourceId }]`));\n                    } else {\n                        assignSource().then(resolve).catch(reject);\n                    }\n                } else if (style) {\n                    layer.setStyle(style);\n                    assignSource().then(resolve).catch(reject);\n                } else {\n                    reject(new Error('Something went wrong trying to apply style.'));\n                }\n            }\n            if (glStyle.sprite) {\n                const sprite = new URL(normalizeSpriteUrl(glStyle.sprite, options.accessToken, styleUrl || location.href));\n                spriteScale = window.devicePixelRatio >= 1.5 ? 0.5 : 1;\n                const sizeFactor = spriteScale == 0.5 ? '@2x' : '';\n                let spriteUrl = sprite.origin + sprite.pathname + sizeFactor + '.json' + sprite.search;\n                new Promise(function (resolve, reject) {\n                    fetchResource('Sprite', spriteUrl, options).then(resolve).catch(function (error) {\n                        spriteUrl = sprite.origin + sprite.pathname + '.json' + sprite.search;\n                        fetchResource('Sprite', spriteUrl, options).then(resolve).catch(reject);\n                    });\n                }).then(function (spritesJson) {\n                    if (spritesJson === undefined) {\n                        reject(new Error('No sprites found.'));\n                    }\n                    spriteData = spritesJson;\n                    spriteImageUrl = sprite.origin + sprite.pathname + sizeFactor + '.png' + sprite.search;\n                    if (options.transformRequest) {\n                        const transformed = options.transformRequest(spriteImageUrl, 'SpriteImage');\n                        if (transformed instanceof Request) {\n                            spriteImageUrl = encodeURI(transformed.url);\n                        }\n                    }\n                    onChange();\n                }).catch(function (err) {\n                    reject(new Error(`Sprites cannot be loaded: ${ spriteUrl }: ${ err.message }`));\n                });\n            } else {\n                onChange();\n            }\n        }).catch(reject);\n    });\n}\nconst emptyObj = {};\nfunction setFirstBackground(mapOrLayer, glStyle, options) {\n    glStyle.layers.some(function (layer) {\n        if (layer.type === 'background') {\n            if (mapOrLayer instanceof Layer) {\n                mapOrLayer.setBackground(function (resolution) {\n                    return getBackgroundColor(layer, resolution, options, {});\n                });\n                return true;\n            }\n            if (mapOrLayer instanceof Map || mapOrLayer instanceof LayerGroup) {\n                mapOrLayer.getLayers().push(setupBackgroundLayer(layer, options, {}));\n                return true;\n            }\n        }\n    });\n}\n/**\n * Applies properties of the Mapbox Style's first `background` layer to the\n * provided map or layer (group).\n *\n * **Example:**\n * ```js\n * import {applyBackground} from 'ol-mapbox-style';\n * import {Map} from 'ol';\n *\n * const map = new Map({target: 'map'});\n * applyBackground(map, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n * @param {Map|import(\"ol/layer/Base.js\").default} mapOrLayer OpenLayers Map or layer (group).\n * @param {Object|string} glStyle Mapbox Style object or url.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the background is applied.\n */\nfunction applyBackground(mapOrLayer, glStyle, options = {}) {\n    return getGlStyle(glStyle, options).then(function (glStyle) {\n        setFirstBackground(mapOrLayer, glStyle, options);\n    });\n}\nfunction getSourceIdByRef(layers, ref) {\n    let sourceId;\n    layers.some(function (layer) {\n        if (layer.id == ref) {\n            sourceId = layer.source;\n            return true;\n        }\n    });\n    return sourceId;\n}\nfunction extentFromTileJSON(tileJSON, projection) {\n    const bounds = tileJSON.bounds;\n    if (bounds) {\n        const ll = fromLonLat([\n            bounds[0],\n            bounds[1]\n        ], projection);\n        const tr = fromLonLat([\n            bounds[2],\n            bounds[3]\n        ], projection);\n        return [\n            ll[0],\n            ll[1],\n            tr[0],\n            tr[1]\n        ];\n    }\n    return get$1(projection).getExtent();\n}\nfunction sourceOptionsFromTileJSON(glSource, tileJSON, options) {\n    const tileJSONSource = new TileJSON({\n        tileJSON: tileJSON,\n        tileSize: glSource.tileSize || tileJSON.tileSize || 512\n    });\n    const tileJSONDoc = tileJSONSource.getTileJSON();\n    const tileGrid = tileJSONSource.getTileGrid();\n    const projection = get$1(options.projection || 'EPSG:3857');\n    const extent = extentFromTileJSON(tileJSONDoc, projection);\n    const projectionExtent = projection.getExtent();\n    const minZoom = tileJSONDoc.minzoom || 0;\n    const maxZoom = tileJSONDoc.maxzoom || 22;\n    /** @type {import(\"ol/source/VectorTile.js\").Options} */\n    const sourceOptions = {\n        attributions: tileJSONSource.getAttributions(),\n        projection: projection,\n        tileGrid: new TileGrid({\n            origin: projectionExtent ? getTopLeft(projectionExtent) : tileGrid.getOrigin(0),\n            extent: extent || tileGrid.getExtent(),\n            minZoom: minZoom,\n            resolutions: getTileResolutions(projection, tileJSON.tileSize).slice(0, maxZoom + 1),\n            tileSize: tileGrid.getTileSize(0)\n        })\n    };\n    if (Array.isArray(tileJSONDoc.tiles)) {\n        sourceOptions.urls = tileJSONDoc.tiles;\n    } else {\n        sourceOptions.url = tileJSONDoc.tiles;\n    }\n    return sourceOptions;\n}\nfunction getBackgroundColor(glLayer, resolution, options, functionCache) {\n    const background = {\n        id: glLayer.id,\n        type: glLayer.type\n    };\n    const layout = glLayer.layout || {};\n    const paint = glLayer.paint || {};\n    background['paint'] = paint;\n    const zoom = getZoomForResolution(resolution, options.resolutions || defaultResolutions);\n    let bg, opacity;\n    if (paint['background-color'] !== undefined) {\n        bg = getValue(background, 'paint', 'background-color', zoom, emptyObj, functionCache);\n    }\n    if (paint['background-opacity'] !== undefined) {\n        opacity = getValue(background, 'paint', 'background-opacity', zoom, emptyObj, functionCache);\n    }\n    return layout.visibility == 'none' ? undefined : colorWithOpacity(bg, opacity);\n}\n/**\n * @param {Object} glLayer Mapbox Style layer object.\n * @param {Options} options Options.\n * @param {Object} functionCache Cache for functions.\n * @return {Layer} OpenLayers layer.\n */\nfunction setupBackgroundLayer(glLayer, options, functionCache) {\n    const div = document.createElement('div');\n    div.className = 'ol-mapbox-style-background';\n    div.style.position = 'absolute';\n    div.style.width = '100%';\n    div.style.height = '100%';\n    return new Layer({\n        source: new Source({}),\n        render(frameState) {\n            const color = getBackgroundColor(glLayer, frameState.viewState.resolution, options, functionCache);\n            div.style.backgroundColor = color;\n            return div;\n        }\n    });\n}\n/**\n * Creates an OpenLayers VectorTile source for a gl source entry.\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string|undefined} styleUrl URL to use for the source. This is expected to be the complete http(s) url,\n * with access key applied.\n * @param {Options} options Options.\n * @return {Promise<import(\"ol/source/VectorTile\").default>} Promise resolving to a VectorTile source.\n * @private\n */\nfunction setupVectorSource(glSource, styleUrl, options) {\n    return new Promise(function (resolve, reject) {\n        getTileJson(glSource, styleUrl, options).then(function (tileJSON) {\n            const sourceOptions = sourceOptionsFromTileJSON(glSource, tileJSON, options);\n            sourceOptions.format = new MVT();\n            resolve(new VectorTileSource(sourceOptions));\n        }).catch(reject);\n    });\n}\nfunction setupVectorLayer(glSource, styleUrl, options) {\n    const layer = new VectorTileLayer({\n        declutter: true,\n        visible: false\n    });\n    setupVectorSource(glSource, styleUrl, options).then(function (source) {\n        source.set('mapbox-source', glSource);\n        layer.setSource(source);\n    }).catch(function (error) {\n        layer.setSource(undefined);\n    });\n    return layer;\n}\nfunction getBboxTemplate(projection) {\n    const projCode = projection ? projection.getCode() : 'EPSG:3857';\n    return `{bbox-${ projCode.toLowerCase().replace(/[^a-z0-9]/g, '-') }}`;\n}\nfunction setupRasterLayer(glSource, styleUrl, options) {\n    const layer = new TileLayer();\n    getTileJson(glSource, styleUrl, options).then(function (tileJson) {\n        const source = new TileJSON({\n            interpolate: options.interpolate === undefined ? true : options.interpolate,\n            transition: 0,\n            crossOrigin: 'anonymous',\n            tileJSON: tileJson\n        });\n        source.tileGrid = sourceOptionsFromTileJSON(glSource, tileJson, options).tileGrid;\n        if (options.projection) {\n            //@ts-ignore\n            source.projection = get$1(options.projection);\n        }\n        const getTileUrl = source.getTileUrlFunction();\n        source.setTileUrlFunction(function (tileCoord, pixelRatio, projection) {\n            const bboxTemplate = getBboxTemplate(projection);\n            let src = getTileUrl(tileCoord, pixelRatio, projection);\n            if (src.indexOf(bboxTemplate) != -1) {\n                const bbox = source.getTileGrid().getTileCoordExtent(tileCoord);\n                src = src.replace(bboxTemplate, bbox.toString());\n            }\n            return src;\n        });\n        source.set('mapbox-source', glSource);\n        layer.setSource(source);\n    }).catch(function (error) {\n        layer.setSource(undefined);\n    });\n    return layer;\n}\n/**\n *\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string} styleUrl Style url\n * @param {Options} options ol-mapbox-style options.\n * @return {ImageLayer<Raster>} The raster layer\n */\nfunction setupHillshadeLayer(glSource, styleUrl, options) {\n    const tileLayer = setupRasterLayer(glSource, styleUrl, options);\n    /** @type {ImageLayer<Raster>} */\n    const layer = new ImageLayer({\n        source: new Raster({\n            operationType: 'image',\n            operation: hillshade,\n            sources: [tileLayer]\n        })\n    });\n    return layer;\n}\n/**\n * @param {Object} glSource glStyle source.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {VectorSource} Configured vector source.\n */\nfunction setupGeoJSONSource(glSource, styleUrl, options) {\n    const geoJsonFormat = options.projection ? new GeoJSON({ dataProjection: options.projection }) : new GeoJSON();\n    const data = glSource.data;\n    const sourceOptions = {};\n    if (typeof data == 'string') {\n        let geoJsonUrl = normalizeSourceUrl(data, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href);\n        if (options.transformRequest) {\n            const transformed = options.transformRequest(geoJsonUrl, 'GeoJSON');\n            if (transformed instanceof Request) {\n                geoJsonUrl = decodeURI(transformed.url);\n            }\n        }\n        if (/\\{bbox-[0-9a-z-]+\\}/.test(geoJsonUrl)) {\n            const extentUrl = (extent, resolution, projection) => {\n                const bboxTemplate = getBboxTemplate(projection);\n                return geoJsonUrl.replace(bboxTemplate, `${ extent.join(',') }`);\n            };\n            const source = new VectorSource({\n                attributions: glSource.attribution,\n                format: geoJsonFormat,\n                url: extentUrl,\n                strategy: bbox\n            });\n            source.set('mapbox-source', glSource);\n            return source;\n        }\n        return new VectorSource({\n            attributions: glSource.attribution,\n            format: geoJsonFormat,\n            url: geoJsonUrl\n        });\n    }\n    sourceOptions.features = geoJsonFormat.readFeatures(data, { featureProjection: getUserProjection() || 'EPSG:3857' });\n    const source = new VectorSource(Object.assign({\n        attributions: glSource.attribution,\n        format: geoJsonFormat\n    }, sourceOptions));\n    source.set('mapbox-source', glSource);\n    return source;\n}\nfunction setupGeoJSONLayer(glSource, styleUrl, options) {\n    return new VectorLayer({\n        declutter: true,\n        source: setupGeoJSONSource(glSource, styleUrl, options),\n        visible: false\n    });\n}\nfunction prerenderRasterLayer(glLayer, layer, functionCache) {\n    let zoom = null;\n    return function (event) {\n        if (glLayer.paint && 'raster-opacity' in glLayer.paint && event.frameState.viewState.zoom !== zoom) {\n            zoom = event.frameState.viewState.zoom;\n            delete functionCache[glLayer.id];\n            updateRasterLayerProperties(glLayer, layer, zoom, functionCache);\n        }\n    };\n}\nfunction updateRasterLayerProperties(glLayer, layer, zoom, functionCache) {\n    const opacity = getValue(glLayer, 'paint', 'raster-opacity', zoom, emptyObj, functionCache);\n    layer.setOpacity(opacity);\n}\nfunction manageVisibility(layer, mapOrGroup) {\n    function onChange() {\n        const glStyle = mapOrGroup.get('mapbox-style');\n        if (!glStyle) {\n            return;\n        }\n        const mapboxLayers = derefLayers(glStyle.layers);\n        const layerMapboxLayerids = layer.get('mapbox-layers');\n        const visible = mapboxLayers.filter(function (mapboxLayer) {\n            return layerMapboxLayerids.includes(mapboxLayer.id);\n        }).some(function (mapboxLayer) {\n            return !mapboxLayer.layout || !mapboxLayer.layout.visibility || mapboxLayer.layout.visibility === 'visible';\n        });\n        if (layer.get('visible') !== visible) {\n            layer.setVisible(visible);\n        }\n    }\n    layer.on('change', onChange);\n    onChange();\n}\nfunction setupLayer(glStyle, styleUrl, glLayer, options) {\n    const functionCache = getFunctionCache(glStyle);\n    const glLayers = glStyle.layers;\n    const type = glLayer.type;\n    const id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n    const glSource = glStyle.sources[id];\n    let layer;\n    if (type == 'background') {\n        layer = setupBackgroundLayer(glLayer, options, functionCache);\n    } else if (glSource.type == 'vector') {\n        layer = setupVectorLayer(glSource, styleUrl, options);\n    } else if (glSource.type == 'raster') {\n        layer = setupRasterLayer(glSource, styleUrl, options);\n        layer.setVisible(glLayer.layout ? glLayer.layout.visibility !== 'none' : true);\n        layer.on('prerender', prerenderRasterLayer(glLayer, layer, functionCache));\n    } else if (glSource.type == 'geojson') {\n        layer = setupGeoJSONLayer(glSource, styleUrl, options);\n    } else if (glSource.type == 'raster-dem' && glLayer.type == 'hillshade') {\n        const hillshadeLayer = setupHillshadeLayer(glSource, styleUrl, options);\n        layer = hillshadeLayer;\n        hillshadeLayer.getSource().on('beforeoperations', function (event) {\n            const data = event.data;\n            data.resolution = event.resolution;\n            const zoom = getZoomForResolution(event.resolution, options.resolutions || defaultResolutions);\n            data.encoding = glSource.encoding;\n            data.vert = 5 * getValue(glLayer, 'paint', 'hillshade-exaggeration', zoom, emptyObj, functionCache);\n            data.sunAz = getValue(glLayer, 'paint', 'hillshade-illumination-direction', zoom, emptyObj, functionCache);\n            data.sunEl = 35;\n            data.opacity = 0.3;\n            data.highlightColor = getValue(glLayer, 'paint', 'hillshade-highlight-color', zoom, emptyObj, functionCache);\n            data.shadowColor = getValue(glLayer, 'paint', 'hillshade-shadow-color', zoom, emptyObj, functionCache);\n            data.accentColor = getValue(glLayer, 'paint', 'hillshade-accent-color', zoom, emptyObj, functionCache);\n        });\n        layer.setVisible(glLayer.layout ? glLayer.layout.visibility !== 'none' : true);\n    }\n    const glSourceId = id;\n    if (layer) {\n        layer.set('mapbox-source', glSourceId);\n    }\n    return layer;\n}\n/**\n * @param {*} glStyle Mapbox Style.\n * @param {Map|LayerGroup} mapOrGroup Map or layer group.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the style is loaded.\n */\nfunction processStyle(glStyle, mapOrGroup, styleUrl, options) {\n    const promises = [];\n    let view = null;\n    if (mapOrGroup instanceof Map) {\n        view = mapOrGroup.getView();\n        if (!view.isDef() && !view.getRotation() && !view.getResolutions()) {\n            const projection = options.projection ? get$1(options.projection) : view.getProjection();\n            view = new View(Object.assign(view.getProperties(), {\n                maxResolution: defaultResolutions[0] / METERS_PER_UNIT[projection.getUnits()],\n                projection: options.projection || view.getProjection()\n            }));\n            mapOrGroup.setView(view);\n        }\n        if ('center' in glStyle && !view.getCenter()) {\n            view.setCenter(fromLonLat(glStyle.center, view.getProjection()));\n        }\n        if ('zoom' in glStyle && view.getZoom() === undefined) {\n            view.setResolution(defaultResolutions[0] / METERS_PER_UNIT[view.getProjection().getUnits()] / Math.pow(2, glStyle.zoom));\n        }\n        if (!view.getCenter() || view.getZoom() === undefined) {\n            view.fit(view.getProjection().getExtent(), {\n                nearest: true,\n                size: mapOrGroup.getSize()\n            });\n        }\n    }\n    mapOrGroup.set('mapbox-style', glStyle);\n    mapOrGroup.set('mapbox-metadata', {\n        styleUrl,\n        options\n    });\n    const glLayers = glStyle.layers;\n    let layerIds = [];\n    let layer, glSourceId, id;\n    for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n        const glLayer = glLayers[i];\n        const type = glLayer.type;\n        if (type == 'heatmap') {\n            //FIXME Unsupported layer type\n            throw new Error(`${ type } layers are not supported`);\n        } else {\n            id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n            // this technique assumes gl layers will be in a particular order\n            if (!id || id != glSourceId) {\n                if (layerIds.length) {\n                    promises.push(finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options));\n                    layerIds = [];\n                }\n                layer = setupLayer(glStyle, styleUrl, glLayer, options);\n                if (!(layer instanceof VectorLayer || layer instanceof VectorTileLayer)) {\n                    layerIds = [];\n                }\n                glSourceId = layer.get('mapbox-source');\n            }\n            layerIds.push(glLayer.id);\n        }\n    }\n    promises.push(finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options));\n    return Promise.all(promises);\n}\n/**\n * Loads and applies a Mapbox Style object into an OpenLayers Map or LayerGroup.\n * This includes the map background, the layers, and for Map instances that did not\n * have a View defined yet also the center and the zoom.\n *\n * **Example:**\n * ```js\n * import apply from 'ol-mapbox-style';\n *\n * apply('map', 'mapbox://styles/mapbox/bright-v9', {accessToken: 'YOUR_MAPBOX_TOKEN'});\n * ```\n *\n * The center and zoom will only be set if present in the Mapbox Style document,\n * and if not already set on the OpenLayers map.\n *\n * Layers will be added to the OpenLayers map, without affecting any layers that\n * might already be set on the map.\n *\n * Layers added by `apply()` will have two additional properties:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function sets an additional `mapbox-style` property on the OpenLayers\n * Map or LayerGroup instance, which holds the Mapbox Style object.\n *\n * @param {Map|HTMLElement|string|LayerGroup} mapOrGroupOrElement Either an existing\n * OpenLayers Map instance, or a HTML element, or the id of a HTML element that will be\n * the target of a new OpenLayers Map, or a layer group. If layer group, styles\n * releated to the map and view will be ignored.\n * @param {string|Object} style JSON style object or style url pointing to a\n * Mapbox Style object. When using Mapbox APIs, the url is the `styleUrl`\n * shown in Mapbox Studio's \"share\" panel. In addition, the `accessToken` option\n * (see below) must be set.\n * When passed as JSON style object, all OpenLayers layers created by `apply()`\n * will be immediately available, but they may not have a source yet (i.e. when\n * they are defined by a TileJSON url in the Mapbox Style document). When passed\n * as style url, layers will be added to the map when the Mapbox Style document\n * is loaded and parsed.\n * @param {Options} options Options.\n * @return {Promise<Map|LayerGroup>} A promise that resolves after all layers have been added to\n * the OpenLayers Map instance or LayerGroup, their sources set, and their styles applied. The\n * `resolve` callback will be called with the OpenLayers Map instance or LayerGroup as\n * argument.\n */\nfunction apply(mapOrGroupOrElement, style, options = {}) {\n    let promise;\n    /** @type {Map|LayerGroup} */\n    let mapOrGroup;\n    if (typeof mapOrGroupOrElement === 'string' || mapOrGroupOrElement instanceof HTMLElement) {\n        mapOrGroup = new Map({ target: mapOrGroupOrElement });\n    } else {\n        mapOrGroup = mapOrGroupOrElement;\n    }\n    if (typeof style === 'string') {\n        const styleUrl = style.startsWith('data:') ? location.href : normalizeStyleUrl(style, options.accessToken);\n        options = completeOptions(styleUrl, options);\n        promise = new Promise(function (resolve, reject) {\n            getGlStyle(style, options).then(function (glStyle) {\n                processStyle(glStyle, mapOrGroup, styleUrl, options).then(function () {\n                    resolve(mapOrGroup);\n                }).catch(reject);\n            }).catch(function (err) {\n                reject(new Error(`Could not load ${ style }: ${ err.message }`));\n            });\n        });\n    } else {\n        promise = new Promise(function (resolve, reject) {\n            processStyle(style, mapOrGroup, !options.styleUrl || options.styleUrl.startsWith('data:') ? location.href : normalizeStyleUrl(options.styleUrl, options.accessToken), options).then(function () {\n                resolve(mapOrGroup);\n            }).catch(reject);\n        });\n    }\n    return promise;\n}\n/**\n * If layerIds is not empty, applies the style specified in glStyle to the layer,\n * and adds the layer to the map.\n *\n * The layer may not yet have a source when the function is called.  If so, the style\n * is applied to the layer via a once listener on the 'change:source' event.\n *\n * @param {Layer} layer An OpenLayers layer instance.\n * @param {Array<string>} layerIds Array containing layer ids of already-processed layers.\n * @param {Object} glStyle Style as a JSON object.\n * @param {string|undefined} styleUrl The original style URL. Only required\n * when a relative path is used with the `\"sprite\"` property of the style.\n * @param {Map|LayerGroup} mapOrGroup OpenLayers Map.\n * @param {Options} options Options.\n * @return {Promise} Returns a promise that resolves after the source has\n * been set on the specified layer, and the style has been applied.\n */\nfunction finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options = {}) {\n    let minZoom = 24;\n    let maxZoom = 0;\n    const glLayers = glStyle.layers;\n    for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n        const glLayer = glLayers[i];\n        if (layerIds.indexOf(glLayer.id) !== -1) {\n            minZoom = Math.min('minzoom' in glLayer ? glLayer.minzoom : 0, minZoom);\n            maxZoom = Math.max('maxzoom' in glLayer ? glLayer.maxzoom : 24, maxZoom);\n        }\n    }\n    return new Promise(function (resolve, reject) {\n        const setStyle = function () {\n            const source = layer.getSource();\n            if (!source || source.getState() === 'error') {\n                reject(new Error('Error accessing data for source ' + layer.get('mapbox-source')));\n                return;\n            }\n            if ('getTileGrid' in source) {\n                const tileGrid = /** @type {import(\"ol/source/Tile.js\").default|import(\"ol/source/VectorTile.js\").default} */\n                source.getTileGrid();\n                if (tileGrid) {\n                    const sourceMinZoom = tileGrid.getMinZoom();\n                    if (minZoom > 0 || sourceMinZoom > 0) {\n                        layer.setMaxResolution(Math.min(defaultResolutions[minZoom], tileGrid.getResolution(sourceMinZoom)) + 1e-9);\n                    }\n                    if (maxZoom < 24) {\n                        layer.setMinResolution(defaultResolutions[maxZoom] + 1e-9);\n                    }\n                }\n            } else {\n                if (minZoom > 0) {\n                    layer.setMaxResolution(defaultResolutions[minZoom] + 1e-9);\n                }\n            }\n            if (source instanceof VectorSource || source instanceof VectorTileSource) {\n                applyStyle(layer, glStyle, layerIds, Object.assign({ styleUrl: styleUrl }, options)).then(function () {\n                    manageVisibility(layer, mapOrGroup);\n                    resolve();\n                }).catch(reject);\n            } else {\n                resolve();\n            }\n        };\n        layer.set('mapbox-layers', layerIds);\n        const layers = mapOrGroup.getLayers();\n        if (layers.getArray().indexOf(layer) === -1) {\n            layers.push(layer);\n        }\n        if (layer.getSource()) {\n            setStyle();\n        } else {\n            layer.once('change:source', setStyle);\n        }\n    });\n}\n/**\n * Get the Mapbox Layer object for the provided `layerId`.\n * @param {Map|LayerGroup} mapOrGroup Map or LayerGroup.\n * @param {string} layerId Mapbox Layer id.\n * @return {Object} Mapbox Layer object.\n */\nfunction getMapboxLayer(mapOrGroup, layerId) {\n    const style = mapOrGroup.get('mapbox-style');\n    const layerStyle = style.layers.find(function (layer) {\n        return layer.id === layerId;\n    });\n    return layerStyle;\n}\n/**\n * Add a new Mapbox Layer object to the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Mapbox Layer object.\n * @param {string} [beforeLayerId] Optional id of the Mapbox Layer before the new layer that will be added.\n * @return {Promise<void>} Resolves when the added layer is available.\n */\nfunction addMapboxLayer(mapOrGroup, mapboxLayer, beforeLayerId) {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    const mapboxLayers = glStyle.layers;\n    let spliceIndex;\n    let sourceIndex = -1;\n    if (beforeLayerId !== undefined) {\n        const beforeMapboxLayer = getMapboxLayer(mapOrGroup, beforeLayerId);\n        if (beforeMapboxLayer === undefined) {\n            throw new Error(`Layer with id \"${ beforeLayerId }\" not found.`);\n        }\n        spliceIndex = mapboxLayers.indexOf(beforeMapboxLayer);\n    } else {\n        spliceIndex = mapboxLayers.length;\n    }\n    let sourceOffset;\n    if (spliceIndex > 0 && mapboxLayers[spliceIndex - 1].source === mapboxLayer.source) {\n        sourceIndex = spliceIndex - 1;\n        sourceOffset = -1;\n    } else if (spliceIndex < mapboxLayers.length && mapboxLayers[spliceIndex].source === mapboxLayer.source) {\n        sourceIndex = spliceIndex;\n        sourceOffset = 0;\n    }\n    if (sourceIndex === -1) {\n        const {options, styleUrl} = mapOrGroup.get('mapbox-metadata');\n        const layer = setupLayer(glStyle, styleUrl, mapboxLayer, options);\n        if (beforeLayerId) {\n            const beforeLayer = getLayer(mapOrGroup, beforeLayerId);\n            const beforeLayerIndex = mapOrGroup.getLayers().getArray().indexOf(beforeLayer);\n            mapOrGroup.getLayers().insertAt(beforeLayerIndex, layer);\n        }\n        mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n        return finalizeLayer(layer, [mapboxLayer.id], glStyle, styleUrl, mapOrGroup, options);\n    }\n    if (mapboxLayers.some(layer => layer.id === mapboxLayer.id)) {\n        throw new Error(`Layer with id \"${ mapboxLayer.id }\" already exists.`);\n    }\n    const sourceLayerId = mapboxLayers[sourceIndex].id;\n    const args = styleFunctionArgs[getStyleFunctionKey(mapOrGroup.get('mapbox-style'), getLayer(mapOrGroup, sourceLayerId))];\n    mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n    if (args) {\n        const [olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage] = args;\n        if (Array.isArray(sourceOrLayers)) {\n            const layerIndex = sourceOrLayers.indexOf(sourceLayerId) + sourceOffset;\n            sourceOrLayers.splice(layerIndex, 0, mapboxLayer.id);\n        }\n        stylefunction(olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage);\n    } else {\n        getLayer(mapOrGroup, mapboxLayers[sourceIndex].id).changed();\n    }\n    return Promise.resolve();\n}\n/**\n * Update a Mapbox Layer object in the style. The map will be re-rendered with the new style.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Updated Mapbox Layer object.\n */\nfunction updateMapboxLayer(mapOrGroup, mapboxLayer) {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    const mapboxLayers = glStyle.layers;\n    const index = mapboxLayers.findIndex(function (layer) {\n        return layer.id === mapboxLayer.id;\n    });\n    if (index === -1) {\n        throw new Error(`Layer with id \"${ mapboxLayer.id }\" not found.`);\n    }\n    const oldLayer = mapboxLayers[index];\n    if (oldLayer.source !== mapboxLayer.source) {\n        throw new Error('Updated layer and previous version must use the same source.');\n    }\n    delete getFunctionCache(glStyle)[mapboxLayer.id];\n    delete getFilterCache(glStyle)[mapboxLayer.id];\n    mapboxLayers[index] = mapboxLayer;\n    const args = styleFunctionArgs[getStyleFunctionKey(mapOrGroup.get('mapbox-style'), getLayer(mapOrGroup, mapboxLayer.id))];\n    if (args) {\n        stylefunction.apply(undefined, args);\n    } else {\n        getLayer(mapOrGroup, mapboxLayer.id).changed();\n    }\n}\n/**\n * Remove a Mapbox Layer object from the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string|Object} mapboxLayerIdOrLayer Mapbox Layer id or Mapbox Layer object.\n */\nfunction removeMapboxLayer(mapOrGroup, mapboxLayerIdOrLayer) {\n    const mapboxLayerId = typeof mapboxLayerIdOrLayer === 'string' ? mapboxLayerIdOrLayer : mapboxLayerIdOrLayer.id;\n    const layer = getLayer(mapOrGroup, mapboxLayerId);\n    /** @type {Array<Object>} */\n    const layerMapboxLayers = layer.get('mapbox-layers');\n    if (layerMapboxLayers.length === 1) {\n        throw new Error('Cannot remove last Mapbox layer from an OpenLayers layer.');\n    }\n    layerMapboxLayers.splice(layerMapboxLayers.indexOf(mapboxLayerId), 1);\n    const glStyle = mapOrGroup.get('mapbox-style');\n    const layers = glStyle.layers;\n    layers.splice(layers.findIndex(layer => layer.id === mapboxLayerId), 1);\n    const args = styleFunctionArgs[getStyleFunctionKey(glStyle, layer)];\n    if (args) {\n        const [olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage] = args;\n        if (Array.isArray(sourceOrLayers)) {\n            sourceOrLayers.splice(sourceOrLayers.findIndex(layer => layer === mapboxLayerId), 1);\n        }\n        stylefunction(olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage);\n    } else {\n        getLayer(mapOrGroup, mapboxLayerId).changed();\n    }\n}\n/**\n * Get the OpenLayers layer instance that contains the provided Mapbox Style\n * `layer`. Note that multiple Mapbox Style layers are combined in a single\n * OpenLayers layer instance when they use the same Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} layerId Mapbox Style layer id.\n * @return {Layer} OpenLayers layer instance.\n */\nfunction getLayer(map, layerId) {\n    const layers = map.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const mapboxLayers = layers[i].get('mapbox-layers');\n        if (mapboxLayers && mapboxLayers.indexOf(layerId) !== -1) {\n            return layers[i];\n        }\n    }\n    return undefined;\n}\n/**\n * Get the OpenLayers layer instances for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Array<Layer>} OpenLayers layer instances.\n */\nfunction getLayers(map, sourceId) {\n    const result = [];\n    const layers = map.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        if (layers[i].get('mapbox-source') === sourceId) {\n            result.push(layers[i]);\n        }\n    }\n    return result;\n}\n/**\n * Get the OpenLayers source instance for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Source} OpenLayers source instance.\n */\nfunction getSource(map, sourceId) {\n    const layers = map.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const source = /** @type {Layer} */\n        layers[i].getSource();\n        if (layers[i].get('mapbox-source') === sourceId) {\n            return source;\n        }\n    }\n    return undefined;\n}\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n *\n * The feature state will be stored on the OpenLayers layer matching the feature identifier, in the\n * `mapbox-featurestate` property.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer OpenLayers Map or layer to set the feature\n * state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @param {Object|null} state Feature state. Set to `null` to remove the feature state.\n */\nfunction setFeatureState(mapOrLayer, feature, state) {\n    const layers = 'getLayers' in mapOrLayer ? getLayers(mapOrLayer, feature.source) : [mapOrLayer];\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const featureState = layers[i].get('mapbox-featurestate');\n        if (featureState) {\n            if (state) {\n                featureState[feature.id] = state;\n            } else {\n                delete featureState[feature.id];\n            }\n            layers[i].changed();\n        } else {\n            throw new Error(`Map or layer for source \"${ feature.source }\" not found.`);\n        }\n    }\n}\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer Map or layer to set the feature state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @return {Object|null} Feature state or `null` when no feature state is set for the given\n * feature identifier.\n */\nfunction getFeatureState(mapOrLayer, feature) {\n    const layers = 'getLayers' in mapOrLayer ? getLayers(mapOrLayer, feature.source) : [mapOrLayer];\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const featureState = layers[i].get('mapbox-featurestate');\n        if (featureState && featureState[feature.id]) {\n            return featureState[feature.id];\n        }\n    }\n    return undefined;\n}\n\n/** @typedef {import(\"ol/Map.js\").default} Map */\n/**\n * @classdesc\n * Event emitted on configuration or loading error.\n */\nclass ErrorEvent extends BaseEvent {\n    /**\n   * @param {Error} error error object.\n   */\n    constructor(error) {\n        super(EventType.ERROR);\n        /**\n     * @type {Error}\n     */\n        this.error = error;\n    }\n}\n/**\n * @typedef {Object} Options\n * @property {string} styleUrl The URL of the Mapbox style object to use for this layer.  For a\n * style created with Mapbox Studio and hosted on Mapbox, this will look like\n * 'mapbox://styles/you/your-style'.\n * @property {string} [accessToken] The access token for your Mapbox style. This has to be provided\n * for `mapbox://` style urls. For `https://` and other urls, any access key must be the last query\n * parameter of the style url.\n * @property {string} [source] If your style uses more than one source, you need to use either the\n * `source` property or the `layers` property to limit rendering to a single vector source.  The\n * `source` property corresponds to the id of a vector source in your Mapbox style.\n * @property {Array<string>} [layers] Limit rendering to the list of included layers.  All layers\n * must share the same vector source.  If your style uses more than one source, you need to use\n * either the `source` property or the `layers` property to limit rendering to a single vector\n * source.\n * @property {boolean} [declutter=true] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"ol/layer/Base.js\").BackgroundColor|false} [background] Background color for the layer.\n * If not specified, the background from the Mapbox style object will be used. Set to `false` to prevent\n * the Mapbox style's background from being used.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"ol/extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `maxResolution` will\n * match the style source's `minzoom`.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `minZoom` will match\n * the style source's `minzoom`.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"ol/render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"ol/layer/VectorTile.js\").VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"ol/Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use `map.addLayer()`.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @classdesc\n * ```js\n * import {MapboxVectorLayer} from 'ol-mapbox-style';\n * ```\n * A vector tile layer based on a Mapbox style that uses a single vector source.  Configure\n * the layer with the `styleUrl` and `accessToken` shown in Mapbox Studio's share panel.\n * If the style uses more than one source, use the `source` property to choose a single\n * vector source.  If you want to render a subset of the layers in the style, use the `layers`\n * property (all layers must share the same vector source).  See the constructor options for\n * more detail.\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new MapboxVectorLayer({\n *           styleUrl: 'mapbox://styles/mapbox/bright-v9',\n *           accessToken: 'your-mapbox-access-token-here',\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * On configuration or loading error, the layer will trigger an `'error'` event.  Listeners\n * will receive an object with an `error` property that can be used to diagnose the problem.\n *\n * **Note for users of the full build**: The `MapboxVectorLayer` requires the\n * [ol-mapbox-style](https://github.com/openlayers/ol-mapbox-style) library to be loaded as well.\n *\n * @param {Options} options Options.\n * @extends {VectorTileLayer}\n * @fires module:ol/events/Event~BaseEvent#event:error\n * @api\n */\nclass MapboxVectorLayer extends VectorTileLayer {\n    /**\n   * @param {Options} options Layer options.  At a minimum, `styleUrl` and `accessToken`\n   * must be provided.\n   */\n    constructor(options) {\n        const declutter = 'declutter' in options ? options.declutter : true;\n        const source = new VectorTileSource({\n            state: 'loading',\n            format: new MVT()\n        });\n        super({\n            source: source,\n            background: options.background,\n            declutter: declutter,\n            className: options.className,\n            opacity: options.opacity,\n            visible: options.visible,\n            zIndex: options.zIndex,\n            minResolution: options.minResolution,\n            maxResolution: options.maxResolution,\n            minZoom: options.minZoom,\n            maxZoom: options.maxZoom,\n            renderOrder: options.renderOrder,\n            renderBuffer: options.renderBuffer,\n            renderMode: options.renderMode,\n            map: options.map,\n            updateWhileAnimating: options.updateWhileAnimating,\n            updateWhileInteracting: options.updateWhileInteracting,\n            preload: options.preload,\n            useInterimTilesOnError: options.useInterimTilesOnError,\n            properties: options.properties\n        });\n        if (options.accessToken) {\n            this.accessToken = options.accessToken;\n        }\n        const url = options.styleUrl;\n        applyStyle(this, url, options.layers || options.source, { accessToken: this.accessToken }).then(() => {\n            source.setState('ready');\n        }).catch(error => {\n            this.dispatchEvent(new ErrorEvent(error));\n            const source = this.getSource();\n            source.setState('error');\n        });\n        if (this.getBackground() === undefined) {\n            applyBackground(this, options.styleUrl, { accessToken: this.accessToken });\n        }\n    }\n}\n\nexport { MapboxVectorLayer, addMapboxLayer, apply, applyBackground, applyStyle, apply as default, getFeatureState, getLayer, getLayers, getMapboxLayer, getSource, getStyleForLayer, recordStyleLayer, removeMapboxLayer, renderTransparent, setFeatureState, stylefunction, updateMapboxLayer };\n//# sourceMappingURL=index.js.map\n","import MVT from '../src/ol/format/MVT.js';\nimport TileQueue, {\n  getTilePriority as tilePriorityFunction,\n} from '../src/ol/TileQueue.js';\nimport VectorTileLayer from '../src/ol/layer/VectorTile.js';\nimport VectorTileSource from '../src/ol/source/VectorTile.js';\nimport stringify from 'json-stringify-safe';\nimport {get} from '../src/ol/proj.js';\nimport {inView} from '../src/ol/layer/Layer.js';\nimport {stylefunction} from 'ol-mapbox-style';\n\n/** @type {any} */\nconst worker = self;\n\nlet frameState, pixelRatio, rendererTransform;\nconst canvas = new OffscreenCanvas(1, 1);\n// OffscreenCanvas does not have a style, so we mock it\ncanvas.style = {};\nconst context = canvas.getContext('2d');\n\nconst sources = {\n  landcover: new VectorTileSource({\n    maxZoom: 9,\n    format: new MVT(),\n    url: 'https://api.maptiler.com/tiles/landcover/{z}/{x}/{y}.pbf?key=get_your_own_D6rA4zTHduk6KOKTXzGB',\n  }),\n  contours: new VectorTileSource({\n    minZoom: 9,\n    maxZoom: 14,\n    format: new MVT(),\n    url: 'https://api.maptiler.com/tiles/contours/{z}/{x}/{y}.pbf?key=get_your_own_D6rA4zTHduk6KOKTXzGB',\n  }),\n  maptiler_planet: new VectorTileSource({\n    format: new MVT(),\n    maxZoom: 14,\n    url: 'https://api.maptiler.com/tiles/v3/{z}/{x}/{y}.pbf?key=get_your_own_D6rA4zTHduk6KOKTXzGB',\n  }),\n};\nconst layers = [];\n\n// Font replacement so we do not need to load web fonts in the worker\nfunction getFont(font) {\n  return font[0].replace('Noto Sans', 'serif').replace('Roboto', 'sans-serif');\n}\n\nfunction loadStyles() {\n  const styleUrl =\n    'https://api.maptiler.com/maps/topo-v2/style.json?key=get_your_own_D6rA4zTHduk6KOKTXzGB';\n\n  fetch(styleUrl)\n    .then((data) => data.json())\n    .then((styleJson) => {\n      const buckets = [];\n      let currentSource;\n      styleJson.layers.forEach((layer) => {\n        if (!layer.source) {\n          return;\n        }\n        if (currentSource !== layer.source) {\n          currentSource = layer.source;\n          buckets.push({\n            source: layer.source,\n            layers: [],\n          });\n        }\n        buckets[buckets.length - 1].layers.push(layer.id);\n      });\n\n      const spriteUrl =\n        styleJson.sprite + (pixelRatio > 1 ? '@2x' : '') + '.json';\n      const spriteImageUrl =\n        styleJson.sprite + (pixelRatio > 1 ? '@2x' : '') + '.png';\n      fetch(spriteUrl)\n        .then((data) => data.json())\n        .then((spriteJson) => {\n          buckets.forEach((bucket) => {\n            const source = sources[bucket.source];\n            if (!source) {\n              return;\n            }\n            const layer = new VectorTileLayer({\n              declutter: true,\n              source,\n              minZoom: source.getTileGrid().getMinZoom(),\n            });\n            layer.getRenderer().useContainer = function (target, transform) {\n              this.containerReused = this.getLayer() !== layers[0];\n              this.canvas = canvas;\n              this.context = context;\n              this.container = {\n                firstElementChild: canvas,\n                style: {\n                  opacity: layer.getOpacity(),\n                },\n              };\n              rendererTransform = transform;\n            };\n            stylefunction(\n              layer,\n              styleJson,\n              bucket.layers,\n              undefined,\n              spriteJson,\n              spriteImageUrl,\n              getFont\n            );\n            layers.push(layer);\n          });\n          worker.postMessage({action: 'requestRender'});\n        });\n    });\n}\n\n// Minimal map-like functionality for rendering\nconst tileQueue = new TileQueue(\n  (tile, tileSourceKey, tileCenter, tileResolution) =>\n    tilePriorityFunction(\n      frameState,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    ),\n  () => worker.postMessage({action: 'requestRender'})\n);\n\nconst maxTotalLoading = 8;\nconst maxNewLoads = 2;\n\nworker.addEventListener('message', (event) => {\n  if (event.data.action === 'requestFeatures') {\n    const layersInView = layers.filter((l) =>\n      inView(l.getLayerState(), frameState.viewState)\n    );\n    const observables = layersInView.map((l) =>\n      l.getFeatures(event.data.pixel)\n    );\n    Promise.all(observables).then((res) => {\n      const features = res.flat();\n      worker.postMessage({\n        action: 'getFeatures',\n        features: JSON.parse(stringify(features.map((e) => e.getProperties()))),\n      });\n    });\n    return;\n  }\n\n  if (event.data.action !== 'render') {\n    return;\n  }\n  frameState = event.data.frameState;\n  if (!pixelRatio) {\n    pixelRatio = frameState.pixelRatio;\n    loadStyles();\n  }\n  frameState.tileQueue = tileQueue;\n  frameState.viewState.projection = get('EPSG:3857');\n  layers.forEach((layer) => {\n    if (inView(layer.getLayerState(), frameState.viewState)) {\n      const renderer = layer.getRenderer();\n      renderer.renderFrame(frameState, canvas);\n    }\n  });\n  layers.forEach(\n    (layer) => layer.getRenderer().context && layer.renderDeclutter(frameState)\n  );\n  if (tileQueue.getTilesLoading() < maxTotalLoading) {\n    tileQueue.reprioritize();\n    tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n  }\n  const imageData = canvas.transferToImageBitmap();\n  worker.postMessage(\n    {\n      action: 'rendered',\n      imageData: imageData,\n      transform: rendererTransform,\n      frameState: JSON.parse(stringify(frameState)),\n    },\n    [imageData]\n  );\n});\n"],"names":["exports","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","i","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","serializer","replacer","cycleReplacer","stack","keys","key","slice","indexOf","join","length","thisPos","this","splice","push","call","module","obj","spaces","JSON","stringify","getSerialize","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","readPackedEnd","pbf","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","len","extraLen","realloc","writePackedVarint","arr","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","prototype","destroy","readFields","readField","result","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","readDouble","b","l","p","h","Error","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","decode","subarray","readUtf8TextDecoder","str","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","min","set","finish","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","charCodeAt","writeUtf8","writeBytes","writeRawMessage","fn","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","t","r","a","n","o","f","exp","u","sqrt","max","x","_maxEntries","_minEntries","ceil","clear","children","minX","minY","maxX","maxY","leaf","height","pop","all","_all","data","search","toBBox","collides","load","insert","_build","_splitRoot","_insert","remove","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","__esModule","definition","Object","defineProperty","enumerable","get","prop","hasOwnProperty","uidCounter_","ol_uid","PI","constructor","options","code_","code","units_","extent_","extent","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","super","units","resolution","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","Array","y","toEPSG4326","atan","EPSG4326Projection","cache","transforms","source","destination","transformFn","sourceCode","destinationCode","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","createEmpty","ii","extendCoordinate","dest","closestSquaredDistanceXY","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","stride","extendFlatCoordinates","equals","extendXY","forEachCorner","callback","getBottomLeft","getBottomRight","getTopRight","getArea","area","getHeight","getCenter","getCorner","corner","getRotatedViewport","center","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","applyTransform","stops","width","xs","ys","_boundingExtentXYs","coordinate1","coordinate2","projection","worldWidth","worldsAway","sourceExtentWidth","projectionExtent","squaredSegmentDistance","x1","y1","x2","y2","angleInDegrees","lerp","decimals","factor","round","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","levels","info","warn","error","none","level","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","add","projectionLike","replace","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","projections","forEach","addProjections","createProjection","defaultCode","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transform","getTransform","userProjection","toUserCoordinate","fromUserCoordinate","destProjection","args","console","fromUserExtent","projections2","forwardTransform","inverseTransform","dataProjection","defaultFeatureProjection","supportedMediaTypes","getReadOptions","readProjection","featureProjection","adaptOptions","assign","getType","readFeature","readFeatures","readGeometry","writeFeature","feature","writeFeatures","features","writeGeometry","geometry","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","disposed","dispose","disposeInternal","ascending","linearFindNearest","direction","candidate","reverseSubArray","begin","tmp","extension","isArray","arr1","arr2","len1","object","property","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","dispatchEvent","event","isString","evt","Event","dispatching","pendingRemovals","propagate","handleEvent","pr","removeEventListener","getListeners","hasListener","index","listen","thisArg","once","bind","originalListener","arguments","eventsKey","listenOnce","unlistenByKey","Observable","on","un","revision_","changed","getRevision","onInternal","onceInternal","ol_key","unInternal","unByKey","ObjectEvent","oldValue","values","values_","setProperties","getKeys","getProperties","getPropertiesInternal","hasProperties","notify","eventType","ObjectEventType","addChangeListener","removeChangeListener","silent","applyProperties","unset","ua","navigator","userAgent","toLowerCase","WORKER_OFFSCREEN_CANVAS","test","devicePixelRatio","WorkerGlobalScope","OffscreenCanvas","self","Image","passive","window","assert","assertion","errorMessage","tmp_","multiply","transform1","transform2","a1","d1","e1","f1","a2","d2","e2","f2","compose","dx1","dy1","sx","sy","angle","dx2","dy2","makeInverse","det","mat","transformStringDiv","transformString","node","document","createElement","style","transform2D","j","anchor","anchorX","anchorY","deltaX","deltaY","k","tmpTransform","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","lastResult","lastArgs","lastThis","called","nextArgs","memoizeOne","revision","squaredTolerance","getSimplifiedGeometry","clone","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","intersectsCoordinate","computeExtent","returnOrUpdate","rotate","scale","simplify","tolerance","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getStrideForLayout","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","setLayout","nesting","getLayoutForStride","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","ends","assignClosestPoint","maxDelta","isRing","tmpPoint","squaredDistance","assignClosestArrayPoint","deflateCoordinates","deflateCoordinatesArray","coordinatess","jj","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","x3","y3","quantizeArray","ret","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","endss","coordinatesss","interpolatePoint","fraction","cumulativeLengths","haystack","needle","comparator","mid","cmp","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","intersectsLineString","coordinatesExtent","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRing","intersectsLinearRingArray","lineStringLength","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","getCoordinateAt","getLength","getFlatMidpoint","ends_","lineStrings","appendLineString","multiLineString","interpolate","lineStringsCoordinateAtM","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","intersectsLineStringArray","deflateCoordinate","appendPoint","multiPoint","getPoint","getPoints","points","linearRing","twiceArea","linearRings","LinearRing","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","orientLinearRings","orientLinearRingsArray","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","thisLayout","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","getEndss","getFlatInteriorPoints","getInteriorPoints","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","RenderFeature","properties","id","styleFunction","id_","type_","flatCoordinates_","flatMidpoints_","properties_","midpoint","getId","getGeometry","getStyleFunction","layersPBFReader","layers","layer","layerPBFReader","name","version","featurePBFReader","readRawFeature","featureClass_","featureClass","geometryName_","geometryName","layerName_","layerName","layers_","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","geometryType","numEnds","getGeometryType","geom","startOrientation","prevEndIndex","orientation","ctor","setGeometryName","transformed","power","transformGeometryWithOptions","setGeometry","setId","pbfLayers","pbfLayer","setLayers","DROP","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","element","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","state","getState","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","background_","background","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","array","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","cappedMaxRes","easeIn","easeOut","inAndOut","animationCallback","returnValue","setTimeout","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","position","cosAngle","sinAngle","rotX","rotY","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","createSnapToResolutions","defaultMaxResolution","degrees","defaultMinResolution","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","theta","createSnapToN","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","x0","y0","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","requestAnimationFrame","currentCenter","currentResolution","w","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","toUserExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getForViewAndSize","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","inView","layerState","Base","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","map","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","Promise","resolve","getData","isVisible","view","frameState","getMapInternal","getView","layerStatesArray","getLayerGroup","find","layerExtent","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","some","arrayLayerState","createRenderer","hasRenderer","toSize","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImage","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","getSize","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","fromString","cacheSize","g","exec","hasAlpha","parseInt","substr","startsWith","split","Number","normalize","fromStringInternal_","asArray","asColorLike","createCanvasContext2D","canvasPool","settings","canvas","shift","getContext","releaseCanvas","context","clearRect","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","measureFont","measureContext","textHeights","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","left","offsetHeight","measureAndCacheTextWidth","reduce","prev","curr","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","contextInstructions","label","executeLabelInstructions","drawImage","restore","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points_","radius_","radius1","radius2_","radius2","angle_","stroke_","stroke","size_","renderOptions_","getFill","getRadius","getRadius2","getAngle","getStroke","setFill","createHitDetectionCanvas_","image","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineCap","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","fillStyle","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","startAngle","step","angle0","radiusC","lineTo","closePath","setRadius","color_","setColor","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometry_","geometryFunction_","defaultGeometryFunction","image_","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setImage","setText","defaultStyles","createDefaultStyle","Circle","decodeFallback","src","reject","then","catch","handleLoad","unlisten","handleError","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","crossOrigin","setSize","maxCacheSize","shared","taintedTestContext","IconImage","imageState","hitDetectionImage_","crossOrigin_","imageState_","src_","tainted_","initializeImage_","isTainted_","willReadFrequently","getImageData","dispatchChangeEvent_","handleImageError_","handleImageLoad_","replaceColor_","fillRect","getSrc","HTMLImageElement","ctx","globalCompositeOperation","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","cacheKey","iconImage_","offset_","offsetOrigin_","offsetOrigin","initialOptions_","onload","imageSize","setAnchor","iconImageSize","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","names","namedType","specific","overlapsType","oneType","otherType","LiteralExpression","CallExpression","operator","newParsingContext","variables","Set","parse","encoded","parser","parsers","parseCallExpression","item","Ops","Get","Var","Any","All","Not","Resolution","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","createParser","withArgs","arg","operation","minArgs","maxArgs","argType","argCount","expression","gotType","expectedType","argValidator","returnType","buildExpression","expected","actual","compileExpression","compileAssertionExpression","nameExpression","compileAccessorExpression","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileMatchExpression","always","rulesToStyleFunction","rules","evaluator","compiledRules","rule","styles","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","parsingContext","evaluators","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","optionalDeclutterMode","icon","buildIcon","pointsName","requireNumber","shape","buildShape","evaluateRadius","circle","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","colorLikeEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSizeLike","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getStyle","getUpdateWhileAnimating","getUpdateWhileInteracting","renderDeclutter","declutterTree","setRenderOrder","renderOrder","toStyleLike","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","endGeometry","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","sharedData","origin","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","drawFlatCoordinatess_","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryWidths","beg","keep","saveTextStates_","p0","p1","p2","p3","flatOffset","oo","cc","chunk","chunkBegin","range","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","toString","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","substring","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","widths","heights","lineWidths","baseStyle","currentWidth","currentHeight","getTextDimensions","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","beginPath","moveTo","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","pixelCoordinates","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","execute","executeHitDetection","ORDER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","forEachFeatureAtCoordinate","hitTolerance","declutteredFeatures","contextSize","newContext","indexes","maxDistanceSq","distances","distanceSq","distance","pixelIndex","getPixelIndexArray","imageData","idx","zs","executor","builderTypes","ready","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","matches","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","inversePixelTransform","pixelContext","container","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","col","row","err","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","interimTile","transition_","transition","transitionStarts_","release","setState","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","time","inTransition","endTransition","tileLoadFunction","unlisten_","tileLoadFunction_","unlistenImage_","getBlankImage","naturalWidth","naturalHeight","loadHandler","errorHandler","listening","decoding","loaded","listenerKeys","listenImage","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","triangulation","sources","gutter","renderEdges","imageSmoothingEnabled","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","steps","ud","vd","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","leftToLoad","sourceListenKey","unlistenSources_","TileRange","contains","containsTileRange","extend","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpTileRange_","isDrawableTile","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getTile","getPreload","pixelToCoordinateTransform","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","tileSize","tileResolution","getGutterForProjection","layerIndex","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","getInterpolate","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","usedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","tileSourceKey","expireCache","postRenderFunctions","preload","tileCallback","wantedTiles","tileQueue","tileCount","getTileCoordCenter","useTile","updateCacheSize","userTransform","context_","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simpleGeometry","transformGeom2D","setTransform","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","declutterBuilderGroup","imageBuilderGroup","imageReplay","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","getSquaredTolerance","getTolerance","renderFeature","loading","renderGeometry","renderFeatureInternal","getGeometries","IMAGE_REPLAYS","VECTOR_REPLAYS","boundHandleStyleImageChange_","handleStyleImageChange_","renderedLayerRevision_","renderedPixelToCoordinateTransform_","renderedRotation_","tmpTransform_","prepareTile","updateExecutorGroup_","tileImageNeedsRender_","viewHints","hifi","wantedResolution","getRenderMode","renderTileImage_","executorGroups","hasContext","layerRevision","builderState","getReplayState","dirty","renderedRenderOrder","getTileGrid","tileExtent","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","declutterExecutorGroups","tt","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","getOverlaps","lastIndexOf","executorGroup","getTileCoordForCoordAndResolution","getWrapX","loadingSourceTiles","tilePixel","accumulator","concat","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","resultFeatures","hitDetect","getTileRenderTransform","worldOffset","renderMode","replayTypes","group","replayState","renderedTileResolution","renderedTileRevision","renderPixelRatio","renderScale","pixelScale","BaseVector","renderMode_","setPreload","setUseInterimTilesOnError","TileProperty","format","format_","features_","loader_","url_","getFormat","onLoad","setFeatures","onError","setLoader","loader","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","fromKey","pruneExceptNewestZ","tmpTileCoord","strict","compare","every","currentVal","res","isSorted","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","getFullTileRange","opt_direction","fullTileRanges","adaptAttributions","attributionLike","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","interpolate_","viewResolver","viewRejector","viewPromise_","getAttributionsCollapsible","refresh","setAttributions","getForProjection","extentFromProjection","resolutionsFromExtent","createForExtent","createForProjection","half","TileSourceEvent","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileCoordForTileUrlFunction","withinExtentAndZ","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","charCode","stop","urlTileCoord","replayState_","errorTileKeys","renderedTileZ","withCredentials","loadFeaturesXhr","success","failure","xhr","XMLHttpRequest","open","responseType","status","responseText","responseXML","DOMParser","parseFromString","onerror","send","xyzOptions","gridOptions","sourceTileCache","tileClass","tileGrids_","getFeaturesInExtent","tileFeatures","usedSourceTiles","getCacheKeyForTileKey","sourceZ","tileUrl","sourceTileState","listenChange","sourceTileKey","coordKey","newTile","getDefaultExportFromCjs","parseCSSColor_1","kCSSColorTable","clamp_css_byte","clamp_css_float","parse_css_int","parseFloat","parse_css_float","css_hue_to_rgb","m1","m2","parseCSSColor","css_str","iv","ep","fname","params","Color","rgba","toArray","toArray01","toArray01PremultipliedAlpha","black","white","transparent","red","blue","Color$1","convertLiteral","convertFunction","parameters","propertySpec","default","convertIdentityFunction","zoomAndFeatureDependent","featureDependent","zoomDependent","tokens","convertTokenString","featureFunctionParameters","featureFunctionStops","zoomStops","functionType","getFunctionType","getInterpolateOperator","appendStopPair","convertPropertyFunction","fixupDegenerateStepCurve","convertZoomAndPropertyFunction","isStep","base","convertZoomFunction","colorSpace","getFallback","defaultValue","curve","interpolated","re","literal","lastIndex","ParsingError","message","ParsingError$1","Scope","parent","bindings","has","Scope$1","NullType","kind","ObjectType","ValueType","CollatorType","FormattedType","ResolvedImageType","array$1","itemType","N","toString$1","valueMemberTypes","checkSubtype","memberType","isValidType","provided","allowedTypes","isValidNativeType","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","lhs","rhs","resolvedLocale","resolvedOptions","FormattedSection","fontStack","textColor","Formatted","sections","unformatted","section","factory","serialize","serialized","ResolvedImage","validateRGBA","isValue","mixed","typeOf","Literal","evaluate","eachChild","outputDefined","Literal$1","RuntimeError$1","types$2","string","number","boolean","Assertion","parsed","Assertion$1","FormatExpression","firstArg","nextTokenMayBeObject","lastExpression","content","evaluatedContent","ImageExpression","evaluatedImageName","availableImages","types$1","Coercion","parseColor","child","Coercion$1","geometryTypes","EvaluationContext$1","globals","featureState","formattedSection","_parseColorCache","canonical","featureTileCoord","featureDistanceData","canonicalID","distanceFromCenter","dX","dY","bearing","cached","CompoundExpression","_evaluate","definitions","availableOverloads","overloads","signature","signatureContext","ParsingContext$1","registry","path","scope","parsedArgs","argParseFailed","errors","signatures","stringifySignature","actualTypes","register","CompoundExpression$1","CollatorExpression","updateBBox","bbox","boxWithinBox","bbox1","bbox2","getTileCoordinates","lat","tilesAtZoom","onBoundary","rayIntersect","pointWithinPolygon","rings","inside","ring","len2","pointWithinPolygons","twoSided","q1","q2","det1","det2","lineIntersectLine","vectorP","vectorQ","lineIntersectPolygon","lineStringWithinPolygon","lineStringWithinPolygons","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","getTilePoints","pointBBox","shifts","tilePoints","getTileLines","lineBBox","tileLines","tileLine","resetBBox","Within","geojson","tilePolygon","tilePolygons","pointsWithinPolygons","linesWithinPolygons","Within$1","isFeatureConstant","isStateConstant","isGlobalPropertyConstant","boundExpression","Var$1","ParsingContext","expr","_parse","annotate","typeAnnotation","Expr","isConstant","ec","isTypeAnnotation","childrenConstant","findStopLessThanOrEqualTo","currentValue","nextValue","lowerIndex","upperIndex","currentIndex","Step","labels","outputs","outputType","labelKey","valueKey","stopCount","out","Step$1","unitbezier","UnitBezier","p1x","p1y","p2x","p2y","cx","bx","ax","cy","by","ay","sampleCurveX","sampleCurveY","sampleCurveDerivativeX","solveCurveX","epsilon","t0","t1","t2","solve","UnitBezier$1","freeze","__proto__","from","to","Xn","Yn","Zn","t3","deg2rad$1","rad2deg","xyz2lab","lab2xyz","xyz2rgb","rgb2xyz","rgbToLab","rgbColor","labToRgb","labColor","interpolateHue","lab","forward","hcl","hclColor","Interpolate","interpolation","interpolationFactor","lower","upper","exponentialInterpolation","controlPoints","rest","outputLower","outputUpper","lowerValue","upperValue","difference","Interpolate$1","Coalesce","needsAnnotation","firstImage","Coalesce$1","Let","binding","Let$1","At","At$1","In","In$1","IndexOf","fromIndex","IndexOf$1","inputType","cases","otherwise","labelContext","MAX_SAFE_INTEGER","sortedLabels","groupedByOutput","outputLookup","outputIndex","coerceLabel","Match$1","Case","branches","_","Case$1","Slice","beginIndex","endIndex","Slice$1","isComparableType","eqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","Comparison","hasUntypedArgument","lt","Equals","NotEquals","LessThanOrEqual","GreaterThanOrEqual","NumberFormat","currency","unit","minFractionDigits","maxFractionDigits","minimumFractionDigits","maximumFractionDigits","Length","expressions","varargs","pitch","heatmapDensity","lineProgress","skyRadialProgress","accumulated","E","LN10","asin","isSupportedScript","toUpperCase","isFunction","StyleExpression","_warningHistory","_evaluator","_defaultValue","spec","getDefaultValue","_enumValues","evaluateWithoutErrorHandling","createExpression","types","enum","formatted","resolvedImage","getExpectedType","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","interpolationType","createPropertyExpression","isFeatureConstant$1","supportsPropertyExpression","isZoomConstant","supportsZoomExpression","zoomCurve","findZoomCurve","supportsInterpolation","childResult","deepUnbundle","unbundledValue","valueOf","unbundle","isExpressionFilter","createFilter","layerType","needGeometry","needFeature","convertFilter","filterExp","staticFilter","isDynamicFilter","unionDynamicBranches","collapseDynamicBooleanExpressions","extractStaticFilter","filterSpec","compiledStaticFilter","filterFunc","globalProperties","dynamicFilterFunc","compiledDynamicFilter","dynamicFilter","geometryNeeded","collapsed","dynamicConditionExpressions","collapsedExpression","subExpression","isBranchingDynamically","filters","convertComparisonOp","convertNegation","convertInOp","convertHasOp","refProperties","deref","derefLayers","create","ref","fontWeights","thin","hairline","light","book","regular","normal","plain","roman","standard","medium","bold","heavy","fat","poster","sp","italicRE","fontCache","mb2css","cssData","fontFamilies","maybeWeight","previousPart","functionCacheByStyleId","filterCacheByStyleId","styleId","getStyleId","glStyle","getStyleFunctionKey","olLayer","getFunctionCache","functionCache","getFilterCache","filterCache","deg2rad","defaultResolutions","createCanvas","drawIconHalo","spriteImage","spriteImageData","haloWidth","haloColor","imageCanvas","imageContext","smoothstep","drawSDF","gamma","putImageData","hairSpacePool","applyLetterSpacing","letterSpacing","textWithLetterSpacing","lines","joinSpaceString","ll","getMeasureContext","measureCache","wrapText","em","hardLines","wrappedText","words","maxWidth","word","testLine","prevWidth","nextWidth","next","lineWords","lastWord","expressionData","rawExpression","compiledExpression","emptyObj$1","zoomObj","renderFeatureCoordinates","getValue","layoutOrPaint","layerId","functions","isExpr","getIconDeclutterMode","evaluateFilter","renderTransparentEnabled","colorWithOpacity","templateRegEx","fromTemplate","recordLayer","styleFunctionArgs","stylefunction","sourceOrLayers","spriteData","spriteImageUrl","getFonts","spriteImageSize","spriteImageUnSDFed","worker","postMessage","action","allLayers","layersBySourceLayer","mapboxLayers","iconImageCache","patternCache","mapboxSource","sourceLayer","textHalo","onlyLayer","featureBelongsToLayer","stylesLength","layerData","paint","visibility","minzoom","maxzoom","strokeColor","fillIcon","icon_cache_key","pattern","createPattern","iconImg","skipLabel","textLineHeight","textSize","maxTextWidth","hasImage","placementAngle","styleGeom","imageElement","iconRotationAlignment","iconSize","iconColor","iconCacheKey","iconOptions","sdf","circleRadius","circleStrokeColor","circleColor","circleStrokeWidth","cache_key","fontArray","metadata","textField","chunkFont","trim","textTransform","wrappedLabel","textAnchor","symbolSpacing","textHaloWidth","textOffset","textTranslate","vOffset","hOffset","textRotationAlignment","textJustify","halfTextSize","textPadding","rendererTransform","landcover","contours","maptiler_planet","tileCenter","observables","fetch","json","styleJson","buckets","currentSource","spriteUrl","sprite","spriteJson","bucket","VectorTile","transferToImageBitmap"],"sourceRoot":""}