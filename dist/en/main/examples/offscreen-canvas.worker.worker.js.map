{"version":3,"file":"offscreen-canvas.worker.worker.js","mappings":"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,IACA,IACA,IACA,GAEJ,MAAS,CACL,EACA,EACA,EACA,GAEJ,eAAkB,CACd,IACA,IACA,IACA,GAEJ,KAAQ,CACJ,EACA,EACA,IACA,GAEJ,WAAc,CACV,IACA,GACA,IACA,GAEJ,MAAS,CACL,IACA,GACA,GACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,UAAa,CACT,GACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,EACA,GAEJ,UAAa,CACT,IACA,IACA,GACA,GAEJ,MAAS,CACL,IACA,IACA,GACA,GAEJ,eAAkB,CACd,IACA,IACA,IACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,GACA,GACA,GAEJ,KAAQ,CACJ,EACA,IACA,IACA,GAEJ,SAAY,CACR,EACA,EACA,IACA,GAEJ,SAAY,CACR,EACA,IACA,IACA,GAEJ,cAAiB,CACb,IACA,IACA,GACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,UAAa,CACT,EACA,IACA,EACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,YAAe,CACX,IACA,EACA,IACA,GAEJ,eAAkB,CACd,GACA,IACA,GACA,GAEJ,WAAc,CACV,IACA,IACA,EACA,GAEJ,WAAc,CACV,IACA,GACA,IACA,GAEJ,QAAW,CACP,IACA,EACA,EACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,aAAgB,CACZ,IACA,IACA,IACA,GAEJ,cAAiB,CACb,GACA,GACA,IACA,GAEJ,cAAiB,CACb,GACA,GACA,GACA,GAEJ,cAAiB,CACb,GACA,GACA,GACA,GAEJ,cAAiB,CACb,EACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,EACA,IACA,GAEJ,SAAY,CACR,IACA,GACA,IACA,GAEJ,YAAe,CACX,EACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,IACA,IACA,GAEJ,WAAc,CACV,GACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,GACA,GACA,GAEJ,YAAe,CACX,IACA,IACA,IACA,GAEJ,YAAe,CACX,GACA,IACA,GACA,GAEJ,QAAW,CACP,IACA,EACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,KAAQ,CACJ,IACA,IACA,EACA,GAEJ,UAAa,CACT,IACA,IACA,GACA,GAEJ,KAAQ,CACJ,IACA,IACA,IACA,GAEJ,MAAS,CACL,EACA,IACA,EACA,GAEJ,YAAe,CACX,IACA,IACA,GACA,GAEJ,KAAQ,CACJ,IACA,IACA,IACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,GACA,GACA,GAEJ,OAAU,CACN,GACA,EACA,IACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,cAAiB,CACb,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,EACA,GAEJ,aAAgB,CACZ,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,qBAAwB,CACpB,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,YAAe,CACX,IACA,IACA,IACA,GAEJ,cAAiB,CACb,GACA,IACA,IACA,GAEJ,aAAgB,CACZ,IACA,IACA,IACA,GAEJ,eAAkB,CACd,IACA,IACA,IACA,GAEJ,eAAkB,CACd,IACA,IACA,IACA,GAEJ,eAAkB,CACd,IACA,IACA,IACA,GAEJ,YAAe,CACX,IACA,IACA,IACA,GAEJ,KAAQ,CACJ,EACA,IACA,EACA,GAEJ,UAAa,CACT,GACA,IACA,GACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,EACA,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","sources":["webpack:///../node_modules/ieee754/index.js","webpack:///../node_modules/json-stringify-safe/stringify.js","webpack:///../node_modules/pbf/index.js","webpack:///../node_modules/rbush/rbush.min.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///../src/ol/events/Event.js","webpack:///../src/ol/ObjectEventType.js","webpack:///../src/ol/Disposable.js","webpack:///../src/ol/array.js","webpack:///../src/ol/functions.js","webpack:///../src/ol/obj.js","webpack:///../src/ol/events/Target.js","webpack:///../src/ol/events/EventType.js","webpack:///../src/ol/events.js","webpack:///../src/ol/Observable.js","webpack:///../src/ol/util.js","webpack:///../src/ol/Object.js","webpack:///../src/ol/asserts.js","webpack:///../src/ol/Feature.js","webpack:///../src/ol/has.js","webpack:///../src/ol/transform.js","webpack:///../src/ol/extent/Relationship.js","webpack:///../src/ol/extent.js","webpack:///../src/ol/proj/Units.js","webpack:///../src/ol/proj/Projection.js","webpack:///../src/ol/proj/epsg3857.js","webpack:///../src/ol/proj/epsg4326.js","webpack:///../src/ol/proj/projections.js","webpack:///../src/ol/proj/transforms.js","webpack:///../src/ol/coordinate.js","webpack:///../src/ol/math.js","webpack:///../src/ol/sphere.js","webpack:///../src/ol/console.js","webpack:///../src/ol/proj.js","webpack:///../src/ol/geom/flat/transform.js","webpack:///../src/ol/geom/Geometry.js","webpack:///../src/ol/geom/SimpleGeometry.js","webpack:///../src/ol/geom/flat/deflate.js","webpack:///../src/ol/geom/Point.js","webpack:///../src/ol/geom/flat/closest.js","webpack:///../src/ol/geom/flat/simplify.js","webpack:///../src/ol/geom/flat/segments.js","webpack:///../src/ol/geom/flat/inflate.js","webpack:///../src/ol/geom/flat/interpolate.js","webpack:///../src/ol/geom/flat/contains.js","webpack:///../src/ol/geom/flat/intersectsextent.js","webpack:///../src/ol/geom/flat/length.js","webpack:///../src/ol/geom/LineString.js","webpack:///../src/ol/geom/flat/area.js","webpack:///../src/ol/geom/LinearRing.js","webpack:///../src/ol/geom/flat/interiorpoint.js","webpack:///../src/ol/geom/flat/reverse.js","webpack:///../src/ol/geom/flat/orient.js","webpack:///../src/ol/geom/Polygon.js","webpack:///../src/ol/geom/MultiPoint.js","webpack:///../src/ol/geom/MultiLineString.js","webpack:///../src/ol/geom/flat/center.js","webpack:///../src/ol/geom/MultiPolygon.js","webpack:///../src/ol/format/Feature.js","webpack:///../src/ol/render/Feature.js","webpack:///../src/ol/format/MVT.js","webpack:///../src/ol/structs/PriorityQueue.js","webpack:///../src/ol/TileState.js","webpack:///../src/ol/TileQueue.js","webpack:///../src/ol/layer/Property.js","webpack:///../src/ol/layer/Base.js","webpack:///../src/ol/render/EventType.js","webpack:///../src/ol/ViewHint.js","webpack:///../src/ol/ViewProperty.js","webpack:///../src/ol/tilegrid/common.js","webpack:///../src/ol/centerconstraint.js","webpack:///../src/ol/resolutionconstraint.js","webpack:///../src/ol/rotationconstraint.js","webpack:///../src/ol/easing.js","webpack:///../src/ol/View.js","webpack:///../src/ol/layer/Layer.js","webpack:///../src/ol/ImageState.js","webpack:///../src/ol/size.js","webpack:///../src/ol/style/Image.js","webpack:///../node_modules/color-name/index.js","webpack:///../src/ol/color.js","webpack:///../src/ol/colorlike.js","webpack:///../src/ol/dom.js","webpack:///../src/ol/css.js","webpack:///../src/ol/render/canvas.js","webpack:///../src/ol/style/RegularShape.js","webpack:///../src/ol/style/Circle.js","webpack:///../src/ol/style/Fill.js","webpack:///../src/ol/style/Stroke.js","webpack:///../src/ol/style/Style.js","webpack:///../src/ol/Image.js","webpack:///../src/ol/style/IconImageCache.js","webpack:///../src/ol/style/IconImage.js","webpack:///../src/ol/style/Icon.js","webpack:///../src/ol/style/Text.js","webpack:///../src/ol/expr/expression.js","webpack:///../src/ol/expr/cpu.js","webpack:///../src/ol/render/canvas/style.js","webpack:///../src/ol/layer/BaseVector.js","webpack:///../src/ol/render/canvas/Instruction.js","webpack:///../src/ol/render/VectorContext.js","webpack:///../src/ol/render/canvas/Builder.js","webpack:///../src/ol/render/canvas/ImageBuilder.js","webpack:///../src/ol/render/canvas/LineStringBuilder.js","webpack:///../src/ol/render/canvas/PolygonBuilder.js","webpack:///../src/ol/geom/flat/linechunk.js","webpack:///../src/ol/geom/flat/straightchunk.js","webpack:///../src/ol/render/canvas/TextBuilder.js","webpack:///../src/ol/render/canvas/BuilderGroup.js","webpack:///../src/ol/geom/flat/textpath.js","webpack:///../src/ol/render/canvas/Executor.js","webpack:///../src/ol/render/canvas/ExecutorGroup.js","webpack:///../src/ol/renderer/Layer.js","webpack:///../src/ol/render/Event.js","webpack:///../src/ol/renderer/canvas/Layer.js","webpack:///../src/ol/Tile.js","webpack:///../src/ol/ImageTile.js","webpack:///../src/ol/reproj/Triangulation.js","webpack:///../src/ol/reproj.js","webpack:///../src/ol/reproj/Tile.js","webpack:///../src/ol/reproj/common.js","webpack:///../src/ol/TileRange.js","webpack:///../src/ol/renderer/canvas/TileLayer.js","webpack:///../src/ol/render/canvas/Immediate.js","webpack:///../src/ol/render/canvas/hitdetect.js","webpack:///../src/ol/renderer/vector.js","webpack:///../src/ol/renderer/canvas/VectorTileLayer.js","webpack:///../src/ol/layer/TileProperty.js","webpack:///../src/ol/layer/VectorTile.js","webpack:///../src/ol/VectorTile.js","webpack:///../src/ol/structs/LRUCache.js","webpack:///../src/ol/tilecoord.js","webpack:///../src/ol/TileCache.js","webpack:///../src/ol/tilegrid/TileGrid.js","webpack:///../src/ol/source/TileEventType.js","webpack:///../src/ol/source/Source.js","webpack:///../src/ol/tilegrid.js","webpack:///../src/ol/source/Tile.js","webpack:///../src/ol/tileurlfunction.js","webpack:///../src/ol/source/UrlTile.js","webpack:///../src/ol/VectorRenderTile.js","webpack:///../src/ol/featureloader.js","webpack:///../src/ol/source/VectorTile.js","webpack:///../node_modules/ol-mapbox-style/dist/index.js","webpack:///./offscreen-canvas.worker.js"],"sourcesContent":["/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","exports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return \"[Circular ~]\"\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`'\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass = Feature;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id\n    ).enableSimplifyTransformed(),\n    false,\n    options\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options)\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout, object.ends),\n    false,\n    options\n  );\n}\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [options] Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1]\n          );\n          coordsLen += 2;\n        }\n      } else {\n        throw new Error('Invalid command found in the PBF');\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        2,\n        values,\n        id\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n            ? new LineString(flatCoordinates, 'XY')\n            : geometryType === 'MultiPoint'\n            ? new MultiPoint(flatCoordinates, 'XY')\n            : geometryType === 'MultiLineString'\n            ? new MultiLineString(flatCoordinates, 'XY', ends)\n            : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return features;\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n          ? pbf.readDouble()\n          : tag === 4\n          ? pbf.readVarint64()\n          : tag === 5\n          ? pbf.readVarint()\n          : tag === 6\n          ? pbf.readSVarint()\n          : tag === 7\n          ? pbf.readBoolean()\n          : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../render/Feature.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../render/Feature.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue'\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number'\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`'\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`'\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.'\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n","/**\n * @module ol/color\n */\nimport colorNames from 'color-name';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgb(a) string.\n * @param {string} color Named color.\n * @return {string} RGB(A) string.\n */\nfunction fromNamed(color) {\n  const name = color.toLowerCase();\n  if (!colorNames.hasOwnProperty(name)) {\n    if (name === 'transparent') {\n      return 'rgba(0,0,0,0)';\n    }\n    return '';\n  }\n  const rgb = colorNames[name];\n  return 'rgb(' + rgb[0] + ',' + rgb[1] + ',' + rgb[2] + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    throw new Error('Invalid color');\n  }\n  return color;\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`'\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(this.getExtent(), requestResolution, this.getPixelRatio())\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e)\n          )\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n * @param {string} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time'\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided'\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`'\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {import(\"../style/literal\").LiteralStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    style: {},\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(AnyType, withArgsCount(1, 1), withGetArgs),\n  [Ops.Var]: createParser(AnyType, withArgsCount(1, 1), withVarArgs),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.Array]: createParser(\n    NumberArrayType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(3, 4),\n    parseArgsOfType(NumberType)\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for var operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.variables.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for operation ${operation}, got ${argCount}`\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      throw new Error(\n        `Expected ${minArgs} to ${maxArgs} arguments for operation ${operation}, got ${argCount}`\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context, parsedArgs, typeHint) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context, typeHint);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            ` : got ${gotType} but expected ${expectedType}`\n        );\n      }\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs, typeHint) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = typeHint !== undefined ? typeHint : AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount\n      )} instead`\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount\n      )} instead`\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType\n      )} for the interpolate operation` + ` : got ${inputType} instead`\n    );\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`\n    );\n  }\n\n  const parsedArgs = [\n    parse(interpolation, context),\n    ...encoded.slice(2).map((arg) => parse(arg, context)),\n  ];\n\n  // check input types\n  const input = parsedArgs[0];\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        ` : got ${typeName(input.type)} instead`\n    );\n  }\n\n  return parsedArgs;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context) {\n  const parsedArgs = encoded.slice(1).map((arg) => parse(arg, context));\n\n  // check condition types\n  for (let i = 0; i < parsedArgs.length - 1; i += 2) {\n    if (!overlapsType(BooleanType, parsedArgs[i].type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          ` : got ${typeName(parsedArgs[i].type)} at position ${i} instead`\n      );\n    }\n  }\n\n  return encoded.slice(1).map((arg) => parse(arg, context));\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  return encoded.slice(1).map((arg) => parse(arg, context));\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded\n        )}`\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    for (let i = 0; i < length; ++i) {\n      styles[i] = evaluators[i](evaluationContext);\n    }\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'fill-color',\n    context\n  );\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context\n  );\n\n  const text = new Text({});\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align'\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline'\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units'\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units'\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(flatStyle, prefix + 'declutter');\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const radius = optionalNumber(flatStyle, prefix + 'radius');\n  const radius1 = optionalNumber(flatStyle, prefix + 'radius1');\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius1,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== 'vector'\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === 'vector'\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    if (declutter) {\n      tile.declutterExecutorGroups[layerUid] = [];\n    }\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        builderExtent,\n        resolution,\n        pixelRatio\n      );\n      const declutterBuilderGroup = declutter\n        ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n        : undefined;\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutterBuilderGroup\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer()\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n      if (declutterBuilderGroup) {\n        const declutterExecutorGroup = new CanvasExecutorGroup(\n          null,\n          resolution,\n          pixelRatio,\n          source.getOverlaps(),\n          declutterBuilderGroup.finish(),\n          layer.getRenderBuffer()\n        );\n        tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n      }\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n      if (declutterExecutorGroups) {\n        executorGroups.push(declutterExecutorGroups);\n      }\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures =\n          executorGroups === declutterExecutorGroups\n            ? frameState.declutterTree.all().map((item) => item.value)\n            : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice()\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile\n        .getSourceTiles()\n        .reduce(function (accumulator, sourceTile) {\n          return accumulator.concat(sourceTile.getFeatures());\n        }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection)\n          )\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.getLayer().getOpacity();\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const declutterExecutorGroups =\n        tile.declutterExecutorGroups[getUid(this.getLayer())];\n      if (declutterExecutorGroups) {\n        for (let j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n          declutterExecutorGroups[j].execute(\n            this.context,\n            1,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            undefined,\n            frameState.declutterTree\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset\n      )\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layer.getOpacity();\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes)\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      if (currentClip) {\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]]\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          1,\n          transform,\n          rotation,\n          hifi,\n          replayTypes\n        );\n      }\n      if (contextSaved) {\n        context.restore();\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder group for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio)\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        renderScale,\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()]\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options} [options] Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Object} */ (Object.assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(\n      /** @type {import(\"./BaseVector.js\").Options<import(\"../source/VectorTile.js\").default>} */ (\n        baseOptions\n      )\n    );\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    assert(\n      renderMode == 'hybrid' || renderMode == 'vector',\n      \"`renderMode` must be `'hybrid'` or `'vector'`\"\n    );\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already'\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      '`resolutions` must be sorted in descending order'\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal'\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal'\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.'\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(\n            range,\n            'The {-y} placeholder requires a tile grid with extent'\n          );\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json') {\n        source = JSON.parse(xhr.responseText);\n      } else if (type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {fromKey, getCacheKeyForTileKey, getKeyZXY} from '../tilecoord.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache = new TileCache(this.tileCache.highWaterMark);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.tileCache;\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const z = fromKey(tileCache.peekFirstKey())[0];\n    const tileGrid = this.tileGrid;\n    tileCache.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n    this.sourceTileCache.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    const usedSourceTiles = Object.keys(usedTiles).reduce((acc, key) => {\n      const cacheKey = getCacheKeyForTileKey(key);\n      const tile = tileCache.peek(cacheKey);\n      if (tile) {\n        const sourceTiles = tile.sourceTiles;\n        for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n          acc[sourceTiles[i].getKey()] = true;\n        }\n      }\n      return acc;\n    }, {});\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache.expireCache(usedSourceTiles);\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection\n        );\n        const sourceTile = this.sourceTileCache.containsKey(tileUrl)\n          ? this.sourceTileCache.get(tileUrl)\n          : new this.tileClass(\n              sourceTileCoord,\n              tileUrl ? TileState.IDLE : TileState.EMPTY,\n              tileUrl,\n              this.format_,\n              this.tileLoadFunction\n            );\n        tile.sourceTiles.push(sourceTile);\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0]\n          );\n          this.sourceTileCache.set(tileUrl, sourceTile);\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR\n          )\n            ? TileState.ERROR\n            : TileState.LOADED\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const coordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    let tile;\n    if (this.tileCache.containsKey(coordKey)) {\n      tile = this.tileCache.get(coordKey);\n      if (tile.key === key) {\n        return tile;\n      }\n    }\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        empty =\n          empty &&\n          !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n      });\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection)\n    );\n\n    newTile.key = key;\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      this.tileCache.replace(coordKey, newTile);\n    } else {\n      this.tileCache.set(coordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    super.updateCacheSize(tileCount * 2, projection);\n    this.sourceTileCache.highWaterMark =\n      this.getTileCacheForProjection(projection).highWaterMark;\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile)\n      );\n    }\n  );\n}\n","import Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\nimport { registerFont, checkedFonts } from 'ol/render/canvas.js';\nimport { expandUrl } from 'ol/tileurlfunction.js';\nimport { getUid } from 'ol/util.js';\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport Layer from 'ol/layer/Layer.js';\nimport LayerGroup from 'ol/layer/Group.js';\nimport MVT from 'ol/format/MVT.js';\nimport Map from 'ol/Map.js';\nimport Raster from 'ol/source/Raster.js';\nimport Source from 'ol/source/Source.js';\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource, { defaultLoadFunction } from 'ol/source/VectorTile.js';\nimport View from 'ol/View.js';\nimport { get as get$1, METERS_PER_UNIT, fromLonLat, equivalent, getUserProjection } from 'ol/proj.js';\nimport { bbox } from 'ol/loadingstrategy.js';\nimport { createXYZ } from 'ol/tilegrid.js';\nimport { getTopLeft } from 'ol/extent.js';\nimport BaseEvent from 'ol/events/Event.js';\nimport EventType from 'ol/events/EventType.js';\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar csscolorparser = {};\n\nvar parseCSSColor_1;\n// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n    'transparent': [\n        0,\n        0,\n        0,\n        0\n    ],\n    'aliceblue': [\n        240,\n        248,\n        255,\n        1\n    ],\n    'antiquewhite': [\n        250,\n        235,\n        215,\n        1\n    ],\n    'aqua': [\n        0,\n        255,\n        255,\n        1\n    ],\n    'aquamarine': [\n        127,\n        255,\n        212,\n        1\n    ],\n    'azure': [\n        240,\n        255,\n        255,\n        1\n    ],\n    'beige': [\n        245,\n        245,\n        220,\n        1\n    ],\n    'bisque': [\n        255,\n        228,\n        196,\n        1\n    ],\n    'black': [\n        0,\n        0,\n        0,\n        1\n    ],\n    'blanchedalmond': [\n        255,\n        235,\n        205,\n        1\n    ],\n    'blue': [\n        0,\n        0,\n        255,\n        1\n    ],\n    'blueviolet': [\n        138,\n        43,\n        226,\n        1\n    ],\n    'brown': [\n        165,\n        42,\n        42,\n        1\n    ],\n    'burlywood': [\n        222,\n        184,\n        135,\n        1\n    ],\n    'cadetblue': [\n        95,\n        158,\n        160,\n        1\n    ],\n    'chartreuse': [\n        127,\n        255,\n        0,\n        1\n    ],\n    'chocolate': [\n        210,\n        105,\n        30,\n        1\n    ],\n    'coral': [\n        255,\n        127,\n        80,\n        1\n    ],\n    'cornflowerblue': [\n        100,\n        149,\n        237,\n        1\n    ],\n    'cornsilk': [\n        255,\n        248,\n        220,\n        1\n    ],\n    'crimson': [\n        220,\n        20,\n        60,\n        1\n    ],\n    'cyan': [\n        0,\n        255,\n        255,\n        1\n    ],\n    'darkblue': [\n        0,\n        0,\n        139,\n        1\n    ],\n    'darkcyan': [\n        0,\n        139,\n        139,\n        1\n    ],\n    'darkgoldenrod': [\n        184,\n        134,\n        11,\n        1\n    ],\n    'darkgray': [\n        169,\n        169,\n        169,\n        1\n    ],\n    'darkgreen': [\n        0,\n        100,\n        0,\n        1\n    ],\n    'darkgrey': [\n        169,\n        169,\n        169,\n        1\n    ],\n    'darkkhaki': [\n        189,\n        183,\n        107,\n        1\n    ],\n    'darkmagenta': [\n        139,\n        0,\n        139,\n        1\n    ],\n    'darkolivegreen': [\n        85,\n        107,\n        47,\n        1\n    ],\n    'darkorange': [\n        255,\n        140,\n        0,\n        1\n    ],\n    'darkorchid': [\n        153,\n        50,\n        204,\n        1\n    ],\n    'darkred': [\n        139,\n        0,\n        0,\n        1\n    ],\n    'darksalmon': [\n        233,\n        150,\n        122,\n        1\n    ],\n    'darkseagreen': [\n        143,\n        188,\n        143,\n        1\n    ],\n    'darkslateblue': [\n        72,\n        61,\n        139,\n        1\n    ],\n    'darkslategray': [\n        47,\n        79,\n        79,\n        1\n    ],\n    'darkslategrey': [\n        47,\n        79,\n        79,\n        1\n    ],\n    'darkturquoise': [\n        0,\n        206,\n        209,\n        1\n    ],\n    'darkviolet': [\n        148,\n        0,\n        211,\n        1\n    ],\n    'deeppink': [\n        255,\n        20,\n        147,\n        1\n    ],\n    'deepskyblue': [\n        0,\n        191,\n        255,\n        1\n    ],\n    'dimgray': [\n        105,\n        105,\n        105,\n        1\n    ],\n    'dimgrey': [\n        105,\n        105,\n        105,\n        1\n    ],\n    'dodgerblue': [\n        30,\n        144,\n        255,\n        1\n    ],\n    'firebrick': [\n        178,\n        34,\n        34,\n        1\n    ],\n    'floralwhite': [\n        255,\n        250,\n        240,\n        1\n    ],\n    'forestgreen': [\n        34,\n        139,\n        34,\n        1\n    ],\n    'fuchsia': [\n        255,\n        0,\n        255,\n        1\n    ],\n    'gainsboro': [\n        220,\n        220,\n        220,\n        1\n    ],\n    'ghostwhite': [\n        248,\n        248,\n        255,\n        1\n    ],\n    'gold': [\n        255,\n        215,\n        0,\n        1\n    ],\n    'goldenrod': [\n        218,\n        165,\n        32,\n        1\n    ],\n    'gray': [\n        128,\n        128,\n        128,\n        1\n    ],\n    'green': [\n        0,\n        128,\n        0,\n        1\n    ],\n    'greenyellow': [\n        173,\n        255,\n        47,\n        1\n    ],\n    'grey': [\n        128,\n        128,\n        128,\n        1\n    ],\n    'honeydew': [\n        240,\n        255,\n        240,\n        1\n    ],\n    'hotpink': [\n        255,\n        105,\n        180,\n        1\n    ],\n    'indianred': [\n        205,\n        92,\n        92,\n        1\n    ],\n    'indigo': [\n        75,\n        0,\n        130,\n        1\n    ],\n    'ivory': [\n        255,\n        255,\n        240,\n        1\n    ],\n    'khaki': [\n        240,\n        230,\n        140,\n        1\n    ],\n    'lavender': [\n        230,\n        230,\n        250,\n        1\n    ],\n    'lavenderblush': [\n        255,\n        240,\n        245,\n        1\n    ],\n    'lawngreen': [\n        124,\n        252,\n        0,\n        1\n    ],\n    'lemonchiffon': [\n        255,\n        250,\n        205,\n        1\n    ],\n    'lightblue': [\n        173,\n        216,\n        230,\n        1\n    ],\n    'lightcoral': [\n        240,\n        128,\n        128,\n        1\n    ],\n    'lightcyan': [\n        224,\n        255,\n        255,\n        1\n    ],\n    'lightgoldenrodyellow': [\n        250,\n        250,\n        210,\n        1\n    ],\n    'lightgray': [\n        211,\n        211,\n        211,\n        1\n    ],\n    'lightgreen': [\n        144,\n        238,\n        144,\n        1\n    ],\n    'lightgrey': [\n        211,\n        211,\n        211,\n        1\n    ],\n    'lightpink': [\n        255,\n        182,\n        193,\n        1\n    ],\n    'lightsalmon': [\n        255,\n        160,\n        122,\n        1\n    ],\n    'lightseagreen': [\n        32,\n        178,\n        170,\n        1\n    ],\n    'lightskyblue': [\n        135,\n        206,\n        250,\n        1\n    ],\n    'lightslategray': [\n        119,\n        136,\n        153,\n        1\n    ],\n    'lightslategrey': [\n        119,\n        136,\n        153,\n        1\n    ],\n    'lightsteelblue': [\n        176,\n        196,\n        222,\n        1\n    ],\n    'lightyellow': [\n        255,\n        255,\n        224,\n        1\n    ],\n    'lime': [\n        0,\n        255,\n        0,\n        1\n    ],\n    'limegreen': [\n        50,\n        205,\n        50,\n        1\n    ],\n    'linen': [\n        250,\n        240,\n        230,\n        1\n    ],\n    'magenta': [\n        255,\n        0,\n        255,\n        1\n    ],\n    'maroon': [\n        128,\n        0,\n        0,\n        1\n    ],\n    'mediumaquamarine': [\n        102,\n        205,\n        170,\n        1\n    ],\n    'mediumblue': [\n        0,\n        0,\n        205,\n        1\n    ],\n    'mediumorchid': [\n        186,\n        85,\n        211,\n        1\n    ],\n    'mediumpurple': [\n        147,\n        112,\n        219,\n        1\n    ],\n    'mediumseagreen': [\n        60,\n        179,\n        113,\n        1\n    ],\n    'mediumslateblue': [\n        123,\n        104,\n        238,\n        1\n    ],\n    'mediumspringgreen': [\n        0,\n        250,\n        154,\n        1\n    ],\n    'mediumturquoise': [\n        72,\n        209,\n        204,\n        1\n    ],\n    'mediumvioletred': [\n        199,\n        21,\n        133,\n        1\n    ],\n    'midnightblue': [\n        25,\n        25,\n        112,\n        1\n    ],\n    'mintcream': [\n        245,\n        255,\n        250,\n        1\n    ],\n    'mistyrose': [\n        255,\n        228,\n        225,\n        1\n    ],\n    'moccasin': [\n        255,\n        228,\n        181,\n        1\n    ],\n    'navajowhite': [\n        255,\n        222,\n        173,\n        1\n    ],\n    'navy': [\n        0,\n        0,\n        128,\n        1\n    ],\n    'oldlace': [\n        253,\n        245,\n        230,\n        1\n    ],\n    'olive': [\n        128,\n        128,\n        0,\n        1\n    ],\n    'olivedrab': [\n        107,\n        142,\n        35,\n        1\n    ],\n    'orange': [\n        255,\n        165,\n        0,\n        1\n    ],\n    'orangered': [\n        255,\n        69,\n        0,\n        1\n    ],\n    'orchid': [\n        218,\n        112,\n        214,\n        1\n    ],\n    'palegoldenrod': [\n        238,\n        232,\n        170,\n        1\n    ],\n    'palegreen': [\n        152,\n        251,\n        152,\n        1\n    ],\n    'paleturquoise': [\n        175,\n        238,\n        238,\n        1\n    ],\n    'palevioletred': [\n        219,\n        112,\n        147,\n        1\n    ],\n    'papayawhip': [\n        255,\n        239,\n        213,\n        1\n    ],\n    'peachpuff': [\n        255,\n        218,\n        185,\n        1\n    ],\n    'peru': [\n        205,\n        133,\n        63,\n        1\n    ],\n    'pink': [\n        255,\n        192,\n        203,\n        1\n    ],\n    'plum': [\n        221,\n        160,\n        221,\n        1\n    ],\n    'powderblue': [\n        176,\n        224,\n        230,\n        1\n    ],\n    'purple': [\n        128,\n        0,\n        128,\n        1\n    ],\n    'rebeccapurple': [\n        102,\n        51,\n        153,\n        1\n    ],\n    'red': [\n        255,\n        0,\n        0,\n        1\n    ],\n    'rosybrown': [\n        188,\n        143,\n        143,\n        1\n    ],\n    'royalblue': [\n        65,\n        105,\n        225,\n        1\n    ],\n    'saddlebrown': [\n        139,\n        69,\n        19,\n        1\n    ],\n    'salmon': [\n        250,\n        128,\n        114,\n        1\n    ],\n    'sandybrown': [\n        244,\n        164,\n        96,\n        1\n    ],\n    'seagreen': [\n        46,\n        139,\n        87,\n        1\n    ],\n    'seashell': [\n        255,\n        245,\n        238,\n        1\n    ],\n    'sienna': [\n        160,\n        82,\n        45,\n        1\n    ],\n    'silver': [\n        192,\n        192,\n        192,\n        1\n    ],\n    'skyblue': [\n        135,\n        206,\n        235,\n        1\n    ],\n    'slateblue': [\n        106,\n        90,\n        205,\n        1\n    ],\n    'slategray': [\n        112,\n        128,\n        144,\n        1\n    ],\n    'slategrey': [\n        112,\n        128,\n        144,\n        1\n    ],\n    'snow': [\n        255,\n        250,\n        250,\n        1\n    ],\n    'springgreen': [\n        0,\n        255,\n        127,\n        1\n    ],\n    'steelblue': [\n        70,\n        130,\n        180,\n        1\n    ],\n    'tan': [\n        210,\n        180,\n        140,\n        1\n    ],\n    'teal': [\n        0,\n        128,\n        128,\n        1\n    ],\n    'thistle': [\n        216,\n        191,\n        216,\n        1\n    ],\n    'tomato': [\n        255,\n        99,\n        71,\n        1\n    ],\n    'turquoise': [\n        64,\n        224,\n        208,\n        1\n    ],\n    'violet': [\n        238,\n        130,\n        238,\n        1\n    ],\n    'wheat': [\n        245,\n        222,\n        179,\n        1\n    ],\n    'white': [\n        255,\n        255,\n        255,\n        1\n    ],\n    'whitesmoke': [\n        245,\n        245,\n        245,\n        1\n    ],\n    'yellow': [\n        255,\n        255,\n        0,\n        1\n    ],\n    'yellowgreen': [\n        154,\n        205,\n        50,\n        1\n    ]\n};\nfunction clamp_css_byte(i) {\n    // Clamp to integer 0 .. 255.\n    i = Math.round(i);\n    // Seems to be what Chrome does (vs truncation).\n    return i < 0 ? 0 : i > 255 ? 255 : i;\n}\nfunction clamp_css_float(f) {\n    // Clamp to float 0.0 .. 1.0.\n    return f < 0 ? 0 : f > 1 ? 1 : f;\n}\nfunction parse_css_int(str) {\n    // int or percentage.\n    if (str[str.length - 1] === '%')\n        return clamp_css_byte(parseFloat(str) / 100 * 255);\n    return clamp_css_byte(parseInt(str));\n}\nfunction parse_css_float(str) {\n    // float or percentage.\n    if (str[str.length - 1] === '%')\n        return clamp_css_float(parseFloat(str) / 100);\n    return clamp_css_float(parseFloat(str));\n}\nfunction css_hue_to_rgb(m1, m2, h) {\n    if (h < 0)\n        h += 1;\n    else if (h > 1)\n        h -= 1;\n    if (h * 6 < 1)\n        return m1 + (m2 - m1) * h * 6;\n    if (h * 2 < 1)\n        return m2;\n    if (h * 3 < 2)\n        return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n    return m1;\n}\nfunction parseCSSColor(css_str) {\n    // Remove all whitespace, not compliant, but should just be more accepting.\n    var str = css_str.replace(/ /g, '').toLowerCase();\n    // Color keywords (and transparent) lookup.\n    if (str in kCSSColorTable)\n        return kCSSColorTable[str].slice();\n    // dup.\n    // #abc and #abc123 syntax.\n    if (str[0] === '#') {\n        if (str.length === 4) {\n            var iv = parseInt(str.substr(1), 16);\n            // TODO(deanm): Stricter parsing.\n            if (!(iv >= 0 && iv <= 4095))\n                return null;\n            // Covers NaN.\n            return [\n                (iv & 3840) >> 4 | (iv & 3840) >> 8,\n                iv & 240 | (iv & 240) >> 4,\n                iv & 15 | (iv & 15) << 4,\n                1\n            ];\n        } else if (str.length === 7) {\n            var iv = parseInt(str.substr(1), 16);\n            // TODO(deanm): Stricter parsing.\n            if (!(iv >= 0 && iv <= 16777215))\n                return null;\n            // Covers NaN.\n            return [\n                (iv & 16711680) >> 16,\n                (iv & 65280) >> 8,\n                iv & 255,\n                1\n            ];\n        }\n        return null;\n    }\n    var op = str.indexOf('('), ep = str.indexOf(')');\n    if (op !== -1 && ep + 1 === str.length) {\n        var fname = str.substr(0, op);\n        var params = str.substr(op + 1, ep - (op + 1)).split(',');\n        var alpha = 1;\n        // To allow case fallthrough.\n        switch (fname) {\n        case 'rgba':\n            if (params.length !== 4)\n                return null;\n            alpha = parse_css_float(params.pop());\n        // Fall through.\n        case 'rgb':\n            if (params.length !== 3)\n                return null;\n            return [\n                parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha\n            ];\n        case 'hsla':\n            if (params.length !== 4)\n                return null;\n            alpha = parse_css_float(params.pop());\n        // Fall through.\n        case 'hsl':\n            if (params.length !== 3)\n                return null;\n            var h = (parseFloat(params[0]) % 360 + 360) % 360 / 360;\n            // 0 .. 1\n            // NOTE(deanm): According to the CSS spec s/l should only be\n            // percentages, but we don't bother and let float or percentage.\n            var s = parse_css_float(params[1]);\n            var l = parse_css_float(params[2]);\n            var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n            var m1 = l * 2 - m2;\n            return [\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h + 1 / 3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h - 1 / 3) * 255),\n                alpha\n            ];\n        default:\n            return null;\n        }\n    }\n    return null;\n}\ntry {\n    parseCSSColor_1 = csscolorparser.parseCSSColor = parseCSSColor;\n} catch (e) {\n}\n\n//      \n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n    constructor(r, g, b, a = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n    /**\n     * Parses valid CSS color strings and returns a `Color` instance.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input) {\n        if (!input) {\n            return undefined;\n        }\n        if (input instanceof Color) {\n            return input;\n        }\n        if (typeof input !== 'string') {\n            return undefined;\n        }\n        const rgba = parseCSSColor_1(input);\n        if (!rgba) {\n            return undefined;\n        }\n        return new Color(rgba[0] / 255 * rgba[3], rgba[1] / 255 * rgba[3], rgba[2] / 255 * rgba[3], rgba[3]);\n    }\n    /**\n     * Returns an RGBA string representing the color value.\n     *\n     * @returns An RGBA string.\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString() {\n        const [r, g, b, a] = this.toArray();\n        return `rgba(${ Math.round(r) },${ Math.round(g) },${ Math.round(b) },${ a })`;\n    }\n    /**\n     * Returns an RGBA array of values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 255].\n     */\n    toArray() {\n        const {r, g, b, a} = this;\n        return a === 0 ? [\n            0,\n            0,\n            0,\n            0\n        ] : [\n            r * 255 / a,\n            g * 255 / a,\n            b * 255 / a,\n            a\n        ];\n    }\n    /**\n     * Returns a RGBA array of float values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01() {\n        const {r, g, b, a} = this;\n        return a === 0 ? [\n            0,\n            0,\n            0,\n            0\n        ] : [\n            r / a,\n            g / a,\n            b / a,\n            a\n        ];\n    }\n    /**\n     * Returns an RGBA array of values representing the color, premultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01PremultipliedAlpha() {\n        const {r, g, b, a} = this;\n        return [\n            r,\n            g,\n            b,\n            a\n        ];\n    }\n}\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nColor.blue = new Color(0, 0, 1, 1);\nvar Color$1 = Color;\n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? [\n        'literal',\n        value\n    ] : value;\n}\nfunction convertFunction(parameters, propertySpec) {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    stops = stops.map(stop => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [\n                stop[0],\n                convertTokenString(stop[1])\n            ];\n        }\n        return [\n            stop[0],\n            convertLiteral(stop[1])\n        ];\n    });\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\nfunction convertIdentityFunction(parameters, propertySpec) {\n    const get = [\n        'get',\n        parameters.property\n    ];\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? [\n            'string',\n            get\n        ] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        const expression = [\n            propertySpec.type === 'color' ? 'to-color' : propertySpec.type,\n            get,\n            convertLiteral(parameters.default)\n        ];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n    case 'hcl':\n        return 'interpolate-hcl';\n    case 'lab':\n        return 'interpolate-lab';\n    default:\n        return 'interpolate';\n    }\n}\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([\n            stop[0].value,\n            stop[1]\n        ]);\n    }\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [\n            getInterpolateOperator(parameters),\n            ['linear'],\n            ['zoom']\n        ];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n        return expression;\n    } else {\n        const expression = [\n            'step',\n            ['zoom']\n        ];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return expression;\n    }\n}\nfunction coalesce(a, b) {\n    if (a !== undefined)\n        return a;\n    if (b !== undefined)\n        return b;\n}\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = [\n        'get',\n        parameters.property\n    ];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push([\n                '==',\n                get,\n                stop[0]\n            ], stop[1]);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'categorical') {\n        const expression = [\n            'match',\n            get\n        ];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'interval') {\n        const expression = [\n            'step',\n            [\n                'number',\n                get\n            ]\n        ];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            [\n                '==',\n                [\n                    'typeof',\n                    get\n                ],\n                'number'\n            ],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? ['linear'] : [\n                'exponential',\n                base\n            ],\n            [\n                'number',\n                get\n            ]\n        ];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            [\n                '==',\n                [\n                    'typeof',\n                    get\n                ],\n                'number'\n            ],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error(`Unknown property function type ${ type }`);\n    }\n}\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = [\n            'step',\n            input\n        ];\n        isStep = true;\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? ['linear'] : [\n                'exponential',\n                base\n            ],\n            input\n        ];\n    } else {\n        throw new Error(`Unknown zoom function type \"${ type }\"`);\n    }\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n    fixupDegenerateStepCurve(expression);\n    return expression;\n}\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        return propertySpec.expression.interpolated ? 'exponential' : 'interval';\n    }\n}\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nfunction convertTokenString(s) {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0)\n            result.push(literal);\n        result.push([\n            'get',\n            match[1]\n        ]);\n    }\n    if (result.length === 1) {\n        return s;\n    }\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return [\n            'to-string',\n            result[1]\n        ];\n    }\n    return result;\n}\n\n//      \nclass ParsingError extends Error {\n    constructor(key, message) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\nvar ParsingError$1 = ParsingError;\n\n//      \n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n    constructor(parent, bindings = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n    concat(bindings) {\n        return new Scope(this, bindings);\n    }\n    get(name) {\n        if (this.bindings[name]) {\n            return this.bindings[name];\n        }\n        if (this.parent) {\n            return this.parent.get(name);\n        }\n        throw new Error(`${ name } not found in scope.`);\n    }\n    has(name) {\n        if (this.bindings[name])\n            return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\nvar Scope$1 = Scope;\n\n//      \nconst NullType = { kind: 'null' };\nconst NumberType = { kind: 'number' };\nconst StringType = { kind: 'string' };\nconst BooleanType = { kind: 'boolean' };\nconst ColorType = { kind: 'color' };\nconst ObjectType = { kind: 'object' };\nconst ValueType = { kind: 'value' };\nconst ErrorType = { kind: 'error' };\nconst CollatorType = { kind: 'collator' };\nconst FormattedType = { kind: 'formatted' };\nconst ResolvedImageType = { kind: 'resolvedImage' };\nfunction array$1(itemType, N) {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\nfunction toString$1(type) {\n    if (type.kind === 'array') {\n        const itemType = toString$1(type.itemType);\n        return typeof type.N === 'number' ? `array<${ itemType }, ${ type.N }>` : type.itemType.kind === 'value' ? 'array' : `array<${ itemType }>`;\n    } else {\n        return type.kind;\n    }\n}\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array$1(ValueType),\n    ResolvedImageType\n];\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nfunction checkSubtype(expected, t) {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' && (t.N === 0 && t.itemType.kind === 'value' || !checkSubtype(expected.itemType, t.itemType)) && (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n    return `Expected ${ toString$1(expected) } but found ${ toString$1(t) } instead.`;\n}\nfunction isValidType(provided, allowedTypes) {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\nfunction isValidNativeType(provided, allowedTypes) {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        } else if (t === 'array') {\n            return Array.isArray(provided);\n        } else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        } else {\n            return t === typeof provided;\n        }\n    });\n}\n\n//      \n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\nclass Collator {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [], {\n            sensitivity: this.sensitivity,\n            usage: 'search'\n        });\n    }\n    compare(lhs, rhs) {\n        return this.collator.compare(lhs, rhs);\n    }\n    resolvedLocale() {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : []).resolvedOptions().locale;\n    }\n}\n\n//      \nclass FormattedSection {\n    constructor(text, image, scale, fontStack, textColor) {\n        // combine characters so that diacritic marks are not separate code points\n        this.text = text.normalize ? text.normalize() : text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n    }\n}\nclass Formatted {\n    constructor(sections) {\n        this.sections = sections;\n    }\n    static fromString(unformatted) {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n    }\n    isEmpty() {\n        if (this.sections.length === 0)\n            return true;\n        return !this.sections.some(section => section.text.length !== 0 || section.image && section.image.name.length !== 0);\n    }\n    static factory(text) {\n        if (text instanceof Formatted) {\n            return text;\n        } else {\n            return Formatted.fromString(text);\n        }\n    }\n    toString() {\n        if (this.sections.length === 0)\n            return '';\n        return this.sections.map(section => section.text).join('');\n    }\n    serialize() {\n        const serialized = ['format'];\n        for (const section of this.sections) {\n            if (section.image) {\n                serialized.push([\n                    'image',\n                    section.image.name\n                ]);\n                continue;\n            }\n            serialized.push(section.text);\n            const options = {};\n            if (section.fontStack) {\n                options['text-font'] = [\n                    'literal',\n                    section.fontStack.split(',')\n                ];\n            }\n            if (section.scale) {\n                options['font-scale'] = section.scale;\n            }\n            if (section.textColor) {\n                options['text-color'] = ['rgba'].concat(section.textColor.toArray());\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n\n//      \nclass ResolvedImage {\n    constructor(options) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n    toString() {\n        return this.name;\n    }\n    static fromString(name) {\n        if (!name)\n            return null;\n        // treat empty values as no image\n        return new ResolvedImage({\n            name,\n            available: false\n        });\n    }\n    serialize() {\n        return [\n            'image',\n            this.name\n        ];\n    }\n}\n\nfunction validateRGBA(r, g, b, a) {\n    if (!(typeof r === 'number' && r >= 0 && r <= 255 && typeof g === 'number' && g >= 0 && g <= 255 && typeof b === 'number' && b >= 0 && b <= 255)) {\n        const value = typeof a === 'number' ? [\n            r,\n            g,\n            b,\n            a\n        ] : [\n            r,\n            g,\n            b\n        ];\n        return `Invalid rgba value [${ value.join(', ') }]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n    if (!(typeof a === 'undefined' || typeof a === 'number' && a >= 0 && a <= 1)) {\n        return `Invalid rgba value [${ [\n            r,\n            g,\n            b,\n            a\n        ].join(', ') }]: 'a' must be between 0 and 1.`;\n    }\n    return null;\n}\nfunction isValue(mixed) {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color$1) {\n        return true;\n    } else if (mixed instanceof Collator) {\n        return true;\n    } else if (mixed instanceof Formatted) {\n        return true;\n    } else if (mixed instanceof ResolvedImage) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\nfunction typeOf(value) {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color$1) {\n        return ColorType;\n    } else if (value instanceof Collator) {\n        return CollatorType;\n    } else if (value instanceof Formatted) {\n        return FormattedType;\n    } else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType;\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n        return array$1(itemType || ValueType, length);\n    } else {\n        return ObjectType;\n    }\n}\nfunction toString(value) {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color$1 || value instanceof Formatted || value instanceof ResolvedImage) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nclass Literal {\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${ args.length - 1 } instead.`);\n        if (!isValue(args[1]))\n            return context.error(`invalid value`);\n        const value = args[1];\n        let type = typeOf(value);\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (type.kind === 'array' && type.N === 0 && expected && expected.kind === 'array' && (typeof expected.N !== 'number' || expected.N === 0)) {\n            type = expected;\n        }\n        return new Literal(type, value);\n    }\n    evaluate() {\n        return this.value;\n    }\n    eachChild() {\n    }\n    outputDefined() {\n        return true;\n    }\n    serialize() {\n        if (this.type.kind === 'array' || this.type.kind === 'object') {\n            return [\n                'literal',\n                this.value\n            ];\n        } else if (this.value instanceof Color$1) {\n            // Constant-folding can generate Literal expressions that you\n            // couldn't actually generate with a \"literal\" expression,\n            // so we have to implement an equivalent serialization here\n            return ['rgba'].concat(this.value.toArray());\n        } else if (this.value instanceof Formatted) {\n            // Same as Color\n            return this.value.serialize();\n        } else {\n            return this.value;\n        }\n    }\n}\nvar Literal$1 = Literal;\n\n//      \nclass RuntimeError {\n    constructor(message) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n    toJSON() {\n        return this.message;\n    }\n}\nvar RuntimeError$1 = RuntimeError;\n\nconst types$2 = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\nclass Assertion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n        let i = 1;\n        let type;\n        const name = args[0];\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types$2) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types$2[type];\n                i++;\n            } else {\n                itemType = ValueType;\n            }\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null && (typeof args[2] !== 'number' || args[2] < 0 || args[2] !== Math.floor(args[2]))) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n            type = array$1(itemType, N);\n        } else {\n            type = types$2[name];\n        }\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Assertion(type, parsed);\n    }\n    evaluate(ctx) {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            } else if (i === this.args.length - 1) {\n                throw new RuntimeError$1(`Expected value to be of type ${ toString$1(this.type) }, but found ${ toString$1(typeOf(value)) } instead.`);\n            }\n        }\n        return null;\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n    serialize() {\n        const type = this.type;\n        const serialized = [type.kind];\n        if (type.kind === 'array') {\n            const itemType = type.itemType;\n            if (itemType.kind === 'string' || itemType.kind === 'number' || itemType.kind === 'boolean') {\n                serialized.push(itemType.kind);\n                const N = type.N;\n                if (typeof N === 'number' || this.args.length > 1) {\n                    serialized.push(N);\n                }\n            }\n        }\n        return serialized.concat(this.args.map(arg => arg.serialize()));\n    }\n}\nvar Assertion$1 = Assertion;\n\n//      \nclass FormatExpression {\n    constructor(sections) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error(`Expected at least one argument.`);\n        }\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object') {\n            return context.error(`First argument must be an image or text section.`);\n        }\n        const sections = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = args[i];\n            if (nextTokenMayBeObject && typeof arg === 'object' && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale)\n                        return null;\n                }\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array$1(StringType));\n                    if (!font)\n                        return null;\n                }\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor)\n                        return null;\n                }\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n            } else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content)\n                    return null;\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error(`Formatted text type must be 'string', 'value', 'image' or 'null'.`);\n                nextTokenMayBeObject = true;\n                sections.push({\n                    content,\n                    scale: null,\n                    font: null,\n                    textColor: null\n                });\n            }\n        }\n        return new FormatExpression(sections);\n    }\n    evaluate(ctx) {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null);\n            }\n            return new FormattedSection(toString(evaluatedContent), null, section.scale ? section.scale.evaluate(ctx) : null, section.font ? section.font.evaluate(ctx).join(',') : null, section.textColor ? section.textColor.evaluate(ctx) : null);\n        };\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n    eachChild(fn) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n        }\n    }\n    outputDefined() {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n    serialize() {\n        const serialized = ['format'];\n        for (const section of this.sections) {\n            serialized.push(section.content.serialize());\n            const options = {};\n            if (section.scale) {\n                options['font-scale'] = section.scale.serialize();\n            }\n            if (section.font) {\n                options['text-font'] = section.font.serialize();\n            }\n            if (section.textColor) {\n                options['text-color'] = section.textColor.serialize();\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n\n//      \nclass ImageExpression {\n    constructor(input) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2) {\n            return context.error(`Expected two arguments.`);\n        }\n        const name = context.parse(args[1], 1, StringType);\n        if (!name)\n            return context.error(`No image name provided.`);\n        return new ImageExpression(name);\n    }\n    evaluate(ctx) {\n        const evaluatedImageName = this.input.evaluate(ctx);\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages)\n            value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n        return value;\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n    serialize() {\n        return [\n            'image',\n            this.input.serialize()\n        ];\n    }\n}\n\nconst types$1 = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n        const name = args[0];\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error(`Expected one argument.`);\n        const type = types$1[name];\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Coercion(type, parsed);\n    }\n    evaluate(ctx) {\n        if (this.type.kind === 'boolean') {\n            return Boolean(this.args[0].evaluate(ctx));\n        } else if (this.type.kind === 'color') {\n            let input;\n            let error;\n            for (const arg of this.args) {\n                input = arg.evaluate(ctx);\n                error = null;\n                if (input instanceof Color$1) {\n                    return input;\n                } else if (typeof input === 'string') {\n                    const c = ctx.parseColor(input);\n                    if (c)\n                        return c;\n                } else if (Array.isArray(input)) {\n                    if (input.length < 3 || input.length > 4) {\n                        error = `Invalid rbga value ${ JSON.stringify(input) }: expected an array containing either three or four numeric values.`;\n                    } else {\n                        error = validateRGBA(input[0], input[1], input[2], input[3]);\n                    }\n                    if (!error) {\n                        return new Color$1(input[0] / 255, input[1] / 255, input[2] / 255, input[3]);\n                    }\n                }\n            }\n            throw new RuntimeError$1(error || `Could not parse color from value '${ typeof input === 'string' ? input : String(JSON.stringify(input)) }'`);\n        } else if (this.type.kind === 'number') {\n            let value = null;\n            for (const arg of this.args) {\n                value = arg.evaluate(ctx);\n                if (value === null)\n                    return 0;\n                const num = Number(value);\n                if (isNaN(num))\n                    continue;\n                return num;\n            }\n            throw new RuntimeError$1(`Could not convert ${ JSON.stringify(value) } to number.`);\n        } else if (this.type.kind === 'formatted') {\n            // There is no explicit 'to-formatted' but this coercion can be implicitly\n            // created by properties that expect the 'formatted' type.\n            return Formatted.fromString(toString(this.args[0].evaluate(ctx)));\n        } else if (this.type.kind === 'resolvedImage') {\n            return ResolvedImage.fromString(toString(this.args[0].evaluate(ctx)));\n        } else {\n            return toString(this.args[0].evaluate(ctx));\n        }\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n    serialize() {\n        if (this.type.kind === 'formatted') {\n            return new FormatExpression([{\n                    content: this.args[0],\n                    scale: null,\n                    font: null,\n                    textColor: null\n                }]).serialize();\n        }\n        if (this.type.kind === 'resolvedImage') {\n            return new ImageExpression(this.args[0]).serialize();\n        }\n        const serialized = [`to-${ this.type.kind }`];\n        this.eachChild(child => {\n            serialized.push(child.serialize());\n        });\n        return serialized;\n    }\n}\nvar Coercion$1 = Coercion;\n\n//      \nconst geometryTypes = [\n    'Unknown',\n    'Point',\n    'LineString',\n    'Polygon'\n];\nclass EvaluationContext {\n    constructor() {\n        this.globals = null;\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n        this.featureTileCoord = null;\n        this.featureDistanceData = null;\n    }\n    id() {\n        return this.feature && this.feature.id !== undefined ? this.feature.id : null;\n    }\n    geometryType() {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n    geometry() {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n    canonicalID() {\n        return this.canonical;\n    }\n    properties() {\n        return this.feature && this.feature.properties || {};\n    }\n    distanceFromCenter() {\n        if (this.featureTileCoord && this.featureDistanceData) {\n            const c = this.featureDistanceData.center;\n            const scale = this.featureDistanceData.scale;\n            const {x, y} = this.featureTileCoord;\n            // Calculate the distance vector `d` (left handed)\n            const dX = x * scale - c[0];\n            const dY = y * scale - c[1];\n            // The bearing vector `b` (left handed)\n            const bX = this.featureDistanceData.bearing[0];\n            const bY = this.featureDistanceData.bearing[1];\n            // Distance is calculated as `dot(d, v)`\n            const dist = bX * dX + bY * dY;\n            return dist;\n        }\n        return 0;\n    }\n    parseColor(input) {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color$1.parse(input);\n        }\n        return cached;\n    }\n}\nvar EvaluationContext$1 = EvaluationContext;\n\n//      \nclass CompoundExpression {\n    constructor(name, type, evaluate, args) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n    evaluate(ctx) {\n        return this._evaluate(ctx, this.args);\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        return [this.name].concat(this.args.map(arg => arg.serialize()));\n    }\n    static parse(args, context) {\n        const op = args[0];\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${ op }\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ? definition[0] : definition.type;\n        const availableOverloads = Array.isArray(definition) ? [[\n                definition[1],\n                definition[2]\n            ]] : definition.overloads;\n        const overloads = availableOverloads.filter(([signature]) => !Array.isArray(signature) || // varags\n        signature.length === args.length - 1    // correct param count\n);\n        let signatureContext = null;\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext$1(context.registry, context.path, null, context.scope);\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ? params[i - 1] : params.type;\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${ params.length } arguments, but found ${ parsedArgs.length } instead.`);\n                    continue;\n                }\n            }\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        } else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected.map(([params]) => stringifySignature(params)).join(' | ');\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed)\n                    return null;\n                actualTypes.push(toString$1(parsed.type));\n            }\n            context.error(`Expected arguments of type ${ signatures }, but found (${ actualTypes.join(', ') }) instead.`);\n        }\n        return null;\n    }\n    static register(registry, definitions) {\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\nfunction stringifySignature(signature) {\n    if (Array.isArray(signature)) {\n        return `(${ signature.map(toString$1).join(', ') })`;\n    } else {\n        return `(${ toString$1(signature.type) }...)`;\n    }\n}\nvar CompoundExpression$1 = CompoundExpression;\n\n//      \nclass CollatorExpression {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`Expected one argument.`);\n        const options = args[1];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error(`Collator options argument must be an object.`);\n        const caseSensitive = context.parse(options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive)\n            return null;\n        const diacriticSensitive = context.parse(options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive)\n            return null;\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n    evaluate(ctx) {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n    eachChild(fn) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n    outputDefined() {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n    serialize() {\n        const options = {};\n        options['case-sensitive'] = this.caseSensitive.serialize();\n        options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        return [\n            'collator',\n            options\n        ];\n    }\n}\n\n//      \n// minX, minY, maxX, maxY\nconst EXTENT = 8192;\nfunction updateBBox(bbox, coord) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\nfunction mercatorXfromLng(lng) {\n    return (180 + lng) / 360;\n}\nfunction mercatorYfromLat(lat) {\n    return (180 - 180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360))) / 360;\n}\nfunction boxWithinBox(bbox1, bbox2) {\n    if (bbox1[0] <= bbox2[0])\n        return false;\n    if (bbox1[2] >= bbox2[2])\n        return false;\n    if (bbox1[1] <= bbox2[1])\n        return false;\n    if (bbox1[3] >= bbox2[3])\n        return false;\n    return true;\n}\nfunction getTileCoordinates(p, canonical) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [\n        Math.round(x * tilesAtZoom * EXTENT),\n        Math.round(y * tilesAtZoom * EXTENT)\n    ];\n}\nfunction onBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return x1 * y2 - x2 * y1 === 0 && x1 * x2 <= 0 && y1 * y2 <= 0;\n}\nfunction rayIntersect(p, p1, p2) {\n    return p1[1] > p[1] !== p2[1] > p[1] && p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0];\n}\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings) {\n    let inside = false;\n    for (let i = 0, len = rings.length; i < len; i++) {\n        const ring = rings[i];\n        for (let j = 0, len2 = ring.length; j < len2 - 1; j++) {\n            if (onBoundary(point, ring[j], ring[j + 1]))\n                return false;\n            if (rayIntersect(point, ring[j], ring[j + 1]))\n                inside = !inside;\n        }\n    }\n    return inside;\n}\nfunction pointWithinPolygons(point, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (pointWithinPolygon(point, polygons[i]))\n            return true;\n    }\n    return false;\n}\nfunction perp(v1, v2) {\n    return v1[0] * v2[1] - v1[1] * v2[0];\n}\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = x1 * y3 - x3 * y1;\n    const det2 = x2 * y3 - x3 * y2;\n    if (det1 > 0 && det2 < 0 || det1 < 0 && det2 > 0)\n        return true;\n    return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction lineIntersectLine(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [\n        b[0] - a[0],\n        b[1] - a[1]\n    ];\n    const vectorQ = [\n        d[0] - c[0],\n        d[1] - c[1]\n    ];\n    if (perp(vectorQ, vectorP) === 0)\n        return false;\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b))\n        return true;\n    return false;\n}\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (lineIntersectLine(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (let i = 0; i < line.length; ++i) {\n        if (!pointWithinPolygon(line[i], polygon)) {\n            return false;\n        }\n    }\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction lineStringWithinPolygons(line, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (lineStringWithinPolygon(line, polygons[i]))\n            return true;\n    }\n    return false;\n}\nfunction getTilePolygon(coordinates, bbox, canonical) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\nfunction getTilePolygons(coordinates, bbox, canonical) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = p[0] - polyBBox[0] > halfWorldSize ? -worldSize : polyBBox[0] - p[0] > halfWorldSize ? worldSize : 0;\n        if (shift === 0) {\n            shift = p[0] - polyBBox[2] > halfWorldSize ? -worldSize : polyBBox[2] - p[0] > halfWorldSize ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [\n        canonical.x * EXTENT,\n        canonical.y * EXTENT\n    ];\n    const tilePoints = [];\n    if (!geometry)\n        return tilePoints;\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [\n                point.x + shifts[0],\n                point.y + shifts[1]\n            ];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [\n        canonical.x * EXTENT,\n        canonical.y * EXTENT\n    ];\n    const tileLines = [];\n    if (!geometry)\n        return tileLines;\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [\n                point.x + shifts[0],\n                point.y + shifts[1]\n            ];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\nfunction pointsWithinPolygons(ctx, polygonGeometry) {\n    const pointBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    const polyBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nfunction linesWithinPolygons(ctx, polygonGeometry) {\n    const lineBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    const polyBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nclass Within {\n    constructor(geojson, geometries) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${ args.length - 1 } instead.`);\n        if (isValue(args[1])) {\n            const geojson = args[1];\n            if (geojson.type === 'FeatureCollection') {\n                for (let i = 0; i < geojson.features.length; ++i) {\n                    const type = geojson.features[i].geometry.type;\n                    if (type === 'Polygon' || type === 'MultiPolygon') {\n                        return new Within(geojson, geojson.features[i].geometry);\n                    }\n                }\n            } else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            } else if (geojson.type === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error(`'within' expression requires valid geojson object that contains polygon geometry type.`);\n    }\n    evaluate(ctx) {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            } else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n    eachChild() {\n    }\n    outputDefined() {\n        return true;\n    }\n    serialize() {\n        return [\n            'within',\n            this.geojson\n        ];\n    }\n}\nvar Within$1 = Within;\n\n//      \nfunction isFeatureConstant(e) {\n    if (e instanceof CompoundExpression$1) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'properties' || e.name === 'geometry-type' || e.name === 'id') {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n    if (e instanceof Within$1) {\n        return false;\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isStateConstant(e) {\n    if (e instanceof CompoundExpression$1) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isGlobalPropertyConstant(e, properties) {\n    if (e instanceof CompoundExpression$1 && properties.indexOf(e.name) >= 0) {\n        return false;\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) {\n            result = false;\n        }\n    });\n    return result;\n}\n\n//      \nclass Var {\n    constructor(name, boundExpression) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n    static parse(args, context) {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error(`'var' expression requires exactly one string literal argument.`);\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${ name }\". Make sure \"${ name }\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n        return new Var(name, context.scope.get(name));\n    }\n    evaluate(ctx) {\n        return this.boundExpression.evaluate(ctx);\n    }\n    eachChild() {\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        return [\n            'var',\n            this.name\n        ];\n    }\n}\nvar Var$1 = Var;\n\n//      \n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n    // The expected type of this expression. Provided only to allow Expression\n    // implementations to infer argument types: Expression#parse() need not\n    // check that the output type of the parsed expression matches\n    // `expectedType`.\n    constructor(registry, path = [], expectedType, scope = new Scope$1(), errors = []) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${ part }]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n    }\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(expr, index, expectedType, bindings, options = {}) {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n    _parse(expr, options) {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = [\n                'literal',\n                expr\n            ];\n        }\n        function annotate(parsed, type, typeAnnotation) {\n            if (typeAnnotation === 'assert') {\n                return new Assertion$1(type, [parsed]);\n            } else if (typeAnnotation === 'coerce') {\n                return new Coercion$1(type, [parsed]);\n            } else {\n                return parsed;\n            }\n        }\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error(`Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].`);\n            }\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${ typeof op } instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed)\n                    return null;\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal$1) && parsed.type.kind !== 'resolvedImage' && isConstant(parsed)) {\n                    const ec = new EvaluationContext$1();\n                    try {\n                        parsed = new Literal$1(parsed.type, parsed.evaluate(ec));\n                    } catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n                return parsed;\n            }\n            return this.error(`Unknown expression \"${ op }\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        } else if (typeof expr === 'undefined') {\n            return this.error(`'undefined' value invalid. Use null instead.`);\n        } else if (typeof expr === 'object') {\n            return this.error(`Bare objects invalid. Use [\"literal\", {...}] instead.`);\n        } else {\n            return this.error(`Expected an array, but found ${ typeof expr } instead.`);\n        }\n    }\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index, expectedType, bindings) {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(this.registry, path, expectedType || null, scope, this.errors);\n    }\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error, ...keys) {\n        const key = `${ this.key }${ keys.map(k => `[${ k }]`).join('') }`;\n        this.errors.push(new ParsingError$1(key, error));\n    }\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     */\n    checkSubtype(expected, t) {\n        const error = checkSubtype(expected, t);\n        if (error)\n            this.error(error);\n        return error;\n    }\n}\nvar ParsingContext$1 = ParsingContext;\nfunction isConstant(expression) {\n    if (expression instanceof Var$1) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression$1 && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    } else if (expression instanceof Within$1) {\n        return false;\n    }\n    const isTypeAnnotation = expression instanceof Coercion$1 || expression instanceof Assertion$1;\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal$1;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n    return isFeatureConstant(expression) && isGlobalPropertyConstant(expression, [\n        'zoom',\n        'heatmap-density',\n        'line-progress',\n        'sky-radial-progress',\n        'accumulated',\n        'is-supported-script',\n        'pitch',\n        'distance-from-center'\n    ]);\n}\n\n//      \n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nfunction findStopLessThanOrEqualTo(stops, input) {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) {\n                // Search complete\n                return currentIndex;\n            }\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError$1('Input is not a number.');\n        }\n    }\n    return 0;\n}\n\n//      \nclass Step {\n    constructor(type, input, stops) {\n        this.type = type;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static parse(args, context) {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${ args.length - 1 }.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n            const labelKey = i;\n            const valueKey = i + 1;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([\n                label,\n                parsed\n            ]);\n        }\n        return new Step(outputType, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n    serialize() {\n        const serialized = [\n            'step',\n            this.input.serialize()\n        ];\n        for (let i = 0; i < this.labels.length; i++) {\n            if (i > 0) {\n                serialized.push(this.labels[i]);\n            }\n            serialized.push(this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\nvar Step$1 = Step;\n\n/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nvar unitbezier = UnitBezier;\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3 * p1x;\n    this.bx = 3 * (p2x - p1x) - this.cx;\n    this.ax = 1 - this.cx - this.bx;\n    this.cy = 3 * p1y;\n    this.by = 3 * (p2y - p1y) - this.cy;\n    this.ay = 1 - this.cy - this.by;\n    this.p1x = p1x;\n    this.p1y = p2y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\nUnitBezier.prototype.sampleCurveX = function (t) {\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n    return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\nUnitBezier.prototype.sampleCurveY = function (t) {\n    return ((this.ay * t + this.by) * t + this.cy) * t;\n};\nUnitBezier.prototype.sampleCurveDerivativeX = function (t) {\n    return (3 * this.ax * t + 2 * this.bx) * t + this.cx;\n};\nUnitBezier.prototype.solveCurveX = function (x, epsilon) {\n    if (typeof epsilon === 'undefined')\n        epsilon = 0.000001;\n    var t0, t1, t2, x2, i;\n    // First try a few iterations of Newton's method -- normally very fast.\n    for (t2 = x, i = 0; i < 8; i++) {\n        x2 = this.sampleCurveX(t2) - x;\n        if (Math.abs(x2) < epsilon)\n            return t2;\n        var d2 = this.sampleCurveDerivativeX(t2);\n        if (Math.abs(d2) < 0.000001)\n            break;\n        t2 = t2 - x2 / d2;\n    }\n    // Fall back to the bisection method for reliability.\n    t0 = 0;\n    t1 = 1;\n    t2 = x;\n    if (t2 < t0)\n        return t0;\n    if (t2 > t1)\n        return t1;\n    while (t0 < t1) {\n        x2 = this.sampleCurveX(t2);\n        if (Math.abs(x2 - x) < epsilon)\n            return t2;\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n        t2 = (t1 - t0) * 0.5 + t0;\n    }\n    // Failure.\n    return t2;\n};\nUnitBezier.prototype.solve = function (x, epsilon) {\n    return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};\n\nvar UnitBezier$1 = /*@__PURE__*/getDefaultExportFromCjs(unitbezier);\n\n//      \nfunction number(a, b, t) {\n    return a * (1 - t) + b * t;\n}\nfunction color(from, to, t) {\n    return new Color$1(number(from.r, to.r, t), number(from.g, to.g, t), number(from.b, to.b, t), number(from.a, to.a, t));\n}\nfunction array(from, to, t) {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    });\n}\n\nvar interpolate = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tnumber: number,\n\tcolor: color,\n\tarray: array\n});\n\n//      \n// Constants\nconst Xn = 0.95047,\n    // D65 standard referent\n    Yn = 1, Zn = 1.08883, t0 = 4 / 29, t1 = 6 / 29, t2 = 3 * t1 * t1, t3 = t1 * t1 * t1, deg2rad$1 = Math.PI / 180, rad2deg = 180 / Math.PI;\n// Utilities\nfunction xyz2lab(t) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\nfunction lab2xyz(t) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\nfunction xyz2rgb(x) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\nfunction rgb2xyz(x) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n// LAB\nfunction rgbToLab(rgbColor) {\n    const b = rgb2xyz(rgbColor.r), a = rgb2xyz(rgbColor.g), l = rgb2xyz(rgbColor.b), x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn), y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.072175 * l) / Yn), z = xyz2lab((0.0193339 * b + 0.119192 * a + 0.9503041 * l) / Zn);\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\nfunction labToRgb(labColor) {\n    let y = (labColor.l + 16) / 116, x = isNaN(labColor.a) ? y : y + labColor.a / 500, z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color$1(xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n    xyz2rgb(-0.969266 * x + 1.8760108 * y + 0.041556 * z), xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z), labColor.alpha);\n}\nfunction interpolateLab(from, to, t) {\n    return {\n        l: number(from.l, to.l, t),\n        a: number(from.a, to.a, t),\n        b: number(from.b, to.b, t),\n        alpha: number(from.alpha, to.alpha, t)\n    };\n}\n// HCL\nfunction rgbToHcl(rgbColor) {\n    const {l, a, b} = rgbToLab(rgbColor);\n    const h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l,\n        alpha: rgbColor.a\n    };\n}\nfunction hclToRgb(hclColor) {\n    const h = hclColor.h * deg2rad$1, c = hclColor.c, l = hclColor.l;\n    return labToRgb({\n        l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\nfunction interpolateHue(a, b, t) {\n    const d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\nfunction interpolateHcl(from, to, t) {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: number(from.c, to.c, t),\n        l: number(from.l, to.l, t),\n        alpha: number(from.alpha, to.alpha, t)\n    };\n}\nconst lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\nconst hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n\n//      \nclass Interpolate {\n    constructor(type, operator, interpolation, input, stops) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static interpolationFactor(interpolation, input, lower, upper) {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        } else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        } else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier$1(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n    static parse(args, context) {\n        let [operator, interpolation, input, ...rest] = args;\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error(`Expected an interpolation type expression.`, 1);\n        }\n        if (interpolation[0] === 'linear') {\n            interpolation = { name: 'linear' };\n        } else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error(`Exponential interpolation requires a numeric base.`, 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        } else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (controlPoints.length !== 4 || controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: controlPoints\n            };\n        } else {\n            return context.error(`Unknown interpolation type ${ String(interpolation[0]) }`, 1, 0);\n        }\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${ args.length - 1 }.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n        input = context.parse(input, 2, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        } else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([\n                label,\n                parsed\n            ]);\n        }\n        if (outputType.kind !== 'number' && outputType.kind !== 'color' && !(outputType.kind === 'array' && outputType.itemType.kind === 'number' && typeof outputType.N === 'number')) {\n            return context.error(`Type ${ toString$1(outputType) } is not interpolatable.`);\n        }\n        return new Interpolate(outputType, operator, interpolation, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n        if (this.operator === 'interpolate') {\n            return interpolate[this.type.kind.toLowerCase()](outputLower, outputUpper, t);    // eslint-disable-line import/namespace\n        } else if (this.operator === 'interpolate-hcl') {\n            return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n        } else {\n            return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n    serialize() {\n        let interpolation;\n        if (this.interpolation.name === 'linear') {\n            interpolation = ['linear'];\n        } else if (this.interpolation.name === 'exponential') {\n            if (this.interpolation.base === 1) {\n                interpolation = ['linear'];\n            } else {\n                interpolation = [\n                    'exponential',\n                    this.interpolation.base\n                ];\n            }\n        } else {\n            interpolation = ['cubic-bezier'].concat(this.interpolation.controlPoints);\n        }\n        const serialized = [\n            this.operator,\n            interpolation,\n            this.input.serialize()\n        ];\n        for (let i = 0; i < this.labels.length; i++) {\n            serialized.push(this.labels[i], this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\nvar Interpolate$1 = Interpolate;\n\nclass Coalesce {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error('Expectected at least one argument.');\n        }\n        let outputType = null;\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, { typeAnnotation: 'omit' });\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType && parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n        return needsAnnotation ? new Coalesce(ValueType, parsedArgs) : new Coalesce(outputType, parsedArgs);\n    }\n    evaluate(ctx) {\n        let result = null;\n        let argCount = 0;\n        let firstImage;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                // set to first image\n                if (!firstImage) {\n                    firstImage = result;\n                }\n                result = null;\n                // if we reach the end, return the first image\n                if (argCount === this.args.length) {\n                    return firstImage;\n                }\n            }\n            if (result !== null)\n                break;\n        }\n        return result;\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n    serialize() {\n        const serialized = ['coalesce'];\n        this.eachChild(child => {\n            serialized.push(child.serialize());\n        });\n        return serialized;\n    }\n}\nvar Coalesce$1 = Coalesce;\n\n//      \nclass Let {\n    constructor(bindings, result) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n    evaluate(ctx) {\n        return this.result.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${ args.length - 1 } instead.`);\n        const bindings = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${ typeof name } instead.`, i);\n            }\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error(`Variable names must contain only alphanumeric characters or '_'.`, i);\n            }\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value)\n                return null;\n            bindings.push([\n                name,\n                value\n            ]);\n        }\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result)\n            return null;\n        return new Let(bindings, result);\n    }\n    outputDefined() {\n        return this.result.outputDefined();\n    }\n    serialize() {\n        const serialized = ['let'];\n        for (const [name, expr] of this.bindings) {\n            serialized.push(name, expr.serialize());\n        }\n        serialized.push(this.result.serialize());\n        return serialized;\n    }\n}\nvar Let$1 = Let;\n\n//      \nclass At {\n    constructor(type, index, input) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${ args.length - 1 } instead.`);\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array$1(context.expectedType || ValueType));\n        if (!index || !input)\n            return null;\n        const t = input.type;\n        return new At(t.itemType, index, input);\n    }\n    evaluate(ctx) {\n        const index = this.index.evaluate(ctx);\n        const array = this.input.evaluate(ctx);\n        if (index < 0) {\n            throw new RuntimeError$1(`Array index out of bounds: ${ index } < 0.`);\n        }\n        if (index >= array.length) {\n            throw new RuntimeError$1(`Array index out of bounds: ${ index } > ${ array.length - 1 }.`);\n        }\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError$1(`Array index must be an integer, but found ${ index } instead.`);\n        }\n        return array[index];\n    }\n    eachChild(fn) {\n        fn(this.index);\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        return [\n            'at',\n            this.index.serialize(),\n            this.input.serialize()\n        ];\n    }\n}\nvar At$1 = At;\n\n//      \nclass In {\n    constructor(needle, haystack) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n    static parse(args, context) {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${ args.length - 1 } instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [\n                BooleanType,\n                StringType,\n                NumberType,\n                NullType,\n                ValueType\n            ])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${ toString$1(needle.type) } instead`);\n        }\n        return new In(needle, haystack);\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (haystack == null)\n            return false;\n        if (!isValidNativeType(needle, [\n                'boolean',\n                'string',\n                'number',\n                'null'\n            ])) {\n            throw new RuntimeError$1(`Expected first argument to be of type boolean, string, number or null, but found ${ toString$1(typeOf(needle)) } instead.`);\n        }\n        if (!isValidNativeType(haystack, [\n                'string',\n                'array'\n            ])) {\n            throw new RuntimeError$1(`Expected second argument to be of type array or string, but found ${ toString$1(typeOf(haystack)) } instead.`);\n        }\n        return haystack.indexOf(needle) >= 0;\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n    outputDefined() {\n        return true;\n    }\n    serialize() {\n        return [\n            'in',\n            this.needle.serialize(),\n            this.haystack.serialize()\n        ];\n    }\n}\nvar In$1 = In;\n\n//      \nclass IndexOf {\n    constructor(needle, haystack, fromIndex) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${ args.length - 1 } instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [\n                BooleanType,\n                StringType,\n                NumberType,\n                NullType,\n                ValueType\n            ])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${ toString$1(needle.type) } instead`);\n        }\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex)\n                return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        } else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (!isValidNativeType(needle, [\n                'boolean',\n                'string',\n                'number',\n                'null'\n            ])) {\n            throw new RuntimeError$1(`Expected first argument to be of type boolean, string, number or null, but found ${ toString$1(typeOf(needle)) } instead.`);\n        }\n        if (!isValidNativeType(haystack, [\n                'string',\n                'array'\n            ])) {\n            throw new RuntimeError$1(`Expected second argument to be of type array or string, but found ${ toString$1(typeOf(haystack)) } instead.`);\n        }\n        if (this.fromIndex) {\n            const fromIndex = this.fromIndex.evaluate(ctx);\n            return haystack.indexOf(needle, fromIndex);\n        }\n        return haystack.indexOf(needle);\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        if (this.fromIndex != null && this.fromIndex !== undefined) {\n            const fromIndex = this.fromIndex.serialize();\n            return [\n                'index-of',\n                this.needle.serialize(),\n                this.haystack.serialize(),\n                fromIndex\n            ];\n        }\n        return [\n            'index-of',\n            this.needle.serialize(),\n            this.haystack.serialize()\n        ];\n    }\n}\nvar IndexOf$1 = IndexOf;\n\n// Map input label values to output expression index\nclass Match {\n    constructor(inputType, outputType, input, cases, outputs, otherwise) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${ args.length - 1 }.`);\n        if (args.length % 2 !== 1)\n            return context.error(`Expected an even number of arguments.`);\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error(`Branch labels must be numbers or strings.`);\n                } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${ Number.MAX_SAFE_INTEGER }.`);\n                } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error(`Numeric branch labels must be integer values.`);\n                } else if (!inputType) {\n                    inputType = typeOf(label);\n                } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n                cases[String(label)] = outputs.length;\n            }\n            const result = context.parse(value, i, outputType);\n            if (!result)\n                return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input)\n            return null;\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype(inputType, input.type)) {\n            return null;\n        }\n        return new Match(inputType, outputType, input, cases, outputs, otherwise);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const output = typeOf(input) === this.inputType && this.outputs[this.cases[input]] || this.otherwise;\n        return output.evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n    serialize() {\n        const serialized = [\n            'match',\n            this.input.serialize()\n        ];\n        // Sort so serialization has an arbitrary defined order, even though\n        // branch order doesn't affect evaluation\n        const sortedLabels = Object.keys(this.cases).sort();\n        // Group branches by unique match expression to support condensed\n        // serializations of the form [case1, case2, ...] -> matchExpression\n        const groupedByOutput = [];\n        const outputLookup = {};\n        // lookup index into groupedByOutput for a given output expression\n        for (const label of sortedLabels) {\n            const outputIndex = outputLookup[this.cases[label]];\n            if (outputIndex === undefined) {\n                // First time seeing this output, add it to the end of the grouped list\n                outputLookup[this.cases[label]] = groupedByOutput.length;\n                groupedByOutput.push([\n                    this.cases[label],\n                    [label]\n                ]);\n            } else {\n                // We've seen this expression before, add the label to that output's group\n                groupedByOutput[outputIndex][1].push(label);\n            }\n        }\n        const coerceLabel = label => this.inputType.kind === 'number' ? Number(label) : label;\n        for (const [outputIndex, labels] of groupedByOutput) {\n            if (labels.length === 1) {\n                // Only a single label matches this output expression\n                serialized.push(coerceLabel(labels[0]));\n            } else {\n                // Array of literal labels pointing to this output expression\n                serialized.push(labels.map(coerceLabel));\n            }\n            serialized.push(this.outputs[outputIndex].serialize());\n        }\n        serialized.push(this.otherwise.serialize());\n        return serialized;\n    }\n}\nvar Match$1 = Match;\n\nclass Case {\n    constructor(type, branches, otherwise) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${ args.length - 1 }.`);\n        if (args.length % 2 !== 0)\n            return context.error(`Expected an odd number of arguments.`);\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test)\n                return null;\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result)\n                return null;\n            branches.push([\n                test,\n                result\n            ]);\n            outputType = outputType || result.type;\n        }\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        return new Case(outputType, branches, otherwise);\n    }\n    evaluate(ctx) {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n    serialize() {\n        const serialized = ['case'];\n        this.eachChild(child => {\n            serialized.push(child.serialize());\n        });\n        return serialized;\n    }\n}\nvar Case$1 = Case;\n\n//      \nclass Slice {\n    constructor(type, input, beginIndex, endIndex) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${ args.length - 1 } instead.`);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n        if (!input || !beginIndex)\n            return null;\n        if (!isValidType(input.type, [\n                array$1(ValueType),\n                StringType,\n                ValueType\n            ])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${ toString$1(input.type) } instead`);\n        }\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex)\n                return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        } else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const beginIndex = this.beginIndex.evaluate(ctx);\n        if (!isValidNativeType(input, [\n                'string',\n                'array'\n            ])) {\n            throw new RuntimeError$1(`Expected first argument to be of type array or string, but found ${ toString$1(typeOf(input)) } instead.`);\n        }\n        if (this.endIndex) {\n            const endIndex = this.endIndex.evaluate(ctx);\n            return input.slice(beginIndex, endIndex);\n        }\n        return input.slice(beginIndex);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        if (this.endIndex != null && this.endIndex !== undefined) {\n            const endIndex = this.endIndex.serialize();\n            return [\n                'slice',\n                this.input.serialize(),\n                this.beginIndex.serialize(),\n                endIndex\n            ];\n        }\n        return [\n            'slice',\n            this.input.serialize(),\n            this.beginIndex.serialize()\n        ];\n    }\n}\nvar Slice$1 = Slice;\n\n//      \nfunction isComparableType(op, type) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' || type.kind === 'string' || type.kind === 'number' || type.kind === 'null' || type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' || type.kind === 'number' || type.kind === 'value';\n    }\n}\nfunction eq(ctx, a, b) {\n    return a === b;\n}\nfunction neq(ctx, a, b) {\n    return a !== b;\n}\nfunction lt(ctx, a, b) {\n    return a < b;\n}\nfunction gt(ctx, a, b) {\n    return a > b;\n}\nfunction lteq(ctx, a, b) {\n    return a <= b;\n}\nfunction gteq(ctx, a, b) {\n    return a >= b;\n}\nfunction eqCollate(ctx, a, b, c) {\n    return c.compare(a, b) === 0;\n}\nfunction neqCollate(ctx, a, b, c) {\n    return !eqCollate(ctx, a, b, c);\n}\nfunction ltCollate(ctx, a, b, c) {\n    return c.compare(a, b) < 0;\n}\nfunction gtCollate(ctx, a, b, c) {\n    return c.compare(a, b) > 0;\n}\nfunction lteqCollate(ctx, a, b, c) {\n    return c.compare(a, b) <= 0;\n}\nfunction gteqCollate(ctx, a, b, c) {\n    return c.compare(a, b) >= 0;\n}\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op, compareBasic, compareWithCollator) {\n    const isOrderComparison = op !== '==' && op !== '!=';\n    return class Comparison {\n        constructor(lhs, rhs, collator) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n        static parse(args, context) {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error(`Expected two or three arguments.`);\n            const op = args[0];\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs)\n                return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${ op }\" comparisons are not supported for type '${ toString$1(lhs.type) }'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs)\n                return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${ op }\" comparisons are not supported for type '${ toString$1(rhs.type) }'.`);\n            }\n            if (lhs.type.kind !== rhs.type.kind && lhs.type.kind !== 'value' && rhs.type.kind !== 'value') {\n                return context.error(`Cannot compare types '${ toString$1(lhs.type) }' and '${ toString$1(rhs.type) }'.`);\n            }\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion$1(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion$1(lhs.type, [rhs]);\n                }\n            }\n            let collator = null;\n            if (args.length === 4) {\n                if (lhs.type.kind !== 'string' && rhs.type.kind !== 'string' && lhs.type.kind !== 'value' && rhs.type.kind !== 'value') {\n                    return context.error(`Cannot use collator to compare non-string types.`);\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator)\n                    return null;\n            }\n            return new Comparison(lhs, rhs, collator);\n        }\n        evaluate(ctx) {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError$1(`Expected arguments for \"${ op }\" to be (string, string) or (number, number), but found (${ lt.kind }, ${ rt.kind }) instead.`);\n                }\n            }\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n            return this.collator ? compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) : compareBasic(ctx, lhs, rhs);\n        }\n        eachChild(fn) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n        outputDefined() {\n            return true;\n        }\n        serialize() {\n            const serialized = [op];\n            this.eachChild(child => {\n                serialized.push(child.serialize());\n            });\n            return serialized;\n        }\n    };\n}\nconst Equals = makeComparison('==', eq, eqCollate);\nconst NotEquals = makeComparison('!=', neq, neqCollate);\nconst LessThan = makeComparison('<', lt, ltCollate);\nconst GreaterThan = makeComparison('>', gt, gtCollate);\nconst LessThanOrEqual = makeComparison('<=', lteq, lteqCollate);\nconst GreaterThanOrEqual = makeComparison('>=', gteq, gteqCollate);\n\n//      \nclass NumberFormat {\n    // BCP 47 language tag\n    // ISO 4217 currency code, required if style=currency\n    // Simple units sanctioned for use in ECMAScript, required if style=unit. https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier\n    // Default 0\n    // Default 3\n    constructor(number, locale, currency, unit, minFractionDigits, maxFractionDigits) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.unit = unit;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error(`Expected two arguments.`);\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number)\n            return null;\n        const options = args[2];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error(`NumberFormat options argument must be an object.`);\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency)\n                return null;\n        }\n        let unit = null;\n        if (options['unit']) {\n            unit = context.parse(options['unit'], 1, StringType);\n            if (!unit)\n                return null;\n        }\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits)\n                return null;\n        }\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits)\n                return null;\n        }\n        return new NumberFormat(number, locale, currency, unit, minFractionDigits, maxFractionDigits);\n    }\n    evaluate(ctx) {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [], {\n            style: this.currency && 'currency' || this.unit && 'unit' || 'decimal',\n            currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n            unit: this.unit ? this.unit.evaluate(ctx) : undefined,\n            minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n            maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined\n        }).format(this.number.evaluate(ctx));\n    }\n    eachChild(fn) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.unit) {\n            fn(this.unit);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        const options = {};\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        if (this.currency) {\n            options['currency'] = this.currency.serialize();\n        }\n        if (this.unit) {\n            options['unit'] = this.unit.serialize();\n        }\n        if (this.minFractionDigits) {\n            options['min-fraction-digits'] = this.minFractionDigits.serialize();\n        }\n        if (this.maxFractionDigits) {\n            options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n        }\n        return [\n            'number-format',\n            this.number.serialize(),\n            options\n        ];\n    }\n}\n\n//      \nclass Length {\n    constructor(input) {\n        this.type = NumberType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${ args.length - 1 } instead.`);\n        const input = context.parse(args[1], 1);\n        if (!input)\n            return null;\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${ toString$1(input.type) } instead.`);\n        return new Length(input);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        } else if (Array.isArray(input)) {\n            return input.length;\n        } else {\n            throw new RuntimeError$1(`Expected value to be of type string or array, but found ${ toString$1(typeOf(input)) } instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        const serialized = ['length'];\n        this.eachChild(child => {\n            serialized.push(child.serialize());\n        });\n        return serialized;\n    }\n}\nvar Length$1 = Length;\n\n//      \nconst expressions = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion$1,\n    'at': At$1,\n    'boolean': Assertion$1,\n    'case': Case$1,\n    'coalesce': Coalesce$1,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In$1,\n    'index-of': IndexOf$1,\n    'interpolate': Interpolate$1,\n    'interpolate-hcl': Interpolate$1,\n    'interpolate-lab': Interpolate$1,\n    'length': Length$1,\n    'let': Let$1,\n    'literal': Literal$1,\n    'match': Match$1,\n    'number': Assertion$1,\n    'number-format': NumberFormat,\n    'object': Assertion$1,\n    'slice': Slice$1,\n    'step': Step$1,\n    'string': Assertion$1,\n    'to-boolean': Coercion$1,\n    'to-color': Coercion$1,\n    'to-number': Coercion$1,\n    'to-string': Coercion$1,\n    'var': Var$1,\n    'within': Within$1\n};\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error)\n        throw new RuntimeError$1(error);\n    return new Color$1(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\nfunction has(key, obj) {\n    return key in obj;\n}\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = i + j >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\nfunction varargs(type) {\n    return { type };\n}\nCompoundExpression$1.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => {\n            throw new RuntimeError$1(v.evaluate(ctx));\n        }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => toString$1(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array$1(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [\n            NumberType,\n            NumberType,\n            NumberType\n        ],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [\n            NumberType,\n            NumberType,\n            NumberType,\n            NumberType\n        ],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ],\n            [\n                [\n                    StringType,\n                    ObjectType\n                ],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ],\n            [\n                [\n                    StringType,\n                    ObjectType\n                ],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        ctx => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        ctx => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        ctx => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        ctx => ctx.globals.zoom\n    ],\n    'pitch': [\n        NumberType,\n        [],\n        ctx => ctx.globals.pitch || 0\n    ],\n    'distance-from-center': [\n        NumberType,\n        [],\n        ctx => ctx.distanceFromCenter()\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        ctx => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        ctx => ctx.globals.lineProgress || 0\n    ],\n    'sky-radial-progress': [\n        NumberType,\n        [],\n        ctx => ctx.globals.skyRadialProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        ctx => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [\n                    NumberType,\n                    NumberType\n                ],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ],\n            [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [\n            NumberType,\n            NumberType\n        ],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [\n            NumberType,\n            NumberType\n        ],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [\n            NumberType,\n            NumberType\n        ],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => ctx.properties()[k.value] === v.value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === v.value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === v.value\n    ],\n    'filter-<': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => k.value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        ctx => ctx.id() !== null && ctx.id() !== undefined\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array$1(StringType)],\n        (ctx, [v]) => v.value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array$1(ValueType)],\n        (ctx, [v]) => v.value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [\n            StringType,\n            array$1(ValueType)\n        ],\n        // assumes v is an array literal\n        (ctx, [k, v]) => v.value.indexOf(ctx.properties()[k.value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [\n            StringType,\n            array$1(ValueType)\n        ],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[k.value], v.value, 0, v.value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [\n                    BooleanType,\n                    BooleanType\n                ],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [\n                    BooleanType,\n                    BooleanType\n                ],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => toString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\nvar definitions = expressions;\n\n//      \n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\nfunction success(value) {\n    return {\n        result: 'success',\n        value\n    };\n}\nfunction error(value) {\n    return {\n        result: 'error',\n        value\n    };\n}\n\n//      \nfunction supportsPropertyExpression(spec) {\n    return spec['property-type'] === 'data-driven';\n}\nfunction supportsZoomExpression(spec) {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\nfunction supportsInterpolation(spec) {\n    return !!spec.expression && spec.expression.interpolated;\n}\n\nfunction isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nclass StyleExpression {\n    constructor(expression, propertySpec) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext$1();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection, featureTileCoord, featureDistanceData) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n        return this.expression.evaluate(this._evaluator);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection, featureTileCoord, featureDistanceData) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            // eslint-disable-next-line no-self-compare\n            if (val === null || val === undefined || typeof val === 'number' && val !== val) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError$1(`Expected value to be one of ${ Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ') }, but found ${ JSON.stringify(val) } instead.`);\n            }\n            return val;\n        } catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\nfunction isExpression(expression) {\n    return Array.isArray(expression) && expression.length > 0 && typeof expression[0] === 'string' && expression[0] in definitions;\n}\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nfunction createExpression(expression, propertySpec) {\n    const parser = new ParsingContext$1(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined, propertySpec && propertySpec.type === 'string' ? { typeAnnotation: 'coerce' } : undefined);\n    if (!parsed) {\n        return error(parser.errors);\n    }\n    return success(new StyleExpression(parsed, propertySpec));\n}\nclass ZoomConstantExpression {\n    constructor(kind, expression) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'constant' && !isStateConstant(expression.expression);\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\nclass ZoomDependentExpression {\n    constructor(kind, expression, zoomStops, interpolationType) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'camera' && !isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    interpolationFactor(input, lower, upper) {\n        if (this.interpolationType) {\n            return Interpolate$1.interpolationFactor(this.interpolationType, input, lower, upper);\n        } else {\n            return 0;\n        }\n    }\n}\nfunction createPropertyExpression(expression, propertySpec) {\n    expression = createExpression(expression, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n    const parsed = expression.value.expression;\n    const isFeatureConstant$1 = isFeatureConstant(parsed);\n    if (!isFeatureConstant$1 && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError$1('', 'data expressions not supported')]);\n    }\n    const isZoomConstant = isGlobalPropertyConstant(parsed, [\n        'zoom',\n        'pitch',\n        'distance-from-center'\n    ]);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError$1('', 'zoom expressions not supported')]);\n    }\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ParsingError$1('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    } else if (zoomCurve instanceof ParsingError$1) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate$1 && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError$1('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n    if (!zoomCurve) {\n        return success(isFeatureConstant$1 ? new ZoomConstantExpression('constant', expression.value) : new ZoomConstantExpression('source', expression.value));\n    }\n    const interpolationType = zoomCurve instanceof Interpolate$1 ? zoomCurve.interpolation : undefined;\n    return success(isFeatureConstant$1 ? new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType) : new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType));\n}\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression) {\n    let result = null;\n    if (expression instanceof Let$1) {\n        result = findZoomCurve(expression.result);\n    } else if (expression instanceof Coalesce$1) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n    } else if ((expression instanceof Step$1 || expression instanceof Interpolate$1) && expression.input instanceof CompoundExpression$1 && expression.input.name === 'zoom') {\n        result = expression;\n    }\n    if (result instanceof ParsingError$1) {\n        return result;\n    }\n    expression.eachChild(child => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError$1) {\n            result = childResult;\n        } else if (!result && childResult) {\n            result = new ParsingError$1('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError$1('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n    return result;\n}\nfunction getExpectedType(spec) {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n    if (spec.type === 'array') {\n        return array$1(types[spec.value] || ValueType, spec.length);\n    }\n    return types[spec.type];\n}\nfunction getDefaultValue(spec) {\n    if (spec.type === 'color' && (isFunction(spec.default) || Array.isArray(spec.default))) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color$1(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color$1.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n\n//      \n// Turn jsonlint-lines-primitives objects into primitive objects\nfunction unbundle(value) {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\nfunction deepUnbundle(value) {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n    return unbundle(value);\n}\n\nvar spec = {\"$version\":8,\"$root\":{\"version\":{\"required\":true,\"type\":\"enum\",\"values\":[8]},\"name\":{\"type\":\"string\"},\"metadata\":{\"type\":\"*\"},\"center\":{\"type\":\"array\",\"value\":\"number\"},\"zoom\":{\"type\":\"number\"},\"bearing\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\"},\"pitch\":{\"type\":\"number\",\"default\":0,\"units\":\"degrees\"},\"light\":{\"type\":\"light\"},\"terrain\":{\"type\":\"terrain\"},\"fog\":{\"type\":\"fog\"},\"sources\":{\"required\":true,\"type\":\"sources\"},\"sprite\":{\"type\":\"string\"},\"glyphs\":{\"type\":\"string\"},\"transition\":{\"type\":\"transition\"},\"projection\":{\"type\":\"projection\"},\"layers\":{\"required\":true,\"type\":\"array\",\"value\":\"layer\"}},\"sources\":{\"*\":{\"type\":\"source\"}},\"source\":[\"source_vector\",\"source_raster\",\"source_raster_dem\",\"source_geojson\",\"source_video\",\"source_image\"],\"source_vector\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"vector\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"scheme\":{\"type\":\"enum\",\"values\":{\"xyz\":{},\"tms\":{}},\"default\":\"xyz\"},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"attribution\":{\"type\":\"string\"},\"promoteId\":{\"type\":\"promoteId\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_raster\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"raster\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"tileSize\":{\"type\":\"number\",\"default\":512,\"units\":\"pixels\"},\"scheme\":{\"type\":\"enum\",\"values\":{\"xyz\":{},\"tms\":{}},\"default\":\"xyz\"},\"attribution\":{\"type\":\"string\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_raster_dem\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"raster-dem\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"tileSize\":{\"type\":\"number\",\"default\":512,\"units\":\"pixels\"},\"attribution\":{\"type\":\"string\"},\"encoding\":{\"type\":\"enum\",\"values\":{\"terrarium\":{},\"mapbox\":{}},\"default\":\"mapbox\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_geojson\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"geojson\":{}}},\"data\":{\"type\":\"*\"},\"maxzoom\":{\"type\":\"number\",\"default\":18},\"attribution\":{\"type\":\"string\"},\"buffer\":{\"type\":\"number\",\"default\":128,\"maximum\":512,\"minimum\":0},\"filter\":{\"type\":\"*\"},\"tolerance\":{\"type\":\"number\",\"default\":0.375},\"cluster\":{\"type\":\"boolean\",\"default\":false},\"clusterRadius\":{\"type\":\"number\",\"default\":50,\"minimum\":0},\"clusterMaxZoom\":{\"type\":\"number\"},\"clusterMinPoints\":{\"type\":\"number\"},\"clusterProperties\":{\"type\":\"*\"},\"lineMetrics\":{\"type\":\"boolean\",\"default\":false},\"generateId\":{\"type\":\"boolean\",\"default\":false},\"promoteId\":{\"type\":\"promoteId\"}},\"source_video\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"video\":{}}},\"urls\":{\"required\":true,\"type\":\"array\",\"value\":\"string\"},\"coordinates\":{\"required\":true,\"type\":\"array\",\"length\":4,\"value\":{\"type\":\"array\",\"length\":2,\"value\":\"number\"}}},\"source_image\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"image\":{}}},\"url\":{\"required\":true,\"type\":\"string\"},\"coordinates\":{\"required\":true,\"type\":\"array\",\"length\":4,\"value\":{\"type\":\"array\",\"length\":2,\"value\":\"number\"}}},\"layer\":{\"id\":{\"type\":\"string\",\"required\":true},\"type\":{\"type\":\"enum\",\"values\":{\"fill\":{},\"line\":{},\"symbol\":{},\"circle\":{},\"heatmap\":{},\"fill-extrusion\":{},\"raster\":{},\"hillshade\":{},\"background\":{},\"sky\":{}},\"required\":true},\"metadata\":{\"type\":\"*\"},\"source\":{\"type\":\"string\"},\"source-layer\":{\"type\":\"string\"},\"minzoom\":{\"type\":\"number\",\"minimum\":0,\"maximum\":24},\"maxzoom\":{\"type\":\"number\",\"minimum\":0,\"maximum\":24},\"filter\":{\"type\":\"filter\"},\"layout\":{\"type\":\"layout\"},\"paint\":{\"type\":\"paint\"}},\"layout\":[\"layout_fill\",\"layout_line\",\"layout_circle\",\"layout_heatmap\",\"layout_fill-extrusion\",\"layout_symbol\",\"layout_raster\",\"layout_hillshade\",\"layout_background\",\"layout_sky\"],\"layout_background\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_sky\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_fill\":{\"fill-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_circle\":{\"circle-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_heatmap\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_fill-extrusion\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"},\"fill-extrusion-edge-radius\":{\"type\":\"number\",\"private\":true,\"default\":0,\"minimum\":0,\"maximum\":1,\"property-type\":\"constant\"}},\"layout_line\":{\"line-cap\":{\"type\":\"enum\",\"values\":{\"butt\":{},\"round\":{},\"square\":{}},\"default\":\"butt\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-join\":{\"type\":\"enum\",\"values\":{\"bevel\":{},\"round\":{},\"miter\":{}},\"default\":\"miter\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-miter-limit\":{\"type\":\"number\",\"default\":2,\"requires\":[{\"line-join\":\"miter\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-round-limit\":{\"type\":\"number\",\"default\":1.05,\"requires\":[{\"line-join\":\"round\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_symbol\":{\"symbol-placement\":{\"type\":\"enum\",\"values\":{\"point\":{},\"line\":{},\"line-center\":{}},\"default\":\"point\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-spacing\":{\"type\":\"number\",\"default\":250,\"minimum\":1,\"units\":\"pixels\",\"requires\":[{\"symbol-placement\":\"line\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-avoid-edges\":{\"type\":\"boolean\",\"default\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"symbol-z-order\":{\"type\":\"enum\",\"values\":{\"auto\":{},\"viewport-y\":{},\"source\":{}},\"default\":\"auto\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-allow-overlap\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-ignore-placement\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-optional\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\",\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-rotation-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-size\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"units\":\"factor of the original icon size\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-text-fit\":{\"type\":\"enum\",\"values\":{\"none\":{},\"width\":{},\"height\":{},\"both\":{}},\"default\":\"none\",\"requires\":[\"icon-image\",\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-text-fit-padding\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[0,0,0,0],\"units\":\"pixels\",\"requires\":[\"icon-image\",\"text-field\",{\"icon-text-fit\":[\"both\",\"width\",\"height\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-image\":{\"type\":\"resolvedImage\",\"tokens\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-padding\":{\"type\":\"number\",\"default\":2,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-keep-upright\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\",{\"icon-rotation-alignment\":\"map\"},{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-offset\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-anchor\":{\"type\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"default\":\"center\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-rotation-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-field\":{\"type\":\"formatted\",\"default\":\"\",\"tokens\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-font\":{\"type\":\"array\",\"value\":\"string\",\"default\":[\"Open Sans Regular\",\"Arial Unicode MS Regular\"],\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-size\":{\"type\":\"number\",\"default\":16,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-max-width\":{\"type\":\"number\",\"default\":10,\"minimum\":0,\"units\":\"ems\",\"requires\":[\"text-field\",{\"symbol-placement\":[\"point\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-line-height\":{\"type\":\"number\",\"default\":1.2,\"units\":\"ems\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-letter-spacing\":{\"type\":\"number\",\"default\":0,\"units\":\"ems\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-justify\":{\"type\":\"enum\",\"values\":{\"auto\":{},\"left\":{},\"center\":{},\"right\":{}},\"default\":\"center\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-radial-offset\":{\"type\":\"number\",\"units\":\"ems\",\"default\":0,\"requires\":[\"text-field\"],\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]}},\"text-variable-anchor\":{\"type\":\"array\",\"value\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"requires\":[\"text-field\",{\"symbol-placement\":[\"point\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-anchor\":{\"type\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"default\":\"center\",\"requires\":[\"text-field\",{\"!\":\"text-variable-anchor\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-max-angle\":{\"type\":\"number\",\"default\":45,\"units\":\"degrees\",\"requires\":[\"text-field\",{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-writing-mode\":{\"type\":\"array\",\"value\":\"enum\",\"values\":{\"horizontal\":{},\"vertical\":{}},\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-padding\":{\"type\":\"number\",\"default\":2,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-keep-upright\":{\"type\":\"boolean\",\"default\":true,\"requires\":[\"text-field\",{\"text-rotation-alignment\":\"map\"},{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-transform\":{\"type\":\"enum\",\"values\":{\"none\":{},\"uppercase\":{},\"lowercase\":{}},\"default\":\"none\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-offset\":{\"type\":\"array\",\"value\":\"number\",\"units\":\"ems\",\"length\":2,\"default\":[0,0],\"requires\":[\"text-field\",{\"!\":\"text-radial-offset\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-allow-overlap\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-ignore-placement\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-optional\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\",\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_raster\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_hillshade\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"filter\":{\"type\":\"array\",\"value\":\"*\"},\"filter_symbol\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\",\"pitch\",\"distance-from-center\"]}},\"filter_fill\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_line\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_circle\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_fill-extrusion\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_heatmap\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_operator\":{\"type\":\"enum\",\"values\":{\"==\":{},\"!=\":{},\">\":{},\">=\":{},\"<\":{},\"<=\":{},\"in\":{},\"!in\":{},\"all\":{},\"any\":{},\"none\":{},\"has\":{},\"!has\":{},\"within\":{}}},\"geometry_type\":{\"type\":\"enum\",\"values\":{\"Point\":{},\"LineString\":{},\"Polygon\":{}}},\"function\":{\"expression\":{\"type\":\"expression\"},\"stops\":{\"type\":\"array\",\"value\":\"function_stop\"},\"base\":{\"type\":\"number\",\"default\":1,\"minimum\":0},\"property\":{\"type\":\"string\",\"default\":\"$zoom\"},\"type\":{\"type\":\"enum\",\"values\":{\"identity\":{},\"exponential\":{},\"interval\":{},\"categorical\":{}},\"default\":\"exponential\"},\"colorSpace\":{\"type\":\"enum\",\"values\":{\"rgb\":{},\"lab\":{},\"hcl\":{}},\"default\":\"rgb\"},\"default\":{\"type\":\"*\",\"required\":false}},\"function_stop\":{\"type\":\"array\",\"minimum\":0,\"maximum\":24,\"value\":[\"number\",\"color\"],\"length\":2},\"expression\":{\"type\":\"array\",\"value\":\"*\",\"minimum\":1},\"expression_name\":{\"type\":\"enum\",\"values\":{\"let\":{\"group\":\"Variable binding\"},\"var\":{\"group\":\"Variable binding\"},\"literal\":{\"group\":\"Types\"},\"array\":{\"group\":\"Types\"},\"at\":{\"group\":\"Lookup\"},\"in\":{\"group\":\"Lookup\"},\"index-of\":{\"group\":\"Lookup\"},\"slice\":{\"group\":\"Lookup\"},\"case\":{\"group\":\"Decision\"},\"match\":{\"group\":\"Decision\"},\"coalesce\":{\"group\":\"Decision\"},\"step\":{\"group\":\"Ramps, scales, curves\"},\"interpolate\":{\"group\":\"Ramps, scales, curves\"},\"interpolate-hcl\":{\"group\":\"Ramps, scales, curves\"},\"interpolate-lab\":{\"group\":\"Ramps, scales, curves\"},\"ln2\":{\"group\":\"Math\"},\"pi\":{\"group\":\"Math\"},\"e\":{\"group\":\"Math\"},\"typeof\":{\"group\":\"Types\"},\"string\":{\"group\":\"Types\"},\"number\":{\"group\":\"Types\"},\"boolean\":{\"group\":\"Types\"},\"object\":{\"group\":\"Types\"},\"collator\":{\"group\":\"Types\"},\"format\":{\"group\":\"Types\"},\"image\":{\"group\":\"Types\"},\"number-format\":{\"group\":\"Types\"},\"to-string\":{\"group\":\"Types\"},\"to-number\":{\"group\":\"Types\"},\"to-boolean\":{\"group\":\"Types\"},\"to-rgba\":{\"group\":\"Color\"},\"to-color\":{\"group\":\"Types\"},\"rgb\":{\"group\":\"Color\"},\"rgba\":{\"group\":\"Color\"},\"get\":{\"group\":\"Lookup\"},\"has\":{\"group\":\"Lookup\"},\"length\":{\"group\":\"Lookup\"},\"properties\":{\"group\":\"Feature data\"},\"feature-state\":{\"group\":\"Feature data\"},\"geometry-type\":{\"group\":\"Feature data\"},\"id\":{\"group\":\"Feature data\"},\"zoom\":{\"group\":\"Camera\"},\"pitch\":{\"group\":\"Camera\"},\"distance-from-center\":{\"group\":\"Camera\"},\"heatmap-density\":{\"group\":\"Heatmap\"},\"line-progress\":{\"group\":\"Feature data\"},\"sky-radial-progress\":{\"group\":\"sky\"},\"accumulated\":{\"group\":\"Feature data\"},\"+\":{\"group\":\"Math\"},\"*\":{\"group\":\"Math\"},\"-\":{\"group\":\"Math\"},\"/\":{\"group\":\"Math\"},\"%\":{\"group\":\"Math\"},\"^\":{\"group\":\"Math\"},\"sqrt\":{\"group\":\"Math\"},\"log10\":{\"group\":\"Math\"},\"ln\":{\"group\":\"Math\"},\"log2\":{\"group\":\"Math\"},\"sin\":{\"group\":\"Math\"},\"cos\":{\"group\":\"Math\"},\"tan\":{\"group\":\"Math\"},\"asin\":{\"group\":\"Math\"},\"acos\":{\"group\":\"Math\"},\"atan\":{\"group\":\"Math\"},\"min\":{\"group\":\"Math\"},\"max\":{\"group\":\"Math\"},\"round\":{\"group\":\"Math\"},\"abs\":{\"group\":\"Math\"},\"ceil\":{\"group\":\"Math\"},\"floor\":{\"group\":\"Math\"},\"distance\":{\"group\":\"Math\"},\"==\":{\"group\":\"Decision\"},\"!=\":{\"group\":\"Decision\"},\">\":{\"group\":\"Decision\"},\"<\":{\"group\":\"Decision\"},\">=\":{\"group\":\"Decision\"},\"<=\":{\"group\":\"Decision\"},\"all\":{\"group\":\"Decision\"},\"any\":{\"group\":\"Decision\"},\"!\":{\"group\":\"Decision\"},\"within\":{\"group\":\"Decision\"},\"is-supported-script\":{\"group\":\"String\"},\"upcase\":{\"group\":\"String\"},\"downcase\":{\"group\":\"String\"},\"concat\":{\"group\":\"String\"},\"resolved-locale\":{\"group\":\"String\"}}},\"fog\":{\"range\":{\"type\":\"array\",\"default\":[0.5,10],\"minimum\":-20,\"maximum\":20,\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]}},\"color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#ffffff\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"high-color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#245cdf\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"space-color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],4,\"#010b19\",7,\"#367ab9\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"horizon-blend\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],4,0.2,7,0.1],\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"star-intensity\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],5,0.35,6,0],\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true}},\"light\":{\"anchor\":{\"type\":\"enum\",\"default\":\"viewport\",\"values\":{\"map\":{},\"viewport\":{}},\"property-type\":\"data-constant\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]}},\"position\":{\"type\":\"array\",\"default\":[1.15,210,30],\"length\":3,\"value\":\"number\",\"property-type\":\"data-constant\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]}},\"color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#ffffff\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"intensity\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":0.5,\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true}},\"projection\":{\"name\":{\"type\":\"enum\",\"values\":{\"albers\":{},\"equalEarth\":{},\"equirectangular\":{},\"lambertConformalConic\":{},\"mercator\":{},\"naturalEarth\":{},\"winkelTripel\":{},\"globe\":{}},\"default\":\"mercator\",\"required\":true},\"center\":{\"type\":\"array\",\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"minimum\":[-180,-90],\"maximum\":[180,90],\"transition\":false,\"requires\":[{\"name\":[\"albers\",\"lambertConformalConic\"]}]},\"parallels\":{\"type\":\"array\",\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"minimum\":[-90,-90],\"maximum\":[90,90],\"transition\":false,\"requires\":[{\"name\":[\"albers\",\"lambertConformalConic\"]}]}},\"terrain\":{\"source\":{\"type\":\"string\",\"required\":true},\"exaggeration\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":1,\"minimum\":0,\"maximum\":1000,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true,\"requires\":[\"source\"]}},\"paint\":[\"paint_fill\",\"paint_line\",\"paint_circle\",\"paint_heatmap\",\"paint_fill-extrusion\",\"paint_symbol\",\"paint_raster\",\"paint_hillshade\",\"paint_background\",\"paint_sky\"],\"paint_fill\":{\"fill-antialias\":{\"type\":\"boolean\",\"default\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"fill-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-outline-color\":{\"type\":\"color\",\"transition\":true,\"requires\":[{\"!\":\"fill-pattern\"},{\"fill-antialias\":true}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"fill-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"}},\"paint_fill-extrusion\":{\"fill-extrusion-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"fill-extrusion-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"fill-extrusion-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-height\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"meters\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-base\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"meters\",\"transition\":true,\"requires\":[\"fill-extrusion-height\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-vertical-gradient\":{\"type\":\"boolean\",\"default\":true,\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-ambient-occlusion-intensity\":{\"property-type\":\"data-constant\",\"type\":\"number\",\"private\":true,\"default\":0,\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"fill-extrusion-ambient-occlusion-radius\":{\"property-type\":\"data-constant\",\"type\":\"number\",\"private\":true,\"default\":3,\"minimum\":0,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true,\"requires\":[\"fill-extrusion-edge-radius\"]}},\"paint_line\":{\"line-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"line-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"line-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-width\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-gap-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-offset\":{\"type\":\"number\",\"default\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-dasharray\":{\"type\":\"array\",\"value\":\"number\",\"minimum\":0,\"transition\":false,\"units\":\"line widths\",\"requires\":[{\"!\":\"line-pattern\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-gradient\":{\"type\":\"color\",\"transition\":false,\"requires\":[{\"!\":\"line-pattern\"},{\"source\":\"geojson\",\"has\":{\"lineMetrics\":true}}],\"expression\":{\"interpolated\":true,\"parameters\":[\"line-progress\"]},\"property-type\":\"color-ramp\"},\"line-trim-offset\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"minimum\":[0,0],\"maximum\":[1,1],\"transition\":false,\"requires\":[{\"source\":\"geojson\",\"has\":{\"lineMetrics\":true}}],\"property-type\":\"constant\"}},\"paint_circle\":{\"circle-radius\":{\"type\":\"number\",\"default\":5,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-blur\":{\"type\":\"number\",\"default\":0,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"circle-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-pitch-scale\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"viewport\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-stroke-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-stroke-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-stroke-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"}},\"paint_heatmap\":{\"heatmap-radius\":{\"type\":\"number\",\"default\":30,\"minimum\":1,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"heatmap-weight\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"heatmap-intensity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"heatmap-color\":{\"type\":\"color\",\"default\":[\"interpolate\",[\"linear\"],[\"heatmap-density\"],0,\"rgba(0, 0, 255, 0)\",0.1,\"royalblue\",0.3,\"cyan\",0.5,\"lime\",0.7,\"yellow\",1,\"red\"],\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"heatmap-density\"]},\"property-type\":\"color-ramp\"},\"heatmap-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_symbol\":{\"icon-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-color\":{\"type\":\"color\",\"default\":\"rgba(0, 0, 0, 0)\",\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"icon-image\",\"icon-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"overridable\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-color\":{\"type\":\"color\",\"default\":\"rgba(0, 0, 0, 0)\",\"transition\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"text-field\",\"text-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_raster\":{\"raster-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-hue-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"transition\":true,\"units\":\"degrees\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-brightness-min\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-brightness-max\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-saturation\":{\"type\":\"number\",\"default\":0,\"minimum\":-1,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-contrast\":{\"type\":\"number\",\"default\":0,\"minimum\":-1,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-resampling\":{\"type\":\"enum\",\"values\":{\"linear\":{},\"nearest\":{}},\"default\":\"linear\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-fade-duration\":{\"type\":\"number\",\"default\":300,\"minimum\":0,\"transition\":false,\"units\":\"milliseconds\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_hillshade\":{\"hillshade-illumination-direction\":{\"type\":\"number\",\"default\":335,\"minimum\":0,\"maximum\":359,\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-illumination-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"viewport\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-exaggeration\":{\"type\":\"number\",\"default\":0.5,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-shadow-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-highlight-color\":{\"type\":\"color\",\"default\":\"#FFFFFF\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-accent-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_background\":{\"background-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"background-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"background-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"background-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_sky\":{\"sky-type\":{\"type\":\"enum\",\"values\":{\"gradient\":{},\"atmosphere\":{}},\"default\":\"atmosphere\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-atmosphere-sun\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"units\":\"degrees\",\"minimum\":[0,0],\"maximum\":[360,180],\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-atmosphere-sun-intensity\":{\"type\":\"number\",\"requires\":[{\"sky-type\":\"atmosphere\"}],\"default\":10,\"minimum\":0,\"maximum\":100,\"transition\":false,\"property-type\":\"data-constant\"},\"sky-gradient-center\":{\"type\":\"array\",\"requires\":[{\"sky-type\":\"gradient\"}],\"value\":\"number\",\"default\":[0,0],\"length\":2,\"units\":\"degrees\",\"minimum\":[0,0],\"maximum\":[360,180],\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-gradient-radius\":{\"type\":\"number\",\"requires\":[{\"sky-type\":\"gradient\"}],\"default\":90,\"minimum\":0,\"maximum\":180,\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-gradient\":{\"type\":\"color\",\"default\":[\"interpolate\",[\"linear\"],[\"sky-radial-progress\"],0.8,\"#87ceeb\",1,\"white\"],\"transition\":false,\"requires\":[{\"sky-type\":\"gradient\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"sky-radial-progress\"]},\"property-type\":\"color-ramp\"},\"sky-atmosphere-halo-color\":{\"type\":\"color\",\"default\":\"white\",\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"property-type\":\"data-constant\"},\"sky-atmosphere-color\":{\"type\":\"color\",\"default\":\"white\",\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"property-type\":\"data-constant\"},\"sky-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"transition\":{\"duration\":{\"type\":\"number\",\"default\":300,\"minimum\":0,\"units\":\"milliseconds\"},\"delay\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"milliseconds\"}},\"property-type\":{\"data-driven\":{\"type\":\"property-type\"},\"color-ramp\":{\"type\":\"property-type\"},\"data-constant\":{\"type\":\"property-type\"},\"constant\":{\"type\":\"property-type\"}},\"promoteId\":{\"*\":{\"type\":\"string\"}}};\n\n//      \nfunction isExpressionFilter(filter) {\n    if (filter === true || filter === false) {\n        return true;\n    }\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n    case 'in':\n        return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n    case 'any':\n    case 'all':\n        for (const f of filter.slice(1)) {\n            if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n    default:\n        return true;\n    }\n}\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @param {string} layerType the type of the layer this filter will be applied to.\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter, layerType = 'fill') {\n    if (filter === null || filter === undefined) {\n        return {\n            filter: () => true,\n            needGeometry: false,\n            needFeature: false\n        };\n    }\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n    const filterExp = filter;\n    let staticFilter = true;\n    try {\n        staticFilter = extractStaticFilter(filterExp);\n    } catch (e) {\n        console.warn(`Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\nand paste the contents of this message in the report.\nThank you!\nFilter Expression:\n${ JSON.stringify(filterExp, null, 2) }\n        `);\n    }\n    // Compile the static component of the filter\n    const filterSpec = spec[`filter_${ layerType }`];\n    const compiledStaticFilter = createExpression(staticFilter, filterSpec);\n    let filterFunc = null;\n    if (compiledStaticFilter.result === 'error') {\n        throw new Error(compiledStaticFilter.value.map(err => `${ err.key }: ${ err.message }`).join(', '));\n    } else {\n        filterFunc = (globalProperties, feature, canonical) => compiledStaticFilter.value.evaluate(globalProperties, feature, {}, canonical);\n    }\n    // If the static component is not equal to the entire filter then we have a dynamic component\n    // Compile the dynamic component separately\n    let dynamicFilterFunc = null;\n    let needFeature = null;\n    if (staticFilter !== filterExp) {\n        const compiledDynamicFilter = createExpression(filterExp, filterSpec);\n        if (compiledDynamicFilter.result === 'error') {\n            throw new Error(compiledDynamicFilter.value.map(err => `${ err.key }: ${ err.message }`).join(', '));\n        } else {\n            dynamicFilterFunc = (globalProperties, feature, canonical, featureTileCoord, featureDistanceData) => compiledDynamicFilter.value.evaluate(globalProperties, feature, {}, canonical, undefined, undefined, featureTileCoord, featureDistanceData);\n            needFeature = !isFeatureConstant(compiledDynamicFilter.value.expression);\n        }\n    }\n    filterFunc = filterFunc;\n    const needGeometry = geometryNeeded(staticFilter);\n    return {\n        filter: filterFunc,\n        dynamicFilter: dynamicFilterFunc ? dynamicFilterFunc : undefined,\n        needGeometry,\n        needFeature: !!needFeature\n    };\n}\nfunction extractStaticFilter(filter) {\n    if (!isDynamicFilter(filter)) {\n        return filter;\n    }\n    // Shallow copy so we can replace expressions in-place\n    let result = deepUnbundle(filter);\n    // 1. Union branches\n    unionDynamicBranches(result);\n    // 2. Collapse dynamic conditions to  `true`\n    result = collapseDynamicBooleanExpressions(result);\n    return result;\n}\nfunction collapseDynamicBooleanExpressions(expression) {\n    if (!Array.isArray(expression)) {\n        return expression;\n    }\n    const collapsed = collapsedExpression(expression);\n    if (collapsed === true) {\n        return collapsed;\n    } else {\n        return collapsed.map(subExpression => collapseDynamicBooleanExpressions(subExpression));\n    }\n}\n/**\n * Traverses the expression and replaces all instances of branching on a\n * `dynamic` conditional (such as `['pitch']` or `['distance-from-center']`)\n * into an `any` expression.\n * This ensures that all possible outcomes of a `dynamic` branch are considered\n * when evaluating the expression upfront during filtering.\n *\n * @param {Array<any>} filter the filter expression mutated in-place.\n */\nfunction unionDynamicBranches(filter) {\n    let isBranchingDynamically = false;\n    const branches = [];\n    if (filter[0] === 'case') {\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[i]);\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'match') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n        for (let i = 2; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'step') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n    }\n    if (isBranchingDynamically) {\n        filter.length = 0;\n        filter.push('any', ...branches);\n    }\n    // traverse and recurse into children\n    for (let i = 1; i < filter.length; i++) {\n        unionDynamicBranches(filter[i]);\n    }\n}\nfunction isDynamicFilter(filter) {\n    // Base Cases\n    if (!Array.isArray(filter)) {\n        return false;\n    }\n    if (isRootExpressionDynamic(filter[0])) {\n        return true;\n    }\n    for (let i = 1; i < filter.length; i++) {\n        const child = filter[i];\n        if (isDynamicFilter(child)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isRootExpressionDynamic(expression) {\n    return expression === 'pitch' || expression === 'distance-from-center';\n}\nconst dynamicConditionExpressions = new Set([\n    'in',\n    '==',\n    '!=',\n    '>',\n    '>=',\n    '<',\n    '<=',\n    'to-boolean'\n]);\nfunction collapsedExpression(expression) {\n    if (dynamicConditionExpressions.has(expression[0])) {\n        for (let i = 1; i < expression.length; i++) {\n            const param = expression[i];\n            if (isDynamicFilter(param)) {\n                return true;\n            }\n        }\n    }\n    return expression;\n}\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter))\n        return false;\n    if (filter[0] === 'within')\n        return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index]))\n            return true;\n    }\n    return false;\n}\nfunction convertFilter(filter) {\n    if (!filter)\n        return true;\n    const op = filter[0];\n    if (filter.length <= 1)\n        return op !== 'any';\n    const converted = op === '==' ? convertComparisonOp(filter[1], filter[2], '==') : op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) : op === '<' || op === '>' || op === '<=' || op === '>=' ? convertComparisonOp(filter[1], filter[2], op) : op === 'any' ? convertDisjunctionOp(filter.slice(1)) : op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) : op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) : op === 'in' ? convertInOp(filter[1], filter.slice(2)) : op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) : op === 'has' ? convertHasOp(filter[1]) : op === '!has' ? convertNegation(convertHasOp(filter[1])) : op === 'within' ? filter : true;\n    return converted;\n}\nfunction convertComparisonOp(property, value, op) {\n    switch (property) {\n    case '$type':\n        return [\n            `filter-type-${ op }`,\n            value\n        ];\n    case '$id':\n        return [\n            `filter-id-${ op }`,\n            value\n        ];\n    default:\n        return [\n            `filter-${ op }`,\n            property,\n            value\n        ];\n    }\n}\nfunction convertDisjunctionOp(filters) {\n    return ['any'].concat(filters.map(convertFilter));\n}\nfunction convertInOp(property, values) {\n    if (values.length === 0) {\n        return false;\n    }\n    switch (property) {\n    case '$type':\n        return [\n            `filter-type-in`,\n            [\n                'literal',\n                values\n            ]\n        ];\n    case '$id':\n        return [\n            `filter-id-in`,\n            [\n                'literal',\n                values\n            ]\n        ];\n    default:\n        if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n            return [\n                'filter-in-large',\n                property,\n                [\n                    'literal',\n                    values.sort(compare)\n                ]\n            ];\n        } else {\n            return [\n                'filter-in-small',\n                property,\n                [\n                    'literal',\n                    values\n                ]\n            ];\n        }\n    }\n}\nfunction convertHasOp(property) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [`filter-has-id`];\n    default:\n        return [\n            `filter-has`,\n            property\n        ];\n    }\n}\nfunction convertNegation(filter) {\n    return [\n        '!',\n        filter\n    ];\n}\n\n//      \nvar refProperties = [\n    'type',\n    'source',\n    'source-layer',\n    'minzoom',\n    'maxzoom',\n    'filter',\n    'layout'\n];\n\n//      \nfunction deref(layer, parent) {\n    const result = {};\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n    refProperties.forEach(k => {\n        if (k in parent) {\n            result[k] = parent[k];\n        }\n    });\n    return result;\n}\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nfunction derefLayers(layers) {\n    layers = layers.slice();\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[layers[i].ref]);\n        }\n    }\n    return layers;\n}\n\nvar fontWeights = {\n    thin: 100,\n    hairline: 100,\n    'ultra-light': 100,\n    'extra-light': 100,\n    light: 200,\n    book: 300,\n    regular: 400,\n    normal: 400,\n    plain: 400,\n    roman: 400,\n    standard: 400,\n    medium: 500,\n    'semi-bold': 600,\n    'demi-bold': 600,\n    bold: 700,\n    heavy: 800,\n    black: 800,\n    'extra-bold': 800,\n    'ultra-black': 900,\n    'extra-black': 900,\n    'ultra-bold': 900,\n    'heavy-black': 900,\n    fat: 900,\n    poster: 900\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\nvar fontCache = {};\nvar mapboxToCssFont = function (fonts, size, lineHeight) {\n    var cssData = fontCache[fonts];\n    if (!cssData) {\n        if (!Array.isArray(fonts)) {\n            fonts = [fonts];\n        }\n        var weight = 400;\n        var style = 'normal';\n        var fontFamilies = [];\n        var haveWeight, haveStyle;\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            var parts = font.split(' ');\n            var maybeWeight = parts[parts.length - 1].toLowerCase();\n            if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n                style = haveStyle ? style : maybeWeight;\n                parts.pop();\n                maybeWeight = parts[parts.length - 1].toLowerCase();\n            } else if (italicRE.test(maybeWeight)) {\n                maybeWeight = maybeWeight.replace(italicRE, '');\n                style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n            }\n            for (var w in fontWeights) {\n                var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n                if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n                    weight = haveWeight ? weight : fontWeights[w];\n                    parts.pop();\n                    if (previousPart && w.startsWith(previousPart)) {\n                        parts.pop();\n                    }\n                    break;\n                }\n            }\n            if (!haveWeight && typeof maybeWeight == 'number') {\n                weight = maybeWeight;\n            }\n            var fontFamily = parts.join(sp).replace('Klokantech Noto Sans', 'Noto Sans');\n            if (fontFamily.indexOf(sp) !== -1) {\n                fontFamily = '\"' + fontFamily + '\"';\n            }\n            fontFamilies.push(fontFamily);\n        }\n        // CSS font property: font-style font-weight font-size/line-height font-family\n        cssData = fontCache[fonts] = [\n            style,\n            weight,\n            fontFamilies\n        ];\n    }\n    return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n};\n\nvar mb2css = /*@__PURE__*/getDefaultExportFromCjs(mapboxToCssFont);\n\nconst mapboxBaseUrl = 'https://api.mapbox.com';\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\nfunction getMapboxPath(url) {\n    const startsWith = 'mapbox://';\n    if (url.indexOf(startsWith) !== 0) {\n        return '';\n    }\n    return url.slice(startsWith.length);\n}\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\nfunction normalizeSpriteUrl(url, token, styleUrl) {\n    const mapboxPath = getMapboxPath(url);\n    if (!mapboxPath) {\n        return decodeURI(new URL(url, styleUrl).href);\n    }\n    const startsWith = 'sprites/';\n    if (mapboxPath.indexOf(startsWith) !== 0) {\n        throw new Error(`unexpected sprites url: ${ url }`);\n    }\n    const sprite = mapboxPath.slice(startsWith.length);\n    return `${ mapboxBaseUrl }/styles/v1/${ sprite }/sprite?access_token=${ token }`;\n}\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\nfunction normalizeStyleUrl(url, token) {\n    const mapboxPath = getMapboxPath(url);\n    if (!mapboxPath) {\n        return decodeURI(new URL(url, location.href).href);\n    }\n    const startsWith = 'styles/';\n    if (mapboxPath.indexOf(startsWith) !== 0) {\n        throw new Error(`unexpected style url: ${ url }`);\n    }\n    const style = mapboxPath.slice(startsWith.length);\n    return `${ mapboxBaseUrl }/styles/v1/${ style }?&access_token=${ token }`;\n}\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {string} A vector tile template.\n * @private\n */\nfunction normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n    const urlObject = new URL(url, styleUrl);\n    const mapboxPath = getMapboxPath(url);\n    if (!mapboxPath) {\n        if (!token) {\n            return decodeURI(urlObject.href);\n        }\n        urlObject.searchParams.set(tokenParam, token);\n        return decodeURI(urlObject.href);\n    }\n    if (mapboxPath === 'mapbox.satellite') {\n        const sizeFactor = window.devicePixelRatio >= 1.5 ? '@2x' : '';\n        return `https://api.mapbox.com/v4/${ mapboxPath }/{z}/{x}/{y}${ sizeFactor }.webp?access_token=${ token }`;\n    }\n    return `https://{a-d}.tiles.mapbox.com/v4/${ mapboxPath }/{z}/{x}/{y}.vector.pbf?access_token=${ token }`;\n}\n\n/** @typedef {import(\"ol\").Map} Map */\n/** @typedef {import(\"ol/layer\").Layer} Layer */\n/** @typedef {import(\"ol/layer\").Group} LayerGroup */\n/** @typedef {import(\"ol/layer\").Vector} VectorLayer */\n/** @typedef {import(\"ol/layer\").VectorTile} VectorTileLayer */\n/** @typedef {import(\"ol/source\").Source} Source */\nconst functionCacheByStyleId = {};\nconst filterCacheByStyleId = {};\nlet styleId = 0;\nfunction getStyleId(glStyle) {\n    if (!glStyle.id) {\n        glStyle.id = styleId++;\n    }\n    return glStyle.id;\n}\nfunction getStyleFunctionKey(glStyle, olLayer) {\n    return getStyleId(glStyle) + '.' + getUid(olLayer);\n}\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Function cache.\n */\nfunction getFunctionCache(glStyle) {\n    let functionCache = functionCacheByStyleId[glStyle.id];\n    if (!functionCache) {\n        functionCache = {};\n        functionCacheByStyleId[getStyleId(glStyle)] = functionCache;\n    }\n    return functionCache;\n}\nfunction clearFunctionCache() {\n    for (const key in functionCacheByStyleId) {\n        delete functionCacheByStyleId[key];\n    }\n}\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Filter cache.\n */\nfunction getFilterCache(glStyle) {\n    let filterCache = filterCacheByStyleId[glStyle.id];\n    if (!filterCache) {\n        filterCache = {};\n        filterCacheByStyleId[getStyleId(glStyle)] = filterCache;\n    }\n    return filterCache;\n}\nfunction deg2rad(degrees) {\n    return degrees * Math.PI / 180;\n}\nconst defaultResolutions = (function () {\n    const resolutions = [];\n    for (let res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n        resolutions.push(res);\n    }\n    return resolutions;\n}());\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nfunction createCanvas(width, height) {\n    if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') {\n        // eslint-disable-line\n        return new OffscreenCanvas(width, height);\n    }\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n}\nfunction getZoomForResolution(resolution, resolutions) {\n    let i = 0;\n    const ii = resolutions.length;\n    for (; i < ii; ++i) {\n        const candidate = resolutions[i];\n        if (candidate < resolution && i + 1 < ii) {\n            const zoomFactor = resolutions[i] / resolutions[i + 1];\n            return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n        }\n    }\n    return ii - 1;\n}\nconst pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options={}] Options.\n * @param {{request?: Request}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nfunction fetchResource(resourceType, url, options = {}, metadata) {\n    if (url in pendingRequests) {\n        if (metadata) {\n            metadata.request = pendingRequests[url][0];\n        }\n        return pendingRequests[url][1];\n    }\n    const request = options.transformRequest ? options.transformRequest(url, resourceType) || new Request(url) : new Request(url);\n    if (!request.headers.get('Accept')) {\n        request.headers.set('Accept', 'application/json');\n    }\n    if (metadata) {\n        metadata.request = request;\n    }\n    const pendingRequest = fetch(request).then(function (response) {\n        delete pendingRequests[url];\n        return response.ok ? response.json() : Promise.reject(new Error('Error fetching source ' + url));\n    }).catch(function (error) {\n        delete pendingRequests[url];\n        return Promise.reject(new Error('Error fetching source ' + url));\n    });\n    pendingRequests[url] = [\n        request,\n        pendingRequest\n    ];\n    return pendingRequest;\n}\nfunction getGlStyle(glStyleOrUrl, options) {\n    if (typeof glStyleOrUrl === 'string') {\n        if (glStyleOrUrl.trim().startsWith('{')) {\n            try {\n                const glStyle = JSON.parse(glStyleOrUrl);\n                return Promise.resolve(glStyle);\n            } catch (error) {\n                return Promise.reject(error);\n            }\n        } else {\n            glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n            return fetchResource('Style', glStyleOrUrl, options);\n        }\n    } else {\n        return Promise.resolve(glStyleOrUrl);\n    }\n}\nfunction getTransformedTilesUrl(tilesUrl, options) {\n    if (options.transformRequest) {\n        const transformedRequest = options.transformRequest(tilesUrl, 'Tiles');\n        if (transformedRequest instanceof Request) {\n            return decodeURI(transformedRequest.url);\n        }\n    }\n    return tilesUrl;\n}\nconst tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Object} TileJson\n */\nfunction getTileJson(glSource, styleUrl, options = {}) {\n    const cacheKey = [\n        styleUrl,\n        JSON.stringify(glSource)\n    ].toString();\n    let promise = tilejsonCache[cacheKey];\n    if (!promise || options.transformRequest) {\n        const url = glSource.url;\n        if (url && !glSource.tiles) {\n            const normalizedSourceUrl = normalizeSourceUrl(url, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href);\n            if (url.startsWith('mapbox://')) {\n                promise = Promise.resolve(Object.assign({}, glSource, {\n                    url: undefined,\n                    tiles: expandUrl(normalizedSourceUrl)\n                }));\n            } else {\n                const metadata = {};\n                promise = fetchResource('Source', normalizedSourceUrl, options, metadata).then(function (tileJson) {\n                    tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n                        if (tileJson.scheme === 'tms') {\n                            tileUrl = tileUrl.replace('{y}', '{-y}');\n                        }\n                        return getTransformedTilesUrl(normalizeSourceUrl(tileUrl, options.accessToken, options.accessTokenParam || 'access_token', metadata.request.url), options);\n                    });\n                    return Promise.resolve(tileJson);\n                });\n            }\n        } else {\n            glSource = Object.assign({}, glSource, {\n                tiles: glSource.tiles.map(function (tileUrl) {\n                    if (glSource.scheme === 'tms') {\n                        tileUrl = tileUrl.replace('{y}', '{-y}');\n                    }\n                    return getTransformedTilesUrl(normalizeSourceUrl(tileUrl, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href), options);\n                })\n            });\n            promise = Promise.resolve(Object.assign({}, glSource));\n        }\n        tilejsonCache[cacheKey] = promise;\n    }\n    return promise;\n}\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} spriteImage Sprite image id.\n * @param {{x: number, y: number, width: number, height: number, pixelRatio: number}} spriteImageData Sprite image data.\n * @param {number} haloWidth Halo width.\n * @param {{r: number, g: number, b: number, a: number}} haloColor Halo color.\n * @return {HTMLCanvasElement} Canvas element with the halo.\n */\nfunction drawIconHalo(spriteImage, spriteImageData, haloWidth, haloColor) {\n    const imageCanvas = document.createElement('canvas');\n    const imgSize = [\n        2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.width,\n        2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.height\n    ];\n    imageCanvas.width = imgSize[0];\n    imageCanvas.height = imgSize[1];\n    const imageContext = imageCanvas.getContext('2d');\n    imageContext.drawImage(spriteImage, spriteImageData.x, spriteImageData.y, spriteImageData.width, spriteImageData.height, haloWidth * spriteImageData.pixelRatio, haloWidth * spriteImageData.pixelRatio, spriteImageData.width, spriteImageData.height);\n    const imageData = imageContext.getImageData(0, 0, imgSize[0], imgSize[1]);\n    imageContext.globalCompositeOperation = 'destination-over';\n    imageContext.fillStyle = `rgba(${ haloColor.r * 255 },${ haloColor.g * 255 },${ haloColor.b * 255 },${ haloColor.a })`;\n    const data = imageData.data;\n    for (let i = 0, ii = imageData.width; i < ii; ++i) {\n        for (let j = 0, jj = imageData.height; j < jj; ++j) {\n            const index = (j * ii + i) * 4;\n            const alpha = data[index + 3];\n            if (alpha > 0) {\n                imageContext.arc(i, j, haloWidth * spriteImageData.pixelRatio, 0, 2 * Math.PI);\n            }\n        }\n    }\n    imageContext.fill();\n    return imageCanvas;\n}\nfunction smoothstep(min, max, value) {\n    const x = Math.max(0, Math.min(1, (value - min) / (max - min)));\n    return x * x * (3 - 2 * x);\n}\n/**\n * @param {HTMLImageElement} image SDF image\n * @param {{x: number, y: number, width: number, height: number}} area Area to unSDF\n * @param {{r: number, g: number, b: number, a: number}} color Color to use\n * @return {HTMLCanvasElement} Regular image\n */\nfunction drawSDF(image, area, color) {\n    const imageCanvas = document.createElement('canvas');\n    imageCanvas.width = area.width;\n    imageCanvas.height = area.height;\n    const imageContext = imageCanvas.getContext('2d');\n    imageContext.drawImage(image, area.x, area.y, area.width, area.height, 0, 0, area.width, area.height);\n    const imageData = imageContext.getImageData(0, 0, area.width, area.height);\n    const data = imageData.data;\n    for (let i = 0, ii = imageData.width; i < ii; ++i) {\n        for (let j = 0, jj = imageData.height; j < jj; ++j) {\n            const index = (j * ii + i) * 4;\n            const dist = data[index + 3] / 255;\n            const buffer = 0.75;\n            const gamma = 0.1;\n            const alpha = smoothstep(buffer - gamma, buffer + gamma, dist);\n            if (alpha > 0) {\n                data[index + 0] = Math.round(255 * color.r * alpha);\n                data[index + 1] = Math.round(255 * color.g * alpha);\n                data[index + 2] = Math.round(255 * color.b * alpha);\n                data[index + 3] = Math.round(255 * alpha);\n            } else {\n                data[index + 3] = 0;\n            }\n        }\n    }\n    imageContext.putImageData(imageData, 0, 0);\n    return imageCanvas;\n}    /**\n * @typedef {import(\"./apply.js\").Options} Options\n * @typedef {import('./apply.js').ResourceType} ResourceType\n * @private\n */\n\nconst hairSpacePool = Array(256).join('\\u200A');\nfunction applyLetterSpacing(text, letterSpacing) {\n    if (letterSpacing >= 0.05) {\n        let textWithLetterSpacing = '';\n        const lines = text.split('\\n');\n        const joinSpaceString = hairSpacePool.slice(0, Math.round(letterSpacing / 0.1));\n        for (let l = 0, ll = lines.length; l < ll; ++l) {\n            if (l > 0) {\n                textWithLetterSpacing += '\\n';\n            }\n            textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n        }\n        return textWithLetterSpacing;\n    }\n    return text;\n}\nlet measureContext;\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvas(1, 1).getContext('2d');\n    }\n    return measureContext;\n}\nfunction measureText(text, letterSpacing) {\n    return getMeasureContext().measureText(text).width + (text.length - 1) * letterSpacing;\n}\nconst measureCache = {};\nfunction wrapText(text, font, em, letterSpacing) {\n    if (text.indexOf('\\n') !== -1) {\n        const hardLines = text.split('\\n');\n        const lines = [];\n        for (let i = 0, ii = hardLines.length; i < ii; ++i) {\n            lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n        }\n        return lines.join('\\n');\n    }\n    const key = em + ',' + font + ',' + text + ',' + letterSpacing;\n    let wrappedText = measureCache[key];\n    if (!wrappedText) {\n        const words = text.split(' ');\n        if (words.length > 1) {\n            const ctx = getMeasureContext();\n            ctx.font = font;\n            const oneEm = ctx.measureText('M').width;\n            const maxWidth = oneEm * em;\n            let line = '';\n            const lines = [];\n            // Pass 1 - wrap lines to not exceed maxWidth\n            for (let i = 0, ii = words.length; i < ii; ++i) {\n                const word = words[i];\n                const testLine = line + (line ? ' ' : '') + word;\n                if (measureText(testLine, letterSpacing) <= maxWidth) {\n                    line = testLine;\n                } else {\n                    if (line) {\n                        lines.push(line);\n                    }\n                    line = word;\n                }\n            }\n            if (line) {\n                lines.push(line);\n            }\n            // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n            for (let i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n                const line = lines[i];\n                if (measureText(line, letterSpacing) < maxWidth * 0.35) {\n                    const prevWidth = i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n                    const nextWidth = i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n                    lines.splice(i, 1);\n                    ii -= 1;\n                    if (prevWidth < nextWidth) {\n                        lines[i - 1] += ' ' + line;\n                        i -= 1;\n                    } else {\n                        lines[i] = line + ' ' + lines[i];\n                    }\n                }\n            }\n            // Pass 3 - try to fill 80% of maxWidth for each line\n            for (let i = 0, ii = lines.length - 1; i < ii; ++i) {\n                const line = lines[i];\n                const next = lines[i + 1];\n                if (measureText(line, letterSpacing) > maxWidth * 0.7 && measureText(next, letterSpacing) < maxWidth * 0.6) {\n                    const lineWords = line.split(' ');\n                    const lastWord = lineWords.pop();\n                    if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n                        lines[i] = lineWords.join(' ');\n                        lines[i + 1] = lastWord + ' ' + next;\n                    }\n                    ii -= 1;\n                }\n            }\n            wrappedText = lines.join('\\n');\n        } else {\n            wrappedText = text;\n        }\n        wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n        measureCache[key] = wrappedText;\n    }\n    return wrappedText;\n}\nconst fontFamilyRegEx = /font-family: ?([^;]*);/;\nconst stripQuotesRegEx = /(\"|')/g;\nlet loadedFontFamilies;\nfunction hasFontFamily(family) {\n    if (!loadedFontFamilies) {\n        loadedFontFamilies = {};\n        const styleSheets = document.styleSheets;\n        for (let i = 0, ii = styleSheets.length; i < ii; ++i) {\n            const styleSheet = styleSheets[i];\n            try {\n                const cssRules = styleSheet.rules || styleSheet.cssRules;\n                if (cssRules) {\n                    for (let j = 0, jj = cssRules.length; j < jj; ++j) {\n                        const cssRule = cssRules[j];\n                        if (cssRule.type == 5) {\n                            const match = cssRule.cssText.match(fontFamilyRegEx);\n                            loadedFontFamilies[match[1].replace(stripQuotesRegEx, '')] = true;\n                        }\n                    }\n                }\n            } catch (e) {\n            }\n        }\n    }\n    return family in loadedFontFamilies;\n}\nconst processedFontFamilies = {};\n/**\n * @param {Array} fonts Fonts.\n * @param {string} [templateUrl] Template URL.\n * @return {Array} Processed fonts.\n * @private\n */\nfunction getFonts(fonts, templateUrl = 'https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css') {\n    const fontsKey = fonts.toString();\n    if (fontsKey in processedFontFamilies) {\n        return processedFontFamilies[fontsKey];\n    }\n    const fontDescriptions = [];\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n        fonts[i] = fonts[i].replace('Arial Unicode MS', 'Arial');\n        const font = fonts[i];\n        const cssFont = mb2css(font, 1);\n        registerFont(cssFont);\n        const parts = cssFont.split(' ');\n        fontDescriptions.push([\n            parts.slice(3).join(' ').replace(/\"/g, ''),\n            parts[1],\n            parts[0]\n        ]);\n    }\n    for (let i = 0, ii = fontDescriptions.length; i < ii; ++i) {\n        const fontDescription = fontDescriptions[i];\n        const family = fontDescription[0];\n        if (!hasFontFamily(family)) {\n            if (checkedFonts.get(`${ fontDescription[2] }\\n${ fontDescription[1] } \\n${ family }`) !== 100) {\n                const fontUrl = templateUrl.replace('{font-family}', family.replace(/ /g, '-').toLowerCase()).replace('{Font+Family}', family.replace(/ /g, '+')).replace('{fontweight}', fontDescription[1]).replace('{-fontstyle}', fontDescription[2].replace('normal', '').replace(/(.+)/, '-$1')).replace('{fontstyle}', fontDescription[2]);\n                if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n                    const markup = document.createElement('link');\n                    markup.href = fontUrl;\n                    markup.rel = 'stylesheet';\n                    document.head.appendChild(markup);\n                }\n            }\n        }\n    }\n    processedFontFamilies[fontsKey] = fonts;\n    return fonts;\n}\n\n/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n */\nconst types = {\n    'Point': 1,\n    'MultiPoint': 1,\n    'LineString': 2,\n    'MultiLineString': 2,\n    'Polygon': 3,\n    'MultiPolygon': 3\n};\nconst anchor = {\n    'center': [\n        0.5,\n        0.5\n    ],\n    'left': [\n        0,\n        0.5\n    ],\n    'right': [\n        1,\n        0.5\n    ],\n    'top': [\n        0.5,\n        0\n    ],\n    'bottom': [\n        0.5,\n        1\n    ],\n    'top-left': [\n        0,\n        0\n    ],\n    'top-right': [\n        1,\n        0\n    ],\n    'bottom-left': [\n        0,\n        1\n    ],\n    'bottom-right': [\n        1,\n        1\n    ]\n};\nconst expressionData = function (rawExpression, propertySpec) {\n    const compiledExpression = createPropertyExpression(rawExpression, propertySpec);\n    if (compiledExpression.result === 'error') {\n        throw new Error(compiledExpression.value.map(err => `${ err.key }: ${ err.message }`).join(', '));\n    }\n    return compiledExpression.value;\n};\nconst emptyObj$1 = {};\nconst zoomObj = { zoom: 0 };\nlet renderFeatureCoordinates, renderFeature;\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nfunction getValue(layer, layoutOrPaint, property, zoom, feature, functionCache, featureState) {\n    const layerId = layer.id;\n    if (!functionCache) {\n        functionCache = {};\n        console.warn('No functionCache provided to getValue()');    //eslint-disable-line no-console\n    }\n    if (!functionCache[layerId]) {\n        functionCache[layerId] = {};\n    }\n    const functions = functionCache[layerId];\n    if (!functions[property]) {\n        let value = (layer[layoutOrPaint] || emptyObj$1)[property];\n        const propertySpec = spec[`${ layoutOrPaint }_${ layer.type }`][property];\n        if (value === undefined) {\n            value = propertySpec.default;\n        }\n        let isExpr = isExpression(value);\n        if (!isExpr && isFunction(value)) {\n            value = convertFunction(value, propertySpec);\n            isExpr = true;\n        }\n        if (isExpr) {\n            const compiledExpression = expressionData(value, propertySpec);\n            functions[property] = compiledExpression.evaluate.bind(compiledExpression);\n        } else {\n            if (propertySpec.type == 'color') {\n                value = Color$1.parse(value);\n            }\n            functions[property] = function () {\n                return value;\n            };\n        }\n    }\n    zoomObj.zoom = zoom;\n    return functions[property](zoomObj, feature, featureState);\n}\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getIconDeclutterMode(layer, zoom, feature, functionCache) {\n    const allowOverlap = getValue(layer, 'layout', 'icon-allow-overlap', zoom, feature, functionCache);\n    if (!allowOverlap) {\n        return 'declutter';\n    }\n    const ignorePlacement = getValue(layer, 'layout', 'icon-ignore-placement', zoom, feature, functionCache);\n    if (!ignorePlacement) {\n        return 'obstacle';\n    }\n    return 'none';\n}\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {number} zoom Zoom.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, zoom, filterCache) {\n    if (!filterCache) {\n        console.warn('No filterCache provided to evaluateFilter()');    //eslint-disable-line no-console\n    }\n    if (!(layerId in filterCache)) {\n        filterCache[layerId] = createFilter(filter).filter;\n    }\n    zoomObj.zoom = zoom;\n    return filterCache[layerId](zoomObj, feature);\n}\nlet renderTransparentEnabled = false;\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nfunction renderTransparent(enabled) {\n    if (enabled !== renderTransparentEnabled) {\n        clearFunctionCache();\n        renderTransparentEnabled = enabled;\n    }\n}\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n    if (color) {\n        if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n            return undefined;\n        }\n        const a = color.a;\n        opacity = opacity === undefined ? 1 : opacity;\n        return a === 0 ? 'transparent' : 'rgba(' + Math.round(color.r * 255 / a) + ',' + Math.round(color.g * 255 / a) + ',' + Math.round(color.b * 255 / a) + ',' + a * opacity + ')';\n    }\n    return color;\n}\nconst templateRegEx = /\\{[^{}}]*\\}/g;\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n    return text.replace(templateRegEx, function (match) {\n        return properties[match.slice(1, -1)] || '';\n    });\n}\nlet recordLayer = false;\n/**\n * Turns recording of the Mapbox Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nfunction recordStyleLayer(record = false) {\n    recordLayer = record;\n}\nconst styleFunctionArgs = {};\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox Style object.\n * @param {string} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox Style object.\n * @param {function(Array<string>, string=):Array<string>} getFonts Function that\n * receives a font stack and the url template from the GL style's `metadata['ol:webfonts']`\n * property (if set) as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nfunction stylefunction(olLayer, glStyle, sourceOrLayers, resolutions = defaultResolutions, spriteData = undefined, spriteImageUrl = undefined, getFonts = undefined, getImage = undefined) {\n    if (typeof glStyle == 'string') {\n        glStyle = JSON.parse(glStyle);\n    }\n    if (glStyle.version != 8) {\n        throw new Error('glStyle version 8 required.');\n    }\n    styleFunctionArgs[getStyleFunctionKey(glStyle, olLayer)] = Array.from(arguments);\n    let spriteImage, spriteImageSize;\n    let spriteImageUnSDFed;\n    if (spriteImageUrl) {\n        if (typeof Image !== 'undefined') {\n            const img = new Image();\n            img.crossOrigin = 'anonymous';\n            img.onload = function () {\n                spriteImage = img;\n                spriteImageSize = [\n                    img.width,\n                    img.height\n                ];\n                olLayer.changed();\n                img.onload = null;\n            };\n            img.src = spriteImageUrl;\n        } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            //eslint-disable-line\n            const worker = self;\n            // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n            worker.postMessage({\n                action: 'loadImage',\n                src: spriteImageUrl\n            });\n            worker.addEventListener('message', function handler(event) {\n                if (event.data.action === 'imageLoaded' && event.data.src === spriteImageUrl) {\n                    spriteImage = event.data.image;\n                    spriteImageSize = [\n                        spriteImage.width,\n                        spriteImage.height\n                    ];\n                }\n            });\n        }\n    }\n    const allLayers = derefLayers(glStyle.layers);\n    const layersBySourceLayer = {};\n    const mapboxLayers = [];\n    const iconImageCache = {};\n    const patternCache = {};\n    const functionCache = getFunctionCache(glStyle);\n    const filterCache = getFilterCache(glStyle);\n    let mapboxSource;\n    for (let i = 0, ii = allLayers.length; i < ii; ++i) {\n        const layer = allLayers[i];\n        const layerId = layer.id;\n        if (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers || sourceOrLayers.indexOf(layerId) !== -1) {\n            const sourceLayer = layer['source-layer'];\n            if (!mapboxSource) {\n                mapboxSource = layer.source;\n                const source = glStyle.sources[mapboxSource];\n                if (!source) {\n                    throw new Error(`Source \"${ mapboxSource }\" is not defined`);\n                }\n                const type = source.type;\n                if (type !== 'vector' && type !== 'geojson') {\n                    throw new Error(`Source \"${ mapboxSource }\" is not of type \"vector\" or \"geojson\", but \"${ type }\"`);\n                }\n            } else if (layer.source !== mapboxSource) {\n                throw new Error(`Layer \"${ layerId }\" does not use source \"${ mapboxSource }`);\n            }\n            let layers = layersBySourceLayer[sourceLayer];\n            if (!layers) {\n                layers = [];\n                layersBySourceLayer[sourceLayer] = layers;\n            }\n            layers.push({\n                layer: layer,\n                index: i\n            });\n            mapboxLayers.push(layerId);\n        }\n    }\n    const textHalo = new Stroke();\n    const textColor = new Fill();\n    const styles = [];\n    /**\n   * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {string} [onlyLayer] Calculate style for this layer only.\n   * @return {Array<import(\"ol/style/Style\").default>} Style.\n   */\n    const styleFunction = function (feature, resolution, onlyLayer) {\n        const properties = feature.getProperties();\n        const layers = layersBySourceLayer[properties.layer];\n        if (!layers) {\n            return undefined;\n        }\n        let zoom = resolutions.indexOf(resolution);\n        if (zoom == -1) {\n            zoom = getZoomForResolution(resolution, resolutions);\n        }\n        const type = types[feature.getGeometry().getType()];\n        const f = {\n            id: feature.getId(),\n            properties: properties,\n            type: type\n        };\n        const featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n        let stylesLength = -1;\n        let featureBelongsToLayer;\n        for (let i = 0, ii = layers.length; i < ii; ++i) {\n            const layerData = layers[i];\n            const layer = layerData.layer;\n            const layerId = layer.id;\n            if (onlyLayer !== undefined && onlyLayer !== layerId) {\n                continue;\n            }\n            const layout = layer.layout || emptyObj$1;\n            const paint = layer.paint || emptyObj$1;\n            if (layout.visibility === 'none' || 'minzoom' in layer && zoom < layer.minzoom || 'maxzoom' in layer && zoom >= layer.maxzoom) {\n                continue;\n            }\n            const filter = layer.filter;\n            if (!filter || evaluateFilter(layerId, filter, f, zoom, filterCache)) {\n                featureBelongsToLayer = layer;\n                let color, opacity, fill, stroke, strokeColor, style;\n                const index = layerData.index;\n                if (type == 3 && (layer.type == 'fill' || layer.type == 'fill-extrusion')) {\n                    opacity = getValue(layer, 'paint', layer.type + '-opacity', zoom, f, functionCache, featureState);\n                    if (layer.type + '-pattern' in paint) {\n                        const fillIcon = getValue(layer, 'paint', layer.type + '-pattern', zoom, f, functionCache, featureState);\n                        if (fillIcon) {\n                            const icon = typeof fillIcon === 'string' ? fromTemplate(fillIcon, properties) : fillIcon.toString();\n                            if (spriteImage && spriteData && spriteData[icon]) {\n                                ++stylesLength;\n                                style = styles[stylesLength];\n                                if (!style || !style.getFill() || style.getStroke() || style.getText()) {\n                                    style = new Style({ fill: new Fill() });\n                                    styles[stylesLength] = style;\n                                }\n                                fill = style.getFill();\n                                style.setZIndex(index);\n                                const icon_cache_key = icon + '.' + opacity;\n                                let pattern = patternCache[icon_cache_key];\n                                if (!pattern) {\n                                    const spriteImageData = spriteData[icon];\n                                    const canvas = createCanvas(spriteImageData.width, spriteImageData.height);\n                                    const ctx = canvas.getContext('2d');\n                                    ctx.globalAlpha = opacity;\n                                    ctx.drawImage(spriteImage, spriteImageData.x, spriteImageData.y, spriteImageData.width, spriteImageData.height, 0, 0, spriteImageData.width, spriteImageData.height);\n                                    pattern = ctx.createPattern(canvas, 'repeat');\n                                    patternCache[icon_cache_key] = pattern;\n                                }\n                                fill.setColor(pattern);\n                            }\n                        }\n                    } else {\n                        color = colorWithOpacity(getValue(layer, 'paint', layer.type + '-color', zoom, f, functionCache, featureState), opacity);\n                        if (layer.type + '-outline-color' in paint) {\n                            strokeColor = colorWithOpacity(getValue(layer, 'paint', layer.type + '-outline-color', zoom, f, functionCache, featureState), opacity);\n                        }\n                        if (!strokeColor) {\n                            strokeColor = color;\n                        }\n                        if (color || strokeColor) {\n                            ++stylesLength;\n                            style = styles[stylesLength];\n                            if (!style || color && !style.getFill() || !color && style.getFill() || strokeColor && !style.getStroke() || !strokeColor && style.getStroke() || style.getText()) {\n                                style = new Style({\n                                    fill: color ? new Fill() : undefined,\n                                    stroke: strokeColor ? new Stroke() : undefined\n                                });\n                                styles[stylesLength] = style;\n                            }\n                            if (color) {\n                                fill = style.getFill();\n                                fill.setColor(color);\n                            }\n                            if (strokeColor) {\n                                stroke = style.getStroke();\n                                stroke.setColor(strokeColor);\n                                stroke.setWidth(0.5);\n                            }\n                            style.setZIndex(index);\n                        }\n                    }\n                }\n                if (type != 1 && layer.type == 'line') {\n                    color = !('line-pattern' in paint) && 'line-color' in paint ? colorWithOpacity(getValue(layer, 'paint', 'line-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'line-opacity', zoom, f, functionCache, featureState)) : undefined;\n                    const width = getValue(layer, 'paint', 'line-width', zoom, f, functionCache, featureState);\n                    if (color && width > 0) {\n                        ++stylesLength;\n                        style = styles[stylesLength];\n                        if (!style || !style.getStroke() || style.getFill() || style.getText()) {\n                            style = new Style({ stroke: new Stroke() });\n                            styles[stylesLength] = style;\n                        }\n                        stroke = style.getStroke();\n                        stroke.setLineCap(getValue(layer, 'layout', 'line-cap', zoom, f, functionCache, featureState));\n                        stroke.setLineJoin(getValue(layer, 'layout', 'line-join', zoom, f, functionCache, featureState));\n                        stroke.setMiterLimit(getValue(layer, 'layout', 'line-miter-limit', zoom, f, functionCache, featureState));\n                        stroke.setColor(color);\n                        stroke.setWidth(width);\n                        stroke.setLineDash(paint['line-dasharray'] ? getValue(layer, 'paint', 'line-dasharray', zoom, f, functionCache, featureState).map(function (x) {\n                            return x * width;\n                        }) : null);\n                        style.setZIndex(index);\n                    }\n                }\n                let hasImage = false;\n                let text = null;\n                let placementAngle = 0;\n                let icon, iconImg, skipLabel;\n                if ((type == 1 || type == 2) && 'icon-image' in layout) {\n                    const iconImage = getValue(layer, 'layout', 'icon-image', zoom, f, functionCache, featureState);\n                    if (iconImage) {\n                        icon = typeof iconImage === 'string' ? fromTemplate(iconImage, properties) : iconImage.toString();\n                        let styleGeom = undefined;\n                        const imageElement = getImage ? getImage(olLayer, icon) : undefined;\n                        if (spriteImage && spriteData && spriteData[icon] || imageElement) {\n                            const iconRotationAlignment = getValue(layer, 'layout', 'icon-rotation-alignment', zoom, f, functionCache, featureState);\n                            if (type == 2) {\n                                const geom = feature.getGeometry();\n                                // ol package and ol-debug.js only\n                                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                                    const extent = geom.getExtent();\n                                    const size = Math.sqrt(Math.max(Math.pow((extent[2] - extent[0]) / resolution, 2), Math.pow((extent[3] - extent[1]) / resolution, 2)));\n                                    if (size > 150) {\n                                        //FIXME Do not hard-code a size of 150\n                                        const midpoint = geom.getType() === 'MultiLineString' ? geom.getFlatMidpoints() : geom.getFlatMidpoint();\n                                        if (!renderFeature) {\n                                            renderFeatureCoordinates = [\n                                                NaN,\n                                                NaN\n                                            ];\n                                            renderFeature = new RenderFeature('Point', renderFeatureCoordinates, [], {}, null);\n                                        }\n                                        styleGeom = renderFeature;\n                                        renderFeatureCoordinates[0] = midpoint[0];\n                                        renderFeatureCoordinates[1] = midpoint[1];\n                                        const placement = getValue(layer, 'layout', 'symbol-placement', zoom, f, functionCache, featureState);\n                                        if (placement === 'line' && iconRotationAlignment === 'map') {\n                                            const stride = geom.getStride();\n                                            const coordinates = geom.getFlatCoordinates();\n                                            for (let i = 0, ii = coordinates.length - stride; i < ii; i += stride) {\n                                                const x1 = coordinates[i];\n                                                const y1 = coordinates[i + 1];\n                                                const x2 = coordinates[i + stride];\n                                                const y2 = coordinates[i + stride + 1];\n                                                const minX = Math.min(x1, x2);\n                                                const minY = Math.min(y1, y2);\n                                                const maxX = Math.max(x1, x2);\n                                                const maxY = Math.max(y1, y2);\n                                                if (midpoint[0] >= minX && midpoint[0] <= maxX && midpoint[1] >= minY && midpoint[1] <= maxY) {\n                                                    placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                                                    break;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            if (type !== 2 || styleGeom) {\n                                const iconSize = getValue(layer, 'layout', 'icon-size', zoom, f, functionCache, featureState);\n                                const iconColor = paint['icon-color'] !== undefined ? getValue(layer, 'paint', 'icon-color', zoom, f, functionCache, featureState) : null;\n                                if (!iconColor || iconColor.a !== 0) {\n                                    const haloColor = getValue(layer, 'paint', 'icon-halo-color', zoom, f, functionCache, featureState);\n                                    const haloWidth = getValue(layer, 'paint', 'icon-halo-width', zoom, f, functionCache, featureState);\n                                    let iconCacheKey = `${ icon }.${ iconSize }.${ haloWidth }.${ haloColor }`;\n                                    if (iconColor !== null) {\n                                        iconCacheKey += `.${ iconColor }`;\n                                    }\n                                    iconImg = iconImageCache[iconCacheKey];\n                                    if (!iconImg) {\n                                        const declutterMode = getIconDeclutterMode(layer, zoom, f, functionCache);\n                                        let displacement;\n                                        if ('icon-offset' in layout) {\n                                            displacement = getValue(layer, 'layout', 'icon-offset', zoom, f, functionCache, featureState).slice(0);\n                                            displacement[1] *= -1;\n                                        }\n                                        let color = iconColor ? [\n                                            iconColor.r * 255,\n                                            iconColor.g * 255,\n                                            iconColor.b * 255,\n                                            iconColor.a\n                                        ] : undefined;\n                                        if (imageElement) {\n                                            const iconOptions = {\n                                                color: color,\n                                                rotateWithView: iconRotationAlignment === 'map',\n                                                displacement: displacement,\n                                                declutterMode: declutterMode\n                                            };\n                                            if (typeof imageElement === 'string') {\n                                                // it is a src URL\n                                                iconOptions.src = imageElement;\n                                            } else {\n                                                iconOptions.img = imageElement;\n                                                iconOptions.imgSize = [\n                                                    imageElement.width,\n                                                    imageElement.height\n                                                ];\n                                            }\n                                            iconImg = new Icon(iconOptions);\n                                        } else {\n                                            const spriteImageData = spriteData[icon];\n                                            let img, imgSize, size, offset;\n                                            if (haloWidth) {\n                                                if (spriteImageData.sdf) {\n                                                    img = drawIconHalo(drawSDF(spriteImage, spriteImageData, iconColor), {\n                                                        x: 0,\n                                                        y: 0,\n                                                        width: spriteImageData.width,\n                                                        height: spriteImageData.height,\n                                                        pixelRatio: spriteImageData.pixelRatio\n                                                    }, haloWidth, haloColor);\n                                                    color = undefined;    // do not tint haloed icons\n                                                } else {\n                                                    img = drawIconHalo(spriteImage, spriteImageData, haloWidth, haloColor);\n                                                }\n                                                imgSize = [\n                                                    img.width,\n                                                    img.height\n                                                ];\n                                            } else {\n                                                if (spriteImageData.sdf) {\n                                                    if (!spriteImageUnSDFed) {\n                                                        spriteImageUnSDFed = drawSDF(spriteImage, {\n                                                            x: 0,\n                                                            y: 0,\n                                                            width: spriteImageSize[0],\n                                                            height: spriteImageSize[1]\n                                                        }, {\n                                                            r: 1,\n                                                            g: 1,\n                                                            b: 1,\n                                                            a: 1\n                                                        });\n                                                    }\n                                                    img = spriteImageUnSDFed;\n                                                } else {\n                                                    img = spriteImage;\n                                                }\n                                                imgSize = spriteImageSize;\n                                                size = [\n                                                    spriteImageData.width,\n                                                    spriteImageData.height\n                                                ];\n                                                offset = [\n                                                    spriteImageData.x,\n                                                    spriteImageData.y\n                                                ];\n                                            }\n                                            iconImg = new Icon({\n                                                color: color,\n                                                img: img,\n                                                imgSize: imgSize,\n                                                size: size,\n                                                offset: offset,\n                                                rotateWithView: iconRotationAlignment === 'map',\n                                                scale: iconSize / spriteImageData.pixelRatio,\n                                                displacement: displacement,\n                                                declutterMode: declutterMode\n                                            });\n                                        }\n                                        iconImageCache[iconCacheKey] = iconImg;\n                                    }\n                                }\n                                if (iconImg) {\n                                    ++stylesLength;\n                                    style = styles[stylesLength];\n                                    if (!style || !style.getImage() || style.getFill() || style.getStroke()) {\n                                        style = new Style();\n                                        styles[stylesLength] = style;\n                                    }\n                                    style.setGeometry(styleGeom);\n                                    iconImg.setRotation(placementAngle + deg2rad(getValue(layer, 'layout', 'icon-rotate', zoom, f, functionCache, featureState)));\n                                    iconImg.setOpacity(getValue(layer, 'paint', 'icon-opacity', zoom, f, functionCache, featureState));\n                                    iconImg.setAnchor(anchor[getValue(layer, 'layout', 'icon-anchor', zoom, f, functionCache, featureState)]);\n                                    style.setImage(iconImg);\n                                    text = style.getText();\n                                    style.setText(undefined);\n                                    style.setZIndex(index);\n                                    hasImage = true;\n                                    skipLabel = false;\n                                }\n                            } else {\n                                skipLabel = true;\n                            }\n                        }\n                    }\n                }\n                if (type == 1 && layer.type === 'circle') {\n                    ++stylesLength;\n                    style = styles[stylesLength];\n                    if (!style || !style.getImage() || style.getFill() || style.getStroke()) {\n                        style = new Style();\n                        styles[stylesLength] = style;\n                    }\n                    const circleRadius = 'circle-radius' in paint ? getValue(layer, 'paint', 'circle-radius', zoom, f, functionCache, featureState) : 5;\n                    const circleStrokeColor = colorWithOpacity(getValue(layer, 'paint', 'circle-stroke-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'circle-stroke-opacity', zoom, f, functionCache, featureState));\n                    const circleColor = colorWithOpacity(getValue(layer, 'paint', 'circle-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'circle-opacity', zoom, f, functionCache, featureState));\n                    const circleStrokeWidth = getValue(layer, 'paint', 'circle-stroke-width', zoom, f, functionCache, featureState);\n                    const cache_key = circleRadius + '.' + circleStrokeColor + '.' + circleColor + '.' + circleStrokeWidth;\n                    iconImg = iconImageCache[cache_key];\n                    if (!iconImg) {\n                        iconImg = new Circle({\n                            radius: circleRadius,\n                            stroke: circleStrokeColor && circleStrokeWidth > 0 ? new Stroke({\n                                width: circleStrokeWidth,\n                                color: circleStrokeColor\n                            }) : undefined,\n                            fill: circleColor ? new Fill({ color: circleColor }) : undefined,\n                            declutterMode: 'none'\n                        });\n                        iconImageCache[cache_key] = iconImg;\n                    }\n                    style.setImage(iconImg);\n                    text = style.getText();\n                    style.setText(undefined);\n                    style.setGeometry(undefined);\n                    style.setZIndex(index);\n                    hasImage = true;\n                }\n                let label, font, textLineHeight, textSize, letterSpacing, maxTextWidth;\n                if ('text-field' in layout) {\n                    textSize = Math.round(getValue(layer, 'layout', 'text-size', zoom, f, functionCache, featureState));\n                    const fontArray = getValue(layer, 'layout', 'text-font', zoom, f, functionCache, featureState);\n                    textLineHeight = getValue(layer, 'layout', 'text-line-height', zoom, f, functionCache, featureState);\n                    font = mb2css(getFonts ? getFonts(fontArray, glStyle.metadata ? glStyle.metadata['ol:webfonts'] : undefined) : fontArray, textSize, textLineHeight);\n                    if (!font.includes('sans-serif')) {\n                        font += ',sans-serif';\n                    }\n                    letterSpacing = getValue(layer, 'layout', 'text-letter-spacing', zoom, f, functionCache, featureState);\n                    maxTextWidth = getValue(layer, 'layout', 'text-max-width', zoom, f, functionCache, featureState);\n                    const textField = getValue(layer, 'layout', 'text-field', zoom, f, functionCache, featureState);\n                    if (typeof textField === 'object' && textField.sections) {\n                        if (textField.sections.length === 1) {\n                            label = textField.toString();\n                        } else {\n                            label = textField.sections.reduce((acc, chunk, i) => {\n                                const fonts = chunk.fontStack ? chunk.fontStack.split(',') : fontArray;\n                                const chunkFont = mb2css(getFonts ? getFonts(fonts) : fonts, textSize * (chunk.scale || 1), textLineHeight);\n                                let text = chunk.text;\n                                if (text === '\\n') {\n                                    acc.push('\\n', '');\n                                    return acc;\n                                }\n                                if (type == 2) {\n                                    acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                                    return;\n                                }\n                                text = wrapText(text, chunkFont, maxTextWidth, letterSpacing).split('\\n');\n                                for (let i = 0, ii = text.length; i < ii; ++i) {\n                                    if (i > 0) {\n                                        acc.push('\\n', '');\n                                    }\n                                    acc.push(text[i], chunkFont);\n                                }\n                                return acc;\n                            }, []);\n                        }\n                    } else {\n                        label = fromTemplate(textField, properties).trim();\n                    }\n                    opacity = getValue(layer, 'paint', 'text-opacity', zoom, f, functionCache, featureState);\n                }\n                if (label && opacity && !skipLabel) {\n                    if (!hasImage) {\n                        ++stylesLength;\n                        style = styles[stylesLength];\n                        if (!style || !style.getText() || style.getFill() || style.getStroke()) {\n                            style = new Style();\n                            styles[stylesLength] = style;\n                        }\n                        style.setImage(undefined);\n                        style.setGeometry(undefined);\n                    }\n                    if (!style.getText()) {\n                        style.setText(text || new Text({\n                            padding: [\n                                2,\n                                2,\n                                2,\n                                2\n                            ]\n                        }));\n                    }\n                    text = style.getText();\n                    const textTransform = layout['text-transform'];\n                    if (textTransform == 'uppercase') {\n                        label = Array.isArray(label) ? label.map((t, i) => i % 2 ? t : t.toUpperCase()) : label.toUpperCase();\n                    } else if (textTransform == 'lowercase') {\n                        label = Array.isArray(label) ? label.map((t, i) => i % 2 ? t : t.toLowerCase()) : label.toLowerCase();\n                    }\n                    const wrappedLabel = Array.isArray(label) ? label : type == 2 ? applyLetterSpacing(label, letterSpacing) : wrapText(label, font, maxTextWidth, letterSpacing);\n                    text.setText(wrappedLabel);\n                    text.setFont(font);\n                    text.setRotation(deg2rad(getValue(layer, 'layout', 'text-rotate', zoom, f, functionCache, featureState)));\n                    const textAnchor = getValue(layer, 'layout', 'text-anchor', zoom, f, functionCache, featureState);\n                    const placement = hasImage || type == 1 ? 'point' : getValue(layer, 'layout', 'symbol-placement', zoom, f, functionCache, featureState);\n                    let textAlign;\n                    if (placement === 'line-center') {\n                        text.setPlacement('line');\n                        textAlign = 'center';\n                    } else {\n                        text.setPlacement(placement);\n                    }\n                    if (placement === 'line' && typeof text.setRepeat === 'function') {\n                        const symbolSpacing = getValue(layer, 'layout', 'symbol-spacing', zoom, f, functionCache, featureState);\n                        text.setRepeat(symbolSpacing * 2);\n                    }\n                    text.setOverflow(placement === 'point');\n                    let textHaloWidth = getValue(layer, 'paint', 'text-halo-width', zoom, f, functionCache, featureState);\n                    const textOffset = getValue(layer, 'layout', 'text-offset', zoom, f, functionCache, featureState);\n                    const textTranslate = getValue(layer, 'paint', 'text-translate', zoom, f, functionCache, featureState);\n                    // Text offset has to take halo width and line height into account\n                    let vOffset = 0;\n                    let hOffset = 0;\n                    if (placement == 'point') {\n                        textAlign = 'center';\n                        if (textAnchor.indexOf('left') !== -1) {\n                            textAlign = 'left';\n                            hOffset = textHaloWidth;\n                        } else if (textAnchor.indexOf('right') !== -1) {\n                            textAlign = 'right';\n                            hOffset = -textHaloWidth;\n                        }\n                        const textRotationAlignment = getValue(layer, 'layout', 'text-rotation-alignment', zoom, f, functionCache, featureState);\n                        text.setRotateWithView(textRotationAlignment == 'map');\n                    } else {\n                        text.setMaxAngle(deg2rad(getValue(layer, 'layout', 'text-max-angle', zoom, f, functionCache, featureState)) * label.length / wrappedLabel.length);\n                        text.setRotateWithView(false);\n                    }\n                    text.setTextAlign(textAlign);\n                    let textBaseline = 'middle';\n                    if (textAnchor.indexOf('bottom') == 0) {\n                        textBaseline = 'bottom';\n                        vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n                    } else if (textAnchor.indexOf('top') == 0) {\n                        textBaseline = 'top';\n                        vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n                    }\n                    text.setTextBaseline(textBaseline);\n                    const textJustify = getValue(layer, 'layout', 'text-justify', zoom, f, functionCache, featureState);\n                    text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n                    text.setOffsetX(textOffset[0] * textSize + hOffset + textTranslate[0]);\n                    text.setOffsetY(textOffset[1] * textSize + vOffset + textTranslate[1]);\n                    textColor.setColor(colorWithOpacity(getValue(layer, 'paint', 'text-color', zoom, f, functionCache, featureState), opacity));\n                    text.setFill(textColor);\n                    const haloColor = colorWithOpacity(getValue(layer, 'paint', 'text-halo-color', zoom, f, functionCache, featureState), opacity);\n                    if (haloColor) {\n                        textHalo.setColor(haloColor);\n                        // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n                        // Halo width must be doubled because it is applied around the center of the text outline\n                        textHaloWidth *= 2;\n                        // 1/4 of text size (spec) x 2\n                        const halfTextSize = 0.5 * textSize;\n                        textHalo.setWidth(textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize);\n                        text.setStroke(textHalo);\n                    } else {\n                        text.setStroke(undefined);\n                    }\n                    const textPadding = getValue(layer, 'layout', 'text-padding', zoom, f, functionCache, featureState);\n                    const padding = text.getPadding();\n                    if (textPadding !== padding[0]) {\n                        padding[0] = textPadding;\n                        padding[1] = textPadding;\n                        padding[2] = textPadding;\n                        padding[3] = textPadding;\n                    }\n                    style.setZIndex(index);\n                }\n            }\n        }\n        if (stylesLength > -1) {\n            styles.length = stylesLength + 1;\n            if (recordLayer) {\n                if ('set' in feature) {\n                    // ol/Feature\n                    feature.set('mapbox-layer', featureBelongsToLayer);\n                } else {\n                    // ol/render/Feature\n                    feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n                }\n            }\n            return styles;\n        }\n        return undefined;\n    };\n    olLayer.setStyle(styleFunction);\n    olLayer.set('mapbox-source', mapboxSource);\n    olLayer.set('mapbox-layers', mapboxLayers);\n    olLayer.set('mapbox-featurestate', olLayer.get('mapbox-featurestate') || {});\n    return styleFunction;\n}\n/**\n * Get the the style for a specific Mapbox layer only. This can be useful for creating a legend.\n * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature OpenLayers feature.\n * @param {number} resolution View resolution.\n * @param {import(\"ol/layer\").Vector|import(\"ol/layer\").VectorTile} olLayer OpenLayers layer.\n * @param {string} layerId Id of the Mapbox layer to get the style for\n * @return {Array<import(\"ol/style\").Style>} Styles for the provided Mapbox layer.\n */\nfunction getStyleForLayer(feature, resolution, olLayer, layerId) {\n    const evaluateStyle = olLayer.getStyleFunction();\n    if (evaluateStyle.length === 3) {\n        // @ts-ignore\n        return evaluateStyle(feature, resolution, layerId);\n    }\n    return undefined;\n}\n\n/**\n * Generates a shaded relief image given elevation data.  Uses a 3x3\n * neighborhood for determining slope and aspect.\n * @param {Array<ImageData>} inputs Array of input images.\n * @param {Object} data Data added in the \"beforeoperations\" event.\n * @return {ImageData} Output image.\n */\nfunction hillshade(inputs, data) {\n    const elevationImage = inputs[0];\n    const width = elevationImage.width;\n    const height = elevationImage.height;\n    const elevationData = elevationImage.data;\n    const shadeData = new Uint8ClampedArray(elevationData.length);\n    const dp = data.resolution * 2;\n    const maxX = width - 1;\n    const maxY = height - 1;\n    const pixel = [\n        0,\n        0,\n        0,\n        0\n    ];\n    const twoPi = 2 * Math.PI;\n    const halfPi = Math.PI / 2;\n    const sunEl = Math.PI * data.sunEl / 180;\n    const sunAz = Math.PI * data.sunAz / 180;\n    const cosSunEl = Math.cos(sunEl);\n    const sinSunEl = Math.sin(sunEl);\n    const highlightColor = data.highlightColor;\n    const shadowColor = data.shadowColor;\n    const accentColor = data.accentColor;\n    const encoding = data.encoding;\n    let pixelX, pixelY, x0, x1, y0, y1, offset, z0, z1, dzdx, dzdy, slope, aspect, accent, scaled, shade, scaledAccentColor, compositeShadeColor, clamp, slopeScaleBase, scaledSlope, cosIncidence;\n    function calculateElevation(pixel, encoding = 'mapbox') {\n        // The method used to extract elevations from the DEM.\n        //\n        // The supported methods are the Mapbox format\n        // (red * 256 * 256 + green * 256 + blue) * 0.1 - 10000\n        // and the Terrarium format\n        // (red * 256 + green + blue / 256) - 32768\n        //\n        if (encoding === 'mapbox') {\n            return (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1 - 10000;\n        }\n        if (encoding === 'terrarium') {\n            return pixel[0] * 256 + pixel[1] + pixel[2] / 256 - 32768;\n        }\n    }\n    for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n        y0 = pixelY === 0 ? 0 : pixelY - 1;\n        y1 = pixelY === maxY ? maxY : pixelY + 1;\n        for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n            x0 = pixelX === 0 ? 0 : pixelX - 1;\n            x1 = pixelX === maxX ? maxX : pixelX + 1;\n            // determine elevation for (x0, pixelY)\n            offset = (pixelY * width + x0) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z0 = data.vert * calculateElevation(pixel, encoding);\n            // determine elevation for (x1, pixelY)\n            offset = (pixelY * width + x1) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z1 = data.vert * calculateElevation(pixel, encoding);\n            dzdx = (z1 - z0) / dp;\n            // determine elevation for (pixelX, y0)\n            offset = (y0 * width + pixelX) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z0 = data.vert * calculateElevation(pixel, encoding);\n            // determine elevation for (pixelX, y1)\n            offset = (y1 * width + pixelX) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z1 = data.vert * calculateElevation(pixel, encoding);\n            dzdy = (z1 - z0) / dp;\n            aspect = Math.atan2(dzdy, -dzdx);\n            if (aspect < 0) {\n                aspect = halfPi - aspect;\n            } else if (aspect > halfPi) {\n                aspect = twoPi - aspect + halfPi;\n            } else {\n                aspect = halfPi - aspect;\n            }\n            // Bootstrap slope and corresponding incident values\n            slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n            cosIncidence = sinSunEl * Math.cos(slope) + cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n            accent = Math.cos(slope);\n            // 255 for Hex colors\n            scaled = 255 * cosIncidence;\n            /*\n       * The following is heavily inspired\n       * by [Maplibre's equivalent WebGL shader](https://github.com/maplibre/maplibre-gl-js/blob/main/src/shaders/hillshade.fragment.glsl)\n       */\n            // Forces given value to stay between two given extremes\n            clamp = Math.min(Math.max(2 * data.sunEl, 0), 1);\n            // Intensity basis for hillshade opacity\n            slopeScaleBase = 1.875 - data.opacity * 1.75;\n            // Intensity interpolation so that higher intensity values create more opaque hillshading\n            scaledSlope = data.opacity !== 0.5 ? halfPi * ((Math.pow(slopeScaleBase, slope) - 1) / (Math.pow(slopeScaleBase, halfPi) - 1)) : slope;\n            // Accent hillshade color with given accentColor to emphasize rougher terrain\n            scaledAccentColor = {\n                r: (1 - accent) * accentColor.r * clamp * 255,\n                g: (1 - accent) * accentColor.g * clamp * 255,\n                b: (1 - accent) * accentColor.b * clamp * 255,\n                a: (1 - accent) * accentColor.a * clamp * 255\n            };\n            // Allows highlight vs shadow discrimination\n            shade = Math.abs(((aspect + sunAz) / Math.PI + 0.5) % 2 - 1);\n            // Creates a composite color mix between highlight & shadow colors to emphasize slopes\n            compositeShadeColor = {\n                r: (highlightColor.r * (1 - shade) + shadowColor.r * shade) * scaled,\n                g: (highlightColor.g * (1 - shade) + shadowColor.g * shade) * scaled,\n                b: (highlightColor.b * (1 - shade) + shadowColor.b * shade) * scaled,\n                a: (highlightColor.a * (1 - shade) + shadowColor.a * shade) * scaled\n            };\n            // Fill in result color value\n            offset = (pixelY * width + pixelX) * 4;\n            shadeData[offset] = scaledAccentColor.r * (1 - shade) + compositeShadeColor.r;\n            shadeData[offset + 1] = scaledAccentColor.g * (1 - shade) + compositeShadeColor.g;\n            shadeData[offset + 2] = scaledAccentColor.b * (1 - shade) + compositeShadeColor.b;\n            // Key opacity on the scaledSlope to improve legibility by increasing higher elevation rates' contrast\n            shadeData[offset + 3] = elevationData[offset + 3] * data.opacity * clamp * Math.sin(scaledSlope);\n        }\n    }\n    return new ImageData(shadeData, width, height);\n}\n\n/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n/**\n * @typedef {Object} FeatureIdentifier\n * @property {string|number} id The feature id.\n * @property {string} source The source id.\n */\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken] Access token for 'mapbox://' urls.\n * @property {function(string, ResourceType): (Request|void)} [transformRequest]\n * Function for controlling how `ol-mapbox-style` fetches resources. Can be used for modifying\n * the url, adding headers or setting credentials options. Called with the url and the resource\n * type as arguments, this function is supposed to return a `Request` object. Without a return value,\n * the original request will not be modified. For `Tiles` and `GeoJSON` resources, only the `url` of\n * the returned request will be respected.\n * @property {string} [projection='EPSG:3857'] Only useful when working with non-standard projections.\n * Code of a projection registered with OpenLayers. All sources of the style must be provided in this\n * projection. The projection must also have a valid extent defined, which will be used to determine the\n * origin and resolutions of the tile grid for all tiled sources of the style. When provided, the bbox\n * placeholder in tile and geojson urls changes: the default is `{bbox-epsg-3857}`, when projection is e.g.\n * set to `EPSG:4326`, the bbox placeholder will be `{bbox-epsg-4326}`.\n * @property {Array<number>} [resolutions] Only useful when working with non-standard projections.\n * Resolutions for mapping resolution to the `zoom` used in the Mapbox style.\n * @property {string} [styleUrl] URL of the Mapbox GL style. Required for styles that were provided\n * as object, when they contain a relative sprite url, or sources referencing data by relative url.\n * @property {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image for an icon name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function be used for icons not in the sprite or to override sprite icons.\n * @property {string} [accessTokenParam='access_token'] Access token param. For internal use.\n */\n/**\n * @typedef {Object} ApplyStyleOptions\n * @property {string} [source=''] Source. Default is `''`, which causes the first source in the\n * style to be used.\n * @property {Array<string>} [layers] Layers. If no source is provided, the layers with the\n * provided ids will be used from the style's `layers` array. All layers need to use the same source.\n * @property {boolean} [updateSource=true] Update or create vector (tile) layer source with parameters\n * specified for the source in the mapbox style definition.\n */\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n/**\n * @param {import(\"ol/proj/Projection.js\").default} projection Projection.\n * @param {number} [tileSize=512] Tile size.\n * @return {Array<number>} Resolutions.\n */\nfunction getTileResolutions(projection, tileSize = 512) {\n    return projection.getExtent() ? createXYZ({\n        extent: projection.getExtent(),\n        tileSize: tileSize,\n        maxZoom: 22\n    }).getResolutions() : defaultResolutions;\n}\n/**\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Options} Completed options with accessToken and accessTokenParam.\n */\nfunction completeOptions(styleUrl, options) {\n    if (!options.accessToken) {\n        options = Object.assign({}, options);\n        const searchParams = new URL(styleUrl).searchParams;\n        // The last search parameter is the access token\n        searchParams.forEach((value, key) => {\n            options.accessToken = value;\n            options.accessTokenParam = key;\n        });\n    }\n    return options;\n}\n/**\n * Applies a style function to an `ol/layer/VectorTile` or `ol/layer/Vector`\n * with an `ol/source/VectorTile` or an `ol/source/Vector`. If the layer does not have a source\n * yet, it will be created and populated from the information in the `glStyle` (unless `updateSource` is\n * set to `false`).\n *\n * **Example:**\n * ```js\n * import {applyStyle} from 'ol-mapbox-style';\n * import {VectorTile} from 'ol/layer.js';\n *\n * const layer = new VectorTile({declutter: true});\n * applyStyle(layer, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n *\n * The style function will render all layers from the `glStyle` object that use the source\n * of the first layer, the specified `source`, or a subset of layers from the same source. The\n * source needs to be a `\"type\": \"vector\"` or `\"type\": \"geojson\"` source.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * @param {VectorTileLayer|VectorLayer} layer OpenLayers layer. When the layer has a source configured,\n * it will be modified to use the configuration from the glStyle's `source`. Options specified on the\n * layer's source will override those from the glStyle's `source`, except for `url` and\n * `tileUrlFunction`. When the source projection is the default (`EPSG:3857`), the `tileGrid` will\n * also be overridden. If you'd rather not have ol-mapbox-style modify the source, configure `applyStyle()`\n * with the `updateSource: false` option.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>|Options&ApplyStyleOptions} [sourceOrLayersOrOptions] Options or\n * `source` key or an array of layer `id`s from the Mapbox Style object. When a `source` key is\n * provided, all layers for the specified source will be included in the style function. When layer\n * `id`s are provided, they must be from layers that use the same source. When not provided or a falsey\n * value, all layers using the first source specified in the glStyle will be rendered.\n * @param {Options&ApplyStyleOptions|string} [optionsOrPath] **Deprecated**. Options. Alternatively the path of the style file\n * (only required when a relative path is used for the `\"sprite\"` property of the style).\n * @param {Array<number>} [resolutions] **Deprecated**. Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections, can also be supplied with\n * options.\n * @return {Promise} Promise which will be resolved when the style can be used\n * for rendering.\n */\nfunction applyStyle(layer, glStyle, sourceOrLayersOrOptions = '', optionsOrPath = {}, resolutions = undefined) {\n    let styleUrl, sourceId;\n    /** @type {Options&ApplyStyleOptions} */\n    let options;\n    let sourceOrLayers;\n    let updateSource = true;\n    if (typeof sourceOrLayersOrOptions !== 'string' && !Array.isArray(sourceOrLayersOrOptions)) {\n        options = sourceOrLayersOrOptions;\n        sourceOrLayers = options.source || options.layers;\n        optionsOrPath = options;\n    } else {\n        sourceOrLayers = sourceOrLayersOrOptions;\n    }\n    if (typeof optionsOrPath === 'string') {\n        styleUrl = optionsOrPath;\n        options = {};\n    } else {\n        styleUrl = optionsOrPath.styleUrl;\n        options = optionsOrPath;\n    }\n    if (options.updateSource === false) {\n        updateSource = false;\n    }\n    if (!resolutions) {\n        resolutions = options.resolutions;\n    }\n    if (!styleUrl && typeof glStyle === 'string' && !glStyle.trim().startsWith('{')) {\n        styleUrl = glStyle;\n    }\n    if (styleUrl) {\n        styleUrl = styleUrl.startsWith('data:') ? location.href : normalizeStyleUrl(styleUrl, options.accessToken);\n        options = completeOptions(styleUrl, options);\n    }\n    return new Promise(function (resolve, reject) {\n        // TODO: figure out where best place to check source type is\n        // Note that the source arg is an array of gl layer ids and each must be\n        // dereferenced to get source type to validate\n        getGlStyle(glStyle, options).then(function (glStyle) {\n            if (glStyle.version != 8) {\n                return reject(new Error('glStyle version 8 required.'));\n            }\n            if (!(layer instanceof VectorLayer || layer instanceof VectorTileLayer)) {\n                return reject(new Error('Can only apply to VectorLayer or VectorTileLayer'));\n            }\n            const type = layer instanceof VectorTileLayer ? 'vector' : 'geojson';\n            if (!sourceOrLayers) {\n                sourceId = Object.keys(glStyle.sources).find(function (key) {\n                    return glStyle.sources[key].type === type;\n                });\n                sourceOrLayers = sourceId;\n            } else if (Array.isArray(sourceOrLayers)) {\n                sourceId = glStyle.layers.find(function (layer) {\n                    return layer.id === sourceOrLayers[0];\n                }).source;\n            } else {\n                sourceId = sourceOrLayers;\n            }\n            if (!sourceId) {\n                return reject(new Error(`No ${ type } source found in the glStyle.`));\n            }\n            function assignSource() {\n                if (!updateSource) {\n                    return Promise.resolve();\n                }\n                if (layer instanceof VectorTileLayer) {\n                    return setupVectorSource(glStyle.sources[sourceId], styleUrl, options).then(function (source) {\n                        const targetSource = layer.getSource();\n                        if (!targetSource) {\n                            layer.setSource(source);\n                        } else if (source !== targetSource) {\n                            targetSource.setTileUrlFunction(source.getTileUrlFunction());\n                            if (typeof targetSource.setUrls === 'function' && typeof source.getUrls === 'function') {\n                                // to get correct keys for tile cache and queue\n                                targetSource.setUrls(source.getUrls());\n                            }\n                            //@ts-ignore\n                            if (!targetSource.format_) {\n                                //@ts-ignore\n                                targetSource.format_ = source.format_;\n                            }\n                            if (!targetSource.getAttributions()) {\n                                targetSource.setAttributions(source.getAttributions());\n                            }\n                            if (targetSource.getTileLoadFunction() === defaultLoadFunction) {\n                                targetSource.setTileLoadFunction(source.getTileLoadFunction());\n                            }\n                            if (equivalent(targetSource.getProjection(), source.getProjection())) {\n                                targetSource.tileGrid = source.getTileGrid();\n                            }\n                        }\n                        if (!isFinite(layer.getMaxResolution()) && !isFinite(layer.getMinZoom())) {\n                            const tileGrid = layer.getSource().getTileGrid();\n                            layer.setMaxResolution(tileGrid.getResolution(tileGrid.getMinZoom()));\n                        }\n                    });\n                }\n                const glSource = glStyle.sources[sourceId];\n                let source = layer.getSource();\n                if (!source || source.get('mapbox-source') !== glSource) {\n                    source = setupGeoJSONSource(glSource, styleUrl, options);\n                }\n                const targetSource = layer.getSource();\n                if (!targetSource) {\n                    layer.setSource(source);\n                } else if (source !== targetSource) {\n                    if (!targetSource.getAttributions()) {\n                        targetSource.setAttributions(source.getAttributions());\n                    }\n                    //@ts-ignore\n                    if (!targetSource.format_) {\n                        //@ts-ignore\n                        targetSource.format_ = source.getFormat();\n                    }\n                    //@ts-ignore\n                    targetSource.url_ = source.getUrl();\n                }\n                return Promise.resolve();\n            }\n            let spriteScale, spriteData, spriteImageUrl, style;\n            function onChange() {\n                if (!style && (!glStyle.sprite || spriteData)) {\n                    if (options.projection && !resolutions) {\n                        const projection = get$1(options.projection);\n                        const units = projection.getUnits();\n                        if (units !== 'm') {\n                            resolutions = defaultResolutions.map(resolution => resolution / METERS_PER_UNIT[units]);\n                        }\n                    }\n                    style = stylefunction(layer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, options.getImage);\n                    if (!layer.getStyle()) {\n                        reject(new Error(`Nothing to show for source [${ sourceId }]`));\n                    } else {\n                        assignSource().then(resolve).catch(reject);\n                    }\n                } else if (style) {\n                    layer.setStyle(style);\n                    assignSource().then(resolve).catch(reject);\n                } else {\n                    reject(new Error('Something went wrong trying to apply style.'));\n                }\n            }\n            if (glStyle.sprite) {\n                const sprite = new URL(normalizeSpriteUrl(glStyle.sprite, options.accessToken, styleUrl || location.href));\n                spriteScale = window.devicePixelRatio >= 1.5 ? 0.5 : 1;\n                const sizeFactor = spriteScale == 0.5 ? '@2x' : '';\n                let spriteUrl = sprite.origin + sprite.pathname + sizeFactor + '.json' + sprite.search;\n                new Promise(function (resolve, reject) {\n                    fetchResource('Sprite', spriteUrl, options).then(resolve).catch(function (error) {\n                        spriteUrl = sprite.origin + sprite.pathname + '.json' + sprite.search;\n                        fetchResource('Sprite', spriteUrl, options).then(resolve).catch(reject);\n                    });\n                }).then(function (spritesJson) {\n                    if (spritesJson === undefined) {\n                        reject(new Error('No sprites found.'));\n                    }\n                    spriteData = spritesJson;\n                    spriteImageUrl = sprite.origin + sprite.pathname + sizeFactor + '.png' + sprite.search;\n                    if (options.transformRequest) {\n                        const transformed = options.transformRequest(spriteImageUrl, 'SpriteImage');\n                        if (transformed instanceof Request) {\n                            spriteImageUrl = encodeURI(transformed.url);\n                        }\n                    }\n                    onChange();\n                }).catch(function (err) {\n                    reject(new Error(`Sprites cannot be loaded: ${ spriteUrl }: ${ err.message }`));\n                });\n            } else {\n                onChange();\n            }\n        }).catch(reject);\n    });\n}\nconst emptyObj = {};\nfunction setFirstBackground(mapOrLayer, glStyle, options) {\n    glStyle.layers.some(function (layer) {\n        if (layer.type === 'background') {\n            if (mapOrLayer instanceof Layer) {\n                mapOrLayer.setBackground(function (resolution) {\n                    return getBackgroundColor(layer, resolution, options, {});\n                });\n                return true;\n            }\n            if (mapOrLayer instanceof Map || mapOrLayer instanceof LayerGroup) {\n                mapOrLayer.getLayers().push(setupBackgroundLayer(layer, options, {}));\n                return true;\n            }\n        }\n    });\n}\n/**\n * Applies properties of the Mapbox Style's first `background` layer to the\n * provided map or layer (group).\n *\n * **Example:**\n * ```js\n * import {applyBackground} from 'ol-mapbox-style';\n * import {Map} from 'ol';\n *\n * const map = new Map({target: 'map'});\n * applyBackground(map, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n * @param {Map|import(\"ol/layer/Base.js\").default} mapOrLayer OpenLayers Map or layer (group).\n * @param {Object|string} glStyle Mapbox Style object or url.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the background is applied.\n */\nfunction applyBackground(mapOrLayer, glStyle, options = {}) {\n    return getGlStyle(glStyle, options).then(function (glStyle) {\n        setFirstBackground(mapOrLayer, glStyle, options);\n    });\n}\nfunction getSourceIdByRef(layers, ref) {\n    let sourceId;\n    layers.some(function (layer) {\n        if (layer.id == ref) {\n            sourceId = layer.source;\n            return true;\n        }\n    });\n    return sourceId;\n}\nfunction extentFromTileJSON(tileJSON, projection) {\n    const bounds = tileJSON.bounds;\n    if (bounds) {\n        const ll = fromLonLat([\n            bounds[0],\n            bounds[1]\n        ], projection);\n        const tr = fromLonLat([\n            bounds[2],\n            bounds[3]\n        ], projection);\n        return [\n            ll[0],\n            ll[1],\n            tr[0],\n            tr[1]\n        ];\n    }\n    return get$1(projection).getExtent();\n}\nfunction sourceOptionsFromTileJSON(glSource, tileJSON, options) {\n    const tileJSONSource = new TileJSON({\n        tileJSON: tileJSON,\n        tileSize: glSource.tileSize || tileJSON.tileSize || 512\n    });\n    const tileJSONDoc = tileJSONSource.getTileJSON();\n    const tileGrid = tileJSONSource.getTileGrid();\n    const projection = get$1(options.projection || 'EPSG:3857');\n    const extent = extentFromTileJSON(tileJSONDoc, projection);\n    const projectionExtent = projection.getExtent();\n    const minZoom = tileJSONDoc.minzoom || 0;\n    const maxZoom = tileJSONDoc.maxzoom || 22;\n    /** @type {import(\"ol/source/VectorTile.js\").Options} */\n    const sourceOptions = {\n        attributions: tileJSONSource.getAttributions(),\n        projection: projection,\n        tileGrid: new TileGrid({\n            origin: projectionExtent ? getTopLeft(projectionExtent) : tileGrid.getOrigin(0),\n            extent: extent || tileGrid.getExtent(),\n            minZoom: minZoom,\n            resolutions: getTileResolutions(projection, tileJSON.tileSize).slice(0, maxZoom + 1),\n            tileSize: tileGrid.getTileSize(0)\n        })\n    };\n    if (Array.isArray(tileJSONDoc.tiles)) {\n        sourceOptions.urls = tileJSONDoc.tiles;\n    } else {\n        sourceOptions.url = tileJSONDoc.tiles;\n    }\n    return sourceOptions;\n}\nfunction getBackgroundColor(glLayer, resolution, options, functionCache) {\n    const background = {\n        id: glLayer.id,\n        type: glLayer.type\n    };\n    const layout = glLayer.layout || {};\n    const paint = glLayer.paint || {};\n    background['paint'] = paint;\n    const zoom = getZoomForResolution(resolution, options.resolutions || defaultResolutions);\n    let bg, opacity;\n    if (paint['background-color'] !== undefined) {\n        bg = getValue(background, 'paint', 'background-color', zoom, emptyObj, functionCache);\n    }\n    if (paint['background-opacity'] !== undefined) {\n        opacity = getValue(background, 'paint', 'background-opacity', zoom, emptyObj, functionCache);\n    }\n    return layout.visibility == 'none' ? undefined : colorWithOpacity(bg, opacity);\n}\n/**\n * @param {Object} glLayer Mapbox Style layer object.\n * @param {Options} options Options.\n * @param {Object} functionCache Cache for functions.\n * @return {Layer} OpenLayers layer.\n */\nfunction setupBackgroundLayer(glLayer, options, functionCache) {\n    const div = document.createElement('div');\n    div.className = 'ol-mapbox-style-background';\n    div.style.position = 'absolute';\n    div.style.width = '100%';\n    div.style.height = '100%';\n    return new Layer({\n        source: new Source({}),\n        render(frameState) {\n            const color = getBackgroundColor(glLayer, frameState.viewState.resolution, options, functionCache);\n            div.style.backgroundColor = color;\n            return div;\n        }\n    });\n}\n/**\n * Creates an OpenLayers VectorTile source for a gl source entry.\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string|undefined} styleUrl URL to use for the source. This is expected to be the complete http(s) url,\n * with access key applied.\n * @param {Options} options Options.\n * @return {Promise<import(\"ol/source/VectorTile\").default>} Promise resolving to a VectorTile source.\n * @private\n */\nfunction setupVectorSource(glSource, styleUrl, options) {\n    return new Promise(function (resolve, reject) {\n        getTileJson(glSource, styleUrl, options).then(function (tileJSON) {\n            const sourceOptions = sourceOptionsFromTileJSON(glSource, tileJSON, options);\n            sourceOptions.format = new MVT();\n            resolve(new VectorTileSource(sourceOptions));\n        }).catch(reject);\n    });\n}\nfunction setupVectorLayer(glSource, styleUrl, options) {\n    const layer = new VectorTileLayer({\n        declutter: true,\n        visible: false\n    });\n    setupVectorSource(glSource, styleUrl, options).then(function (source) {\n        source.set('mapbox-source', glSource);\n        layer.setSource(source);\n    }).catch(function (error) {\n        layer.setSource(undefined);\n    });\n    return layer;\n}\nfunction getBboxTemplate(projection) {\n    const projCode = projection ? projection.getCode() : 'EPSG:3857';\n    return `{bbox-${ projCode.toLowerCase().replace(/[^a-z0-9]/g, '-') }}`;\n}\nfunction setupRasterLayer(glSource, styleUrl, options) {\n    const layer = new TileLayer();\n    getTileJson(glSource, styleUrl, options).then(function (tileJson) {\n        const source = new TileJSON({\n            interpolate: options.interpolate === undefined ? true : options.interpolate,\n            transition: 0,\n            crossOrigin: 'anonymous',\n            tileJSON: tileJson\n        });\n        source.tileGrid = sourceOptionsFromTileJSON(glSource, tileJson, options).tileGrid;\n        if (options.projection) {\n            //@ts-ignore\n            source.projection = get$1(options.projection);\n        }\n        const getTileUrl = source.getTileUrlFunction();\n        source.setTileUrlFunction(function (tileCoord, pixelRatio, projection) {\n            const bboxTemplate = getBboxTemplate(projection);\n            let src = getTileUrl(tileCoord, pixelRatio, projection);\n            if (src.indexOf(bboxTemplate) != -1) {\n                const bbox = source.getTileGrid().getTileCoordExtent(tileCoord);\n                src = src.replace(bboxTemplate, bbox.toString());\n            }\n            return src;\n        });\n        source.set('mapbox-source', glSource);\n        layer.setSource(source);\n    }).catch(function (error) {\n        layer.setSource(undefined);\n    });\n    return layer;\n}\n/**\n *\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string} styleUrl Style url\n * @param {Options} options ol-mapbox-style options.\n * @return {ImageLayer<Raster>} The raster layer\n */\nfunction setupHillshadeLayer(glSource, styleUrl, options) {\n    const tileLayer = setupRasterLayer(glSource, styleUrl, options);\n    /** @type {ImageLayer<Raster>} */\n    const layer = new ImageLayer({\n        source: new Raster({\n            operationType: 'image',\n            operation: hillshade,\n            sources: [tileLayer]\n        })\n    });\n    return layer;\n}\n/**\n * @param {Object} glSource glStyle source.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {VectorSource} Configured vector source.\n */\nfunction setupGeoJSONSource(glSource, styleUrl, options) {\n    const geoJsonFormat = options.projection ? new GeoJSON({ dataProjection: options.projection }) : new GeoJSON();\n    const data = glSource.data;\n    const sourceOptions = {};\n    if (typeof data == 'string') {\n        let geoJsonUrl = normalizeSourceUrl(data, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href);\n        if (options.transformRequest) {\n            const transformed = options.transformRequest(geoJsonUrl, 'GeoJSON');\n            if (transformed instanceof Request) {\n                geoJsonUrl = decodeURI(transformed.url);\n            }\n        }\n        if (/\\{bbox-[0-9a-z-]+\\}/.test(geoJsonUrl)) {\n            const extentUrl = (extent, resolution, projection) => {\n                const bboxTemplate = getBboxTemplate(projection);\n                return geoJsonUrl.replace(bboxTemplate, `${ extent.join(',') }`);\n            };\n            const source = new VectorSource({\n                attributions: glSource.attribution,\n                format: geoJsonFormat,\n                url: extentUrl,\n                strategy: bbox\n            });\n            source.set('mapbox-source', glSource);\n            return source;\n        }\n        return new VectorSource({\n            attributions: glSource.attribution,\n            format: geoJsonFormat,\n            url: geoJsonUrl\n        });\n    }\n    sourceOptions.features = geoJsonFormat.readFeatures(data, { featureProjection: getUserProjection() || 'EPSG:3857' });\n    const source = new VectorSource(Object.assign({\n        attributions: glSource.attribution,\n        format: geoJsonFormat\n    }, sourceOptions));\n    source.set('mapbox-source', glSource);\n    return source;\n}\nfunction setupGeoJSONLayer(glSource, styleUrl, options) {\n    return new VectorLayer({\n        declutter: true,\n        source: setupGeoJSONSource(glSource, styleUrl, options),\n        visible: false\n    });\n}\nfunction prerenderRasterLayer(glLayer, layer, functionCache) {\n    let zoom = null;\n    return function (event) {\n        if (glLayer.paint && 'raster-opacity' in glLayer.paint && event.frameState.viewState.zoom !== zoom) {\n            zoom = event.frameState.viewState.zoom;\n            delete functionCache[glLayer.id];\n            updateRasterLayerProperties(glLayer, layer, zoom, functionCache);\n        }\n    };\n}\nfunction updateRasterLayerProperties(glLayer, layer, zoom, functionCache) {\n    const opacity = getValue(glLayer, 'paint', 'raster-opacity', zoom, emptyObj, functionCache);\n    layer.setOpacity(opacity);\n}\nfunction manageVisibility(layer, mapOrGroup) {\n    function onChange() {\n        const glStyle = mapOrGroup.get('mapbox-style');\n        if (!glStyle) {\n            return;\n        }\n        const mapboxLayers = derefLayers(glStyle.layers);\n        const layerMapboxLayerids = layer.get('mapbox-layers');\n        const visible = mapboxLayers.filter(function (mapboxLayer) {\n            return layerMapboxLayerids.includes(mapboxLayer.id);\n        }).some(function (mapboxLayer) {\n            return !mapboxLayer.layout || !mapboxLayer.layout.visibility || mapboxLayer.layout.visibility === 'visible';\n        });\n        if (layer.get('visible') !== visible) {\n            layer.setVisible(visible);\n        }\n    }\n    layer.on('change', onChange);\n    onChange();\n}\nfunction setupLayer(glStyle, styleUrl, glLayer, options) {\n    const functionCache = getFunctionCache(glStyle);\n    const glLayers = glStyle.layers;\n    const type = glLayer.type;\n    const id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n    const glSource = glStyle.sources[id];\n    let layer;\n    if (type == 'background') {\n        layer = setupBackgroundLayer(glLayer, options, functionCache);\n    } else if (glSource.type == 'vector') {\n        layer = setupVectorLayer(glSource, styleUrl, options);\n    } else if (glSource.type == 'raster') {\n        layer = setupRasterLayer(glSource, styleUrl, options);\n        layer.setVisible(glLayer.layout ? glLayer.layout.visibility !== 'none' : true);\n        layer.on('prerender', prerenderRasterLayer(glLayer, layer, functionCache));\n    } else if (glSource.type == 'geojson') {\n        layer = setupGeoJSONLayer(glSource, styleUrl, options);\n    } else if (glSource.type == 'raster-dem' && glLayer.type == 'hillshade') {\n        const hillshadeLayer = setupHillshadeLayer(glSource, styleUrl, options);\n        layer = hillshadeLayer;\n        hillshadeLayer.getSource().on('beforeoperations', function (event) {\n            const data = event.data;\n            data.resolution = event.resolution;\n            const zoom = getZoomForResolution(event.resolution, options.resolutions || defaultResolutions);\n            data.encoding = glSource.encoding;\n            data.vert = 5 * getValue(glLayer, 'paint', 'hillshade-exaggeration', zoom, emptyObj, functionCache);\n            data.sunAz = getValue(glLayer, 'paint', 'hillshade-illumination-direction', zoom, emptyObj, functionCache);\n            data.sunEl = 35;\n            data.opacity = 0.3;\n            data.highlightColor = getValue(glLayer, 'paint', 'hillshade-highlight-color', zoom, emptyObj, functionCache);\n            data.shadowColor = getValue(glLayer, 'paint', 'hillshade-shadow-color', zoom, emptyObj, functionCache);\n            data.accentColor = getValue(glLayer, 'paint', 'hillshade-accent-color', zoom, emptyObj, functionCache);\n        });\n        layer.setVisible(glLayer.layout ? glLayer.layout.visibility !== 'none' : true);\n    }\n    const glSourceId = id;\n    if (layer) {\n        layer.set('mapbox-source', glSourceId);\n    }\n    return layer;\n}\n/**\n * @param {*} glStyle Mapbox Style.\n * @param {Map|LayerGroup} mapOrGroup Map or layer group.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the style is loaded.\n */\nfunction processStyle(glStyle, mapOrGroup, styleUrl, options) {\n    const promises = [];\n    let view = null;\n    if (mapOrGroup instanceof Map) {\n        view = mapOrGroup.getView();\n        if (!view.isDef() && !view.getRotation() && !view.getResolutions()) {\n            const projection = options.projection ? get$1(options.projection) : view.getProjection();\n            view = new View(Object.assign(view.getProperties(), {\n                maxResolution: defaultResolutions[0] / METERS_PER_UNIT[projection.getUnits()],\n                projection: options.projection || view.getProjection()\n            }));\n            mapOrGroup.setView(view);\n        }\n        if ('center' in glStyle && !view.getCenter()) {\n            view.setCenter(fromLonLat(glStyle.center, view.getProjection()));\n        }\n        if ('zoom' in glStyle && view.getZoom() === undefined) {\n            view.setResolution(defaultResolutions[0] / METERS_PER_UNIT[view.getProjection().getUnits()] / Math.pow(2, glStyle.zoom));\n        }\n        if (!view.getCenter() || view.getZoom() === undefined) {\n            view.fit(view.getProjection().getExtent(), {\n                nearest: true,\n                size: mapOrGroup.getSize()\n            });\n        }\n    }\n    mapOrGroup.set('mapbox-style', glStyle);\n    mapOrGroup.set('mapbox-metadata', {\n        styleUrl,\n        options\n    });\n    const glLayers = glStyle.layers;\n    let layerIds = [];\n    let layer, glSourceId, id;\n    for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n        const glLayer = glLayers[i];\n        const type = glLayer.type;\n        if (type == 'heatmap') {\n            //FIXME Unsupported layer type\n            throw new Error(`${ type } layers are not supported`);\n        } else {\n            id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n            // this technique assumes gl layers will be in a particular order\n            if (!id || id != glSourceId) {\n                if (layerIds.length) {\n                    promises.push(finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options));\n                    layerIds = [];\n                }\n                layer = setupLayer(glStyle, styleUrl, glLayer, options);\n                if (!(layer instanceof VectorLayer || layer instanceof VectorTileLayer)) {\n                    layerIds = [];\n                }\n                glSourceId = layer.get('mapbox-source');\n            }\n            layerIds.push(glLayer.id);\n        }\n    }\n    promises.push(finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options));\n    return Promise.all(promises);\n}\n/**\n * Loads and applies a Mapbox Style object into an OpenLayers Map or LayerGroup.\n * This includes the map background, the layers, and for Map instances that did not\n * have a View defined yet also the center and the zoom.\n *\n * **Example:**\n * ```js\n * import apply from 'ol-mapbox-style';\n *\n * apply('map', 'mapbox://styles/mapbox/bright-v9', {accessToken: 'YOUR_MAPBOX_TOKEN'});\n * ```\n *\n * The center and zoom will only be set if present in the Mapbox Style document,\n * and if not already set on the OpenLayers map.\n *\n * Layers will be added to the OpenLayers map, without affecting any layers that\n * might already be set on the map.\n *\n * Layers added by `apply()` will have two additional properties:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function sets an additional `mapbox-style` property on the OpenLayers\n * Map or LayerGroup instance, which holds the Mapbox Style object.\n *\n * @param {Map|HTMLElement|string|LayerGroup} mapOrGroupOrElement Either an existing\n * OpenLayers Map instance, or a HTML element, or the id of a HTML element that will be\n * the target of a new OpenLayers Map, or a layer group. If layer group, styles\n * releated to the map and view will be ignored.\n * @param {string|Object} style JSON style object or style url pointing to a\n * Mapbox Style object. When using Mapbox APIs, the url is the `styleUrl`\n * shown in Mapbox Studio's \"share\" panel. In addition, the `accessToken` option\n * (see below) must be set.\n * When passed as JSON style object, all OpenLayers layers created by `apply()`\n * will be immediately available, but they may not have a source yet (i.e. when\n * they are defined by a TileJSON url in the Mapbox Style document). When passed\n * as style url, layers will be added to the map when the Mapbox Style document\n * is loaded and parsed.\n * @param {Options} options Options.\n * @return {Promise<Map|LayerGroup>} A promise that resolves after all layers have been added to\n * the OpenLayers Map instance or LayerGroup, their sources set, and their styles applied. The\n * `resolve` callback will be called with the OpenLayers Map instance or LayerGroup as\n * argument.\n */\nfunction apply(mapOrGroupOrElement, style, options = {}) {\n    let promise;\n    /** @type {Map|LayerGroup} */\n    let mapOrGroup;\n    if (typeof mapOrGroupOrElement === 'string' || mapOrGroupOrElement instanceof HTMLElement) {\n        mapOrGroup = new Map({ target: mapOrGroupOrElement });\n    } else {\n        mapOrGroup = mapOrGroupOrElement;\n    }\n    if (typeof style === 'string') {\n        const styleUrl = style.startsWith('data:') ? location.href : normalizeStyleUrl(style, options.accessToken);\n        options = completeOptions(styleUrl, options);\n        promise = new Promise(function (resolve, reject) {\n            getGlStyle(style, options).then(function (glStyle) {\n                processStyle(glStyle, mapOrGroup, styleUrl, options).then(function () {\n                    resolve(mapOrGroup);\n                }).catch(reject);\n            }).catch(function (err) {\n                reject(new Error(`Could not load ${ style }: ${ err.message }`));\n            });\n        });\n    } else {\n        promise = new Promise(function (resolve, reject) {\n            processStyle(style, mapOrGroup, !options.styleUrl || options.styleUrl.startsWith('data:') ? location.href : normalizeStyleUrl(options.styleUrl, options.accessToken), options).then(function () {\n                resolve(mapOrGroup);\n            }).catch(reject);\n        });\n    }\n    return promise;\n}\n/**\n * If layerIds is not empty, applies the style specified in glStyle to the layer,\n * and adds the layer to the map.\n *\n * The layer may not yet have a source when the function is called.  If so, the style\n * is applied to the layer via a once listener on the 'change:source' event.\n *\n * @param {Layer} layer An OpenLayers layer instance.\n * @param {Array<string>} layerIds Array containing layer ids of already-processed layers.\n * @param {Object} glStyle Style as a JSON object.\n * @param {string|undefined} styleUrl The original style URL. Only required\n * when a relative path is used with the `\"sprite\"` property of the style.\n * @param {Map|LayerGroup} mapOrGroup OpenLayers Map.\n * @param {Options} options Options.\n * @return {Promise} Returns a promise that resolves after the source has\n * been set on the specified layer, and the style has been applied.\n */\nfunction finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options = {}) {\n    let minZoom = 24;\n    let maxZoom = 0;\n    const glLayers = glStyle.layers;\n    for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n        const glLayer = glLayers[i];\n        if (layerIds.indexOf(glLayer.id) !== -1) {\n            minZoom = Math.min('minzoom' in glLayer ? glLayer.minzoom : 0, minZoom);\n            maxZoom = Math.max('maxzoom' in glLayer ? glLayer.maxzoom : 24, maxZoom);\n        }\n    }\n    return new Promise(function (resolve, reject) {\n        const setStyle = function () {\n            const source = layer.getSource();\n            if (!source || source.getState() === 'error') {\n                reject(new Error('Error accessing data for source ' + layer.get('mapbox-source')));\n                return;\n            }\n            if ('getTileGrid' in source) {\n                const tileGrid = /** @type {import(\"ol/source/Tile.js\").default|import(\"ol/source/VectorTile.js\").default} */\n                source.getTileGrid();\n                if (tileGrid) {\n                    const sourceMinZoom = tileGrid.getMinZoom();\n                    if (minZoom > 0 || sourceMinZoom > 0) {\n                        layer.setMaxResolution(Math.min(defaultResolutions[minZoom], tileGrid.getResolution(sourceMinZoom)) + 1e-9);\n                    }\n                    if (maxZoom < 24) {\n                        layer.setMinResolution(defaultResolutions[maxZoom] + 1e-9);\n                    }\n                }\n            } else {\n                if (minZoom > 0) {\n                    layer.setMaxResolution(defaultResolutions[minZoom] + 1e-9);\n                }\n            }\n            if (source instanceof VectorSource || source instanceof VectorTileSource) {\n                applyStyle(layer, glStyle, layerIds, Object.assign({ styleUrl: styleUrl }, options)).then(function () {\n                    manageVisibility(layer, mapOrGroup);\n                    resolve();\n                }).catch(reject);\n            } else {\n                resolve();\n            }\n        };\n        layer.set('mapbox-layers', layerIds);\n        const layers = mapOrGroup.getLayers();\n        if (layers.getArray().indexOf(layer) === -1) {\n            layers.push(layer);\n        }\n        if (layer.getSource()) {\n            setStyle();\n        } else {\n            layer.once('change:source', setStyle);\n        }\n    });\n}\n/**\n * Get the Mapbox Layer object for the provided `layerId`.\n * @param {Map|LayerGroup} mapOrGroup Map or LayerGroup.\n * @param {string} layerId Mapbox Layer id.\n * @return {Object} Mapbox Layer object.\n */\nfunction getMapboxLayer(mapOrGroup, layerId) {\n    const style = mapOrGroup.get('mapbox-style');\n    const layerStyle = style.layers.find(function (layer) {\n        return layer.id === layerId;\n    });\n    return layerStyle;\n}\n/**\n * Add a new Mapbox Layer object to the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Mapbox Layer object.\n * @param {string} [beforeLayerId] Optional id of the Mapbox Layer before the new layer that will be added.\n * @return {Promise<void>} Resolves when the added layer is available.\n */\nfunction addMapboxLayer(mapOrGroup, mapboxLayer, beforeLayerId) {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    const mapboxLayers = glStyle.layers;\n    let spliceIndex;\n    let sourceIndex = -1;\n    if (beforeLayerId !== undefined) {\n        const beforeMapboxLayer = getMapboxLayer(mapOrGroup, beforeLayerId);\n        if (beforeMapboxLayer === undefined) {\n            throw new Error(`Layer with id \"${ beforeLayerId }\" not found.`);\n        }\n        spliceIndex = mapboxLayers.indexOf(beforeMapboxLayer);\n    } else {\n        spliceIndex = mapboxLayers.length;\n    }\n    let sourceOffset;\n    if (spliceIndex > 0 && mapboxLayers[spliceIndex - 1].source === mapboxLayer.source) {\n        sourceIndex = spliceIndex - 1;\n        sourceOffset = -1;\n    } else if (spliceIndex < mapboxLayers.length && mapboxLayers[spliceIndex].source === mapboxLayer.source) {\n        sourceIndex = spliceIndex;\n        sourceOffset = 0;\n    }\n    if (sourceIndex === -1) {\n        const {options, styleUrl} = mapOrGroup.get('mapbox-metadata');\n        const layer = setupLayer(glStyle, styleUrl, mapboxLayer, options);\n        if (beforeLayerId) {\n            const beforeLayer = getLayer(mapOrGroup, beforeLayerId);\n            const beforeLayerIndex = mapOrGroup.getLayers().getArray().indexOf(beforeLayer);\n            mapOrGroup.getLayers().insertAt(beforeLayerIndex, layer);\n        }\n        mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n        return finalizeLayer(layer, [mapboxLayer.id], glStyle, styleUrl, mapOrGroup, options);\n    }\n    if (mapboxLayers.some(layer => layer.id === mapboxLayer.id)) {\n        throw new Error(`Layer with id \"${ mapboxLayer.id }\" already exists.`);\n    }\n    const sourceLayerId = mapboxLayers[sourceIndex].id;\n    const args = styleFunctionArgs[getStyleFunctionKey(mapOrGroup.get('mapbox-style'), getLayer(mapOrGroup, sourceLayerId))];\n    mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n    if (args) {\n        const [olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage] = args;\n        if (Array.isArray(sourceOrLayers)) {\n            const layerIndex = sourceOrLayers.indexOf(sourceLayerId) + sourceOffset;\n            sourceOrLayers.splice(layerIndex, 0, mapboxLayer.id);\n        }\n        stylefunction(olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage);\n    } else {\n        getLayer(mapOrGroup, mapboxLayers[sourceIndex].id).changed();\n    }\n    return Promise.resolve();\n}\n/**\n * Update a Mapbox Layer object in the style. The map will be re-rendered with the new style.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Updated Mapbox Layer object.\n */\nfunction updateMapboxLayer(mapOrGroup, mapboxLayer) {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    const mapboxLayers = glStyle.layers;\n    const index = mapboxLayers.findIndex(function (layer) {\n        return layer.id === mapboxLayer.id;\n    });\n    if (index === -1) {\n        throw new Error(`Layer with id \"${ mapboxLayer.id }\" not found.`);\n    }\n    const oldLayer = mapboxLayers[index];\n    if (oldLayer.source !== mapboxLayer.source) {\n        throw new Error('Updated layer and previous version must use the same source.');\n    }\n    delete getFunctionCache(glStyle)[mapboxLayer.id];\n    delete getFilterCache(glStyle)[mapboxLayer.id];\n    mapboxLayers[index] = mapboxLayer;\n    const args = styleFunctionArgs[getStyleFunctionKey(mapOrGroup.get('mapbox-style'), getLayer(mapOrGroup, mapboxLayer.id))];\n    if (args) {\n        stylefunction.apply(undefined, args);\n    } else {\n        getLayer(mapOrGroup, mapboxLayer.id).changed();\n    }\n}\n/**\n * Remove a Mapbox Layer object from the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string|Object} mapboxLayerIdOrLayer Mapbox Layer id or Mapbox Layer object.\n */\nfunction removeMapboxLayer(mapOrGroup, mapboxLayerIdOrLayer) {\n    const mapboxLayerId = typeof mapboxLayerIdOrLayer === 'string' ? mapboxLayerIdOrLayer : mapboxLayerIdOrLayer.id;\n    const layer = getLayer(mapOrGroup, mapboxLayerId);\n    /** @type {Array<Object>} */\n    const layerMapboxLayers = layer.get('mapbox-layers');\n    if (layerMapboxLayers.length === 1) {\n        throw new Error('Cannot remove last Mapbox layer from an OpenLayers layer.');\n    }\n    layerMapboxLayers.splice(layerMapboxLayers.indexOf(mapboxLayerId), 1);\n    const glStyle = mapOrGroup.get('mapbox-style');\n    const layers = glStyle.layers;\n    layers.splice(layers.findIndex(layer => layer.id === mapboxLayerId), 1);\n    const args = styleFunctionArgs[getStyleFunctionKey(glStyle, layer)];\n    if (args) {\n        const [olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage] = args;\n        if (Array.isArray(sourceOrLayers)) {\n            sourceOrLayers.splice(sourceOrLayers.findIndex(layer => layer === mapboxLayerId), 1);\n        }\n        stylefunction(olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage);\n    } else {\n        getLayer(mapOrGroup, mapboxLayerId).changed();\n    }\n}\n/**\n * Get the OpenLayers layer instance that contains the provided Mapbox Style\n * `layer`. Note that multiple Mapbox Style layers are combined in a single\n * OpenLayers layer instance when they use the same Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} layerId Mapbox Style layer id.\n * @return {Layer} OpenLayers layer instance.\n */\nfunction getLayer(map, layerId) {\n    const layers = map.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const mapboxLayers = layers[i].get('mapbox-layers');\n        if (mapboxLayers && mapboxLayers.indexOf(layerId) !== -1) {\n            return layers[i];\n        }\n    }\n    return undefined;\n}\n/**\n * Get the OpenLayers layer instances for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Array<Layer>} OpenLayers layer instances.\n */\nfunction getLayers(map, sourceId) {\n    const result = [];\n    const layers = map.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        if (layers[i].get('mapbox-source') === sourceId) {\n            result.push(layers[i]);\n        }\n    }\n    return result;\n}\n/**\n * Get the OpenLayers source instance for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Source} OpenLayers source instance.\n */\nfunction getSource(map, sourceId) {\n    const layers = map.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const source = /** @type {Layer} */\n        layers[i].getSource();\n        if (layers[i].get('mapbox-source') === sourceId) {\n            return source;\n        }\n    }\n    return undefined;\n}\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n *\n * The feature state will be stored on the OpenLayers layer matching the feature identifier, in the\n * `mapbox-featurestate` property.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer OpenLayers Map or layer to set the feature\n * state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @param {Object|null} state Feature state. Set to `null` to remove the feature state.\n */\nfunction setFeatureState(mapOrLayer, feature, state) {\n    const layers = 'getLayers' in mapOrLayer ? getLayers(mapOrLayer, feature.source) : [mapOrLayer];\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const featureState = layers[i].get('mapbox-featurestate');\n        if (featureState) {\n            if (state) {\n                featureState[feature.id] = state;\n            } else {\n                delete featureState[feature.id];\n            }\n            layers[i].changed();\n        } else {\n            throw new Error(`Map or layer for source \"${ feature.source }\" not found.`);\n        }\n    }\n}\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer Map or layer to set the feature state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @return {Object|null} Feature state or `null` when no feature state is set for the given\n * feature identifier.\n */\nfunction getFeatureState(mapOrLayer, feature) {\n    const layers = 'getLayers' in mapOrLayer ? getLayers(mapOrLayer, feature.source) : [mapOrLayer];\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const featureState = layers[i].get('mapbox-featurestate');\n        if (featureState && featureState[feature.id]) {\n            return featureState[feature.id];\n        }\n    }\n    return undefined;\n}\n\n/** @typedef {import(\"ol/Map.js\").default} Map */\n/**\n * @classdesc\n * Event emitted on configuration or loading error.\n */\nclass ErrorEvent extends BaseEvent {\n    /**\n   * @param {Error} error error object.\n   */\n    constructor(error) {\n        super(EventType.ERROR);\n        /**\n     * @type {Error}\n     */\n        this.error = error;\n    }\n}\n/**\n * @typedef {Object} Options\n * @property {string} styleUrl The URL of the Mapbox style object to use for this layer.  For a\n * style created with Mapbox Studio and hosted on Mapbox, this will look like\n * 'mapbox://styles/you/your-style'.\n * @property {string} [accessToken] The access token for your Mapbox style. This has to be provided\n * for `mapbox://` style urls. For `https://` and other urls, any access key must be the last query\n * parameter of the style url.\n * @property {string} [source] If your style uses more than one source, you need to use either the\n * `source` property or the `layers` property to limit rendering to a single vector source.  The\n * `source` property corresponds to the id of a vector source in your Mapbox style.\n * @property {Array<string>} [layers] Limit rendering to the list of included layers.  All layers\n * must share the same vector source.  If your style uses more than one source, you need to use\n * either the `source` property or the `layers` property to limit rendering to a single vector\n * source.\n * @property {boolean} [declutter=true] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"ol/layer/Base.js\").BackgroundColor|false} [background] Background color for the layer.\n * If not specified, the background from the Mapbox style object will be used. Set to `false` to prevent\n * the Mapbox style's background from being used.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"ol/extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `maxResolution` will\n * match the style source's `minzoom`.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `minZoom` will match\n * the style source's `minzoom`.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"ol/render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"ol/layer/VectorTile.js\").VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"ol/Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use `map.addLayer()`.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @classdesc\n * ```js\n * import {MapboxVectorLayer} from 'ol-mapbox-style';\n * ```\n * A vector tile layer based on a Mapbox style that uses a single vector source.  Configure\n * the layer with the `styleUrl` and `accessToken` shown in Mapbox Studio's share panel.\n * If the style uses more than one source, use the `source` property to choose a single\n * vector source.  If you want to render a subset of the layers in the style, use the `layers`\n * property (all layers must share the same vector source).  See the constructor options for\n * more detail.\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new MapboxVectorLayer({\n *           styleUrl: 'mapbox://styles/mapbox/bright-v9',\n *           accessToken: 'your-mapbox-access-token-here',\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * On configuration or loading error, the layer will trigger an `'error'` event.  Listeners\n * will receive an object with an `error` property that can be used to diagnose the problem.\n *\n * **Note for users of the full build**: The `MapboxVectorLayer` requires the\n * [ol-mapbox-style](https://github.com/openlayers/ol-mapbox-style) library to be loaded as well.\n *\n * @param {Options} options Options.\n * @extends {VectorTileLayer}\n * @fires module:ol/events/Event~BaseEvent#event:error\n * @api\n */\nclass MapboxVectorLayer extends VectorTileLayer {\n    /**\n   * @param {Options} options Layer options.  At a minimum, `styleUrl` and `accessToken`\n   * must be provided.\n   */\n    constructor(options) {\n        const declutter = 'declutter' in options ? options.declutter : true;\n        const source = new VectorTileSource({\n            state: 'loading',\n            format: new MVT()\n        });\n        super({\n            source: source,\n            background: options.background,\n            declutter: declutter,\n            className: options.className,\n            opacity: options.opacity,\n            visible: options.visible,\n            zIndex: options.zIndex,\n            minResolution: options.minResolution,\n            maxResolution: options.maxResolution,\n            minZoom: options.minZoom,\n            maxZoom: options.maxZoom,\n            renderOrder: options.renderOrder,\n            renderBuffer: options.renderBuffer,\n            renderMode: options.renderMode,\n            map: options.map,\n            updateWhileAnimating: options.updateWhileAnimating,\n            updateWhileInteracting: options.updateWhileInteracting,\n            preload: options.preload,\n            useInterimTilesOnError: options.useInterimTilesOnError,\n            properties: options.properties\n        });\n        if (options.accessToken) {\n            this.accessToken = options.accessToken;\n        }\n        const url = options.styleUrl;\n        applyStyle(this, url, options.layers || options.source, { accessToken: this.accessToken }).then(() => {\n            source.setState('ready');\n        }).catch(error => {\n            this.dispatchEvent(new ErrorEvent(error));\n            const source = this.getSource();\n            source.setState('error');\n        });\n        if (this.getBackground() === undefined) {\n            applyBackground(this, options.styleUrl, { accessToken: this.accessToken });\n        }\n    }\n}\n\nexport { MapboxVectorLayer, addMapboxLayer, apply, applyBackground, applyStyle, apply as default, getFeatureState, getLayer, getLayers, getMapboxLayer, getSource, getStyleForLayer, recordStyleLayer, removeMapboxLayer, renderTransparent, setFeatureState, stylefunction, updateMapboxLayer };\n//# sourceMappingURL=index.js.map\n","import MVT from '../src/ol/format/MVT.js';\nimport TileQueue, {\n  getTilePriority as tilePriorityFunction,\n} from '../src/ol/TileQueue.js';\nimport VectorTileLayer from '../src/ol/layer/VectorTile.js';\nimport VectorTileSource from '../src/ol/source/VectorTile.js';\nimport stringify from 'json-stringify-safe';\nimport {get} from '../src/ol/proj.js';\nimport {inView} from '../src/ol/layer/Layer.js';\nimport {stylefunction} from 'ol-mapbox-style';\n\n/** @type {any} */\nconst worker = self;\n\nlet frameState, pixelRatio, rendererTransform;\nconst canvas = new OffscreenCanvas(1, 1);\n// OffscreenCanvas does not have a style, so we mock it\ncanvas.style = {};\nconst context = canvas.getContext('2d');\n\nconst sources = {\n  landcover: new VectorTileSource({\n    maxZoom: 9,\n    format: new MVT(),\n    url: 'https://api.maptiler.com/tiles/landcover/{z}/{x}/{y}.pbf?key=get_your_own_D6rA4zTHduk6KOKTXzGB',\n  }),\n  contours: new VectorTileSource({\n    minZoom: 9,\n    maxZoom: 14,\n    format: new MVT(),\n    url: 'https://api.maptiler.com/tiles/contours/{z}/{x}/{y}.pbf?key=get_your_own_D6rA4zTHduk6KOKTXzGB',\n  }),\n  maptiler_planet: new VectorTileSource({\n    format: new MVT(),\n    maxZoom: 14,\n    url: 'https://api.maptiler.com/tiles/v3/{z}/{x}/{y}.pbf?key=get_your_own_D6rA4zTHduk6KOKTXzGB',\n  }),\n};\nconst layers = [];\n\n// Font replacement so we do not need to load web fonts in the worker\nfunction getFont(font) {\n  return font[0].replace('Noto Sans', 'serif').replace('Roboto', 'sans-serif');\n}\n\nfunction loadStyles() {\n  const styleUrl =\n    'https://api.maptiler.com/maps/topo-v2/style.json?key=get_your_own_D6rA4zTHduk6KOKTXzGB';\n\n  fetch(styleUrl)\n    .then((data) => data.json())\n    .then((styleJson) => {\n      const buckets = [];\n      let currentSource;\n      styleJson.layers.forEach((layer) => {\n        if (!layer.source) {\n          return;\n        }\n        if (currentSource !== layer.source) {\n          currentSource = layer.source;\n          buckets.push({\n            source: layer.source,\n            layers: [],\n          });\n        }\n        buckets[buckets.length - 1].layers.push(layer.id);\n      });\n\n      const spriteUrl =\n        styleJson.sprite + (pixelRatio > 1 ? '@2x' : '') + '.json';\n      const spriteImageUrl =\n        styleJson.sprite + (pixelRatio > 1 ? '@2x' : '') + '.png';\n      fetch(spriteUrl)\n        .then((data) => data.json())\n        .then((spriteJson) => {\n          buckets.forEach((bucket) => {\n            const source = sources[bucket.source];\n            if (!source) {\n              return;\n            }\n            const layer = new VectorTileLayer({\n              declutter: true,\n              source,\n              minZoom: source.getTileGrid().getMinZoom(),\n            });\n            layer.getRenderer().useContainer = function (target, transform) {\n              this.containerReused = this.getLayer() !== layers[0];\n              this.canvas = canvas;\n              this.context = context;\n              this.container = {\n                firstElementChild: canvas,\n                style: {\n                  opacity: layer.getOpacity(),\n                },\n              };\n              rendererTransform = transform;\n            };\n            stylefunction(\n              layer,\n              styleJson,\n              bucket.layers,\n              undefined,\n              spriteJson,\n              spriteImageUrl,\n              getFont\n            );\n            layers.push(layer);\n          });\n          worker.postMessage({action: 'requestRender'});\n        });\n    });\n}\n\n// Minimal map-like functionality for rendering\nconst tileQueue = new TileQueue(\n  (tile, tileSourceKey, tileCenter, tileResolution) =>\n    tilePriorityFunction(\n      frameState,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    ),\n  () => worker.postMessage({action: 'requestRender'})\n);\n\nconst maxTotalLoading = 8;\nconst maxNewLoads = 2;\n\nworker.addEventListener('message', (event) => {\n  if (event.data.action === 'requestFeatures') {\n    const layersInView = layers.filter((l) =>\n      inView(l.getLayerState(), frameState.viewState)\n    );\n    const observables = layersInView.map((l) =>\n      l.getFeatures(event.data.pixel)\n    );\n    Promise.all(observables).then((res) => {\n      const features = res.flat();\n      worker.postMessage({\n        action: 'getFeatures',\n        features: JSON.parse(stringify(features.map((e) => e.getProperties()))),\n      });\n    });\n    return;\n  }\n\n  if (event.data.action !== 'render') {\n    return;\n  }\n  frameState = event.data.frameState;\n  if (!pixelRatio) {\n    pixelRatio = frameState.pixelRatio;\n    loadStyles();\n  }\n  frameState.tileQueue = tileQueue;\n  frameState.viewState.projection = get('EPSG:3857');\n  layers.forEach((layer) => {\n    if (inView(layer.getLayerState(), frameState.viewState)) {\n      const renderer = layer.getRenderer();\n      renderer.renderFrame(frameState, canvas);\n    }\n  });\n  layers.forEach(\n    (layer) => layer.getRenderer().context && layer.renderDeclutter(frameState)\n  );\n  if (tileQueue.getTilesLoading() < maxTotalLoading) {\n    tileQueue.reprioritize();\n    tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n  }\n  const imageData = canvas.transferToImageBitmap();\n  worker.postMessage(\n    {\n      action: 'rendered',\n      imageData: imageData,\n      transform: rendererTransform,\n      frameState: JSON.parse(stringify(frameState)),\n    },\n    [imageData]\n  );\n});\n"],"names":["exports","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","i","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","serializer","replacer","cycleReplacer","stack","keys","key","slice","indexOf","join","length","thisPos","this","splice","push","call","module","obj","spaces","JSON","stringify","getSerialize","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","readPackedEnd","pbf","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","len","extraLen","realloc","writePackedVarint","arr","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","prototype","destroy","readFields","readField","result","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","readDouble","b","l","p","h","Error","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","decode","subarray","readUtf8TextDecoder","str","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","min","set","finish","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","charCodeAt","writeUtf8","writeBytes","writeRawMessage","fn","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","t","r","a","n","o","f","exp","u","sqrt","max","x","_maxEntries","_minEntries","ceil","clear","children","minX","minY","maxX","maxY","leaf","height","pop","all","_all","data","search","toBBox","collides","load","insert","_build","_splitRoot","_insert","remove","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","__esModule","definition","Object","defineProperty","enumerable","get","prop","hasOwnProperty","constructor","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","disposed","dispose","disposeInternal","ascending","linearFindNearest","direction","candidate","reverseSubArray","begin","tmp","extension","Array","isArray","equals","arr1","arr2","len1","memoizeOne","lastResult","lastArgs","lastThis","called","nextArgs","arguments","object","property","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","dispatchEvent","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","hasListener","index","listen","thisArg","once","bind","originalListener","eventsKey","listenOnce","unlistenByKey","Observable","on","un","revision_","changed","getRevision","onInternal","onceInternal","ol_key","unInternal","unByKey","uidCounter_","ol_uid","ObjectEvent","oldValue","values","values_","setProperties","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","ObjectEventType","addChangeListener","removeChangeListener","silent","applyProperties","source","unset","assert","assertion","errorMessage","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","styles","createStyleFunction","setId","id","name","ua","navigator","userAgent","toLowerCase","WORKER_OFFSCREEN_CANVAS","test","devicePixelRatio","WorkerGlobalScope","OffscreenCanvas","self","Image","tmp_","passive","options","window","error","transform","multiply","transform1","transform2","a1","c1","d1","e1","f1","a2","c2","d2","e2","f2","coordinate","y","scale","compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","makeInverse","det","mat","transformStringDiv","transformString","node","document","createElement","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","dest","closestSquaredDistanceXY","dx","dy","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","getBottomLeft","getBottomRight","getTopRight","getArea","area","getHeight","getCenter","getCorner","corner","getRotatedViewport","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","applyTransform","transformFn","stops","width","xs","ys","_boundingExtentXYs","PI","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","units","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","EPSG4326Projection","cache","transforms","destination","sourceCode","destinationCode","coordinate1","coordinate2","projection","worldWidth","worldsAway","sourceExtentWidth","projectionExtent","squaredSegmentDistance","x1","y1","x2","y2","angleInDegrees","lerp","decimals","factor","round","DEFAULT_RADIUS","getDistance","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","levels","info","warn","none","level","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","add","projectionLike","replace","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","projections","forEach","addProjections","createProjection","defaultCode","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","userProjection","toUserCoordinate","fromUserCoordinate","destProjection","args","console","fromUserExtent","projections2","forwardTransform","inverseTransform","transform2D","j","anchor","anchorX","anchorY","deltaX","deltaY","k","tmpTransform","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","intersectsCoordinate","computeExtent","returnOrUpdate","rotate","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getStrideForLayout","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","setLayout","nesting","getLayoutForStride","deflateCoordinates","deflateCoordinatesArray","coordinatess","ends","jj","squaredDistance","deflateCoordinate","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","x3","y3","quantizeArray","ret","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","endss","coordinatesss","interpolatePoint","fraction","cumulativeLengths","haystack","needle","comparator","mid","cmp","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","intersectsLineString","coordinatesExtent","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRing","intersectsLinearRingArray","lineStringLength","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","getCoordinateAt","getLength","getFlatMidpoint","linearRing","twiceArea","linearRings","LinearRing","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","linearRingIsClockwise","edge","right","isClockwise","startOrientation","prevEndIndex","orientation","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","appendPoint","multiPoint","getPoint","getPoints","points","lineStrings","appendLineString","multiLineString","interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","getFlatMidpoints","midpoints","intersectsLineStringArray","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","thisLayout","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","getEndss","getFlatInteriorPoints","getInteriorPoints","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","dataProjection","defaultFeatureProjection","featureClass","supportedMediaTypes","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","feature","writeFeatures","features","writeGeometry","transformGeometryWithOptions","transformed","fromProjection","toProjection","power","styleFunction","type_","flatCoordinates_","flatMidpoints_","properties_","squaredTolerance_","stride_","simplifiedGeometry_","midpoint","enableSimplifyTransformed","layersPBFReader","layers","layer","layerPBFReader","version","featurePBFReader","readRawFeature","featureClass_","geometryName","layerName_","layerName","layers_","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","geometryType","numEnds","getGeometryType","geom","ctor","pbfLayers","pbfLayer","setLayers","DROP","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","element","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","state","getState","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","background_","background","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","array","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","cappedMaxRes","easeIn","easeOut","inAndOut","animationCallback","returnValue","setTimeout","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","position","cosAngle","sinAngle","rotX","rotY","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","createSnapToResolutions","defaultMaxResolution","degrees","defaultMinResolution","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","theta","createSnapToN","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","x0","y0","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","requestAnimationFrame","currentCenter","currentResolution","w","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","toUserExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getForViewAndSize","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","inView","layerState","Base","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","map","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","Promise","resolve","getData","isVisible","view","frameState","getMapInternal","getView","layerStatesArray","getLayerGroup","find","layerExtent","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","some","arrayLayerState","createRenderer","hasRenderer","toSize","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImage","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","getSize","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","rgb","fromString","cacheSize","g","exec","hasAlpha","parseInt","substr","startsWith","split","Number","normalize","fromStringInternal_","asArray","asColorLike","createCanvasContext2D","canvasPool","settings","canvas","shift","getContext","releaseCanvas","context","clearRect","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","measureFont","measureContext","textHeights","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","left","body","appendChild","offsetHeight","removeChild","measureAndCacheTextWidth","reduce","prev","curr","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","contextInstructions","label","executeLabelInstructions","drawImage","restore","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points_","radius_","radius1","radius2_","radius2","angle_","stroke_","stroke","size_","renderOptions_","getFill","getRadius","getRadius2","getAngle","getStroke","setFill","createHitDetectionCanvas_","image","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineCap","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","fillStyle","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","startAngle","step","angle0","radiusC","lineTo","closePath","setRadius","color_","setColor","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometry_","geometryFunction_","defaultGeometryFunction","image_","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setImage","setText","defaultStyles","createDefaultStyle","Circle","decodeFallback","src","reject","then","catch","handleLoad","unlisten","handleError","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","crossOrigin","setSize","maxCacheSize","shared","taintedTestContext","IconImage","imageState","hitDetectionImage_","crossOrigin_","imageState_","src_","tainted_","initializeImage_","isTainted_","willReadFrequently","getImageData","dispatchChangeEvent_","handleImageError_","handleImageLoad_","replaceColor_","fillRect","getSrc","HTMLImageElement","ctx","globalCompositeOperation","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","cacheKey","iconImage_","offset_","offsetOrigin_","offsetOrigin","initialOptions_","onload","imageSize","setAnchor","iconImageSize","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","names","namedType","specific","overlapsType","oneType","otherType","LiteralExpression","CallExpression","operator","newParsingContext","variables","Set","parse","encoded","typeHint","parser","parsers","parseCallExpression","item","Ops","Get","Var","GeometryType","Any","All","Not","Resolution","Zoom","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Case","In","Color","createParser","withArgsCount","arg","withNoArgs","parseArgsOfType","narrowArgsType","parsedArgs","outputType","withEvenArgs","argsCount","inputType","fallback","expectedInputType","interpolationType","interpolation","operation","argCount","minArgs","maxArgs","argType","expression","gotType","expectedType","sameType","returnType","argValidators","actualType","buildExpression","expected","actual","compileExpression","compileAssertionExpression","nameExpression","compileAccessorExpression","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileMatchExpression","always","rulesToStyleFunction","rules","evaluator","compiledRules","rule","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","parsingContext","evaluators","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","optionalDeclutterMode","icon","buildIcon","pointsName","requireNumber","shape","buildShape","evaluateRadius","circle","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","colorLikeEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSizeLike","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","renderDeclutter","declutterTree","setRenderOrder","renderOrder","toStyleLike","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","endGeometry","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","sharedData","origin","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","drawFlatCoordinatess_","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryWidths","beg","keep","saveTextStates_","p0","p1","p2","p3","flatOffset","oo","cc","chunk","chunkBegin","range","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","toString","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","substring","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","widths","heights","lineWidths","baseStyle","currentWidth","currentHeight","getTextDimensions","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","beginPath","moveTo","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","pixelCoordinates","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","execute","executeHitDetection","ORDER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","forEachFeatureAtCoordinate","hitTolerance","declutteredFeatures","contextSize","newContext","indexes","maxDistanceSq","distances","distanceSq","distance","pixelIndex","getPixelIndexArray","imageData","idx","zs","executor","builderTypes","ready","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","matches","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","inversePixelTransform","pixelContext","container","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","col","row","err","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","interimTile","transition_","transition","transitionStarts_","release","setState","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","time","inTransition","endTransition","tileLoadFunction","unlisten_","tileLoadFunction_","unlistenImage_","getBlankImage","naturalWidth","naturalHeight","loadHandler","errorHandler","listening","decoding","loaded","listenerKeys","listenImage","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","triangulation","sources","gutter","renderEdges","imageSmoothingEnabled","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","steps","ud","vd","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","leftToLoad","sourceListenKey","unlistenSources_","TileRange","contains","containsTileRange","extend","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpTileRange_","isDrawableTile","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getTile","getPreload","pixelToCoordinateTransform","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","tileSize","tileResolution","getGutterForProjection","layerIndex","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","getInterpolate","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","usedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","tileSourceKey","expireCache","postRenderFunctions","preload","tileCallback","wantedTiles","tileQueue","tileCount","getTileCoordCenter","useTile","updateCacheSize","userTransform","context_","transform_","transformRotation_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simpleGeometry","transformGeom2D","setTransform","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","declutterBuilderGroup","imageBuilderGroup","imageReplay","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","getSquaredTolerance","getTolerance","renderFeature","loading","renderGeometry","renderFeatureInternal","getGeometries","IMAGE_REPLAYS","VECTOR_REPLAYS","boundHandleStyleImageChange_","handleStyleImageChange_","renderedLayerRevision_","renderedPixelToCoordinateTransform_","renderedRotation_","tmpTransform_","prepareTile","updateExecutorGroup_","tileImageNeedsRender_","viewHints","hifi","wantedResolution","getRenderMode","renderTileImage_","executorGroups","hasContext","layerRevision","builderState","getReplayState","dirty","renderedRenderOrder","getTileGrid","tileExtent","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","declutterExecutorGroups","tt","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","getOverlaps","lastIndexOf","executorGroup","getTileCoordForCoordAndResolution","getWrapX","loadingSourceTiles","tilePixel","accumulator","concat","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","resultFeatures","hitDetect","getTileRenderTransform","worldOffset","renderMode","replayTypes","group","replayState","renderedTileResolution","renderedTileRevision","renderPixelRatio","renderScale","pixelScale","BaseVector","renderMode_","setPreload","setUseInterimTilesOnError","TileProperty","format","format_","features_","loader_","url_","getFormat","onLoad","setFeatures","onError","setLoader","loader","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","fromKey","pruneExceptNewestZ","tmpTileCoord","strict","compare","every","currentVal","res","isSorted","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","getFullTileRange","opt_direction","fullTileRanges","adaptAttributions","attributionLike","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","interpolate_","viewResolver","viewRejector","viewPromise_","getAttributionsCollapsible","refresh","setAttributions","getForProjection","extentFromProjection","resolutionsFromExtent","createForExtent","createForProjection","half","TileSourceEvent","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileCoordForTileUrlFunction","withinExtentAndZ","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","charCode","stop","urlTileCoord","replayState_","errorTileKeys","renderedTileZ","withCredentials","loadFeaturesXhr","success","failure","xhr","XMLHttpRequest","open","responseType","status","responseText","responseXML","DOMParser","parseFromString","onerror","send","xyzOptions","gridOptions","sourceTileCache","tileClass","tileGrids_","getFeaturesInExtent","tileFeatures","usedSourceTiles","getCacheKeyForTileKey","sourceZ","tileUrl","sourceTileState","listenChange","sourceTileKey","coordKey","newTile","getDefaultExportFromCjs","parseCSSColor_1","kCSSColorTable","clamp_css_byte","clamp_css_float","parse_css_int","parseFloat","parse_css_float","css_hue_to_rgb","m1","m2","parseCSSColor","css_str","iv","ep","fname","params","rgba","toArray","toArray01","toArray01PremultipliedAlpha","transparent","Color$1","convertLiteral","convertFunction","parameters","propertySpec","default","convertIdentityFunction","zoomAndFeatureDependent","featureDependent","zoomDependent","tokens","convertTokenString","featureFunctionParameters","featureFunctionStops","zoomStops","functionType","getFunctionType","getInterpolateOperator","appendStopPair","convertPropertyFunction","fixupDegenerateStepCurve","convertZoomAndPropertyFunction","isStep","base","convertZoomFunction","colorSpace","getFallback","defaultValue","curve","interpolated","re","literal","lastIndex","ParsingError","message","ParsingError$1","Scope","parent","bindings","has","Scope$1","NullType","kind","ObjectType","ValueType","CollatorType","FormattedType","ResolvedImageType","array$1","itemType","N","toString$1","valueMemberTypes","checkSubtype","memberType","isValidType","provided","allowedTypes","isValidNativeType","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","lhs","rhs","resolvedLocale","resolvedOptions","FormattedSection","fontStack","textColor","Formatted","sections","unformatted","section","factory","serialize","serialized","ResolvedImage","validateRGBA","isValue","mixed","typeOf","Literal","evaluate","eachChild","outputDefined","Literal$1","RuntimeError$1","types$2","string","number","boolean","Assertion","parsed","Assertion$1","FormatExpression","firstArg","nextTokenMayBeObject","lastExpression","content","evaluatedContent","ImageExpression","evaluatedImageName","availableImages","types$1","Coercion","parseColor","child","Coercion$1","geometryTypes","EvaluationContext$1","globals","featureState","formattedSection","_parseColorCache","canonical","featureTileCoord","featureDistanceData","canonicalID","distanceFromCenter","dX","dY","bearing","cached","CompoundExpression","_evaluate","definitions","availableOverloads","overloads","signature","signatureContext","ParsingContext$1","registry","path","scope","argParseFailed","errors","signatures","stringifySignature","actualTypes","register","CompoundExpression$1","CollatorExpression","updateBBox","bbox","boxWithinBox","bbox1","bbox2","getTileCoordinates","lat","tilesAtZoom","onBoundary","rayIntersect","pointWithinPolygon","rings","inside","ring","len2","pointWithinPolygons","twoSided","q1","q2","det1","det2","lineIntersectLine","vectorP","vectorQ","lineIntersectPolygon","lineStringWithinPolygon","lineStringWithinPolygons","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","getTilePoints","pointBBox","shifts","tilePoints","getTileLines","lineBBox","tileLines","tileLine","resetBBox","Within","geojson","tilePolygon","tilePolygons","pointsWithinPolygons","linesWithinPolygons","Within$1","isFeatureConstant","isStateConstant","isGlobalPropertyConstant","boundExpression","Var$1","ParsingContext","expr","_parse","annotate","typeAnnotation","Expr","isConstant","ec","isTypeAnnotation","childrenConstant","findStopLessThanOrEqualTo","currentValue","nextValue","lowerIndex","upperIndex","currentIndex","Step","labels","outputs","labelKey","valueKey","stopCount","out","Step$1","unitbezier","UnitBezier","p1x","p1y","p2x","p2y","cx","bx","ax","cy","by","ay","sampleCurveX","sampleCurveY","sampleCurveDerivativeX","solveCurveX","epsilon","t0","t1","t2","solve","UnitBezier$1","freeze","__proto__","from","to","Xn","Yn","Zn","t3","deg2rad$1","rad2deg","xyz2lab","lab2xyz","xyz2rgb","rgb2xyz","rgbToLab","rgbColor","labToRgb","labColor","interpolateHue","lab","forward","hcl","hclColor","interpolationFactor","lower","upper","exponentialInterpolation","controlPoints","rest","outputLower","outputUpper","lowerValue","upperValue","difference","Interpolate$1","Coalesce","needsAnnotation","firstImage","Coalesce$1","Let","binding","Let$1","At","At$1","In$1","IndexOf","fromIndex","IndexOf$1","cases","otherwise","labelContext","MAX_SAFE_INTEGER","sortedLabels","groupedByOutput","outputLookup","outputIndex","coerceLabel","Match$1","branches","_","Case$1","Slice","beginIndex","endIndex","Slice$1","isComparableType","eqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","Comparison","hasUntypedArgument","lt","Equals","NotEquals","LessThanOrEqual","GreaterThanOrEqual","NumberFormat","currency","unit","minFractionDigits","maxFractionDigits","minimumFractionDigits","maximumFractionDigits","Length","expressions","varargs","pitch","heatmapDensity","lineProgress","skyRadialProgress","accumulated","E","LN10","asin","isSupportedScript","toUpperCase","isFunction","StyleExpression","_warningHistory","_evaluator","_defaultValue","spec","getDefaultValue","_enumValues","evaluateWithoutErrorHandling","createExpression","types","enum","formatted","resolvedImage","getExpectedType","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","createPropertyExpression","isFeatureConstant$1","supportsPropertyExpression","isZoomConstant","supportsZoomExpression","zoomCurve","findZoomCurve","supportsInterpolation","childResult","deepUnbundle","unbundledValue","valueOf","unbundle","isExpressionFilter","createFilter","layerType","needGeometry","needFeature","convertFilter","filterExp","staticFilter","isDynamicFilter","unionDynamicBranches","collapseDynamicBooleanExpressions","extractStaticFilter","filterSpec","compiledStaticFilter","filterFunc","globalProperties","dynamicFilterFunc","compiledDynamicFilter","dynamicFilter","geometryNeeded","collapsed","dynamicConditionExpressions","collapsedExpression","subExpression","isBranchingDynamically","filters","convertComparisonOp","convertNegation","convertInOp","convertHasOp","refProperties","deref","derefLayers","create","ref","fontWeights","thin","hairline","light","book","regular","normal","plain","roman","standard","medium","bold","heavy","fat","poster","sp","italicRE","fontCache","mb2css","cssData","fontFamilies","maybeWeight","previousPart","functionCacheByStyleId","filterCacheByStyleId","styleId","getStyleId","glStyle","getStyleFunctionKey","olLayer","getFunctionCache","functionCache","getFilterCache","filterCache","deg2rad","defaultResolutions","createCanvas","drawIconHalo","spriteImage","spriteImageData","haloWidth","haloColor","imageCanvas","imageContext","smoothstep","drawSDF","gamma","putImageData","hairSpacePool","applyLetterSpacing","letterSpacing","textWithLetterSpacing","lines","joinSpaceString","ll","getMeasureContext","measureCache","wrapText","em","hardLines","wrappedText","words","maxWidth","word","testLine","prevWidth","nextWidth","next","lineWords","lastWord","expressionData","rawExpression","compiledExpression","emptyObj$1","zoomObj","renderFeatureCoordinates","getValue","layoutOrPaint","layerId","functions","isExpr","getIconDeclutterMode","evaluateFilter","renderTransparentEnabled","colorWithOpacity","templateRegEx","fromTemplate","recordLayer","styleFunctionArgs","stylefunction","sourceOrLayers","spriteData","spriteImageUrl","getFonts","spriteImageSize","spriteImageUnSDFed","worker","postMessage","action","allLayers","layersBySourceLayer","mapboxLayers","iconImageCache","patternCache","mapboxSource","sourceLayer","textHalo","onlyLayer","featureBelongsToLayer","stylesLength","layerData","paint","visibility","minzoom","maxzoom","strokeColor","fillIcon","icon_cache_key","pattern","createPattern","iconImg","skipLabel","textLineHeight","textSize","maxTextWidth","hasImage","placementAngle","styleGeom","imageElement","iconRotationAlignment","iconSize","iconColor","iconCacheKey","iconOptions","sdf","circleRadius","circleStrokeColor","circleColor","circleStrokeWidth","cache_key","fontArray","metadata","textField","chunkFont","trim","textTransform","wrappedLabel","textAnchor","symbolSpacing","textHaloWidth","textOffset","textTranslate","vOffset","hOffset","textRotationAlignment","textJustify","halfTextSize","textPadding","rendererTransform","landcover","contours","maptiler_planet","tileCenter","observables","fetch","json","styleJson","buckets","currentSource","spriteUrl","sprite","spriteJson","bucket","VectorTile","transferToImageBitmap"],"sourceRoot":""}