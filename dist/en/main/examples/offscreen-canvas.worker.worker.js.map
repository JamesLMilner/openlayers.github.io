{"version":3,"file":"offscreen-canvas.worker.worker.js","mappings":";;AACAA,EAAQC,KAAO,SAAUC,EAAQC,EAAQC,EAAMC,EAAMC,GACnD,IAAIC,EAAGC,EACHC,EAAiB,EAATH,EAAcD,EAAO,EAC7BK,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,GAAS,EACTC,EAAIT,EAAQE,EAAS,EAAK,EAC1BQ,EAAIV,GAAQ,EAAI,EAChBW,EAAIb,EAAOC,EAASU,GAOxB,IALAA,GAAKC,EAELP,EAAIQ,GAAM,IAAOH,GAAU,EAC3BG,KAAQH,EACRA,GAASH,EACFG,EAAQ,EAAGL,EAAS,IAAJA,EAAWL,EAAOC,EAASU,GAAIA,GAAKC,EAAGF,GAAS,GAKvE,IAHAJ,EAAID,GAAM,IAAOK,GAAU,EAC3BL,KAAQK,EACRA,GAASP,EACFO,EAAQ,EAAGJ,EAAS,IAAJA,EAAWN,EAAOC,EAASU,GAAIA,GAAKC,EAAGF,GAAS,GAEvE,GAAU,IAANL,EACFA,EAAI,EAAII,MACH,IAAIJ,IAAMG,EACf,OAAOF,EAAIQ,IAAsBC,KAAdF,GAAK,EAAI,GAE5BP,GAAQU,KAAKC,IAAI,EAAGd,GACpBE,GAAQI,CACV,CACA,OAAQI,GAAK,EAAI,GAAKP,EAAIU,KAAKC,IAAI,EAAGZ,EAAIF,EAC5C,EAEAL,EAAQoB,MAAQ,SAAUlB,EAAQmB,EAAOlB,EAAQC,EAAMC,EAAMC,GAC3D,IAAIC,EAAGC,EAAGc,EACNb,EAAiB,EAATH,EAAcD,EAAO,EAC7BK,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBa,EAAe,KAATlB,EAAca,KAAKC,IAAI,GAAI,IAAMD,KAAKC,IAAI,GAAI,IAAM,EAC1DN,EAAIT,EAAO,EAAKE,EAAS,EACzBQ,EAAIV,EAAO,GAAK,EAChBW,EAAIM,EAAQ,GAAgB,IAAVA,GAAe,EAAIA,EAAQ,EAAK,EAAI,EAmC1D,IAjCAA,EAAQH,KAAKM,IAAIH,GAEbI,MAAMJ,IAAUA,IAAUJ,KAC5BT,EAAIiB,MAAMJ,GAAS,EAAI,EACvBd,EAAIG,IAEJH,EAAIW,KAAKQ,MAAMR,KAAKS,IAAIN,GAASH,KAAKU,KAClCP,GAASC,EAAIJ,KAAKC,IAAI,GAAIZ,IAAM,IAClCA,IACAe,GAAK,IAGLD,GADEd,EAAII,GAAS,EACNY,EAAKD,EAELC,EAAKL,KAAKC,IAAI,EAAG,EAAIR,IAEpBW,GAAK,IACff,IACAe,GAAK,GAGHf,EAAII,GAASD,GACfF,EAAI,EACJD,EAAIG,GACKH,EAAII,GAAS,GACtBH,GAAMa,EAAQC,EAAK,GAAKJ,KAAKC,IAAI,EAAGd,GACpCE,GAAQI,IAERH,EAAIa,EAAQH,KAAKC,IAAI,EAAGR,EAAQ,GAAKO,KAAKC,IAAI,EAAGd,GACjDE,EAAI,IAIDF,GAAQ,EAAGH,EAAOC,EAASU,GAAS,IAAJL,EAAUK,GAAKC,EAAGN,GAAK,IAAKH,GAAQ,GAI3E,IAFAE,EAAKA,GAAKF,EAAQG,EAClBC,GAAQJ,EACDI,EAAO,EAAGP,EAAOC,EAASU,GAAS,IAAJN,EAAUM,GAAKC,EAAGP,GAAK,IAAKE,GAAQ,GAE1EP,EAAOC,EAASU,EAAIC,IAAU,IAAJC,CAC5B,C,oBC7EA,SAASc,EAAWC,EAAUC,GAC5B,IAAIC,EAAQ,GAAIC,EAAO,GAOvB,OALqB,MAAjBF,IAAuBA,EAAgB,SAASG,EAAKb,GACvD,OAAIW,EAAM,KAAOX,EAAc,eACxB,eAAiBY,EAAKE,MAAM,EAAGH,EAAMI,QAAQf,IAAQgB,KAAK,KAAO,GAC1E,GAEO,SAASH,EAAKb,GACnB,GAAIW,EAAMM,OAAS,EAAG,CACpB,IAAIC,EAAUP,EAAMI,QAAQI,OAC3BD,EAAUP,EAAMS,OAAOF,EAAU,GAAKP,EAAMU,KAAKF,OACjDD,EAAUN,EAAKQ,OAAOF,EAAStB,IAAUiB,GAAOD,EAAKS,KAAKR,IACtDF,EAAMI,QAAQf,KAAQA,EAAQU,EAAcY,KAAKH,KAAMN,EAAKb,GACnE,MACKW,EAAMU,KAAKrB,GAEhB,OAAmB,MAAZS,EAAmBT,EAAQS,EAASa,KAAKH,KAAMN,EAAKb,EAC7D,CACF,EA1BUuB,EAAO5C,QAGjB,SAAmB6C,EAAKf,EAAUgB,EAAQf,GACxC,OAAOgB,KAAKC,UAAUH,EAAKhB,EAAWC,EAAUC,GAAgBe,EAClE,GAJQG,aAAepB,C,mCCCvBe,EAAO5C,QAAUkD,EAEjB,IAAIC,EAAU,EAAQ,KAEtB,SAASD,EAAIE,GACTZ,KAAKY,IAAMC,YAAYC,QAAUD,YAAYC,OAAOF,GAAOA,EAAM,IAAIG,WAAWH,GAAO,GACvFZ,KAAKgB,IAAM,EACXhB,KAAKiB,KAAO,EACZjB,KAAKF,OAASE,KAAKY,IAAId,MAC3B,CAEAY,EAAIQ,OAAU,EACdR,EAAIS,QAAU,EACdT,EAAIU,MAAU,EACdV,EAAIW,QAAU,EAEd,IAAIC,EAAgB,WAChBC,EAAiB,EAAID,EAKrBE,EAAyC,oBAAhBC,YAA8B,KAAO,IAAIA,YAAY,QAwYlF,SAASC,EAAcC,GACnB,OAAOA,EAAIV,OAASP,EAAIU,MACpBO,EAAIC,aAAeD,EAAIX,IAAMW,EAAIX,IAAM,CAC/C,CAEA,SAASa,EAAMC,EAAKC,EAAMC,GACtB,OAAIA,EACc,WAAPD,GAAsBD,IAAQ,GAGlB,YAAdC,IAAS,IAAqBD,IAAQ,EACnD,CAiDA,SAASG,EAAuBC,EAAUC,EAAKR,GAC3C,IAAIS,EACAD,GAAO,MAAS,EAChBA,GAAO,QAAW,EAClBA,GAAO,UAAY,EAAIzD,KAAKQ,MAAMR,KAAKS,IAAIgD,IAAmB,EAAXzD,KAAKU,MAG5DuC,EAAIU,QAAQD,GACZ,IAAK,IAAI/D,EAAIsD,EAAIX,IAAM,EAAG3C,GAAK6D,EAAU7D,IAAKsD,EAAIf,IAAIvC,EAAI+D,GAAYT,EAAIf,IAAIvC,EAClF,CAEA,SAASiE,EAAkBC,EAAKZ,GAAS,IAAK,IAAItD,EAAI,EAAGA,EAAIkE,EAAIzC,OAAQzB,IAAKsD,EAAIa,YAAYD,EAAIlE,GAAO,CACzG,SAASoE,EAAmBF,EAAKZ,GAAQ,IAAK,IAAItD,EAAI,EAAGA,EAAIkE,EAAIzC,OAAQzB,IAAKsD,EAAIe,aAAaH,EAAIlE,GAAM,CACzG,SAASsE,EAAiBJ,EAAKZ,GAAU,IAAK,IAAItD,EAAI,EAAGA,EAAIkE,EAAIzC,OAAQzB,IAAKsD,EAAIiB,WAAWL,EAAIlE,GAAQ,CACzG,SAASwE,EAAkBN,EAAKZ,GAAS,IAAK,IAAItD,EAAI,EAAGA,EAAIkE,EAAIzC,OAAQzB,IAAKsD,EAAImB,YAAYP,EAAIlE,GAAO,CACzG,SAAS0E,EAAmBR,EAAKZ,GAAQ,IAAK,IAAItD,EAAI,EAAGA,EAAIkE,EAAIzC,OAAQzB,IAAKsD,EAAIqB,aAAaT,EAAIlE,GAAM,CACzG,SAAS4E,EAAmBV,EAAKZ,GAAQ,IAAK,IAAItD,EAAI,EAAGA,EAAIkE,EAAIzC,OAAQzB,IAAKsD,EAAIuB,aAAaX,EAAIlE,GAAM,CACzG,SAAS8E,EAAoBZ,EAAKZ,GAAO,IAAK,IAAItD,EAAI,EAAGA,EAAIkE,EAAIzC,OAAQzB,IAAKsD,EAAIyB,cAAcb,EAAIlE,GAAK,CACzG,SAASgF,EAAmBd,EAAKZ,GAAQ,IAAK,IAAItD,EAAI,EAAGA,EAAIkE,EAAIzC,OAAQzB,IAAKsD,EAAI2B,aAAaf,EAAIlE,GAAM,CACzG,SAASkF,EAAoBhB,EAAKZ,GAAO,IAAK,IAAItD,EAAI,EAAGA,EAAIkE,EAAIzC,OAAQzB,IAAKsD,EAAI6B,cAAcjB,EAAIlE,GAAK,CAIzG,SAASoF,EAAW7C,EAAKI,GACrB,OAASJ,EAAII,GACRJ,EAAII,EAAM,IAAM,EAChBJ,EAAII,EAAM,IAAM,IACD,SAAfJ,EAAII,EAAM,EACnB,CAEA,SAAS0C,EAAW9C,EAAK+C,EAAK3C,GAC1BJ,EAAII,GAAO2C,EACX/C,EAAII,EAAM,GAAM2C,IAAQ,EACxB/C,EAAII,EAAM,GAAM2C,IAAQ,GACxB/C,EAAII,EAAM,GAAM2C,IAAQ,EAC5B,CAEA,SAASC,EAAUhD,EAAKI,GACpB,OAASJ,EAAII,GACRJ,EAAII,EAAM,IAAM,EAChBJ,EAAII,EAAM,IAAM,KAChBJ,EAAII,EAAM,IAAM,GACzB,CA5eAN,EAAImD,UAAY,CAEZC,QAAS,WACL9D,KAAKY,IAAM,IACf,EAIAmD,WAAY,SAASC,EAAWC,EAAQC,GAGpC,IAFAA,EAAMA,GAAOlE,KAAKF,OAEXE,KAAKgB,IAAMkD,GAAK,CACnB,IAAIP,EAAM3D,KAAK4B,aACXuC,EAAMR,GAAO,EACbzB,EAAWlC,KAAKgB,IAEpBhB,KAAKiB,KAAa,EAAN0C,EACZK,EAAUG,EAAKF,EAAQjE,MAEnBA,KAAKgB,MAAQkB,GAAUlC,KAAKoE,KAAKT,EACzC,CACA,OAAOM,CACX,EAEAI,YAAa,SAASL,EAAWC,GAC7B,OAAOjE,KAAK+D,WAAWC,EAAWC,EAAQjE,KAAK4B,aAAe5B,KAAKgB,IACvE,EAEAsD,YAAa,WACT,IAAIX,EAAMF,EAAWzD,KAAKY,IAAKZ,KAAKgB,KAEpC,OADAhB,KAAKgB,KAAO,EACL2C,CACX,EAEAY,aAAc,WACV,IAAIZ,EAAMC,EAAU5D,KAAKY,IAAKZ,KAAKgB,KAEnC,OADAhB,KAAKgB,KAAO,EACL2C,CACX,EAIAa,YAAa,WACT,IAAIb,EAAMF,EAAWzD,KAAKY,IAAKZ,KAAKgB,KAAOyC,EAAWzD,KAAKY,IAAKZ,KAAKgB,IAAM,GAAKM,EAEhF,OADAtB,KAAKgB,KAAO,EACL2C,CACX,EAEAc,aAAc,WACV,IAAId,EAAMF,EAAWzD,KAAKY,IAAKZ,KAAKgB,KAAO4C,EAAU5D,KAAKY,IAAKZ,KAAKgB,IAAM,GAAKM,EAE/E,OADAtB,KAAKgB,KAAO,EACL2C,CACX,EAEAe,UAAW,WACP,IAAIf,EAAMhD,EAAQlD,KAAKuC,KAAKY,IAAKZ,KAAKgB,KAAK,EAAM,GAAI,GAErD,OADAhB,KAAKgB,KAAO,EACL2C,CACX,EAEAgB,WAAY,WACR,IAAIhB,EAAMhD,EAAQlD,KAAKuC,KAAKY,IAAKZ,KAAKgB,KAAK,EAAM,GAAI,GAErD,OADAhB,KAAKgB,KAAO,EACL2C,CACX,EAEA/B,WAAY,SAASI,GACjB,IACI2B,EAAKiB,EADLhE,EAAMZ,KAAKY,IAG+B,OAAzB+C,EAAY,KAAjCiB,EAAIhE,EAAIZ,KAAKgB,QAAqC4D,EAAI,IAAajB,GAC9CA,IAAY,KAAjCiB,EAAIhE,EAAIZ,KAAKgB,UAA6B,EAAQ4D,EAAI,IAAajB,GAC9CA,IAAY,KAAjCiB,EAAIhE,EAAIZ,KAAKgB,UAA6B,GAAQ4D,EAAI,IAAajB,GAC9CA,IAAY,KAAjCiB,EAAIhE,EAAIZ,KAAKgB,UAA6B,GAAQ4D,EAAI,IAAajB,EA+S3E,SAA6BkB,EAAGtG,EAAGuG,GAC/B,IACIC,EAAGH,EADHhE,EAAMkE,EAAElE,IAG6B,GAAzCgE,EAAIhE,EAAIkE,EAAE9D,OAAQ+D,GAAU,IAAJH,IAAa,EAAQA,EAAI,IAAM,OAAO/C,EAAMgD,EAAGE,EAAGxG,GACjC,GAAzCqG,EAAIhE,EAAIkE,EAAE9D,OAAQ+D,IAAU,IAAJH,IAAa,EAAQA,EAAI,IAAM,OAAO/C,EAAMgD,EAAGE,EAAGxG,GACjC,GAAzCqG,EAAIhE,EAAIkE,EAAE9D,OAAQ+D,IAAU,IAAJH,IAAa,GAAQA,EAAI,IAAM,OAAO/C,EAAMgD,EAAGE,EAAGxG,GACjC,GAAzCqG,EAAIhE,EAAIkE,EAAE9D,OAAQ+D,IAAU,IAAJH,IAAa,GAAQA,EAAI,IAAM,OAAO/C,EAAMgD,EAAGE,EAAGxG,GACjC,GAAzCqG,EAAIhE,EAAIkE,EAAE9D,OAAQ+D,IAAU,IAAJH,IAAa,GAAQA,EAAI,IAAM,OAAO/C,EAAMgD,EAAGE,EAAGxG,GACjC,GAAzCqG,EAAIhE,EAAIkE,EAAE9D,OAAQ+D,IAAU,EAAJH,IAAa,GAAQA,EAAI,IAAM,OAAO/C,EAAMgD,EAAGE,EAAGxG,GAE1E,MAAM,IAAIyG,MAAM,yCACpB,CAxTeC,CAFctB,IAAY,IAAjCiB,EAAIhE,EAAIZ,KAAKgB,QAA6B,GAEVgB,EAAUhC,QAC9C,EAEAkF,aAAc,WACV,OAAOlF,KAAK4B,YAAW,EAC3B,EAEAuD,YAAa,WACT,IAAIC,EAAMpF,KAAK4B,aACf,OAAOwD,EAAM,GAAM,GAAKA,EAAM,IAAM,EAAIA,EAAM,CAClD,EAEAC,YAAa,WACT,OAAOC,QAAQtF,KAAK4B,aACxB,EAEA2D,WAAY,WACR,IAAIrB,EAAMlE,KAAK4B,aAAe5B,KAAKgB,IAC/BA,EAAMhB,KAAKgB,IAGf,OAFAhB,KAAKgB,IAAMkD,EAEPA,EAAMlD,GApGY,IAoGsBQ,EA+cpD,SAA6BZ,EAAKI,EAAKkD,GACnC,OAAO1C,EAAgBgE,OAAO5E,EAAI6E,SAASzE,EAAKkD,GACpD,CA/cmBwB,CAAoB1F,KAAKY,IAAKI,EAAKkD,GA2YtD,SAAkBtD,EAAKI,EAAKkD,GACxB,IAAIyB,EAAM,GACNtH,EAAI2C,EAER,KAAO3C,EAAI6F,GAAK,CACZ,IASI0B,EAAIC,EAAIC,EATRC,EAAKnF,EAAIvC,GACTS,EAAI,KACJkH,EACAD,EAAK,IAAO,EACZA,EAAK,IAAO,EACZA,EAAK,IAAO,EAAI,EAEpB,GAAI1H,EAAI2H,EAAmB9B,EAAK,MAIP,IAArB8B,EACID,EAAK,MACLjH,EAAIiH,GAEoB,IAArBC,EAEa,MAAV,KADVJ,EAAKhF,EAAIvC,EAAI,OAETS,GAAU,GAALiH,IAAc,EAAY,GAALH,IACjB,MACL9G,EAAI,MAGgB,IAArBkH,GACPJ,EAAKhF,EAAIvC,EAAI,GACbwH,EAAKjF,EAAIvC,EAAI,GACO,MAAV,IAALuH,IAAuC,MAAV,IAALC,MACzB/G,GAAU,GAALiH,IAAa,IAAY,GAALH,IAAc,EAAY,GAALC,IACrC,MAAU/G,GAAK,OAAUA,GAAK,SACnCA,EAAI,OAGgB,IAArBkH,IACPJ,EAAKhF,EAAIvC,EAAI,GACbwH,EAAKjF,EAAIvC,EAAI,GACbyH,EAAKlF,EAAIvC,EAAI,GACO,MAAV,IAALuH,IAAuC,MAAV,IAALC,IAAuC,MAAV,IAALC,MACjDhH,GAAU,GAALiH,IAAa,IAAa,GAALH,IAAc,IAAY,GAALC,IAAc,EAAY,GAALC,IAC3D,OAAUhH,GAAK,WACpBA,EAAI,OAKN,OAANA,GACAA,EAAI,MACJkH,EAAmB,GAEZlH,EAAI,QACXA,GAAK,MACL6G,GAAOM,OAAOC,aAAapH,IAAM,GAAK,KAAQ,OAC9CA,EAAI,MAAa,KAAJA,GAGjB6G,GAAOM,OAAOC,aAAapH,GAC3BT,GAAK2H,CACT,CAEA,OAAOL,CACX,CAxceQ,CAASnG,KAAKY,IAAKI,EAAKkD,EACnC,EAEAkC,UAAW,WACP,IAAIlC,EAAMlE,KAAK4B,aAAe5B,KAAKgB,IAC/BtD,EAASsC,KAAKY,IAAI6E,SAASzF,KAAKgB,IAAKkD,GAEzC,OADAlE,KAAKgB,IAAMkD,EACJxG,CACX,EAIA2I,iBAAkB,SAAS9D,EAAKP,GAC5B,GAAIhC,KAAKiB,OAASP,EAAIU,MAAO,OAAOmB,EAAIrC,KAAKF,KAAK4B,WAAWI,IAC7D,IAAIkC,EAAMxC,EAAc1B,MAExB,IADAuC,EAAMA,GAAO,GACNvC,KAAKgB,IAAMkD,GAAK3B,EAAIrC,KAAKF,KAAK4B,WAAWI,IAChD,OAAOO,CACX,EACA+D,kBAAmB,SAAS/D,GACxB,GAAIvC,KAAKiB,OAASP,EAAIU,MAAO,OAAOmB,EAAIrC,KAAKF,KAAKmF,eAClD,IAAIjB,EAAMxC,EAAc1B,MAExB,IADAuC,EAAMA,GAAO,GACNvC,KAAKgB,IAAMkD,GAAK3B,EAAIrC,KAAKF,KAAKmF,eACrC,OAAO5C,CACX,EACAgE,kBAAmB,SAAShE,GACxB,GAAIvC,KAAKiB,OAASP,EAAIU,MAAO,OAAOmB,EAAIrC,KAAKF,KAAKqF,eAClD,IAAInB,EAAMxC,EAAc1B,MAExB,IADAuC,EAAMA,GAAO,GACNvC,KAAKgB,IAAMkD,GAAK3B,EAAIrC,KAAKF,KAAKqF,eACrC,OAAO9C,CACX,EACAiE,gBAAiB,SAASjE,GACtB,GAAIvC,KAAKiB,OAASP,EAAIU,MAAO,OAAOmB,EAAIrC,KAAKF,KAAK0E,aAClD,IAAIR,EAAMxC,EAAc1B,MAExB,IADAuC,EAAMA,GAAO,GACNvC,KAAKgB,IAAMkD,GAAK3B,EAAIrC,KAAKF,KAAK0E,aACrC,OAAOnC,CACX,EACAkE,iBAAkB,SAASlE,GACvB,GAAIvC,KAAKiB,OAASP,EAAIU,MAAO,OAAOmB,EAAIrC,KAAKF,KAAK2E,cAClD,IAAIT,EAAMxC,EAAc1B,MAExB,IADAuC,EAAMA,GAAO,GACNvC,KAAKgB,IAAMkD,GAAK3B,EAAIrC,KAAKF,KAAK2E,cACrC,OAAOpC,CACX,EACAmE,kBAAmB,SAASnE,GACxB,GAAIvC,KAAKiB,OAASP,EAAIU,MAAO,OAAOmB,EAAIrC,KAAKF,KAAKsE,eAClD,IAAIJ,EAAMxC,EAAc1B,MAExB,IADAuC,EAAMA,GAAO,GACNvC,KAAKgB,IAAMkD,GAAK3B,EAAIrC,KAAKF,KAAKsE,eACrC,OAAO/B,CACX,EACAoE,mBAAoB,SAASpE,GACzB,GAAIvC,KAAKiB,OAASP,EAAIU,MAAO,OAAOmB,EAAIrC,KAAKF,KAAKuE,gBAClD,IAAIL,EAAMxC,EAAc1B,MAExB,IADAuC,EAAMA,GAAO,GACNvC,KAAKgB,IAAMkD,GAAK3B,EAAIrC,KAAKF,KAAKuE,gBACrC,OAAOhC,CACX,EACAqE,kBAAmB,SAASrE,GACxB,GAAIvC,KAAKiB,OAASP,EAAIU,MAAO,OAAOmB,EAAIrC,KAAKF,KAAKwE,eAClD,IAAIN,EAAMxC,EAAc1B,MAExB,IADAuC,EAAMA,GAAO,GACNvC,KAAKgB,IAAMkD,GAAK3B,EAAIrC,KAAKF,KAAKwE,eACrC,OAAOjC,CACX,EACAsE,mBAAoB,SAAStE,GACzB,GAAIvC,KAAKiB,OAASP,EAAIU,MAAO,OAAOmB,EAAIrC,KAAKF,KAAKyE,gBAClD,IAAIP,EAAMxC,EAAc1B,MAExB,IADAuC,EAAMA,GAAO,GACNvC,KAAKgB,IAAMkD,GAAK3B,EAAIrC,KAAKF,KAAKyE,gBACrC,OAAOlC,CACX,EAEA6B,KAAM,SAAST,GACX,IAAI1C,EAAa,EAAN0C,EACX,GAAI1C,IAASP,EAAIQ,OAAQ,KAAOlB,KAAKY,IAAIZ,KAAKgB,OAAS,WAClD,GAAIC,IAASP,EAAIU,MAAOpB,KAAKgB,IAAMhB,KAAK4B,aAAe5B,KAAKgB,SAC5D,GAAIC,IAASP,EAAIW,QAASrB,KAAKgB,KAAO,MACtC,IAAIC,IAASP,EAAIS,QACjB,MAAM,IAAI6D,MAAM,uBAAyB/D,GADfjB,KAAKgB,KAAO,CACQ,CACvD,EAIA8F,SAAU,SAAS3C,EAAKlD,GACpBjB,KAAKwC,YAAa2B,GAAO,EAAKlD,EAClC,EAEAoB,QAAS,SAAS0E,GAGd,IAFA,IAAIjH,EAASE,KAAKF,QAAU,GAErBA,EAASE,KAAKgB,IAAM+F,GAAKjH,GAAU,EAE1C,GAAIA,IAAWE,KAAKF,OAAQ,CACxB,IAAIc,EAAM,IAAIG,WAAWjB,GACzBc,EAAIoG,IAAIhH,KAAKY,KACbZ,KAAKY,IAAMA,EACXZ,KAAKF,OAASA,CAClB,CACJ,EAEAmH,OAAQ,WAGJ,OAFAjH,KAAKF,OAASE,KAAKgB,IACnBhB,KAAKgB,IAAM,EACJhB,KAAKY,IAAI6E,SAAS,EAAGzF,KAAKF,OACrC,EAEAoD,aAAc,SAASS,GACnB3D,KAAKqC,QAAQ,GACbqB,EAAW1D,KAAKY,IAAK+C,EAAK3D,KAAKgB,KAC/BhB,KAAKgB,KAAO,CAChB,EAEAoC,cAAe,SAASO,GACpB3D,KAAKqC,QAAQ,GACbqB,EAAW1D,KAAKY,IAAK+C,EAAK3D,KAAKgB,KAC/BhB,KAAKgB,KAAO,CAChB,EAEAsC,aAAc,SAASK,GACnB3D,KAAKqC,QAAQ,GACbqB,EAAW1D,KAAKY,KAAY,EAAP+C,EAAU3D,KAAKgB,KACpC0C,EAAW1D,KAAKY,IAAKlC,KAAKQ,MAAMyE,EAAMpC,GAAiBvB,KAAKgB,IAAM,GAClEhB,KAAKgB,KAAO,CAChB,EAEAwC,cAAe,SAASG,GACpB3D,KAAKqC,QAAQ,GACbqB,EAAW1D,KAAKY,KAAY,EAAP+C,EAAU3D,KAAKgB,KACpC0C,EAAW1D,KAAKY,IAAKlC,KAAKQ,MAAMyE,EAAMpC,GAAiBvB,KAAKgB,IAAM,GAClEhB,KAAKgB,KAAO,CAChB,EAEAwB,YAAa,SAASmB,IAClBA,GAAOA,GAAO,GAEJ,WAAaA,EAAM,EAkKrC,SAAwBA,EAAKhC,GACzB,IAAIG,EAAKC,EAEL4B,GAAO,GACP7B,EAAQ6B,EAAM,WAAe,EAC7B5B,EAAQ4B,EAAM,WAAe,IAG7B5B,KAAU4B,EAAM,YAEN,YAHV7B,KAAU6B,EAAM,aAIZ7B,EAAOA,EAAM,EAAK,GAElBA,EAAM,EACNC,EAAQA,EAAO,EAAK,IAI5B,GAAI4B,GAAO,qBAAuBA,GAAO,oBACrC,MAAM,IAAIqB,MAAM,0CAGpBrD,EAAIU,QAAQ,IAMhB,SAA2BP,EAAKC,EAAMJ,GAClCA,EAAIf,IAAIe,EAAIX,OAAe,IAANc,EAAa,IAAMA,KAAS,EACjDH,EAAIf,IAAIe,EAAIX,OAAe,IAANc,EAAa,IAAMA,KAAS,EACjDH,EAAIf,IAAIe,EAAIX,OAAe,IAANc,EAAa,IAAMA,KAAS,EACjDH,EAAIf,IAAIe,EAAIX,OAAe,IAANc,EAAa,IAAMA,KAAS,EACjDH,EAAIf,IAAIe,EAAIX,KAAe,IAANc,CACzB,CAVIoF,CAAkBpF,EAAKC,EAAMJ,GAYjC,SAA4BI,EAAMJ,GAC9B,IAAIwF,GAAc,EAAPpF,IAAgB,EAEqC,GAAhEJ,EAAIf,IAAIe,EAAIX,QAAUmG,IAAgBpF,KAAU,GAAK,IAAO,IAASA,EAAM,OACX,GAAhEJ,EAAIf,IAAIe,EAAIX,OAAiB,IAAPe,IAAgBA,KAAU,GAAK,IAAO,IAASA,EAAM,OACX,GAAhEJ,EAAIf,IAAIe,EAAIX,OAAiB,IAAPe,IAAgBA,KAAU,GAAK,IAAO,IAASA,EAAM,OACX,GAAhEJ,EAAIf,IAAIe,EAAIX,OAAiB,IAAPe,IAAgBA,KAAU,GAAK,IAAO,IAASA,EAAM,OACX,GAAhEJ,EAAIf,IAAIe,EAAIX,OAAiB,IAAPe,IAAgBA,KAAU,GAAK,IAAO,IAASA,EAAM,OAC3EJ,EAAIf,IAAIe,EAAIX,OAAiB,IAAPe,CAC1B,CApBIqF,CAAmBrF,EAAMJ,EAC7B,CA3LY0F,CAAe1D,EAAK3D,OAIxBA,KAAKqC,QAAQ,GAEbrC,KAAKY,IAAIZ,KAAKgB,OAAyB,IAAN2C,GAAeA,EAAM,IAAO,IAAO,GAAQA,GAAO,MACnF3D,KAAKY,IAAIZ,KAAKgB,OAAyB,KAAd2C,KAAS,IAAcA,EAAM,IAAO,IAAO,GAAQA,GAAO,MACnF3D,KAAKY,IAAIZ,KAAKgB,OAAyB,KAAd2C,KAAS,IAAcA,EAAM,IAAO,IAAO,GAAQA,GAAO,MACnF3D,KAAKY,IAAIZ,KAAKgB,OAAY2C,IAAQ,EAAK,OAC3C,EAEAjB,aAAc,SAASiB,GACnB3D,KAAKwC,YAAYmB,EAAM,EAAW,GAANA,EAAU,EAAU,EAANA,EAC9C,EAEAX,aAAc,SAASW,GACnB3D,KAAKwC,YAAY8C,QAAQ3B,GAC7B,EAEA2D,YAAa,SAAS3B,GAClBA,EAAMM,OAAON,GACb3F,KAAKqC,QAAqB,EAAbsD,EAAI7F,QAEjBE,KAAKgB,MAEL,IAAIkB,EAAWlC,KAAKgB,IAEpBhB,KAAKgB,IAsSb,SAAmBJ,EAAK+E,EAAK3E,GACzB,IAAK,IAAWlC,EAAGyI,EAAVlJ,EAAI,EAAYA,EAAIsH,EAAI7F,OAAQzB,IAAK,CAG1C,IAFAS,EAAI6G,EAAI6B,WAAWnJ,IAEX,OAAUS,EAAI,MAAQ,CAC1B,IAAIyI,EAWG,CACCzI,EAAI,OAAWT,EAAI,IAAMsH,EAAI7F,QAC7Bc,EAAII,KAAS,IACbJ,EAAII,KAAS,IACbJ,EAAII,KAAS,KAEbuG,EAAOzI,EAEX,QACJ,CAnBI,GAAIA,EAAI,MAAQ,CACZ8B,EAAII,KAAS,IACbJ,EAAII,KAAS,IACbJ,EAAII,KAAS,IACbuG,EAAOzI,EACP,QACJ,CACIA,EAAIyI,EAAO,OAAU,GAAKzI,EAAI,MAAS,MACvCyI,EAAO,IAYnB,MAAWA,IACP3G,EAAII,KAAS,IACbJ,EAAII,KAAS,IACbJ,EAAII,KAAS,IACbuG,EAAO,MAGPzI,EAAI,IACJ8B,EAAII,KAASlC,GAETA,EAAI,KACJ8B,EAAII,KAASlC,GAAK,EAAM,KAEpBA,EAAI,MACJ8B,EAAII,KAASlC,GAAK,GAAM,KAExB8B,EAAII,KAASlC,GAAK,GAAO,IACzB8B,EAAII,KAASlC,GAAK,GAAM,GAAO,KAEnC8B,EAAII,KAASlC,GAAK,EAAM,GAAO,KAEnC8B,EAAII,KAAa,GAAJlC,EAAW,IAEhC,CACA,OAAOkC,CACX,CAzVmByG,CAAUzH,KAAKY,IAAK+E,EAAK3F,KAAKgB,KACzC,IAAImB,EAAMnC,KAAKgB,IAAMkB,EAEjBC,GAAO,KAAMF,EAAuBC,EAAUC,EAAKnC,MAGvDA,KAAKgB,IAAMkB,EAAW,EACtBlC,KAAKwC,YAAYL,GACjBnC,KAAKgB,KAAOmB,CAChB,EAEAS,WAAY,SAASe,GACjB3D,KAAKqC,QAAQ,GACb1B,EAAQ/B,MAAMoB,KAAKY,IAAK+C,EAAK3D,KAAKgB,KAAK,EAAM,GAAI,GACjDhB,KAAKgB,KAAO,CAChB,EAEA8B,YAAa,SAASa,GAClB3D,KAAKqC,QAAQ,GACb1B,EAAQ/B,MAAMoB,KAAKY,IAAK+C,EAAK3D,KAAKgB,KAAK,EAAM,GAAI,GACjDhB,KAAKgB,KAAO,CAChB,EAEA0G,WAAY,SAAShK,GACjB,IAAIyE,EAAMzE,EAAOoC,OACjBE,KAAKwC,YAAYL,GACjBnC,KAAKqC,QAAQF,GACb,IAAK,IAAI9D,EAAI,EAAGA,EAAI8D,EAAK9D,IAAK2B,KAAKY,IAAIZ,KAAKgB,OAAStD,EAAOW,EAChE,EAEAsJ,gBAAiB,SAASC,EAAIvH,GAC1BL,KAAKgB,MAGL,IAAIkB,EAAWlC,KAAKgB,IACpB4G,EAAGvH,EAAKL,MACR,IAAImC,EAAMnC,KAAKgB,IAAMkB,EAEjBC,GAAO,KAAMF,EAAuBC,EAAUC,EAAKnC,MAGvDA,KAAKgB,IAAMkB,EAAW,EACtBlC,KAAKwC,YAAYL,GACjBnC,KAAKgB,KAAOmB,CAChB,EAEA0F,aAAc,SAAS1D,EAAKyD,EAAIvH,GAC5BL,KAAK8G,SAAS3C,EAAKzD,EAAIU,OACvBpB,KAAK2H,gBAAgBC,EAAIvH,EAC7B,EAEAiC,kBAAqB,SAAS6B,EAAK5B,GAAWA,EAAIzC,QAAQE,KAAK6H,aAAa1D,EAAK7B,EAAmBC,EAAQ,EAC5GE,mBAAqB,SAAS0B,EAAK5B,GAAWA,EAAIzC,QAAQE,KAAK6H,aAAa1D,EAAK1B,EAAoBF,EAAO,EAC5GQ,mBAAqB,SAASoB,EAAK5B,GAAWA,EAAIzC,QAAQE,KAAK6H,aAAa1D,EAAKpB,EAAoBR,EAAO,EAC5GI,iBAAqB,SAASwB,EAAK5B,GAAWA,EAAIzC,QAAQE,KAAK6H,aAAa1D,EAAKxB,EAAkBJ,EAAS,EAC5GM,kBAAqB,SAASsB,EAAK5B,GAAWA,EAAIzC,QAAQE,KAAK6H,aAAa1D,EAAKtB,EAAmBN,EAAQ,EAC5GU,mBAAqB,SAASkB,EAAK5B,GAAWA,EAAIzC,QAAQE,KAAK6H,aAAa1D,EAAKlB,EAAoBV,EAAO,EAC5GY,oBAAqB,SAASgB,EAAK5B,GAAWA,EAAIzC,QAAQE,KAAK6H,aAAa1D,EAAKhB,EAAqBZ,EAAM,EAC5Gc,mBAAqB,SAASc,EAAK5B,GAAWA,EAAIzC,QAAQE,KAAK6H,aAAa1D,EAAKd,EAAoBd,EAAO,EAC5GgB,oBAAqB,SAASY,EAAK5B,GAAWA,EAAIzC,QAAQE,KAAK6H,aAAa1D,EAAKZ,EAAqBhB,EAAM,EAE5GuF,gBAAiB,SAAS3D,EAAKzG,GAC3BsC,KAAK8G,SAAS3C,EAAKzD,EAAIU,OACvBpB,KAAK0H,WAAWhK,EACpB,EACAqK,kBAAmB,SAAS5D,EAAKR,GAC7B3D,KAAK8G,SAAS3C,EAAKzD,EAAIW,SACvBrB,KAAKkD,aAAaS,EACtB,EACAqE,mBAAoB,SAAS7D,EAAKR,GAC9B3D,KAAK8G,SAAS3C,EAAKzD,EAAIW,SACvBrB,KAAKoD,cAAcO,EACvB,EACAsE,kBAAmB,SAAS9D,EAAKR,GAC7B3D,KAAK8G,SAAS3C,EAAKzD,EAAIS,SACvBnB,KAAKsD,aAAaK,EACtB,EACAuE,mBAAoB,SAAS/D,EAAKR,GAC9B3D,KAAK8G,SAAS3C,EAAKzD,EAAIS,SACvBnB,KAAKwD,cAAcG,EACvB,EACAwE,iBAAkB,SAAShE,EAAKR,GAC5B3D,KAAK8G,SAAS3C,EAAKzD,EAAIQ,QACvBlB,KAAKwC,YAAYmB,EACrB,EACAyE,kBAAmB,SAASjE,EAAKR,GAC7B3D,KAAK8G,SAAS3C,EAAKzD,EAAIQ,QACvBlB,KAAK0C,aAAaiB,EACtB,EACA0E,iBAAkB,SAASlE,EAAKwB,GAC5B3F,KAAK8G,SAAS3C,EAAKzD,EAAIU,OACvBpB,KAAKsH,YAAY3B,EACrB,EACA2C,gBAAiB,SAASnE,EAAKR,GAC3B3D,KAAK8G,SAAS3C,EAAKzD,EAAIW,SACvBrB,KAAK4C,WAAWe,EACpB,EACA4E,iBAAkB,SAASpE,EAAKR,GAC5B3D,KAAK8G,SAAS3C,EAAKzD,EAAIS,SACvBnB,KAAK8C,YAAYa,EACrB,EACA6E,kBAAmB,SAASrE,EAAKR,GAC7B3D,KAAKmI,iBAAiBhE,EAAKmB,QAAQ3B,GACvC,E,kBC/YgEvD,EAAO5C,QAAwF,WAAW,aAAa,SAASiL,EAAEA,EAAEC,EAAE3K,EAAE4K,EAAE5D,IAAI,SAAS0D,EAAEG,EAAEF,EAAE3K,EAAE4K,EAAE5D,GAAG,KAAK4D,EAAE5K,GAAG,CAAC,GAAG4K,EAAE5K,EAAE,IAAI,CAAC,IAAI8K,EAAEF,EAAE5K,EAAE,EAAEQ,EAAEmK,EAAE3K,EAAE,EAAE8G,EAAEnG,KAAKS,IAAI0J,GAAGC,EAAE,GAAGpK,KAAKqK,IAAI,EAAElE,EAAE,GAAGmE,EAAE,GAAGtK,KAAKuK,KAAKpE,EAAEiE,GAAGD,EAAEC,GAAGD,IAAItK,EAAEsK,EAAE,EAAE,GAAG,EAAE,GAA+EJ,EAAEG,EAAEF,EAA9EhK,KAAKwK,IAAInL,EAAEW,KAAKQ,MAAMwJ,EAAEnK,EAAEuK,EAAED,EAAEG,IAAMtK,KAAKqI,IAAI4B,EAAEjK,KAAKQ,MAAMwJ,GAAGG,EAAEtK,GAAGuK,EAAED,EAAEG,IAAcjE,EAAE,CAAC,IAAID,EAAE8D,EAAEF,GAAGpK,EAAEP,EAAEoL,EAAER,EAAE,IAAItK,EAAEuK,EAAE7K,EAAE2K,GAAG3D,EAAE6D,EAAED,GAAG7D,GAAG,GAAGzG,EAAEuK,EAAE7K,EAAE4K,GAAGrK,EAAE6K,GAAG,CAAC,IAAI9K,EAAEuK,EAAEtK,EAAE6K,GAAG7K,IAAI6K,IAAIpE,EAAE6D,EAAEtK,GAAGwG,GAAG,GAAGxG,IAAI,KAAKyG,EAAE6D,EAAEO,GAAGrE,GAAG,GAAGqE,GAAG,CAAC,IAAIpE,EAAE6D,EAAE7K,GAAG+G,GAAGzG,EAAEuK,EAAE7K,EAAEoL,GAAG9K,EAAEuK,IAAIO,EAAER,GAAGQ,GAAGT,IAAI3K,EAAEoL,EAAE,GAAGT,GAAGS,IAAIR,EAAEQ,EAAE,EAAE,CAAC,CAA9Z,CAAgaV,EAAEC,EAAE3K,GAAG,EAAE4K,GAAGF,EAAE3I,OAAO,EAAEiF,GAAG6D,EAAE,CAAC,SAASvK,EAAEoK,EAAEpK,EAAEuK,GAAG,IAAIF,EAAED,EAAEpK,GAAGoK,EAAEpK,GAAGoK,EAAEG,GAAGH,EAAEG,GAAGF,CAAC,CAAC,SAASE,EAAEH,EAAEpK,GAAG,OAAOoK,EAAEpK,GAAG,EAAEoK,EAAEpK,EAAE,EAAE,CAAC,CAAC,IAAIqK,EAAE,SAASD,QAAG,IAASA,IAAIA,EAAE,GAAGzI,KAAKoJ,YAAY1K,KAAKwK,IAAI,EAAET,GAAGzI,KAAKqJ,YAAY3K,KAAKwK,IAAI,EAAExK,KAAK4K,KAAK,GAAGtJ,KAAKoJ,cAAcpJ,KAAKuJ,OAAO,EAAE,SAASxL,EAAE0K,EAAEpK,EAAEuK,GAAG,IAAIA,EAAE,OAAOvK,EAAEuB,QAAQ6I,GAAG,IAAI,IAAIC,EAAE,EAAEA,EAAErK,EAAEyB,OAAO4I,IAAI,GAAGE,EAAEH,EAAEpK,EAAEqK,IAAI,OAAOA,EAAE,OAAO,CAAC,CAAC,SAASC,EAAEF,EAAEpK,GAAG0G,EAAE0D,EAAE,EAAEA,EAAEe,SAAS1J,OAAOzB,EAAEoK,EAAE,CAAC,SAAS1D,EAAE0D,EAAEpK,EAAEuK,EAAEF,EAAE3K,GAAGA,IAAIA,EAAE+G,EAAE,OAAO/G,EAAE0L,KAAK,IAAI1L,EAAE2L,KAAK,IAAI3L,EAAE4L,MAAK,IAAK5L,EAAE6L,MAAK,IAAK,IAAI,IAAIjB,EAAEtK,EAAEsK,EAAEC,EAAED,IAAI,CAAC,IAAI5D,EAAE0D,EAAEe,SAASb,GAAGE,EAAE9K,EAAE0K,EAAEoB,KAAKnB,EAAE3D,GAAGA,EAAE,CAAC,OAAOhH,CAAC,CAAC,SAAS8K,EAAEJ,EAAEpK,GAAG,OAAOoK,EAAEgB,KAAK/K,KAAKqI,IAAI0B,EAAEgB,KAAKpL,EAAEoL,MAAMhB,EAAEiB,KAAKhL,KAAKqI,IAAI0B,EAAEiB,KAAKrL,EAAEqL,MAAMjB,EAAEkB,KAAKjL,KAAKwK,IAAIT,EAAEkB,KAAKtL,EAAEsL,MAAMlB,EAAEmB,KAAKlL,KAAKwK,IAAIT,EAAEmB,KAAKvL,EAAEuL,MAAMnB,CAAC,CAAC,SAASlK,EAAEkK,EAAEpK,GAAG,OAAOoK,EAAEgB,KAAKpL,EAAEoL,IAAI,CAAC,SAAS5E,EAAE4D,EAAEpK,GAAG,OAAOoK,EAAEiB,KAAKrL,EAAEqL,IAAI,CAAC,SAASZ,EAAEL,GAAG,OAAOA,EAAEkB,KAAKlB,EAAEgB,OAAOhB,EAAEmB,KAAKnB,EAAEiB,KAAK,CAAC,SAASV,EAAEP,GAAG,OAAOA,EAAEkB,KAAKlB,EAAEgB,MAAMhB,EAAEmB,KAAKnB,EAAEiB,KAAK,CAAC,SAAS1L,EAAEyK,EAAEpK,GAAG,OAAOoK,EAAEgB,MAAMpL,EAAEoL,MAAMhB,EAAEiB,MAAMrL,EAAEqL,MAAMrL,EAAEsL,MAAMlB,EAAEkB,MAAMtL,EAAEuL,MAAMnB,EAAEmB,IAAI,CAAC,SAAS9K,EAAE2J,EAAEpK,GAAG,OAAOA,EAAEoL,MAAMhB,EAAEkB,MAAMtL,EAAEqL,MAAMjB,EAAEmB,MAAMvL,EAAEsL,MAAMlB,EAAEgB,MAAMpL,EAAEuL,MAAMnB,EAAEiB,IAAI,CAAC,SAAS5E,EAAE2D,GAAG,MAAM,CAACe,SAASf,EAAEqB,OAAO,EAAED,MAAK,EAAGJ,KAAK,IAAIC,KAAK,IAAIC,MAAK,IAAKC,MAAK,IAAK,CAAC,SAAStL,EAAED,EAAEuK,EAAEF,EAAE3K,EAAE4K,GAAG,IAAI,IAAI5D,EAAE,CAAC6D,EAAEF,GAAG3D,EAAEjF,QAAQ,MAAM4I,EAAE3D,EAAEgF,QAAQnB,EAAE7D,EAAEgF,QAAQhM,GAAG,CAAC,IAAI8K,EAAED,EAAElK,KAAK4K,MAAMZ,EAAEE,GAAG7K,EAAE,GAAGA,EAAE0K,EAAEpK,EAAEwK,EAAED,EAAEF,EAAEC,GAAG5D,EAAE7E,KAAK0I,EAAEC,EAAEA,EAAEH,EAAE,CAAC,CAAC,OAAOA,EAAE7E,UAAUmG,IAAI,WAAW,OAAOhK,KAAKiK,KAAKjK,KAAKkK,KAAK,GAAG,EAAExB,EAAE7E,UAAUsG,OAAO,SAAS1B,GAAG,IAAIpK,EAAE2B,KAAKkK,KAAKtB,EAAE,GAAG,IAAI9J,EAAE2J,EAAEpK,GAAG,OAAOuK,EAAE,IAAI,IAAIF,EAAE1I,KAAKoK,OAAOrM,EAAE,GAAGM,GAAG,CAAC,IAAI,IAAIsK,EAAE,EAAEA,EAAEtK,EAAEmL,SAAS1J,OAAO6I,IAAI,CAAC,IAAI5D,EAAE1G,EAAEmL,SAASb,GAAGE,EAAExK,EAAEwL,KAAKnB,EAAE3D,GAAGA,EAAEjG,EAAE2J,EAAEI,KAAKxK,EAAEwL,KAAKjB,EAAE1I,KAAK6E,GAAG/G,EAAEyK,EAAEI,GAAG7I,KAAKiK,KAAKlF,EAAE6D,GAAG7K,EAAEmC,KAAK6E,GAAG,CAAC1G,EAAEN,EAAEgM,KAAK,CAAC,OAAOnB,CAAC,EAAEF,EAAE7E,UAAUwG,SAAS,SAAS5B,GAAG,IAAIpK,EAAE2B,KAAKkK,KAAK,IAAIpL,EAAE2J,EAAEpK,GAAG,OAAM,EAAG,IAAI,IAAIuK,EAAE,GAAGvK,GAAG,CAAC,IAAI,IAAIqK,EAAE,EAAEA,EAAErK,EAAEmL,SAAS1J,OAAO4I,IAAI,CAAC,IAAI3K,EAAEM,EAAEmL,SAASd,GAAGC,EAAEtK,EAAEwL,KAAK7J,KAAKoK,OAAOrM,GAAGA,EAAE,GAAGe,EAAE2J,EAAEE,GAAG,CAAC,GAAGtK,EAAEwL,MAAM7L,EAAEyK,EAAEE,GAAG,OAAM,EAAGC,EAAE1I,KAAKnC,EAAE,CAAC,CAACM,EAAEuK,EAAEmB,KAAK,CAAC,OAAM,CAAE,EAAErB,EAAE7E,UAAUyG,KAAK,SAAS7B,GAAG,IAAIA,IAAIA,EAAE3I,OAAO,OAAOE,KAAK,GAAGyI,EAAE3I,OAAOE,KAAKqJ,YAAY,CAAC,IAAI,IAAIhL,EAAE,EAAEA,EAAEoK,EAAE3I,OAAOzB,IAAI2B,KAAKuK,OAAO9B,EAAEpK,IAAI,OAAO2B,IAAI,CAAC,IAAI4I,EAAE5I,KAAKwK,OAAO/B,EAAE9I,QAAQ,EAAE8I,EAAE3I,OAAO,EAAE,GAAG,GAAGE,KAAKkK,KAAKV,SAAS1J,OAAO,GAAGE,KAAKkK,KAAKJ,SAASlB,EAAEkB,OAAO9J,KAAKyK,WAAWzK,KAAKkK,KAAKtB,OAAO,CAAC,GAAG5I,KAAKkK,KAAKJ,OAAOlB,EAAEkB,OAAO,CAAC,IAAIpB,EAAE1I,KAAKkK,KAAKlK,KAAKkK,KAAKtB,EAAEA,EAAEF,CAAC,CAAC1I,KAAK0K,QAAQ9B,EAAE5I,KAAKkK,KAAKJ,OAAOlB,EAAEkB,OAAO,GAAE,EAAG,MAAM9J,KAAKkK,KAAKtB,EAAE,OAAO5I,IAAI,EAAE0I,EAAE7E,UAAU0G,OAAO,SAAS9B,GAAG,OAAOA,GAAGzI,KAAK0K,QAAQjC,EAAEzI,KAAKkK,KAAKJ,OAAO,GAAG9J,IAAI,EAAE0I,EAAE7E,UAAU0F,MAAM,WAAW,OAAOvJ,KAAKkK,KAAKpF,EAAE,IAAI9E,IAAI,EAAE0I,EAAE7E,UAAU8G,OAAO,SAASlC,EAAEpK,GAAG,IAAIoK,EAAE,OAAOzI,KAAK,IAAI,IAAI4I,EAAEF,EAAEC,EAAE5D,EAAE/E,KAAKkK,KAAKrB,EAAE7I,KAAKoK,OAAO3B,GAAGlK,EAAE,GAAGsG,EAAE,GAAGE,GAAGxG,EAAEuB,QAAQ,CAAC,GAAGiF,IAAIA,EAAExG,EAAEwL,MAAMrB,EAAEnK,EAAEA,EAAEuB,OAAO,GAAG8I,EAAE/D,EAAEkF,MAAMpB,GAAE,GAAI5D,EAAE8E,KAAK,CAAC,IAAIf,EAAE/K,EAAE0K,EAAE1D,EAAEyE,SAASnL,GAAG,IAAI,IAAIyK,EAAE,OAAO/D,EAAEyE,SAASvJ,OAAO6I,EAAE,GAAGvK,EAAE2B,KAAK6E,GAAG/E,KAAK4K,UAAUrM,GAAGyB,IAAI,CAAC2I,GAAG5D,EAAE8E,OAAO7L,EAAE+G,EAAE8D,GAAGH,GAAGE,IAAI7D,EAAE2D,EAAEc,SAASZ,GAAGD,GAAE,GAAI5D,EAAE,MAAMxG,EAAE2B,KAAK6E,GAAGF,EAAE3E,KAAK0I,GAAGA,EAAE,EAAEF,EAAE3D,EAAEA,EAAEA,EAAEyE,SAAS,GAAG,CAAC,OAAOxJ,IAAI,EAAE0I,EAAE7E,UAAUuG,OAAO,SAAS3B,GAAG,OAAOA,CAAC,EAAEC,EAAE7E,UAAUgH,YAAY,SAASpC,EAAEpK,GAAG,OAAOoK,EAAEgB,KAAKpL,EAAEoL,IAAI,EAAEf,EAAE7E,UAAUiH,YAAY,SAASrC,EAAEpK,GAAG,OAAOoK,EAAEiB,KAAKrL,EAAEqL,IAAI,EAAEhB,EAAE7E,UAAUkH,OAAO,WAAW,OAAO/K,KAAKkK,IAAI,EAAExB,EAAE7E,UAAUmH,SAAS,SAASvC,GAAG,OAAOzI,KAAKkK,KAAKzB,EAAEzI,IAAI,EAAE0I,EAAE7E,UAAUoG,KAAK,SAASxB,EAAEpK,GAAG,IAAI,IAAIuK,EAAE,GAAGH,GAAGA,EAAEoB,KAAKxL,EAAE6B,KAAK+K,MAAM5M,EAAEoK,EAAEe,UAAUZ,EAAE1I,KAAK+K,MAAMrC,EAAEH,EAAEe,UAAUf,EAAEG,EAAEmB,MAAM,OAAO1L,CAAC,EAAEqK,EAAE7E,UAAU2G,OAAO,SAAS/B,EAAEpK,EAAEuK,EAAEF,GAAG,IAAI3K,EAAEgH,EAAE6D,EAAEvK,EAAE,EAAEwK,EAAE7I,KAAKoJ,YAAY,GAAGrE,GAAG8D,EAAE,OAAOF,EAAE5K,EAAE+G,EAAE2D,EAAE9I,MAAMtB,EAAEuK,EAAE,IAAI5I,KAAKoK,QAAQrM,EAAE2K,IAAIA,EAAEhK,KAAK4K,KAAK5K,KAAKS,IAAI4F,GAAGrG,KAAKS,IAAI0J,IAAIA,EAAEnK,KAAK4K,KAAKvE,EAAErG,KAAKC,IAAIkK,EAAEH,EAAE,MAAM3K,EAAE+G,EAAE,KAAK+E,MAAK,EAAG9L,EAAE+L,OAAOpB,EAAE,IAAInK,EAAEG,KAAK4K,KAAKvE,EAAE8D,GAAGhE,EAAEtG,EAAEG,KAAK4K,KAAK5K,KAAKuK,KAAKJ,IAAIvK,EAAEmK,EAAEpK,EAAEuK,EAAE/D,EAAE7E,KAAK6K,aAAa,IAAI,IAAI/B,EAAEzK,EAAEyK,GAAGF,EAAEE,GAAGjE,EAAE,CAAC,IAAImE,EAAEtK,KAAKqI,IAAI+B,EAAEjE,EAAE,EAAE+D,GAAGtK,EAAEmK,EAAEK,EAAEE,EAAEzK,EAAEyB,KAAK8K,aAAa,IAAI,IAAI9M,EAAE8K,EAAE9K,GAAGgL,EAAEhL,GAAGO,EAAE,CAAC,IAAIO,EAAEJ,KAAKqI,IAAI/I,EAAEO,EAAE,EAAEyK,GAAGjL,EAAEyL,SAAStJ,KAAKF,KAAKwK,OAAO/B,EAAEzK,EAAEc,EAAE4J,EAAE,GAAG,CAAC,CAAC,OAAOC,EAAE5K,EAAEiC,KAAKoK,QAAQrM,CAAC,EAAE2K,EAAE7E,UAAUqH,eAAe,SAASzC,EAAEpK,EAAEuK,EAAEF,GAAG,KAAKA,EAAExI,KAAK7B,IAAIA,EAAEwL,MAAMnB,EAAE5I,OAAO,IAAI8I,GAAG,CAAC,IAAI,IAAI7K,EAAE,IAAI4K,EAAE,IAAI5D,OAAE,EAAO8D,EAAE,EAAEA,EAAExK,EAAEmL,SAAS1J,OAAO+I,IAAI,CAAC,IAAItK,EAAEF,EAAEmL,SAASX,GAAGhE,EAAEiE,EAAEvK,GAAGyK,GAAGhL,EAAEyK,EAAE3J,EAAEP,GAAGG,KAAKwK,IAAIpK,EAAE6K,KAAK3L,EAAE2L,MAAMjL,KAAKqI,IAAIjI,EAAE2K,KAAKzL,EAAEyL,QAAQ/K,KAAKwK,IAAIpK,EAAE8K,KAAK5L,EAAE4L,MAAMlL,KAAKqI,IAAIjI,EAAE4K,KAAK1L,EAAE0L,OAAO7E,GAAGmE,EAAEL,GAAGA,EAAEK,EAAEjL,EAAE8G,EAAE9G,EAAE8G,EAAE9G,EAAEgH,EAAExG,GAAGyK,IAAIL,GAAG9D,EAAE9G,IAAIA,EAAE8G,EAAEE,EAAExG,EAAE,CAACF,EAAE0G,GAAG1G,EAAEmL,SAAS,EAAE,CAAC,IAAIxL,EAAEc,EAAE,OAAOT,CAAC,EAAEqK,EAAE7E,UAAU6G,QAAQ,SAASjC,EAAEpK,EAAEuK,GAAG,IAAIF,EAAEE,EAAEH,EAAEzI,KAAKoK,OAAO3B,GAAG1K,EAAE,GAAG4K,EAAE3I,KAAKkL,eAAexC,EAAE1I,KAAKkK,KAAK7L,EAAEN,GAAG,IAAI4K,EAAEa,SAAStJ,KAAKuI,GAAGI,EAAEF,EAAED,GAAGrK,GAAG,GAAGN,EAAEM,GAAGmL,SAAS1J,OAAOE,KAAKoJ,aAAapJ,KAAKmL,OAAOpN,EAAEM,GAAGA,IAAI2B,KAAKoL,oBAAoB1C,EAAE3K,EAAEM,EAAE,EAAEqK,EAAE7E,UAAUsH,OAAO,SAAS1C,EAAEpK,GAAG,IAAIuK,EAAEH,EAAEpK,GAAGqK,EAAEE,EAAEY,SAAS1J,OAAO/B,EAAEiC,KAAKqJ,YAAYrJ,KAAKqL,iBAAiBzC,EAAE7K,EAAE2K,GAAG,IAAI3D,EAAE/E,KAAKsL,kBAAkB1C,EAAE7K,EAAE2K,GAAGG,EAAE/D,EAAE8D,EAAEY,SAASvJ,OAAO8E,EAAE6D,EAAEY,SAAS1J,OAAOiF,IAAI8D,EAAEiB,OAAOlB,EAAEkB,OAAOjB,EAAEgB,KAAKjB,EAAEiB,KAAKlB,EAAEC,EAAE5I,KAAKoK,QAAQzB,EAAEE,EAAE7I,KAAKoK,QAAQ/L,EAAEoK,EAAEpK,EAAE,GAAGmL,SAAStJ,KAAK2I,GAAG7I,KAAKyK,WAAW7B,EAAEC,EAAE,EAAEH,EAAE7E,UAAU4G,WAAW,SAAShC,EAAEpK,GAAG2B,KAAKkK,KAAKpF,EAAE,CAAC2D,EAAEpK,IAAI2B,KAAKkK,KAAKJ,OAAOrB,EAAEqB,OAAO,EAAE9J,KAAKkK,KAAKL,MAAK,EAAGlB,EAAE3I,KAAKkK,KAAKlK,KAAKoK,OAAO,EAAE1B,EAAE7E,UAAUyH,kBAAkB,SAAS7C,EAAEpK,EAAEuK,GAAG,IAAI,IAAIF,EAAE3K,EAAE4K,EAAEE,EAAEtK,EAAEsG,EAAEmE,EAAEhL,EAAE,IAAIc,EAAE,IAAIgG,EAAEzG,EAAEyG,GAAG8D,EAAEvK,EAAEyG,IAAI,CAAC,IAAIxG,EAAEyG,EAAE0D,EAAE,EAAE3D,EAAE9E,KAAKoK,QAAQjB,EAAEpE,EAAE0D,EAAE3D,EAAE8D,EAAE5I,KAAKoK,QAAQmB,GAAGxN,EAAEO,EAAEqK,EAAEQ,EAAEN,OAAE,EAAOtK,OAAE,EAAOsG,OAAE,EAAOmE,OAAE,EAAOH,EAAEnK,KAAKwK,IAAInL,EAAE0L,KAAKd,EAAEc,MAAMlL,EAAEG,KAAKwK,IAAInL,EAAE2L,KAAKf,EAAEe,MAAM7E,EAAEnG,KAAKqI,IAAIhJ,EAAE4L,KAAKhB,EAAEgB,MAAMX,EAAEtK,KAAKqI,IAAIhJ,EAAE6L,KAAKjB,EAAEiB,MAAMlL,KAAKwK,IAAI,EAAErE,EAAEgE,GAAGnK,KAAKwK,IAAI,EAAEF,EAAEzK,IAAIiN,EAAE1C,EAAExK,GAAGwK,EAAEK,GAAGoC,EAAEvN,GAAGA,EAAEuN,EAAE7C,EAAE5D,EAAEhG,EAAE0M,EAAE1M,EAAE0M,EAAE1M,GAAGyM,IAAIvN,GAAGwN,EAAE1M,IAAIA,EAAE0M,EAAE9C,EAAE5D,EAAE,CAAC,OAAO4D,GAAGE,EAAEvK,CAAC,EAAEqK,EAAE7E,UAAUwH,iBAAiB,SAAS5C,EAAEpK,EAAEuK,GAAG,IAAIF,EAAED,EAAEoB,KAAK7J,KAAK6K,YAAYtM,EAAER,EAAE0K,EAAEoB,KAAK7J,KAAK8K,YAAYjG,EAAE7E,KAAKyL,eAAehD,EAAEpK,EAAEuK,EAAEF,GAAG1I,KAAKyL,eAAehD,EAAEpK,EAAEuK,EAAE7K,IAAI0K,EAAEe,SAASkC,KAAKhD,EAAE,EAAEA,EAAE7E,UAAU4H,eAAe,SAAShD,EAAEpK,EAAEuK,EAAEF,GAAGD,EAAEe,SAASkC,KAAKhD,GAAG,IAAI,IAAI3K,EAAEiC,KAAKoK,OAAOzB,EAAE5D,EAAE0D,EAAE,EAAEpK,EAAEN,GAAGQ,EAAEwG,EAAE0D,EAAEG,EAAEvK,EAAEuK,EAAE7K,GAAG8G,EAAEmE,EAAEL,GAAGK,EAAEzK,GAAGuK,EAAEzK,EAAEyK,EAAEF,EAAEvK,EAAEyK,IAAI,CAAC,IAAI9K,EAAEyK,EAAEe,SAASV,GAAGD,EAAEF,EAAEF,EAAEoB,KAAK9L,EAAEC,GAAGA,GAAG6G,GAAGmE,EAAEL,EAAE,CAAC,IAAI,IAAI7J,EAAE8J,EAAEvK,EAAE,EAAES,GAAGT,EAAES,IAAI,CAAC,IAAIgG,EAAE2D,EAAEe,SAAS1K,GAAG+J,EAAEtK,EAAEkK,EAAEoB,KAAK9L,EAAE+G,GAAGA,GAAGD,GAAGmE,EAAEzK,EAAE,CAAC,OAAOsG,CAAC,EAAE6D,EAAE7E,UAAUuH,oBAAoB,SAAS3C,EAAEpK,EAAEuK,GAAG,IAAI,IAAIF,EAAEE,EAAEF,GAAG,EAAEA,IAAIG,EAAExK,EAAEqK,GAAGD,EAAE,EAAEC,EAAE7E,UAAU+G,UAAU,SAASnC,GAAG,IAAI,IAAIpK,EAAEoK,EAAE3I,OAAO,EAAE8I,OAAE,EAAOvK,GAAG,EAAEA,IAAI,IAAIoK,EAAEpK,GAAGmL,SAAS1J,OAAOzB,EAAE,GAAGuK,EAAEH,EAAEpK,EAAE,GAAGmL,UAAUvJ,OAAO2I,EAAEhJ,QAAQ6I,EAAEpK,IAAI,GAAG2B,KAAKuJ,QAAQZ,EAAEF,EAAEpK,GAAG2B,KAAKoK,OAAO,EAAE1B,CAAC,CAAzuMrK,E,GCC/EsN,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAatO,QAGrB,IAAI4C,EAASuL,EAAyBE,GAAY,CAGjDrO,QAAS,CAAC,GAOX,OAHAwO,EAAoBH,GAAU1L,KAAKC,EAAO5C,QAAS4C,EAAQA,EAAO5C,QAASoO,GAGpExL,EAAO5C,OACf,CCrBAoO,EAAoBhD,EAAI,SAASxI,GAChC,IAAI6L,EAAS7L,GAAUA,EAAO8L,WAC7B,WAAa,OAAO9L,EAAgB,OAAG,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAwL,EAAoBtN,EAAE2N,EAAQ,CAAEtD,EAAGsD,IAC5BA,CACR,ECNAL,EAAoBtN,EAAI,SAASd,EAAS2O,GACzC,IAAI,IAAIzM,KAAOyM,EACXP,EAAoB/C,EAAEsD,EAAYzM,KAASkM,EAAoB/C,EAAErL,EAASkC,IAC5E0M,OAAOC,eAAe7O,EAASkC,EAAK,CAAE4M,YAAY,EAAMC,IAAKJ,EAAWzM,IAG3E,ECPAkM,EAAoB/C,EAAI,SAASxI,EAAKmM,GAAQ,OAAOJ,OAAOvI,UAAU4I,eAAetM,KAAKE,EAAKmM,EAAO,E,wBCO/F,SAAS,IACd,MAAM,IAAIxH,MAAM,iCAClB,CAOA,IAAI0H,EAAc,EAWX,SAAS,EAAOrM,GACrB,OAAOA,EAAIsM,SAAWtM,EAAIsM,OAAS1G,SAASyG,GAC9C,CCeO,MAAM,EAAkB,CAE7B,QAAW,SAAW,EAAIhO,KAAKkO,IAC/B,QAAY,EAAIlO,KAAKkO,GAAK,QAAW,IACrC,GAAM,MACN,EAAK,EACL,QAAS,KAAO,MC4NlB,MA3NA,MAIE,WAAAC,CAAYC,GAKV9M,KAAK+M,MAAQD,EAAQE,KASrBhN,KAAKiN,OAAoDH,EAAa,MAStE9M,KAAKkN,aAA6BnB,IAAnBe,EAAQK,OAAuBL,EAAQK,OAAS,KAS/DnN,KAAKoN,kBACqBrB,IAAxBe,EAAQO,YAA4BP,EAAQO,YAAc,KAM5DrN,KAAKsN,sBACyBvB,IAA5Be,EAAQS,gBAAgCT,EAAQS,gBAAkB,MAMpEvN,KAAKwN,aAA6BzB,IAAnBe,EAAQW,QAAuBX,EAAQW,OAMtDzN,KAAK0N,aAAe1N,KAAKwN,UAAWxN,KAAKkN,SAMzClN,KAAK2N,wBAA0Bb,EAAQc,mBAMvC5N,KAAK6N,iBAAmB,KAMxB7N,KAAK8N,eAAiBhB,EAAQiB,aAChC,CAKA,QAAAC,GACE,OAAOhO,KAAK0N,SACd,CAOA,OAAAO,GACE,OAAOjO,KAAK+M,KACd,CAOA,SAAAmB,GACE,OAAOlO,KAAKkN,OACd,CAOA,QAAAiB,GACE,OAAOnO,KAAKiN,MACd,CASA,gBAAAmB,GACE,OAAOpO,KAAK8N,gBAAkB,EAAgB9N,KAAKiN,OACrD,CAOA,cAAAoB,GACE,OAAOrO,KAAKoN,YACd,CAaA,kBAAAkB,GACE,OAAOtO,KAAKsN,gBACd,CAOA,QAAAiB,GACE,OAAOvO,KAAKwN,OACd,CAOA,SAAAgB,CAAUf,GACRzN,KAAKwN,QAAUC,EACfzN,KAAK0N,aAAeD,IAAUzN,KAAKkN,QACrC,CAKA,kBAAAuB,GACE,OAAOzO,KAAK6N,gBACd,CAKA,kBAAAa,CAAmBC,GACjB3O,KAAK6N,iBAAmBc,CAC1B,CAOA,SAAAC,CAAUzB,GACRnN,KAAKkN,QAAUC,EACfnN,KAAK0N,aAAe1N,KAAKwN,UAAWL,EACtC,CAQA,cAAA0B,CAAexB,GACbrN,KAAKoN,aAAeC,CACtB,CAQA,qBAAAyB,CAAsBC,GACpB/O,KAAK2N,wBAA0BoB,CACjC,CAOA,sBAAAC,GACE,OAAOhP,KAAK2N,uBACd,GChQK,MAAMsB,EAAS,QAMTC,EAAYxQ,KAAKkO,GAAKqC,EAMtBE,EAAS,EAAED,GAAYA,EAAWA,EAAWA,GAM7CE,EAAe,EAAE,KAAM,GAAI,IAAK,IAOhCC,EAAaJ,EAASvQ,KAAKS,IAAIT,KAAK4Q,IAAI5Q,KAAKkO,GAAK,IAM/D,MAAM2C,UAA2B,EAI/B,WAAA1C,CAAYG,GACVwC,MAAM,CACJxC,KAAMA,EACNyC,MAAO,IACPtC,OAAQgC,EACR1B,QAAQ,EACRJ,YAAa+B,EACbxB,mBAAoB,SAAU8B,EAAYC,GACxC,OAAOD,EAAahR,KAAKkR,KAAKD,EAAM,GAAKV,EAC3C,GAEJ,EASK,MAAMY,EAAc,CACzB,IAAIN,EAAmB,aACvB,IAAIA,EAAmB,eACvB,IAAIA,EAAmB,eACvB,IAAIA,EAAmB,eACvB,IAAIA,EAAmB,8CACvB,IAAIA,EAAmB,iDAWlB,SAASO,EAAaC,EAAOC,EAAQC,GAC1C,MAAMnQ,EAASiQ,EAAMjQ,OACrBmQ,EAAYA,EAAY,EAAIA,EAAY,OACzBlE,IAAXiE,IAGAA,EAFEC,EAAY,EAELF,EAAMpQ,QAEN,IAAIuQ,MAAMpQ,IAGvB,IAAK,IAAIzB,EAAI,EAAGA,EAAIyB,EAAQzB,GAAK4R,EAAW,CAC1CD,EAAO3R,GAAM6Q,EAAYa,EAAM1R,GAAM,IACrC,IAAI8R,EAAIlB,EAASvQ,KAAKS,IAAIT,KAAK4Q,IAAK5Q,KAAKkO,KAAOmD,EAAM1R,EAAI,GAAK,IAAO,MAClE8R,EAAId,EACNc,EAAId,EACKc,GAAKd,IACdc,GAAKd,GAEPW,EAAO3R,EAAI,GAAK8R,CAClB,CACA,OAAOH,CACT,CAUO,SAASI,EAAWL,EAAOC,EAAQC,GACxC,MAAMnQ,EAASiQ,EAAMjQ,OACrBmQ,EAAYA,EAAY,EAAIA,EAAY,OACzBlE,IAAXiE,IAGAA,EAFEC,EAAY,EAELF,EAAMpQ,QAEN,IAAIuQ,MAAMpQ,IAGvB,IAAK,IAAIzB,EAAI,EAAGA,EAAIyB,EAAQzB,GAAK4R,EAC/BD,EAAO3R,GAAM,IAAM0R,EAAM1R,GAAM6Q,EAC/Bc,EAAO3R,EAAI,GACR,IAAMK,KAAK2R,KAAK3R,KAAKqK,IAAIgH,EAAM1R,EAAI,GAAK4Q,IAAYvQ,KAAKkO,GAAK,GAEnE,OAAOoD,CACT,CCzHO,MAQM,EAAS,EAAE,KAAM,GAAI,IAAK,IAM1B,EAdS,QAcUtR,KAAKkO,GAAe,IAUpD,MAAM0D,UAA2B,EAK/B,WAAAzD,CAAYG,EAAMO,GAChBiC,MAAM,CACJxC,KAAMA,EACNyC,MAAO,UACPtC,OAAQ,EACRI,gBAAiBA,EACjBE,QAAQ,EACRM,cAAe,EACfV,YAAa,GAEjB,EASK,MAAM,EAAc,CACzB,IAAIiD,EAAmB,UACvB,IAAIA,EAAmB,YAAa,OACpC,IAAIA,EAAmB,iCACvB,IAAIA,EAAmB,4BACvB,IAAIA,EAAmB,gDACvB,IAAIA,EAAmB,+CAAgD,OACvE,IAAIA,EAAmB,6CAA8C,QC3DvE,IAAIC,EAAQ,CAAC,ECEb,IAAIC,EAAa,CAAC,EAiBX,SAAS,EAAIC,EAAQC,EAAaC,GACvC,MAAMC,EAAaH,EAAOxC,UACpB4C,EAAkBH,EAAYzC,UAC9B2C,KAAcJ,IAClBA,EAAWI,GAAc,CAAC,GAE5BJ,EAAWI,GAAYC,GAAmBF,CAC5C,CCzBA,OACEG,QAAS,EACTC,aAAc,EACdC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,KAAM,ICTR,MAAMC,EAAW,CACf,EAAG,iCACH,EAAG,qCACH,EAAG,mCACH,EAAG,wDACH,EAAG,iDACH,EAAG,yCACH,EAAG,kCACH,EAAG,oDACH,GAAI,oEACJ,GAAI,0CACJ,GAAI,0EACJ,GAAI,iBACJ,GAAI,gBACJ,GAAI,kEACJ,GAAI,sDACJ,GAAI,mDACJ,GAAI,8DACJ,GAAI,wDACJ,GAAI,sDACJ,GAAI,kEACJ,GAAI,oDACJ,GAAI,iDACJ,GAAI,+BACJ,GAAI,+BACJ,GAAI,gDACJ,GAAI,uDACJ,GAAI,oEACJ,GAAI,2CACJ,GAAI,gBACJ,GAAI,0BACJ,GAAI,mBACJ,GAAI,8BACJ,GAAI,sCACJ,GAAI,wBACJ,GAAI,wCACJ,GAAI,kEACJ,GAAI,qCACJ,GAAI,qDACJ,GAAI,2DACJ,GAAI,+DACJ,GAAI,2DACJ,GAAI,4CACJ,GAAI,sDACJ,GAAI,kCACJ,GAAI,2CACJ,GAAI,wDACJ,GAAI,sDACJ,GAAI,qCACJ,GAAI,mCACJ,GAAI,4BACJ,GAAI,+EACJ,GAAI,uFACJ,GAAI,iCACJ,GAAI,wPACJ,GAAI,uGACJ,GAAI,sGACJ,GAAI,gEAQN,MAAMC,UAAuBrM,MAI3B,WAAA6H,CAAYG,GACV,MAAMsE,EAAUF,EAASpE,GAEzBwC,MAAM8B,GAWNtR,KAAKgN,KAAOA,EAKZhN,KAAKuR,KAAO,iBAGZvR,KAAKsR,QAAUA,CACjB,EAGF,QC3FO,SAASE,EAAOC,EAAWC,GAChC,IAAKD,EACH,MAAM,IAAI,EAAeC,EAE7B,CCWO,SAASC,EAAeC,GAC7B,MAAMzE,EAAS0E,IACf,IAAK,IAAIxT,EAAI,EAAGyT,EAAKF,EAAY9R,OAAQzB,EAAIyT,IAAMzT,EACjD0T,EAAiB5E,EAAQyE,EAAYvT,IAEvC,OAAO8O,CACT,CAyBO,SAASzP,EAAOyP,EAAQtO,EAAOmT,GACpC,OAAIA,GACFA,EAAK,GAAK7E,EAAO,GAAKtO,EACtBmT,EAAK,GAAK7E,EAAO,GAAKtO,EACtBmT,EAAK,GAAK7E,EAAO,GAAKtO,EACtBmT,EAAK,GAAK7E,EAAO,GAAKtO,EACfmT,GAEF,CACL7E,EAAO,GAAKtO,EACZsO,EAAO,GAAKtO,EACZsO,EAAO,GAAKtO,EACZsO,EAAO,GAAKtO,EAEhB,CA0BO,SAASoT,EAAyB9E,EAAQhE,EAAGgH,GAClD,IAAI+B,EAAIC,EAeR,OAbED,EADE/I,EAAIgE,EAAO,GACRA,EAAO,GAAKhE,EACRgE,EAAO,GAAKhE,EAChBA,EAAIgE,EAAO,GAEX,EAGLgF,EADEhC,EAAIhD,EAAO,GACRA,EAAO,GAAKgD,EACRhD,EAAO,GAAKgD,EAChBA,EAAIhD,EAAO,GAEX,EAEA+E,EAAKA,EAAKC,EAAKA,CACxB,CAUO,SAASC,EAAmBjF,EAAQkF,GACzC,OAAOC,EAAWnF,EAAQkF,EAAW,GAAIA,EAAW,GACtD,CAcO,SAASE,EAAeC,EAASC,GACtC,OACED,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,IACtBA,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,EAE1B,CAWO,SAASF,EAAWnF,EAAQhE,EAAGgH,GACpC,OAAOhD,EAAO,IAAMhE,GAAKA,GAAKgE,EAAO,IAAMA,EAAO,IAAMgD,GAAKA,GAAKhD,EAAO,EAC3E,CASO,SAASuF,EAAuBvF,EAAQkF,GAC7C,MAAM5I,EAAO0D,EAAO,GACdzD,EAAOyD,EAAO,GACdxD,EAAOwD,EAAO,GACdvD,EAAOuD,EAAO,GACdhE,EAAIkJ,EAAW,GACflC,EAAIkC,EAAW,GACrB,IAAIM,EAAeC,EAAa9B,QAchC,OAbI3H,EAAIM,EACNkJ,GAA8BC,EAAazB,KAClChI,EAAIQ,IACbgJ,GAA8BC,EAAa3B,OAEzCd,EAAIzG,EACNiJ,GAA8BC,EAAa1B,MAClCf,EAAIvG,IACb+I,GAA8BC,EAAa5B,OAEzC2B,IAAiBC,EAAa9B,UAChC6B,EAAeC,EAAa7B,cAEvB4B,CACT,CAOO,SAASd,IACd,MAAO,CAACpT,IAAUA,KAAWA,KAAWA,IAC1C,CAWO,SAASoU,EAAepJ,EAAMC,EAAMC,EAAMC,EAAMoI,GACrD,OAAIA,GACFA,EAAK,GAAKvI,EACVuI,EAAK,GAAKtI,EACVsI,EAAK,GAAKrI,EACVqI,EAAK,GAAKpI,EACHoI,GAEF,CAACvI,EAAMC,EAAMC,EAAMC,EAC5B,CAOO,SAASkJ,EAAoBd,GAClC,OAAOa,EAAepU,IAAUA,KAAWA,KAAWA,IAAUuT,EAClE,CAOO,SAASe,EAA6BV,EAAYL,GACvD,MAAM7I,EAAIkJ,EAAW,GACflC,EAAIkC,EAAW,GACrB,OAAOQ,EAAe1J,EAAGgH,EAAGhH,EAAGgH,EAAG6B,EACpC,CAoBO,SAASgB,EACdC,EACAtV,EACAuG,EACAgP,EACAlB,GAGA,OAAOmB,EADQL,EAAoBd,GACEiB,EAAiBtV,EAAQuG,EAAKgP,EACrE,CAmBO,SAASE,EAAOZ,EAASC,GAC9B,OACED,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,EAE1B,CA6CO,SAASV,EAAiB5E,EAAQkF,GACnCA,EAAW,GAAKlF,EAAO,KACzBA,EAAO,GAAKkF,EAAW,IAErBA,EAAW,GAAKlF,EAAO,KACzBA,EAAO,GAAKkF,EAAW,IAErBA,EAAW,GAAKlF,EAAO,KACzBA,EAAO,GAAKkF,EAAW,IAErBA,EAAW,GAAKlF,EAAO,KACzBA,EAAO,GAAKkF,EAAW,GAE3B,CAsBO,SAASc,EACdhG,EACA8F,EACAtV,EACAuG,EACAgP,GAEA,KAAOvV,EAASuG,EAAKvG,GAAUuV,EAC7BG,EAASlG,EAAQ8F,EAAgBtV,GAASsV,EAAgBtV,EAAS,IAErE,OAAOwP,CACT,CAmBO,SAASkG,EAASlG,EAAQhE,EAAGgH,GAClChD,EAAO,GAAKzO,KAAKqI,IAAIoG,EAAO,GAAIhE,GAChCgE,EAAO,GAAKzO,KAAKqI,IAAIoG,EAAO,GAAIgD,GAChChD,EAAO,GAAKzO,KAAKwK,IAAIiE,EAAO,GAAIhE,GAChCgE,EAAO,GAAKzO,KAAKwK,IAAIiE,EAAO,GAAIgD,EAClC,CAWO,SAASmD,EAAcnG,EAAQoG,GACpC,IAAI5P,EAEJ,OADAA,EAAM4P,EAASC,EAAcrG,IACzBxJ,IAGJA,EAAM4P,EAASE,EAAetG,IAC1BxJ,IAGJA,EAAM4P,EAASG,EAAYvG,IACvBxJ,IAGJA,EAAM4P,EAAS,EAAWpG,IACtBxJ,IAGG,IACT,CAQO,SAASgQ,EAAQxG,GACtB,IAAIyG,EAAO,EAIX,OAHK,GAAQzG,KACXyG,EAAO,GAASzG,GAAU0G,EAAU1G,IAE/ByG,CACT,CAQO,SAASJ,EAAcrG,GAC5B,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAASsG,EAAetG,GAC7B,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAAS2G,EAAU3G,GACxB,MAAO,EAAEA,EAAO,GAAKA,EAAO,IAAM,GAAIA,EAAO,GAAKA,EAAO,IAAM,EACjE,CAQO,SAAS4G,EAAU5G,EAAQ6G,GAChC,IAAI3B,EAYJ,MAXe,gBAAX2B,EACF3B,EAAamB,EAAcrG,GACP,iBAAX6G,EACT3B,EAAaoB,EAAetG,GACR,aAAX6G,EACT3B,EAAa,EAAWlF,GACJ,cAAX6G,EACT3B,EAAaqB,EAAYvG,GAEzBqE,GAAO,EAAO,IAETa,CACT,CA8CO,SAAS4B,EAAmBC,EAAQxE,EAAYyE,EAAUC,GAC/D,MAAMlC,EAAMxC,EAAa0E,EAAK,GAAM,EAC9BjC,EAAMzC,EAAa0E,EAAK,GAAM,EAC9BC,EAAc3V,KAAK4V,IAAIH,GACvBI,EAAc7V,KAAK8V,IAAIL,GACvBM,EAAOvC,EAAKmC,EACZK,EAAOxC,EAAKqC,EACZI,EAAOxC,EAAKkC,EACZO,EAAOzC,EAAKoC,EACZpL,EAAI+K,EAAO,GACX/D,EAAI+D,EAAO,GACjB,MAAO,CACL/K,EAAIsL,EAAOG,EACXzE,EAAIuE,EAAOC,EACXxL,EAAIsL,EAAOG,EACXzE,EAAIuE,EAAOC,EACXxL,EAAIsL,EAAOG,EACXzE,EAAIuE,EAAOC,EACXxL,EAAIsL,EAAOG,EACXzE,EAAIuE,EAAOC,EACXxL,EAAIsL,EAAOG,EACXzE,EAAIuE,EAAOC,EAEf,CAQO,SAASd,EAAU1G,GACxB,OAAOA,EAAO,GAAKA,EAAO,EAC5B,CAoBO,SAAS0H,EAAgBrC,EAASC,EAAST,GAChD,MAAM8C,EAAe9C,GAvZd,CAACvT,IAAUA,KAAU,KAAW,KAgbvC,OAxBIsW,GAAWvC,EAASC,IAClBD,EAAQ,GAAKC,EAAQ,GACvBqC,EAAa,GAAKtC,EAAQ,GAE1BsC,EAAa,GAAKrC,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvBqC,EAAa,GAAKtC,EAAQ,GAE1BsC,EAAa,GAAKrC,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvBqC,EAAa,GAAKtC,EAAQ,GAE1BsC,EAAa,GAAKrC,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvBqC,EAAa,GAAKtC,EAAQ,GAE1BsC,EAAa,GAAKrC,EAAQ,IAG5BK,EAAoBgC,GAEfA,CACT,CA0BO,SAAS,EAAW3H,GACzB,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAASuG,EAAYvG,GAC1B,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAAS,GAASA,GACvB,OAAOA,EAAO,GAAKA,EAAO,EAC5B,CASO,SAAS4H,GAAWvC,EAASC,GAClC,OACED,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,EAE1B,CAQO,SAAS,GAAQtF,GACtB,OAAOA,EAAO,GAAKA,EAAO,IAAMA,EAAO,GAAKA,EAAO,EACrD,CA0GO,SAAS6H,GAAe7H,EAAQwD,EAAaqB,EAAMiD,GACxD,GAAI,GAAQ9H,GACV,OAAO2F,EAAoBd,GAE7B,IAAIJ,EAAc,GAClB,GAAIqD,EAAQ,EAAG,CACb,MAAMC,EAAQ/H,EAAO,GAAKA,EAAO,GAC3BrD,EAASqD,EAAO,GAAKA,EAAO,GAClC,IAAK,IAAI9O,EAAI,EAAGA,EAAI4W,IAAS5W,EAC3BuT,EAAY1R,KACViN,EAAO,GAAM+H,EAAQ7W,EAAK4W,EAC1B9H,EAAO,GACPA,EAAO,GACPA,EAAO,GAAMrD,EAASzL,EAAK4W,EAC3B9H,EAAO,GAAM+H,EAAQ7W,EAAK4W,EAC1B9H,EAAO,GACPA,EAAO,GACPA,EAAO,GAAMrD,EAASzL,EAAK4W,EAGjC,MACErD,EAAc,CACZzE,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,IAGXwD,EAAYiB,EAAaA,EAAa,GACtC,MAAMuD,EAAK,GACLC,EAAK,GACX,IAAK,IAAI/W,EAAI,EAAGwG,EAAI+M,EAAY9R,OAAQzB,EAAIwG,EAAGxG,GAAK,EAClD8W,EAAGjV,KAAK0R,EAAYvT,IACpB+W,EAAGlV,KAAK0R,EAAYvT,EAAI,IAE1B,OA1yBF,SAA4B8W,EAAIC,EAAIpD,GAKlC,OAAOa,EAJMnU,KAAKqI,IAAIkE,MAAM,KAAMkK,GACrBzW,KAAKqI,IAAIkE,MAAM,KAAMmK,GACrB1W,KAAKwK,IAAI+B,MAAM,KAAMkK,GACrBzW,KAAKwK,IAAI+B,MAAM,KAAMmK,GACYpD,EAChD,CAoyBSqD,CAAmBF,EAAIC,EAAIpD,EACpC,CClmBO,SAAS,GAAOsD,EAAaC,GAClC,IAAInC,GAAS,EACb,IAAK,IAAI/U,EAAIiX,EAAYxV,OAAS,EAAGzB,GAAK,IAAKA,EAC7C,GAAIiX,EAAYjX,IAAMkX,EAAYlX,GAAI,CACpC+U,GAAS,EACT,KACF,CAEF,OAAOA,CACT,CAgKO,SAAS,GAAMf,EAAYmD,GAChC,GAAIA,EAAWxH,WAAY,CACzB,MAAMyH,EAAa,GAASD,EAAWtH,aACjCwH,EAaH,SAAuBrD,EAAYmD,EAAYG,GACpD,MAAMC,EAAmBJ,EAAWtH,YACpC,IAAIwH,EAAa,EAEfF,EAAWxH,aACVqE,EAAW,GAAKuD,EAAiB,IAAMvD,EAAW,GAAKuD,EAAiB,MAEzED,EAAoBA,GAAqB,GAASC,GAClDF,EAAahX,KAAKQ,OACfmT,EAAW,GAAKuD,EAAiB,IAAMD,IAG5C,OAAOD,CACT,CA1BuB,CAAcrD,EAAYmD,EAAYC,GACrDC,IACFrD,EAAW,IAAMqD,EAAaD,EAElC,CACA,OAAOpD,CACT,CCtZO,SAAS,GAAMxT,EAAOkI,EAAKmC,GAChC,OAAOxK,KAAKqI,IAAIrI,KAAKwK,IAAIrK,EAAOkI,GAAMmC,EACxC,CAaO,SAAS2M,GAAuB1M,EAAGgH,EAAG2F,EAAIC,EAAIC,EAAIC,GACvD,MAAM/D,EAAK8D,EAAKF,EACV3D,EAAK8D,EAAKF,EAChB,GAAW,IAAP7D,GAAmB,IAAPC,EAAU,CACxB,MAAM1J,IAAMU,EAAI2M,GAAM5D,GAAM/B,EAAI4F,GAAM5D,IAAOD,EAAKA,EAAKC,EAAKA,GACxD1J,EAAI,GACNqN,EAAKE,EACLD,EAAKE,GACIxN,EAAI,IACbqN,GAAM5D,EAAKzJ,EACXsN,GAAM5D,EAAK1J,EAEf,CACA,OAAO,GAAgBU,EAAGgH,EAAG2F,EAAIC,EACnC,CAUO,SAAS,GAAgBD,EAAIC,EAAIC,EAAIC,GAC1C,MAAM/D,EAAK8D,EAAKF,EACV3D,EAAK8D,EAAKF,EAChB,OAAO7D,EAAKA,EAAKC,EAAKA,CACxB,CAyEO,SAAS,GAAU+D,GACxB,OAAQA,EAAiBxX,KAAKkO,GAAM,GACtC,CASO,SAAS,GAAOjE,EAAG/D,GACxB,MAAM8D,EAAIC,EAAI/D,EACd,OAAO8D,EAAI9D,EAAI,EAAI8D,EAAI9D,EAAI8D,CAC7B,CAUO,SAASyN,GAAKxN,EAAG/D,EAAGuE,GACzB,OAAOR,EAAIQ,GAAKvE,EAAI+D,EACtB,CAQO,SAAS,GAAQC,EAAGwN,GACzB,MAAMC,EAAS3X,KAAKC,IAAI,GAAIyX,GAC5B,OAAO1X,KAAK4X,MAAM1N,EAAIyN,GAAUA,CAClC,CAoBO,SAASnX,GAAM0J,EAAGwN,GACvB,OAAO1X,KAAKQ,MAAM,GAAQ0J,EAAGwN,GAC/B,CASO,SAAS9M,GAAKV,EAAGwN,GACtB,OAAO1X,KAAK4K,KAAK,GAAQV,EAAGwN,GAC9B,CChLO,MAAMG,GAAiB,UAWvB,SAASC,GAAYC,EAAIC,EAAIC,GAClCA,EAASA,GAAUJ,GACnB,MAAMK,EAAO,GAAUH,EAAG,IACpBI,EAAO,GAAUH,EAAG,IACpBI,GAAeD,EAAOD,GAAQ,EAC9BG,EAAc,GAAUL,EAAG,GAAKD,EAAG,IAAM,EACzC9N,EACJjK,KAAK8V,IAAIsC,GAAepY,KAAK8V,IAAIsC,GACjCpY,KAAK8V,IAAIuC,GACPrY,KAAK8V,IAAIuC,GACTrY,KAAK4V,IAAIsC,GACTlY,KAAK4V,IAAIuC,GACb,OAAO,EAAIF,EAASjY,KAAKsY,MAAMtY,KAAKuK,KAAKN,GAAIjK,KAAKuK,KAAK,EAAIN,GAC7D,CCnCA,MAAMsO,GAAS,CACbC,KAAM,EACNC,KAAM,EACNC,MAAO,EACPC,KAAM,GAMR,IAAIC,GAAQL,GAAOC,KC+EnB,IAAIK,IAAwB,EAKrB,SAASC,GAAyBC,GAEvCF,UADyBxL,IAAZ0L,GAA+BA,EAE9C,CAQO,SAASC,GAAe3H,EAAOC,GACpC,QAAejE,IAAXiE,EACF,IAAK,IAAI3R,EAAI,EAAGyT,EAAK/B,EAAMjQ,OAAQzB,EAAIyT,IAAMzT,EAC3C2R,EAAO3R,GAAK0R,EAAM1R,QAIpB2R,EAASD,EAAMpQ,QAEjB,OAAOqQ,CACT,CAOO,SAAS2H,GAAkB5H,EAAOC,GACvC,QAAejE,IAAXiE,GAAwBD,IAAUC,EAAQ,CAC5C,IAAK,IAAI3R,EAAI,EAAGyT,EAAK/B,EAAMjQ,OAAQzB,EAAIyT,IAAMzT,EAC3C2R,EAAO3R,GAAK0R,EAAM1R,GAEpB0R,EAAQC,CACV,CACA,OAAOD,CACT,CASO,SAAS6H,GAAcpC,IVpHvB,SAAaxI,EAAMwI,GACxBjF,EAAMvD,GAAQwI,CAChB,CUmHEqC,CAAQrC,EAAWvH,UAAWuH,GAC9B,EAAiBA,EAAYA,EAAYkC,GAC3C,CAkBO,SAAS,GAAII,GAClB,MAAiC,iBAAnBA,EVrJZvH,EAFgBvD,EUwJgB,IVrJhCuD,EAAMvD,EAAK+K,QAAQ,yCAA0C,aAC7D,KUqJ4B,GAAoB,KVzJ7C,IAAa/K,CU0JpB,CAsBO,SAASY,GAAmB4H,EAAY9F,EAAYC,EAAOF,GAEhE,IAAIuI,EACJ,MAAM/L,GAFNuJ,EAAa,GAAIA,IAESxG,yBAC1B,GAAI/C,GAEF,GADA+L,EAAkB/L,EAAOyD,EAAYC,GACjCF,GAASA,IAAU+F,EAAWrH,WAAY,CAC5C,MAAMJ,EAAgByH,EAAWpH,mBAC7BL,IACFiK,EACGA,EAAkBjK,EAAiB,EAAgB0B,GAE1D,MACK,CACL,MAAMwI,EAAYzC,EAAWrH,WAC7B,GAAkB,WAAb8J,IAA2BxI,GAAmB,WAATA,EACxCuI,EAAkBtI,MACb,CAIL,MAAMU,EAAa8H,GACjB1C,EACA,GAAI,cAEN,GAAIpF,IAAeuH,IAAmC,YAAdM,EAEtCD,EAAkBtI,EAAa8F,EAAWpH,uBACrC,CACL,IAAI+J,EAAW,CACbxI,EAAM,GAAKD,EAAa,EACxBC,EAAM,GACNA,EAAM,GAAKD,EAAa,EACxBC,EAAM,GACNA,EAAM,GACNA,EAAM,GAAKD,EAAa,EACxBC,EAAM,GACNA,EAAM,GAAKD,EAAa,GAE1ByI,EAAW/H,EAAW+H,EAAUA,EAAU,GAG1CH,GAFcxB,GAAY2B,EAASxY,MAAM,EAAG,GAAIwY,EAASxY,MAAM,EAAG,IACnD6W,GAAY2B,EAASxY,MAAM,EAAG,GAAIwY,EAASxY,MAAM,EAAG,KAC9B,CACvC,CACA,MAAMoO,EAAgB0B,EAClB,EAAgBA,GAChB+F,EAAWpH,wBACOrC,IAAlBgC,IACFiK,GAAmBjK,EAEvB,CACF,CACA,OAAOiK,CACT,CASO,SAASI,GAAyBC,IArGlC,SAAwBA,GAC7BA,EAAYC,QAAQV,GACtB,CAoGEW,CAAeF,GACfA,EAAYC,SAAQ,SAAU7H,GAC5B4H,EAAYC,SAAQ,SAAU5H,GACxBD,IAAWC,GACb,EAAiBD,EAAQC,EAAagH,GAE1C,GACF,GACF,CA0CO,SAASc,GAAiBhD,EAAYiD,GAC3C,OAAKjD,EAGqB,iBAAfA,EACF,GAAIA,GAEoB,EALxB,GAAIiD,EAMf,CAwHO,SAAS,GAAWC,EAAaC,GACtC,GAAID,IAAgBC,EAClB,OAAO,EAET,MAAMC,EAAaF,EAAYvK,aAAewK,EAAYxK,WAC1D,GAAIuK,EAAYzK,YAAc0K,EAAY1K,UACxC,OAAO2K,EAGT,OADsBV,GAA4BQ,EAAaC,KACtCjB,IAAkBkB,CAC7C,CAWO,SAASV,GACdW,EACAC,GAIA,IAAIC,ETpZC,SAAanI,EAAYC,GAC9B,IAAImI,EAIJ,OAHIpI,KAAcJ,GAAcK,KAAmBL,EAAWI,KAC5DoI,EAAYxI,EAAWI,GAAYC,IAE9BmI,CACT,CS8YsB,CAFDH,EAAiB5K,UACZ6K,EAAsB7K,WAK9C,OAHK8K,IACHA,EAAgBpB,IAEXoB,CACT,CAYO,SAASE,GAAaxI,EAAQC,GAGnC,OAAOwH,GAFkB,GAAIzH,GACC,GAAIC,GAEpC,CAgBO,SAASsI,GAAU3G,EAAY5B,EAAQC,GAE5C,OADsBuI,GAAaxI,EAAQC,EACpCqI,CAAc1G,OAAYtG,EAAWsG,EAAWvS,OACzD,CAcO,SAAS,GAAgBqN,EAAQsD,EAAQC,EAAauE,GAE3D,OAAOD,GAAe7H,EADA8L,GAAaxI,EAAQC,QACE3E,EAAWkJ,EAC1D,CAyBA,IAAIiE,GAAiB,KA0Bd,SAAS,KACd,OAAOA,EACT,CAmBO,SAASC,GAAiB9G,EAAYwG,GAC3C,OAAKK,GAGEF,GAAU3G,EAAYwG,EAAkBK,IAFtC7G,CAGX,CASO,SAAS+G,GAAmB/G,EAAYgH,GAC7C,OAAKH,GAgBEF,GAAU3G,EAAY6G,GAAgBG,IAdzC9B,KACC,GAAOlF,EAAY,CAAC,EAAG,KACxBA,EAAW,KAAO,KAClBA,EAAW,IAAM,KACjBA,EAAW,KAAO,IAClBA,EAAW,IAAM,KAEjBkF,IAAwB,EDjkBvB,YAAiB+B,GAClBhC,GAAQL,GAAOE,MAGnBoC,QAAQpC,QAAQmC,EAClB,CC6jBMnC,CACE,2FAGG9E,EAGX,CAuBO,SAASmH,GAAerM,EAAQkM,GACrC,OAAKH,GAGE,GAAgB/L,EAAQ+L,GAAgBG,GAFtClM,CAGX,CAiFO,IAlcLsM,GACAC,GACAC,GAmcAvB,GAAyB,GACzBA,GAAyB,GAtczBqB,GA2cE,EA1cFC,GA2cE5J,EA1cF6J,GA2cEvJ,EAHA,EAtcWkI,SAAQ,SAAUI,GAC7Be,GAAanB,SAAQ,SAAUK,GAC7B,EAAiBD,EAAaC,EAAae,IAC3C,EAAiBf,EAAaD,EAAaiB,GAC7C,GACF,ICnEF,OAhKA,MACE,WAAA9M,GAKE7M,KAAK4Z,oBAAiB7N,EAMtB/L,KAAK6Z,8BAA2B9N,EAMhC/L,KAAK8Z,oBAAsB,IAC7B,CASA,cAAAC,CAAetJ,EAAQ3D,GACrB,GAAIA,EAAS,CACX,IAAI8M,EAAiB9M,EAAQ8M,eACzB,GAAc9M,EAAQ8M,gBACtB5Z,KAAKga,eAAevJ,GAEtB3D,EAAQK,QACRyM,GAC8B,gBAA9BA,EAAezL,aAEfyL,EAAiB,GAAcA,GAC/BA,EAAe/K,eAAe/B,EAAQK,SAExCL,EAAU,CACR8M,eAAgBA,EAChBK,kBAAmBnN,EAAQmN,kBAE/B,CACA,OAAOja,KAAKka,aAAapN,EAC3B,CAWA,YAAAoN,CAAapN,GACX,OAAOV,OAAO+N,OACZ,CACEP,eAAgB5Z,KAAK4Z,eACrBK,kBAAmBja,KAAK6Z,0BAE1B/M,EAEJ,CAMA,OAAAsN,GACE,OAAO,GACT,CAUA,WAAAC,CAAY5J,EAAQ3D,GAClB,OAAO,GACT,CAUA,YAAAwN,CAAa7J,EAAQ3D,GACnB,OAAO,GACT,CAUA,YAAAyN,CAAa9J,EAAQ3D,GACnB,OAAO,GACT,CASA,cAAAkN,CAAevJ,GACb,OAAO,GACT,CAUA,YAAA+J,CAAaC,EAAS3N,GACpB,OAAO,GACT,CAUA,aAAA4N,CAAcC,EAAU7N,GACtB,OAAO,GACT,CAUA,aAAA8N,CAAcC,EAAU/N,GACtB,OAAO,GACT,GCpJF,OA9DA,MAIE,WAAAD,CAAY5L,GAIVjB,KAAK8a,mBAKL9a,KAAK+a,iBAOL/a,KAAKiB,KAAOA,EAOZjB,KAAKgb,OAAS,IAChB,CAOA,cAAAC,GACEjb,KAAK+a,kBAAmB,CAC1B,CAMA,eAAAG,GACElb,KAAK8a,oBAAqB,CAC5B,GCpDF,GAMkB,iBCsBlB,OA3BA,MACE,WAAAjO,GAME7M,KAAKmb,UAAW,CAClB,CAKA,OAAAC,GACOpb,KAAKmb,WACRnb,KAAKmb,UAAW,EAChBnb,KAAKqb,kBAET,CAMA,eAAAA,GAAmB,GCed,SAASC,GAAU3S,EAAG/D,GAC3B,OAAO+D,EAAI/D,EAAI,EAAI+D,EAAI/D,GAAK,EAAI,CAClC,CAoCO,SAAS2W,GAAkBhZ,EAAKyY,EAAQQ,GAC7C,GAAIjZ,EAAI,IAAMyY,EACZ,OAAO,EAGT,MAAMpS,EAAIrG,EAAIzC,OACd,GAAIkb,GAAUzY,EAAIqG,EAAI,GACpB,OAAOA,EAAI,EAGb,GAAyB,mBAAd4S,EAA0B,CACnC,IAAK,IAAInd,EAAI,EAAGA,EAAIuK,IAAKvK,EAAG,CAC1B,MAAMod,EAAYlZ,EAAIlE,GACtB,GAAIod,IAAcT,EAChB,OAAO3c,EAET,GAAIod,EAAYT,EACd,OAAIQ,EAAUR,EAAQzY,EAAIlE,EAAI,GAAIod,GAAa,EACtCpd,EAAI,EAENA,CAEX,CACA,OAAOuK,EAAI,CACb,CAEA,GAAI4S,EAAY,EAAG,CACjB,IAAK,IAAInd,EAAI,EAAGA,EAAIuK,IAAKvK,EACvB,GAAIkE,EAAIlE,GAAK2c,EACX,OAAO3c,EAAI,EAGf,OAAOuK,EAAI,CACb,CAEA,GAAI4S,EAAY,EAAG,CACjB,IAAK,IAAInd,EAAI,EAAGA,EAAIuK,IAAKvK,EACvB,GAAIkE,EAAIlE,IAAM2c,EACZ,OAAO3c,EAGX,OAAOuK,EAAI,CACb,CAEA,IAAK,IAAIvK,EAAI,EAAGA,EAAIuK,IAAKvK,EAAG,CAC1B,GAAIkE,EAAIlE,IAAM2c,EACZ,OAAO3c,EAET,GAAIkE,EAAIlE,GAAK2c,EACX,OAAIzY,EAAIlE,EAAI,GAAK2c,EAASA,EAASzY,EAAIlE,GAC9BA,EAAI,EAENA,CAEX,CACA,OAAOuK,EAAI,CACb,CAOO,SAAS8S,GAAgBnZ,EAAKoZ,EAAOzX,GAC1C,KAAOyX,EAAQzX,GAAK,CAClB,MAAM0X,EAAMrZ,EAAIoZ,GAChBpZ,EAAIoZ,GAASpZ,EAAI2B,GACjB3B,EAAI2B,GAAO0X,IACTD,IACAzX,CACJ,CACF,CAOO,SAAS,GAAO3B,EAAK2H,GAC1B,MAAM2R,EAAY3L,MAAM4L,QAAQ5R,GAAQA,EAAO,CAACA,GAC1CpK,EAAS+b,EAAU/b,OACzB,IAAK,IAAIzB,EAAI,EAAGA,EAAIyB,EAAQzB,IAC1BkE,EAAIA,EAAIzC,QAAU+b,EAAUxd,EAEhC,CAsBO,SAAS,GAAO0d,EAAMC,GAC3B,MAAMC,EAAOF,EAAKjc,OAClB,GAAImc,IAASD,EAAKlc,OAChB,OAAO,EAET,IAAK,IAAIzB,EAAI,EAAGA,EAAI4d,EAAM5d,IACxB,GAAI0d,EAAK1d,KAAO2d,EAAK3d,GACnB,OAAO,EAGX,OAAO,CACT,CC/KO,SAAS,KAAQ,CCnBjB,SAAS,GAAM6d,GACpB,IAAK,MAAMC,KAAYD,SACdA,EAAOC,EAElB,CAOO,SAAS,GAAQD,GACtB,IAAIC,EACJ,IAAKA,KAAYD,EACf,OAAO,EAET,OAAQC,CACV,CCkKA,OAhKA,cAAqB,GAInB,WAAAtP,CAAYmO,GACVxL,QAMAxP,KAAKoc,aAAepB,EAMpBhb,KAAKqc,iBAAmB,KAMxBrc,KAAKsc,aAAe,KAMpBtc,KAAKuc,WAAa,IACpB,CAMA,gBAAAC,CAAiBvb,EAAMwb,GACrB,IAAKxb,IAASwb,EACZ,OAEF,MAAMC,EAAY1c,KAAKuc,aAAevc,KAAKuc,WAAa,CAAC,GACnDI,EAAmBD,EAAUzb,KAAUyb,EAAUzb,GAAQ,IAC1D0b,EAAiBC,SAASH,IAC7BE,EAAiBzc,KAAKuc,EAE1B,CAYA,aAAAI,CAAcC,GACZ,MAAMC,EAA4B,iBAAVD,EAClB7b,EAAO8b,EAAWD,EAAQA,EAAM7b,KAChCyb,EAAY1c,KAAKuc,YAAcvc,KAAKuc,WAAWtb,GACrD,IAAKyb,EACH,OAGF,MAAMM,EAAMD,EAAW,IAAIE,GAAMH,GAA8B,EAC1DE,EAAIhC,SACPgC,EAAIhC,OAAShb,KAAKoc,cAAgBpc,MAEpC,MAAMkd,EAAcld,KAAKsc,eAAiBtc,KAAKsc,aAAe,CAAC,GACzDa,EACJnd,KAAKqc,mBAAqBrc,KAAKqc,iBAAmB,CAAC,GAMrD,IAAIe,EALEnc,KAAQic,IACZA,EAAYjc,GAAQ,EACpBkc,EAAgBlc,GAAQ,KAExBic,EAAYjc,GAEd,IAAK,IAAI5C,EAAI,EAAGyT,EAAK4K,EAAU5c,OAAQzB,EAAIyT,IAAMzT,EAU/C,GARE+e,EADE,gBAAiBV,EAAUre,GAE3Bqe,EAAUre,GACVgf,YAAYL,GAGZN,EAAUre,GACV8B,KAAKH,KAAMgd,IAEG,IAAdI,GAAuBJ,EAAIlC,mBAAoB,CACjDsC,GAAY,EACZ,KACF,CAEF,GAA4B,KAAtBF,EAAYjc,GAAa,CAC7B,IAAIqc,EAAKH,EAAgBlc,GAEzB,WADOkc,EAAgBlc,GAChBqc,KACLtd,KAAKud,oBAAoBtc,EAAM,WAE1Bic,EAAYjc,EACrB,CACA,OAAOmc,CACT,CAKA,eAAA/B,GACErb,KAAKuc,YAAc,GAAMvc,KAAKuc,WAChC,CASA,YAAAiB,CAAavc,GACX,OAAQjB,KAAKuc,YAAcvc,KAAKuc,WAAWtb,SAAU8K,CACvD,CAOA,WAAA0R,CAAYxc,GACV,QAAKjB,KAAKuc,aAGHtb,EACHA,KAAQjB,KAAKuc,WACbnQ,OAAO3M,KAAKO,KAAKuc,YAAYzc,OAAS,EAC5C,CAMA,mBAAAyd,CAAoBtc,EAAMwb,GACxB,MAAMC,EAAY1c,KAAKuc,YAAcvc,KAAKuc,WAAWtb,GACrD,GAAIyb,EAAW,CACb,MAAMgB,EAAQhB,EAAU9c,QAAQ6c,IACjB,IAAXiB,IACE1d,KAAKqc,kBAAoBpb,KAAQjB,KAAKqc,kBAExCK,EAAUgB,GAAS,KACjB1d,KAAKqc,iBAAiBpb,KAExByb,EAAUzc,OAAOyd,EAAO,GACC,IAArBhB,EAAU5c,eACLE,KAAKuc,WAAWtb,IAI/B,CACF,GChLF,GAMU,SANV,GAaS,QAbT,GA0BQ,OCYD,SAAS0c,GAAO3C,EAAQ/Z,EAAMwb,EAAUmB,EAASC,GAItD,GAHID,GAAWA,IAAY5C,IACzByB,EAAWA,EAASqB,KAAKF,IAEvBC,EAAM,CACR,MAAME,EAAmBtB,EACzBA,EAAW,WACTzB,EAAOuC,oBAAoBtc,EAAMwb,GACjCsB,EAAiB9S,MAAMjL,KAAMge,UAC/B,CACF,CACA,MAAMC,EAAY,CAChBjD,OAAQA,EACR/Z,KAAMA,EACNwb,SAAUA,GAGZ,OADAzB,EAAOwB,iBAAiBvb,EAAMwb,GACvBwB,CACT,CAsBO,SAASC,GAAWlD,EAAQ/Z,EAAMwb,EAAUmB,GACjD,OAAOD,GAAO3C,EAAQ/Z,EAAMwb,EAAUmB,GAAS,EACjD,CAWO,SAASO,GAAcze,GACxBA,GAAOA,EAAIsb,SACbtb,EAAIsb,OAAOuC,oBAAoB7d,EAAIuB,KAAMvB,EAAI+c,UAC7C,GAAM/c,GAEV,CChEA,MAAM0e,WAAmB,GACvB,WAAAvR,GACE2C,QAEAxP,KAAKqe,GAEDre,KACF,WAEFA,KAAK6d,KAED7d,KACF,aAEFA,KAAKse,GAAiDte,KAAe,WAMrEA,KAAKue,UAAY,CACnB,CAMA,OAAAC,KACIxe,KAAKue,UACPve,KAAK6c,cAAc,GACrB,CAQA,WAAA4B,GACE,OAAOze,KAAKue,SACd,CAQA,UAAAG,CAAWzd,EAAMwb,GACf,GAAIvM,MAAM4L,QAAQ7a,GAAO,CACvB,MAAMkB,EAAMlB,EAAKnB,OACXL,EAAO,IAAIyQ,MAAM/N,GACvB,IAAK,IAAI9D,EAAI,EAAGA,EAAI8D,IAAO9D,EACzBoB,EAAKpB,GAAKsf,GAAO3d,KAAMiB,EAAK5C,GAAIoe,GAElC,OAAOhd,CACT,CACA,OAAOke,GAAO3d,KAA4B,EAAQyc,EACpD,CAQA,YAAAkC,CAAa1d,EAAMwb,GACjB,IAAI/c,EACJ,GAAIwQ,MAAM4L,QAAQ7a,GAAO,CACvB,MAAMkB,EAAMlB,EAAKnB,OACjBJ,EAAM,IAAIwQ,MAAM/N,GAChB,IAAK,IAAI9D,EAAI,EAAGA,EAAI8D,IAAO9D,EACzBqB,EAAIrB,GAAK6f,GAAWle,KAAMiB,EAAK5C,GAAIoe,EAEvC,MACE/c,EAAMwe,GAAWle,KAA4B,EAAQyc,GAGvD,OADsB,EAAWmC,OAASlf,EACnCA,CACT,CAQA,UAAAmf,CAAW5d,EAAMwb,GACf,MAAM/c,EAA4B,EAAWkf,OAC7C,GAAIlf,GAmDD,SAAiBA,GACtB,GAAIwQ,MAAM4L,QAAQpc,GAChB,IAAK,IAAIrB,EAAI,EAAGyT,EAAKpS,EAAII,OAAQzB,EAAIyT,IAAMzT,EACzC8f,GAAcze,EAAIrB,SAGpB8f,GAA6D,EAEjE,CA1DMW,CAAQpf,QACH,GAAIwQ,MAAM4L,QAAQ7a,GACvB,IAAK,IAAI5C,EAAI,EAAGyT,EAAK7Q,EAAKnB,OAAQzB,EAAIyT,IAAMzT,EAC1C2B,KAAKud,oBAAoBtc,EAAK5C,GAAIoe,QAGpCzc,KAAKud,oBAAoBtc,EAAMwb,EAEnC,EAaF2B,GAAWva,UAAUwa,GAYrBD,GAAWva,UAAUga,KASrBO,GAAWva,UAAUya,GAkBrB,UCjLO,MAAMS,WAAoB9B,GAM/B,WAAApQ,CAAY5L,EAAMvB,EAAKsf,GACrBxP,MAAMvO,GAONjB,KAAKN,IAAMA,EAQXM,KAAKgf,SAAWA,CAClB,EA4OF,OAvLA,cAAyB,GAIvB,WAAAnS,CAAYoS,GACVzP,QAKAxP,KAAKqe,GAKLre,KAAK6d,KAKL7d,KAAKse,GAML,EAAOte,MAMPA,KAAKkf,QAAU,UAEAnT,IAAXkT,GACFjf,KAAKmf,cAAcF,EAEvB,CAQA,GAAA1S,CAAI7M,GACF,IAAIb,EAIJ,OAHImB,KAAKkf,SAAWlf,KAAKkf,QAAQzS,eAAe/M,KAC9Cb,EAAQmB,KAAKkf,QAAQxf,IAEhBb,CACT,CAOA,OAAAugB,GACE,OAAQpf,KAAKkf,SAAW9S,OAAO3M,KAAKO,KAAKkf,UAAa,EACxD,CAOA,aAAAG,GACE,OAAQrf,KAAKkf,SAAW9S,OAAO+N,OAAO,CAAC,EAAGna,KAAKkf,UAAa,CAAC,CAC/D,CAMA,qBAAAI,GACE,OAAOtf,KAAKkf,OACd,CAKA,aAAAK,GACE,QAASvf,KAAKkf,OAChB,CAMA,MAAAM,CAAO9f,EAAKsf,GACV,IAAIS,EACJA,EAAY,UAAU/f,IAClBM,KAAKyd,YAAYgC,IACnBzf,KAAK6c,cAAc,IAAIkC,GAAYU,EAAW/f,EAAKsf,IAErDS,EAAYC,GACR1f,KAAKyd,YAAYgC,IACnBzf,KAAK6c,cAAc,IAAIkC,GAAYU,EAAW/f,EAAKsf,GAEvD,CAMA,iBAAAW,CAAkBjgB,EAAK+c,GACrBzc,KAAKwc,iBAAiB,UAAU9c,IAAO+c,EACzC,CAMA,oBAAAmD,CAAqBlgB,EAAK+c,GACxBzc,KAAKud,oBAAoB,UAAU7d,IAAO+c,EAC5C,CASA,GAAAzV,CAAItH,EAAKb,EAAOghB,GACd,MAAMZ,EAASjf,KAAKkf,UAAYlf,KAAKkf,QAAU,CAAC,GAChD,GAAIW,EACFZ,EAAOvf,GAAOb,MACT,CACL,MAAMmgB,EAAWC,EAAOvf,GACxBuf,EAAOvf,GAAOb,EACVmgB,IAAangB,GACfmB,KAAKwf,OAAO9f,EAAKsf,EAErB,CACF,CASA,aAAAG,CAAcF,EAAQY,GACpB,IAAK,MAAMngB,KAAOuf,EAChBjf,KAAKgH,IAAItH,EAAKuf,EAAOvf,GAAMmgB,EAE/B,CAOA,eAAAC,CAAgBrP,GACTA,EAAOyO,SAGZ9S,OAAO+N,OAAOna,KAAKkf,UAAYlf,KAAKkf,QAAU,CAAC,GAAIzO,EAAOyO,QAC5D,CAQA,KAAAa,CAAMrgB,EAAKmgB,GACT,GAAI7f,KAAKkf,SAAWxf,KAAOM,KAAKkf,QAAS,CACvC,MAAMF,EAAWhf,KAAKkf,QAAQxf,UACvBM,KAAKkf,QAAQxf,GAChB,GAAQM,KAAKkf,WACflf,KAAKkf,QAAU,MAEZW,GACH7f,KAAKwf,OAAO9f,EAAKsf,EAErB,CACF,GCzQF,MAAMgB,GACiB,oBAAdC,gBAA4D,IAAxBA,UAAUC,UACjDD,UAAUC,UAAUC,cACpB,GAkDOC,IA5CUJ,GAAGpD,SAAS,WAMboD,GAAGpD,SAAS,YAAcoD,GAAGpD,SAAS,WAQzDoD,GAAGpD,SAAS,iBACX,wCAAwCyD,KAAKL,KAM3BA,GAAGpD,SAAS,WAAcoD,GAAGpD,SAAS,QAMzCoD,GAAGpD,SAAS,aAUD,oBAArB0D,kBAAmCA,iBAQb,oBAAtBC,mBACoB,oBAApBC,iBACPC,gBAAgBF,mBAML,GACM,oBAAVG,OAAyBA,MAAM7c,UAAU2B,OCtC5Cmb,IDiDiC,WACrC,IAAIC,GAAU,EACd,IACE,MAAM9T,EAAUV,OAAOC,eAAe,CAAC,EAAG,UAAW,CACnDE,IAAK,WACHqU,GAAU,CACZ,IAGFC,OAAOrE,iBAAiB,IAAK,KAAM1P,GACnC+T,OAAOtD,oBAAoB,IAAK,KAAMzQ,EACxC,CAAE,MAAOsK,GAET,CAED,CAfsC,GCjD1B,IAAIlH,MAAM,IAehB,SAAS,GAAM8I,GACpB,OAAOhS,GAAIgS,EAAW,EAAG,EAAG,EAAG,EAAG,EAAG,EACvC,CASO,SAAS8H,GAASC,EAAYC,GACnC,MAAMC,EAAKF,EAAW,GAChBnb,EAAKmb,EAAW,GAChBtK,EAAKsK,EAAW,GAChBG,EAAKH,EAAW,GAChBI,EAAKJ,EAAW,GAChBK,EAAKL,EAAW,GAChBM,EAAKL,EAAW,GAChBnb,EAAKmb,EAAW,GAChBtK,EAAKsK,EAAW,GAChBM,EAAKN,EAAW,GAChBO,EAAKP,EAAW,GAChBQ,EAAKR,EAAW,GAStB,OAPAD,EAAW,GAAKE,EAAKI,EAAK5K,EAAK5Q,EAC/Bkb,EAAW,GAAKnb,EAAKyb,EAAKH,EAAKrb,EAC/Bkb,EAAW,GAAKE,EAAKvK,EAAKD,EAAK6K,EAC/BP,EAAW,GAAKnb,EAAK8Q,EAAKwK,EAAKI,EAC/BP,EAAW,GAAKE,EAAKM,EAAK9K,EAAK+K,EAAKL,EACpCJ,EAAW,GAAKnb,EAAK2b,EAAKL,EAAKM,EAAKJ,EAE7BL,CACT,CAaO,SAAS/Z,GAAIgS,EAAWrQ,EAAG/D,EAAG9F,EAAGR,EAAGP,EAAG+K,GAO5C,OANAkQ,EAAU,GAAKrQ,EACfqQ,EAAU,GAAKpU,EACfoU,EAAU,GAAKla,EACfka,EAAU,GAAK1a,EACf0a,EAAU,GAAKjb,EACfib,EAAU,GAAKlQ,EACRkQ,CACT,CA2BO,SAAS/N,GAAM+N,EAAW3G,GAC/B,MAAMlJ,EAAIkJ,EAAW,GACflC,EAAIkC,EAAW,GAGrB,OAFAA,EAAW,GAAK2G,EAAU,GAAK7P,EAAI6P,EAAU,GAAK7I,EAAI6I,EAAU,GAChE3G,EAAW,GAAK2G,EAAU,GAAK7P,EAAI6P,EAAU,GAAK7I,EAAI6I,EAAU,GACzD3G,CACT,CAqBO,SAAS,GAAM2G,EAAW7P,EAAGgH,GAClC,OAAO2Q,GAAS9H,EAAWhS,GAAI2Z,GAAMxX,EAAG,EAAG,EAAGgH,EAAG,EAAG,GACtD,CAqCO,SAASsR,GAAQzI,EAAW0I,EAAKC,EAAKC,EAAIC,EAAIC,EAAOC,EAAKC,GAC/D,MAAMxN,EAAM9V,KAAK8V,IAAIsN,GACfxN,EAAM5V,KAAK4V,IAAIwN,GAOrB,OANA9I,EAAU,GAAK4I,EAAKtN,EACpB0E,EAAU,GAAK6I,EAAKrN,EACpBwE,EAAU,IAAM4I,EAAKpN,EACrBwE,EAAU,GAAK6I,EAAKvN,EACpB0E,EAAU,GAAK+I,EAAMH,EAAKtN,EAAM0N,EAAMJ,EAAKpN,EAAMkN,EACjD1I,EAAU,GAAK+I,EAAMF,EAAKrN,EAAMwN,EAAMH,EAAKvN,EAAMqN,EAC1C3I,CACT,CAoCO,SAASiJ,GAAYjH,EAAQvK,GAClC,MAAMyR,GAyBoBC,EAzBF1R,GA0Bb,GAAK0R,EAAI,GAAKA,EAAI,GAAKA,EAAI,GADjC,IAAqBA,EAxB1B3Q,EAAe,IAAR0Q,EAAW,IAElB,MAAMvZ,EAAI8H,EAAO,GACX7L,EAAI6L,EAAO,GACX3R,EAAI2R,EAAO,GACXnS,EAAImS,EAAO,GACX1S,EAAI0S,EAAO,GACX3H,EAAI2H,EAAO,GASjB,OAPAuK,EAAO,GAAK1c,EAAI4jB,EAChBlH,EAAO,IAAMpW,EAAIsd,EACjBlH,EAAO,IAAMlc,EAAIojB,EACjBlH,EAAO,GAAKrS,EAAIuZ,EAChBlH,EAAO,IAAMlc,EAAIgK,EAAIxK,EAAIP,GAAKmkB,EAC9BlH,EAAO,KAAOrS,EAAIG,EAAIlE,EAAI7G,GAAKmkB,EAExBlH,CACT,CAeA,IAAIoH,GAQG,SAAS,GAASD,GACvB,MAAME,EAAkB,UAAYF,EAAItiB,KAAK,MAAQ,IACrD,GAAIugB,GACF,OAAOiC,EAET,MAAMC,EACJF,KAAuBA,GAAqBG,SAASC,cAAc,QAErE,OADAF,EAAKG,MAAMzJ,UAAYqJ,EAChBC,EAAKG,MAAMzJ,SACpB,CCnRO,SAAS0J,GACdzP,EACAtV,EACAuG,EACAgP,EACA8F,EACAhH,GAEAA,EAAOA,GAAc,GACrB,IAAI3T,EAAI,EACR,IAAK,IAAIskB,EAAIhlB,EAAQglB,EAAIze,EAAKye,GAAKzP,EAAQ,CACzC,MAAM/J,EAAI8J,EAAgB0P,GACpBxS,EAAI8C,EAAgB0P,EAAI,GAC9B3Q,EAAK3T,KAAO2a,EAAU,GAAK7P,EAAI6P,EAAU,GAAK7I,EAAI6I,EAAU,GAC5DhH,EAAK3T,KAAO2a,EAAU,GAAK7P,EAAI6P,EAAU,GAAK7I,EAAI6I,EAAU,EAC9D,CAIA,OAHIhH,GAAQA,EAAKlS,QAAUzB,IACzB2T,EAAKlS,OAASzB,GAET2T,CACT,CAYO,SAAS,GACdiB,EACAtV,EACAuG,EACAgP,EACA4O,EACAc,EACA5Q,GAEAA,EAAOA,GAAc,GACrB,MAAMsC,EAAM5V,KAAK4V,IAAIwN,GACftN,EAAM9V,KAAK8V,IAAIsN,GACfe,EAAUD,EAAO,GACjBE,EAAUF,EAAO,GACvB,IAAIvkB,EAAI,EACR,IAAK,IAAIskB,EAAIhlB,EAAQglB,EAAIze,EAAKye,GAAKzP,EAAQ,CACzC,MAAM6P,EAAS9P,EAAgB0P,GAAKE,EAC9BG,EAAS/P,EAAgB0P,EAAI,GAAKG,EACxC9Q,EAAK3T,KAAOwkB,EAAUE,EAASzO,EAAM0O,EAASxO,EAC9CxC,EAAK3T,KAAOykB,EAAUC,EAASvO,EAAMwO,EAAS1O,EAC9C,IAAK,IAAI2O,EAAIN,EAAI,EAAGM,EAAIN,EAAIzP,IAAU+P,EACpCjR,EAAK3T,KAAO4U,EAAgBgQ,EAEhC,CAIA,OAHIjR,GAAQA,EAAKlS,QAAUzB,IACzB2T,EAAKlS,OAASzB,GAET2T,CACT,CCtCA,MAAMkR,GFCG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GEsTzB,OAzSA,cAAuB,GACrB,WAAArW,GACE2C,QAMAxP,KAAKkN,QrB4IA,CAACzO,IAAUA,KAAU,KAAW,KqBtIrCuB,KAAKmjB,iBAAmB,EAMxBnjB,KAAKojB,yCAA2C,EAMhDpjB,KAAKqjB,2BAA6B,EAUlCrjB,KAAKsjB,4BV/CF,SAAoB1b,GACzB,IAGI2b,EAGAC,EAEAC,EARAC,GAAS,EAUb,OAAO,WACL,MAAMC,EAAWzT,MAAMrM,UAAUlE,MAAMQ,KAAK6d,WAO5C,OANK0F,GAAU1jB,OAASyjB,GAAa,GAAYE,EAAUH,KACzDE,GAAS,EACTD,EAAWzjB,KACXwjB,EAAWG,EACXJ,EAAa3b,EAAGqD,MAAMjL,KAAMge,YAEvBuF,CACT,CACF,CU0BuCK,EAAW,SAC5CC,EACAC,EACA9K,GAEA,IAAKA,EACH,OAAOhZ,KAAK+jB,sBAAsBD,GAEpC,MAAME,EAAQhkB,KAAKgkB,QAEnB,OADAA,EAAMhP,eAAegE,GACdgL,EAAMD,sBAAsBD,EACrC,GACF,CASA,mBAAAG,CAAoBH,EAAkB9K,GACpC,OAAOhZ,KAAKsjB,4BACVtjB,KAAKye,cACLqF,EACA9K,EAEJ,CAOA,KAAAgL,GACE,OAAO,GACT,CAUA,cAAAE,CAAe/a,EAAGgH,EAAGgU,EAAcC,GACjC,OAAO,GACT,CAOA,UAAA9R,CAAWnJ,EAAGgH,GACZ,MAAMkU,EAAQrkB,KAAKskB,gBAAgB,CAACnb,EAAGgH,IACvC,OAAOkU,EAAM,KAAOlb,GAAKkb,EAAM,KAAOlU,CACxC,CAUA,eAAAmU,CAAgB3U,EAAOwU,GAGrB,OAFAA,EAAeA,GAA8B,CAAC3lB,IAAKA,KACnDwB,KAAKkkB,eAAevU,EAAM,GAAIA,EAAM,GAAIwU,EAAc1lB,KAC/C0lB,CACT,CASA,oBAAAI,CAAqBlS,GACnB,OAAOrS,KAAKsS,WAAWD,EAAW,GAAIA,EAAW,GACnD,CAQA,aAAAmS,CAAcrX,GACZ,OAAO,GACT,CAQA,SAAAe,CAAUf,GACR,GAAInN,KAAKmjB,iBAAmBnjB,KAAKye,cAAe,CAC9C,MAAMtR,EAASnN,KAAKwkB,cAAcxkB,KAAKkN,UACnCjO,MAAMkO,EAAO,KAAOlO,MAAMkO,EAAO,MACnC2F,EAAoB3F,GAEtBnN,KAAKmjB,gBAAkBnjB,KAAKye,aAC9B,CACA,OrBqgBG,SAAwBtR,EAAQ6E,GACrC,OAAIA,GACFA,EAAK,GAAK7E,EAAO,GACjB6E,EAAK,GAAK7E,EAAO,GACjB6E,EAAK,GAAK7E,EAAO,GACjB6E,EAAK,GAAK7E,EAAO,GACV6E,GAEF7E,CACT,CqB9gBWsX,CAAezkB,KAAKkN,QAASC,EACtC,CAUA,MAAAuX,CAAO5C,EAAOc,GACZ,GACF,CAYA,KAAA+B,CAAM/C,EAAIC,EAAIe,GACZ,GACF,CAWA,QAAAgC,CAASC,GACP,OAAO7kB,KAAK+jB,sBAAsBc,EAAYA,EAChD,CAUA,qBAAAd,CAAsBD,GACpB,OAAO,GACT,CAOA,OAAA1J,GACE,OAAO,GACT,CAWA,cAAApF,CAAerE,GACb,GACF,CAQA,gBAAAmU,CAAiB3X,GACf,OAAO,GACT,CAUA,SAAA4X,CAAUhC,EAAQC,GAChB,GACF,CAiBA,SAAAhK,CAAUvI,EAAQC,GAEhB,MAAMsU,EAAa,GAAcvU,GAC3BE,EACqB,eAAzBqU,EAAW7W,WACP,SAAU8W,EAAeC,EAAgBhS,GACvC,MAAMiS,EAAcH,EAAW9W,YACzBkX,EAAkBJ,EAAW3W,iBAC7BsW,EAAQ9Q,EAAUuR,GAAmBvR,EAAUsR,GAmBrD,OAlBA1D,GACEyB,GACAkC,EAAgB,GAChBA,EAAgB,GAChBT,GACCA,EACD,EACA,EACA,GAEFjC,GACEuC,EACA,EACAA,EAAcnlB,OACdoT,EACAgQ,GACAgC,GAEKjM,GAAa+L,EAAYtU,EAAzBuI,CACLgM,EACAC,EACAhS,EAEJ,EACA+F,GAAa+L,EAAYtU,GAE/B,OADA1Q,KAAKgV,eAAerE,GACb3Q,IACT,GC7BK,SAASqlB,GAAmBC,GACjC,IAAIpS,EAQJ,MAPc,MAAVoS,EACFpS,EAAS,EACU,OAAVoS,GAA6B,OAAVA,EAC5BpS,EAAS,EACU,QAAVoS,IACTpS,EAAS,GAEkB,CAC/B,CAwBA,OA5UA,cAA6B,GAC3B,WAAArG,GACE2C,QAMAxP,KAAKslB,OAAS,KAMdtlB,KAAKkT,OAAS,EAMdlT,KAAKiT,gBAAkB,IACzB,CAOA,aAAAuR,CAAcrX,GACZ,OAAO6F,EACLhT,KAAKiT,gBACL,EACAjT,KAAKiT,gBAAgBnT,OACrBE,KAAKkT,OACL/F,EAEJ,CAMA,cAAAoY,GACE,OAAO,GACT,CAOA,kBAAAC,GACE,OAAOxlB,KAAKiT,gBAAgBtT,MAAM,EAAGK,KAAKkT,OAC5C,CAKA,kBAAAuS,GACE,OAAOzlB,KAAKiT,eACd,CAOA,iBAAAyS,GACE,OAAO1lB,KAAKiT,gBAAgBtT,MAC1BK,KAAKiT,gBAAgBnT,OAASE,KAAKkT,OAEvC,CAOA,SAAAyS,GACE,OAAO3lB,KAAKslB,MACd,CAOA,qBAAAvB,CAAsBD,GAOpB,GANI9jB,KAAKqjB,6BAA+BrjB,KAAKye,gBAC3Cze,KAAKojB,yCAA2C,EAChDpjB,KAAKqjB,2BAA6BrjB,KAAKye,eAKvCqF,EAAmB,GACgC,IAAlD9jB,KAAKojB,0CACJU,GAAoB9jB,KAAKojB,yCAE3B,OAAOpjB,KAGT,MAAM4lB,EACJ5lB,KAAK6lB,8BAA8B/B,GAErC,OADkC8B,EAAmBH,qBACvB3lB,OAASE,KAAKiT,gBAAgBnT,OACnD8lB,GAQT5lB,KAAKojB,yCAA2CU,EACzC9jB,KACT,CAOA,6BAAA6lB,CAA8B/B,GAC5B,OAAO9jB,IACT,CAKA,SAAA8lB,GACE,OAAO9lB,KAAKkT,MACd,CAMA,kBAAA6S,CAAmBT,EAAQrS,GACzBjT,KAAKkT,OAASmS,GAAmBC,GACjCtlB,KAAKslB,OAASA,EACdtlB,KAAKiT,gBAAkBA,CACzB,CAOA,cAAA+S,CAAepU,EAAa0T,GAC1B,GACF,CAQA,SAAAW,CAAUX,EAAQ1T,EAAasU,GAE7B,IAAIhT,EACJ,GAAIoS,EACFpS,EAASmS,GAAmBC,OACvB,CACL,IAAK,IAAIjnB,EAAI,EAAGA,EAAI6nB,IAAW7nB,EAAG,CAChC,GAA2B,IAAvBuT,EAAY9R,OAGd,OAFAE,KAAKslB,OAAS,UACdtlB,KAAKkT,OAAS,GAGhBtB,EAAoCA,EAAY,EAClD,CACAsB,EAAStB,EAAY9R,OACrBwlB,EA4GN,SAA4BpS,GAC1B,IAAIoS,EACU,GAAVpS,EACFoS,EAAS,KACU,GAAVpS,EACToS,EAAS,MACU,GAAVpS,IACToS,EAAS,QAEX,OAA6D,CAC/D,CAtHea,CAAmBjT,EAC9B,CACAlT,KAAKslB,OAASA,EACdtlB,KAAKkT,OAASA,CAChB,CAWA,cAAA8B,CAAerE,GACT3Q,KAAKiT,kBACPtC,EAAY3Q,KAAKiT,gBAAiBjT,KAAKiT,gBAAiBjT,KAAKkT,QAC7DlT,KAAKwe,UAET,CASA,MAAAkG,CAAO5C,EAAOc,GACZ,MAAM3P,EAAkBjT,KAAKylB,qBAC7B,GAAIxS,EAAiB,CACnB,MAAMC,EAASlT,KAAK8lB,YACpB,GACE7S,EACA,EACAA,EAAgBnT,OAChBoT,EACA4O,EACAc,EACA3P,GAEFjT,KAAKwe,SACP,CACF,CAWA,KAAAmG,CAAM/C,EAAIC,EAAIe,QACD7W,IAAP8V,IACFA,EAAKD,GAEFgB,IACHA,EAAS9O,EAAU9T,KAAKkO,cAE1B,MAAM+E,EAAkBjT,KAAKylB,qBAC7B,GAAIxS,EAAiB,CACnB,MAAMC,EAASlT,KAAK8lB,aFvKnB,SACL7S,EACAtV,EACAuG,EACAgP,EACA0O,EACAC,EACAe,EACA5Q,GAEAA,EAAOA,GAAc,GACrB,MAAM6Q,EAAUD,EAAO,GACjBE,EAAUF,EAAO,GACvB,IAAIvkB,EAAI,EACR,IAAK,IAAIskB,EAAIhlB,EAAQglB,EAAIze,EAAKye,GAAKzP,EAAQ,CACzC,MAAM6P,EAAS9P,EAAgB0P,GAAKE,EAC9BG,EAAS/P,EAAgB0P,EAAI,GAAKG,EACxC9Q,EAAK3T,KAAOwkB,EAAUjB,EAAKmB,EAC3B/Q,EAAK3T,KAAOykB,EAAUjB,EAAKmB,EAC3B,IAAK,IAAIC,EAAIN,EAAI,EAAGM,EAAIN,EAAIzP,IAAU+P,EACpCjR,EAAK3T,KAAO4U,EAAgBgQ,EAEhC,CACIjR,GAAQA,EAAKlS,QAAUzB,IACzB2T,EAAKlS,OAASzB,EAGlB,CE6IM,CACE4U,EACA,EACAA,EAAgBnT,OAChBoT,EACA0O,EACAC,EACAe,EACA3P,GAEFjT,KAAKwe,SACP,CACF,CASA,SAAAuG,CAAUhC,EAAQC,GAChB,MAAM/P,EAAkBjT,KAAKylB,qBAC7B,GAAIxS,EAAiB,CACnB,MAAMC,EAASlT,KAAK8lB,aFzJnB,SACL7S,EACAtV,EACAuG,EACAgP,EACA6P,EACAC,EACAhR,GAEAA,EAAOA,GAAc,GACrB,IAAI3T,EAAI,EACR,IAAK,IAAIskB,EAAIhlB,EAAQglB,EAAIze,EAAKye,GAAKzP,EAAQ,CACzClB,EAAK3T,KAAO4U,EAAgB0P,GAAKI,EACjC/Q,EAAK3T,KAAO4U,EAAgB0P,EAAI,GAAKK,EACrC,IAAK,IAAIC,EAAIN,EAAI,EAAGM,EAAIN,EAAIzP,IAAU+P,EACpCjR,EAAK3T,KAAO4U,EAAgBgQ,EAEhC,CACIjR,GAAQA,EAAKlS,QAAUzB,IACzB2T,EAAKlS,OAASzB,EAGlB,CEoIM,CACE4U,EACA,EACAA,EAAgBnT,OAChBoT,EACA6P,EACAC,EACA/P,GAEFjT,KAAKwe,SACP,CACF,GClRF,SAAS4H,GACPnT,EACAoT,EACAC,EACApT,EACA/J,EACAgH,EACAgU,GAEA,MAAMrO,EAAK7C,EAAgBoT,GACrBtQ,EAAK9C,EAAgBoT,EAAU,GAC/BnU,EAAKe,EAAgBqT,GAAWxQ,EAChC3D,EAAKc,EAAgBqT,EAAU,GAAKvQ,EAC1C,IAAIpY,EACJ,GAAW,IAAPuU,GAAmB,IAAPC,EACdxU,EAAS0oB,MACJ,CACL,MAAM5d,IAAMU,EAAI2M,GAAM5D,GAAM/B,EAAI4F,GAAM5D,IAAOD,EAAKA,EAAKC,EAAKA,GAC5D,GAAI1J,EAAI,EACN9K,EAAS2oB,MACJ,IAAI7d,EAAI,EAAG,CAChB,IAAK,IAAIpK,EAAI,EAAGA,EAAI6U,IAAU7U,EAC5B8lB,EAAa9lB,GAAK8X,GAChBlD,EAAgBoT,EAAUhoB,GAC1B4U,EAAgBqT,EAAUjoB,GAC1BoK,GAIJ,YADA0b,EAAarkB,OAASoT,EAExB,CACEvV,EAAS0oB,CACX,CACF,CACA,IAAK,IAAIhoB,EAAI,EAAGA,EAAI6U,IAAU7U,EAC5B8lB,EAAa9lB,GAAK4U,EAAgBtV,EAASU,GAE7C8lB,EAAarkB,OAASoT,CACxB,CAYO,SAASqT,GAAgBtT,EAAiBtV,EAAQuG,EAAKgP,EAAQhK,GACpE,IAAI4M,EAAK7C,EAAgBtV,GACrBoY,EAAK9C,EAAgBtV,EAAS,GAClC,IAAKA,GAAUuV,EAAQvV,EAASuG,EAAKvG,GAAUuV,EAAQ,CACrD,MAAM8C,EAAK/C,EAAgBtV,GACrBsY,EAAKhD,EAAgBtV,EAAS,GAC9B6oB,EAAe,GAAU1Q,EAAIC,EAAIC,EAAIC,GACvCuQ,EAAetd,IACjBA,EAAMsd,GAER1Q,EAAKE,EACLD,EAAKE,CACP,CACA,OAAO/M,CACT,CAUO,SAASud,GACdxT,EACAtV,EACA+oB,EACAxT,EACAhK,GAEA,IAAK,IAAI7K,EAAI,EAAGyT,EAAK4U,EAAK5mB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC7C,MAAM6F,EAAMwiB,EAAKroB,GACjB6K,EAAMqd,GAAgBtT,EAAiBtV,EAAQuG,EAAKgP,EAAQhK,GAC5DvL,EAASuG,CACX,CACA,OAAOgF,CACT,CAuCO,SAASyd,GACd1T,EACAtV,EACAuG,EACAgP,EACA0T,EACAC,EACA1d,EACAgH,EACAgU,EACAC,EACA0C,GAEA,GAAInpB,GAAUuG,EACZ,OAAOkgB,EAET,IAAI/lB,EAAG0oB,EACP,GAAiB,IAAbH,EAAgB,CAQlB,GANAG,EAAkB,GAChB5d,EACAgH,EACA8C,EAAgBtV,GAChBsV,EAAgBtV,EAAS,IAEvBopB,EAAkB3C,EAAoB,CACxC,IAAK/lB,EAAI,EAAGA,EAAI6U,IAAU7U,EACxB8lB,EAAa9lB,GAAK4U,EAAgBtV,EAASU,GAG7C,OADA8lB,EAAarkB,OAASoT,EACf6T,CACT,CACA,OAAO3C,CACT,CACA0C,EAAWA,GAAsB,CAACtoB,IAAKA,KACvC,IAAIkf,EAAQ/f,EAASuV,EACrB,KAAOwK,EAAQxZ,GAWb,GAVAkiB,GACEnT,EACAyK,EAAQxK,EACRwK,EACAxK,EACA/J,EACAgH,EACA2W,GAEFC,EAAkB,GAAU5d,EAAGgH,EAAG2W,EAAS,GAAIA,EAAS,IACpDC,EAAkB3C,EAAoB,CAExC,IADAA,EAAqB2C,EAChB1oB,EAAI,EAAGA,EAAI6U,IAAU7U,EACxB8lB,EAAa9lB,GAAKyoB,EAASzoB,GAE7B8lB,EAAarkB,OAASoT,EACtBwK,GAASxK,CACX,MAWEwK,GACExK,EACAxU,KAAKwK,KACDxK,KAAKuK,KAAK8d,GAAmBroB,KAAKuK,KAAKmb,IACvCwC,EACA,EACF,GAIR,GAAIC,IAEFT,GACEnT,EACA/O,EAAMgP,EACNvV,EACAuV,EACA/J,EACAgH,EACA2W,GAEFC,EAAkB,GAAU5d,EAAGgH,EAAG2W,EAAS,GAAIA,EAAS,IACpDC,EAAkB3C,GAAoB,CAExC,IADAA,EAAqB2C,EAChB1oB,EAAI,EAAGA,EAAI6U,IAAU7U,EACxB8lB,EAAa9lB,GAAKyoB,EAASzoB,GAE7B8lB,EAAarkB,OAASoT,CACxB,CAEF,OAAOkR,CACT,CAgBO,SAAS4C,GACd/T,EACAtV,EACA+oB,EACAxT,EACA0T,EACAC,EACA1d,EACAgH,EACAgU,EACAC,EACA0C,GAEAA,EAAWA,GAAsB,CAACtoB,IAAKA,KACvC,IAAK,IAAIH,EAAI,EAAGyT,EAAK4U,EAAK5mB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC7C,MAAM6F,EAAMwiB,EAAKroB,GACjB+lB,EAAqBuC,GACnB1T,EACAtV,EACAuG,EACAgP,EACA0T,EACAC,EACA1d,EACAgH,EACAgU,EACAC,EACA0C,GAEFnpB,EAASuG,CACX,CACA,OAAOkgB,CACT,CCtQO,SAAS6C,GACdhU,EACAtV,EACAiU,EACAsB,GAEA,IAAK,IAAI7U,EAAI,EAAGyT,EAAKF,EAAY9R,OAAQzB,EAAIyT,IAAMzT,EAAG,CACpD,MAAMgU,EAAaT,EAAYvT,GAC/B,IAAK,IAAIskB,EAAI,EAAGA,EAAIzP,IAAUyP,EAC5B1P,EAAgBtV,KAAY0U,EAAWsQ,EAE3C,CACA,OAAOhlB,CACT,CAUO,SAASupB,GACdjU,EACAtV,EACAwpB,EACAjU,EACAwT,GAEAA,EAAOA,GAAc,GACrB,IAAIroB,EAAI,EACR,IAAK,IAAIskB,EAAI,EAAGyE,EAAKD,EAAarnB,OAAQ6iB,EAAIyE,IAAMzE,EAAG,CACrD,MAAMze,EAAM+iB,GACVhU,EACAtV,EACAwpB,EAAaxE,GACbzP,GAEFwT,EAAKroB,KAAO6F,EACZvG,EAASuG,CACX,CAEA,OADAwiB,EAAK5mB,OAASzB,EACPqoB,CACT,CCqBO,SAASW,GACdpU,EACAtV,EACAuG,EACAgP,EACA4Q,EACAwD,EACAC,GAEA,MAAM3e,GAAK1E,EAAMvG,GAAUuV,EAC3B,GAAItK,EAAI,EAAG,CACT,KAAOjL,EAASuG,EAAKvG,GAAUuV,EAC7BoU,EAA0BC,KAAsBtU,EAAgBtV,GAChE2pB,EAA0BC,KACxBtU,EAAgBtV,EAAS,GAE7B,OAAO4pB,CACT,CAEA,MAAMC,EAAU,IAAItX,MAAMtH,GAC1B4e,EAAQ,GAAK,EACbA,EAAQ5e,EAAI,GAAK,EAEjB,MAAMpJ,EAAQ,CAAC7B,EAAQuG,EAAMgP,GAC7B,IAAIwK,EAAQ,EACZ,KAAOle,EAAMM,OAAS,GAAG,CACvB,MAAM2nB,EAAOjoB,EAAMuK,MACb2d,EAAQloB,EAAMuK,MACpB,IAAI4d,EAAqB,EACzB,MAAM7R,EAAK7C,EAAgByU,GACrB3R,EAAK9C,EAAgByU,EAAQ,GAC7B1R,EAAK/C,EAAgBwU,GACrBxR,EAAKhD,EAAgBwU,EAAO,GAClC,IAAK,IAAIppB,EAAIqpB,EAAQxU,EAAQ7U,EAAIopB,EAAMppB,GAAK6U,EAAQ,CAClD,MAEM6T,EAAkBlR,GAFd5C,EAAgB5U,GAChB4U,EAAgB5U,EAAI,GACuByX,EAAIC,EAAIC,EAAIC,GAC7D8Q,EAAkBY,IACpBjK,EAAQrf,EACRspB,EAAqBZ,EAEzB,CACIY,EAAqB7D,IACvB0D,GAAS9J,EAAQ/f,GAAUuV,GAAU,EACjCwU,EAAQxU,EAASwK,GACnBle,EAAMU,KAAKwnB,EAAOhK,GAEhBA,EAAQxK,EAASuU,GACnBjoB,EAAMU,KAAKwd,EAAO+J,GAGxB,CACA,IAAK,IAAIppB,EAAI,EAAGA,EAAIuK,IAAKvK,EACnBmpB,EAAQnpB,KACVipB,EAA0BC,KACxBtU,EAAgBtV,EAASU,EAAI6U,GAC/BoU,EAA0BC,KACxBtU,EAAgBtV,EAASU,EAAI6U,EAAS,IAG5C,OAAOqU,CACT,CAcO,SAASK,GACd3U,EACAtV,EACA+oB,EACAxT,EACA4Q,EACAwD,EACAC,EACAM,GAEA,IAAK,IAAIxpB,EAAI,EAAGyT,EAAK4U,EAAK5mB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC7C,MAAM6F,EAAMwiB,EAAKroB,GACjBkpB,EAAmBF,GACjBpU,EACAtV,EACAuG,EACAgP,EACA4Q,EACAwD,EACAC,GAEFM,EAAe3nB,KAAKqnB,GACpB5pB,EAASuG,CACX,CACA,OAAOqjB,CACT,CAuGO,SAASO,GAAKjpB,EAAOgmB,GAC1B,OAAOA,EAAYnmB,KAAK4X,MAAMzX,EAAQgmB,EACxC,CAqBO,SAASkD,GACd9U,EACAtV,EACAuG,EACAgP,EACA2R,EACAyC,EACAC,GAGA,GAAI5pB,GAAUuG,EACZ,OAAOqjB,EAGT,IAQIvR,EAAIC,EARJH,EAAKgS,GAAK7U,EAAgBtV,GAASknB,GACnC9O,EAAK+R,GAAK7U,EAAgBtV,EAAS,GAAIknB,GAC3ClnB,GAAUuV,EAEVoU,EAA0BC,KAAsBzR,EAChDwR,EAA0BC,KAAsBxR,EAIhD,GAIE,GAHAC,EAAK8R,GAAK7U,EAAgBtV,GAASknB,GACnC5O,EAAK6R,GAAK7U,EAAgBtV,EAAS,GAAIknB,IACvClnB,GAAUuV,IACIhP,EAOZ,OAFAojB,EAA0BC,KAAsBvR,EAChDsR,EAA0BC,KAAsBtR,EACzCsR,QAEFvR,GAAMF,GAAMG,GAAMF,GAC3B,KAAOpY,EAASuG,GAAK,CAEnB,MAAM8jB,EAAKF,GAAK7U,EAAgBtV,GAASknB,GACnCoD,EAAKH,GAAK7U,EAAgBtV,EAAS,GAAIknB,GAG7C,GAFAlnB,GAAUuV,EAEN8U,GAAMhS,GAAMiS,GAAMhS,EACpB,SAGF,MAAMyL,EAAM1L,EAAKF,EACX6L,EAAM1L,EAAKF,EAEXgM,EAAMiG,EAAKlS,EACXkM,EAAMiG,EAAKlS,EAKf2L,EAAMM,GAAOL,EAAMI,IACjBL,EAAM,GAAKK,EAAML,GAAQA,GAAOK,GAAQL,EAAM,GAAKK,EAAML,KACzDC,EAAM,GAAKK,EAAML,GAAQA,GAAOK,GAAQL,EAAM,GAAKK,EAAML,IAG3D3L,EAAKgS,EACL/R,EAAKgS,IAMPX,EAA0BC,KAAsBvR,EAChDsR,EAA0BC,KAAsBtR,EAChDH,EAAKE,EACLD,EAAKE,EACLD,EAAKgS,EACL/R,EAAKgS,EACP,CAIA,OAFAX,EAA0BC,KAAsBvR,EAChDsR,EAA0BC,KAAsBtR,EACzCsR,CACT,CAcO,SAASW,GACdjV,EACAtV,EACA+oB,EACAxT,EACA2R,EACAyC,EACAC,EACAM,GAEA,IAAK,IAAIxpB,EAAI,EAAGyT,EAAK4U,EAAK5mB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC7C,MAAM6F,EAAMwiB,EAAKroB,GACjBkpB,EAAmBQ,GACjB9U,EACAtV,EACAuG,EACAgP,EACA2R,EACAyC,EACAC,GAEFM,EAAe3nB,KAAKqnB,GACpB5pB,EAASuG,CACX,CACA,OAAOqjB,CACT,CCjaO,SAASjP,GAAQrF,EAAiBtV,EAAQuG,EAAKgP,EAAQK,GAC5D,IAAI4U,EAEJ,IADAxqB,GAAUuV,EACHvV,EAASuG,EAAKvG,GAAUuV,EAK7B,GAJAiV,EAAM5U,EACJN,EAAgBtT,MAAMhC,EAASuV,EAAQvV,GACvCsV,EAAgBtT,MAAMhC,EAAQA,EAASuV,IAErCiV,EACF,OAAOA,EAGX,OAAO,CACT,CClBO,SAASC,GACdnV,EACAtV,EACAuG,EACAgP,EACAtB,GAEAA,OAA8B7F,IAAhB6F,EAA4BA,EAAc,GACxD,IAAIvT,EAAI,EACR,IAAK,IAAIskB,EAAIhlB,EAAQglB,EAAIze,EAAKye,GAAKzP,EACjCtB,EAAYvT,KAAO4U,EAAgBtT,MAAMgjB,EAAGA,EAAIzP,GAGlD,OADAtB,EAAY9R,OAASzB,EACduT,CACT,CAUO,SAASyW,GACdpV,EACAtV,EACA+oB,EACAxT,EACAiU,GAEAA,OAAgCpb,IAAjBob,EAA6BA,EAAe,GAC3D,IAAI9oB,EAAI,EACR,IAAK,IAAIskB,EAAI,EAAGyE,EAAKV,EAAK5mB,OAAQ6iB,EAAIyE,IAAMzE,EAAG,CAC7C,MAAMze,EAAMwiB,EAAK/D,GACjBwE,EAAa9oB,KAAO+pB,GAClBnV,EACAtV,EACAuG,EACAgP,EACAiU,EAAa9oB,IAEfV,EAASuG,CACX,CAEA,OADAijB,EAAarnB,OAASzB,EACf8oB,CACT,CAWO,SAASmB,GACdrV,EACAtV,EACA4qB,EACArV,EACAsV,GAEAA,OAAkCzc,IAAlByc,EAA8BA,EAAgB,GAC9D,IAAInqB,EAAI,EACR,IAAK,IAAIskB,EAAI,EAAGyE,EAAKmB,EAAMzoB,OAAQ6iB,EAAIyE,IAAMzE,EAAG,CAC9C,MAAM+D,EAAO6B,EAAM5F,GACnB6F,EAAcnqB,KACI,IAAhBqoB,EAAK5mB,QAAgB4mB,EAAK,KAAO/oB,EAC7B,GACA0qB,GACEpV,EACAtV,EACA+oB,EACAxT,EACAsV,EAAcnqB,IAEtBV,EAAS+oB,EAAKA,EAAK5mB,OAAS,EAC9B,CAEA,OADA0oB,EAAc1oB,OAASzB,EAChBmqB,CACT,CC9EO,SAASC,GACdxV,EACAtV,EACAuG,EACAgP,EACAwV,EACA1W,EACA/B,GAEA,IAAIpH,EAAGJ,EACP,MAAMG,GAAK1E,EAAMvG,GAAUuV,EAC3B,GAAU,IAANtK,EACFC,EAAIlL,OACC,GAAU,IAANiL,EACTC,EAAIlL,EACJ8K,EAAIigB,OACC,GAAU,IAAN9f,EAAS,CAClB,IAAIkN,EAAK7C,EAAgBtV,GACrBoY,EAAK9C,EAAgBtV,EAAS,GAC9BmC,EAAS,EACb,MAAM6oB,EAAoB,CAAC,GAC3B,IAAK,IAAItqB,EAAIV,EAASuV,EAAQ7U,EAAI6F,EAAK7F,GAAK6U,EAAQ,CAClD,MAAM8C,EAAK/C,EAAgB5U,GACrB4X,EAAKhD,EAAgB5U,EAAI,GAC/ByB,GAAUpB,KAAKuK,MAAM+M,EAAKF,IAAOE,EAAKF,IAAOG,EAAKF,IAAOE,EAAKF,IAC9D4S,EAAkBzoB,KAAKJ,GACvBgW,EAAKE,EACLD,EAAKE,CACP,CACA,MAAM+E,EAAS0N,EAAW5oB,EACpB4d,ElBjCH,SAAsBkL,EAAUC,EAAQC,GAC7C,IAAIC,EAAKC,EACTF,EAAaA,GAAcxN,GAC3B,IAAIxZ,EAAM,EACNC,EAAO6mB,EAAS9oB,OAChBmpB,GAAQ,EAEZ,KAAOnnB,EAAMC,GAGXgnB,EAAMjnB,GAAQC,EAAOD,GAAQ,GAC7BknB,GAAOF,EAAWF,EAASG,GAAMF,GAE7BG,EAAM,EAERlnB,EAAMinB,EAAM,GAGZhnB,EAAOgnB,EACPE,GAASD,GAKb,OAAOC,EAAQnnB,GAAOA,CACxB,CkBQkBonB,CAAaP,EAAmB3N,GAC1C0C,EAAQ,GACVjV,GACGuS,EAAS2N,GAAmBjL,EAAQ,KACpCiL,GAAmBjL,EAAQ,GAAKiL,GAAmBjL,EAAQ,IAC9D7U,EAAIlL,IAAW+f,EAAQ,GAAKxK,GAE5BrK,EAAIlL,EAAS+f,EAAQxK,CAEzB,CACAjD,EAAYA,EAAY,EAAIA,EAAY,EACxC+B,EAAOA,GAAc,IAAI9B,MAAMD,GAC/B,IAAK,IAAI5R,EAAI,EAAGA,EAAI4R,IAAa5R,EAC/B2T,EAAK3T,QACG0N,IAANlD,EACIrK,SACMuN,IAANtD,EACAwK,EAAgBpK,EAAIxK,GACpB8X,GAAKlD,EAAgBpK,EAAIxK,GAAI4U,EAAgBpK,EAAIqK,EAAS7U,GAAIoK,GAEtE,OAAOuJ,CACT,CAWO,SAASmX,GACdlW,EACAtV,EACAuG,EACAgP,EACAlV,EACAorB,GAEA,GAAIllB,GAAOvG,EACT,OAAO,KAET,IAAI0U,EACJ,GAAIrU,EAAIiV,EAAgBtV,EAASuV,EAAS,GACxC,OAAIkW,GACF/W,EAAaY,EAAgBtT,MAAMhC,EAAQA,EAASuV,GACpDb,EAAWa,EAAS,GAAKlV,EAClBqU,GAEF,KAET,GAAIY,EAAgB/O,EAAM,GAAKlG,EAC7B,OAAIorB,GACF/W,EAAaY,EAAgBtT,MAAMuE,EAAMgP,EAAQhP,GACjDmO,EAAWa,EAAS,GAAKlV,EAClBqU,GAEF,KAGT,GAAIrU,GAAKiV,EAAgBtV,EAASuV,EAAS,GACzC,OAAOD,EAAgBtT,MAAMhC,EAAQA,EAASuV,GAEhD,IAAImW,EAAK1rB,EAASuV,EACdoW,EAAKplB,EAAMgP,EACf,KAAOmW,EAAKC,GAAI,CACd,MAAMP,EAAOM,EAAKC,GAAO,EACrBtrB,EAAIiV,GAAiB8V,EAAM,GAAK7V,EAAS,GAC3CoW,EAAKP,EAELM,EAAKN,EAAM,CAEf,CACA,MAAMQ,EAAKtW,EAAgBoW,EAAKnW,EAAS,GACzC,GAAIlV,GAAKurB,EACP,OAAOtW,EAAgBtT,OAAO0pB,EAAK,GAAKnW,GAASmW,EAAK,GAAKnW,EAASA,GAEtE,MACMzK,GAAKzK,EAAIurB,IADJtW,GAAiBoW,EAAK,GAAKnW,EAAS,GACpBqW,GAC3BlX,EAAa,GACb,IAAK,IAAIhU,EAAI,EAAGA,EAAI6U,EAAS,IAAK7U,EAChCgU,EAAWnS,KACTiW,GACElD,GAAiBoW,EAAK,GAAKnW,EAAS7U,GACpC4U,EAAgBoW,EAAKnW,EAAS7U,GAC9BoK,IAKN,OADA4J,EAAWnS,KAAKlC,GACTqU,CACT,CC7HO,SAASmX,GACdvW,EACAtV,EACAuG,EACAgP,EACA/F,GAmBA,OAjBgBmG,EACdnG,GAKA,SAAUkF,GACR,OAAQoX,GACNxW,EACAtV,EACAuG,EACAgP,EACAb,EAAW,GACXA,EAAW,GAEf,GAGJ,CAWO,SAASoX,GACdxW,EACAtV,EACAuG,EACAgP,EACA/J,EACAgH,GASA,IAAIuZ,EAAK,EACL5T,EAAK7C,EAAgB/O,EAAMgP,GAC3B6C,EAAK9C,EAAgB/O,EAAMgP,EAAS,GACxC,KAAOvV,EAASuG,EAAKvG,GAAUuV,EAAQ,CACrC,MAAM8C,EAAK/C,EAAgBtV,GACrBsY,EAAKhD,EAAgBtV,EAAS,GAChCoY,GAAM5F,EACJ8F,EAAK9F,IAAM6F,EAAKF,IAAO3F,EAAI4F,IAAO5M,EAAI2M,IAAOG,EAAKF,GAAM,GAC1D2T,IAEOzT,GAAM9F,IAAM6F,EAAKF,IAAO3F,EAAI4F,IAAO5M,EAAI2M,IAAOG,EAAKF,GAAM,GAClE2T,IAEF5T,EAAKE,EACLD,EAAKE,CACP,CACA,OAAc,IAAPyT,CACT,CAWO,SAASC,GACd1W,EACAtV,EACA+oB,EACAxT,EACA/J,EACAgH,GAEA,GAAoB,IAAhBuW,EAAK5mB,OACP,OAAO,EAET,IAAK2pB,GAAqBxW,EAAiBtV,EAAQ+oB,EAAK,GAAIxT,EAAQ/J,EAAGgH,GACrE,OAAO,EAET,IAAK,IAAI9R,EAAI,EAAGyT,EAAK4U,EAAK5mB,OAAQzB,EAAIyT,IAAMzT,EAC1C,GACEorB,GAAqBxW,EAAiByT,EAAKroB,EAAI,GAAIqoB,EAAKroB,GAAI6U,EAAQ/J,EAAGgH,GAEvE,OAAO,EAGX,OAAO,CACT,CC7FO,SAASyZ,GACd3W,EACAtV,EACAuG,EACAgP,EACA/F,GAEA,MAAM0c,EAAoB1W,E9ByKnB,CAAC1U,IAAUA,KAAU,KAAW,K8BvKrCwU,EACAtV,EACAuG,EACAgP,GAEF,QAAK6B,GAAW5H,EAAQ0c,OAGpBtX,EAAepF,EAAQ0c,KAGvBA,EAAkB,IAAM1c,EAAO,IAAM0c,EAAkB,IAAM1c,EAAO,KAGpE0c,EAAkB,IAAM1c,EAAO,IAAM0c,EAAkB,IAAM1c,EAAO,IAGjEmL,GACLrF,EACAtV,EACAuG,EACAgP,GAOA,SAAU4W,EAAQC,GAChB,O9B4qBC,SAA2B5c,EAAQ6c,EAAO9lB,GAC/C,IAAI6Q,GAAa,EACjB,MAAMkV,EAAWvX,EAAuBvF,EAAQ6c,GAC1CE,EAASxX,EAAuBvF,EAAQjJ,GAC9C,GACE+lB,IAAarX,EAAa7B,cAC1BmZ,IAAWtX,EAAa7B,aAExBgE,GAAa,MACR,CACL,MAAMtL,EAAO0D,EAAO,GACdzD,EAAOyD,EAAO,GACdxD,EAAOwD,EAAO,GACdvD,EAAOuD,EAAO,GACdgd,EAASH,EAAM,GACfI,EAASJ,EAAM,GACfK,EAAOnmB,EAAI,GACXomB,EAAOpmB,EAAI,GACXqmB,GAASD,EAAOF,IAAWC,EAAOF,GACxC,IAAIhhB,EAAGgH,EACA+Z,EAAStX,EAAa5B,SAAYiZ,EAAWrX,EAAa5B,SAE/D7H,EAAIkhB,GAAQC,EAAO1gB,GAAQ2gB,EAC3BxV,EAAa5L,GAAKM,GAAQN,GAAKQ,GAG9BoL,KACEmV,EAAStX,EAAa3B,QACvBgZ,EAAWrX,EAAa3B,QAG1Bd,EAAIma,GAAQD,EAAO1gB,GAAQ4gB,EAC3BxV,EAAa5E,GAAKzG,GAAQyG,GAAKvG,GAG9BmL,KACEmV,EAAStX,EAAa1B,QACvB+Y,EAAWrX,EAAa1B,QAG1B/H,EAAIkhB,GAAQC,EAAO5gB,GAAQ6gB,EAC3BxV,EAAa5L,GAAKM,GAAQN,GAAKQ,GAG9BoL,KACEmV,EAAStX,EAAazB,OACvB8Y,EAAWrX,EAAazB,OAG1BhB,EAAIma,GAAQD,EAAO5gB,GAAQ8gB,EAC3BxV,EAAa5E,GAAKzG,GAAQyG,GAAKvG,EAEnC,CACA,OAAOmL,CACT,C8BluBayV,CAAkBrd,EAAQ2c,EAAQC,EAC3C,MAEJ,CAoCO,SAASU,GACdxX,EACAtV,EACAuG,EACAgP,EACA/F,GAEA,QAAIyc,GAAqB3W,EAAiBtV,EAAQuG,EAAKgP,EAAQ/F,OAI7Dsc,GACExW,EACAtV,EACAuG,EACAgP,EACA/F,EAAO,GACPA,EAAO,QAMTsc,GACExW,EACAtV,EACAuG,EACAgP,EACA/F,EAAO,GACPA,EAAO,QAMTsc,GACExW,EACAtV,EACAuG,EACAgP,EACA/F,EAAO,GACPA,EAAO,OAMTsc,GACExW,EACAtV,EACAuG,EACAgP,EACA/F,EAAO,GACPA,EAAO,MAMb,CAUO,SAASud,GACdzX,EACAtV,EACA+oB,EACAxT,EACA/F,GAEA,IAAKsd,GAAqBxX,EAAiBtV,EAAQ+oB,EAAK,GAAIxT,EAAQ/F,GAClE,OAAO,EAET,GAAoB,IAAhBuZ,EAAK5mB,OACP,OAAO,EAET,IAAK,IAAIzB,EAAI,EAAGyT,EAAK4U,EAAK5mB,OAAQzB,EAAIyT,IAAMzT,EAC1C,GACEmrB,GACEvW,EACAyT,EAAKroB,EAAI,GACTqoB,EAAKroB,GACL6U,EACA/F,KAICyc,GACC3W,EACAyT,EAAKroB,EAAI,GACTqoB,EAAKroB,GACL6U,EACA/F,GAGF,OAAO,EAIb,OAAO,CACT,CCjMO,SAASwd,GAAiB1X,EAAiBtV,EAAQuG,EAAKgP,GAC7D,IAAI4C,EAAK7C,EAAgBtV,GACrBoY,EAAK9C,EAAgBtV,EAAS,GAC9BmC,EAAS,EACb,IAAK,IAAIzB,EAAIV,EAASuV,EAAQ7U,EAAI6F,EAAK7F,GAAK6U,EAAQ,CAClD,MAAM8C,EAAK/C,EAAgB5U,GACrB4X,EAAKhD,EAAgB5U,EAAI,GAC/ByB,GAAUpB,KAAKuK,MAAM+M,EAAKF,IAAOE,EAAKF,IAAOG,EAAKF,IAAOE,EAAKF,IAC9DD,EAAKE,EACLD,EAAKE,CACP,CACA,OAAOnW,CACT,CCFA,MAAM,WAAmB,GAMvB,WAAA+M,CAAY+E,EAAa0T,GACvB9V,QAMAxP,KAAK4qB,cAAgB,KAMrB5qB,KAAK6qB,uBAAyB,EAM9B7qB,KAAK8qB,WAAa,EAMlB9qB,KAAK+qB,mBAAqB,OAEXhf,IAAXuZ,GAAyBpV,MAAM4L,QAAQlK,EAAY,IAMrD5R,KAAKgmB,eACyD,EAG5DV,GATFtlB,KAAK+lB,mBACHT,EAC6B,EAUnC,CAOA,gBAAA0F,CAAiB3Y,GACVrS,KAAKiT,gBAGR,GAAOjT,KAAKiT,gBAAiBZ,GAF7BrS,KAAKiT,gBAAkBZ,EAAW1S,QAIpCK,KAAKwe,SACP,CAOA,KAAAwF,GACE,MAAMiH,EAAa,IAAI,GACrBjrB,KAAKiT,gBAAgBtT,QACrBK,KAAKslB,QAGP,OADA2F,EAAWnL,gBAAgB9f,MACpBirB,CACT,CASA,cAAA/G,CAAe/a,EAAGgH,EAAGgU,EAAcC,GACjC,OAAIA,EAAqBnS,EAAyBjS,KAAKkO,YAAa/E,EAAGgH,GAC9DiU,GAELpkB,KAAK+qB,mBAAqB/qB,KAAKye,gBACjCze,KAAK8qB,UAAYpsB,KAAKuK,KACpBsd,GACEvmB,KAAKiT,gBACL,EACAjT,KAAKiT,gBAAgBnT,OACrBE,KAAKkT,OACL,IAGJlT,KAAK+qB,kBAAoB/qB,KAAKye,eAEzBkI,GACL3mB,KAAKiT,gBACL,EACAjT,KAAKiT,gBAAgBnT,OACrBE,KAAKkT,OACLlT,KAAK8qB,WACL,EACA3hB,EACAgH,EACAgU,EACAC,GAEJ,CAaA,cAAA8G,CAAe3X,GACb,OAAO+E,GACLtY,KAAKiT,gBACL,EACAjT,KAAKiT,gBAAgBnT,OACrBE,KAAKkT,OACLK,EAEJ,CAgBA,gBAAA4X,CAAiBntB,EAAGorB,GAClB,MAAmB,OAAfppB,KAAKslB,QAAkC,QAAftlB,KAAKslB,OACxB,MAET8D,OAA8Brd,IAAhBqd,GAA4BA,EACnCD,GACLnpB,KAAKiT,gBACL,EACAjT,KAAKiT,gBAAgBnT,OACrBE,KAAKkT,OACLlV,EACAorB,GAEJ,CAOA,cAAA7D,GACE,OAAO6C,GACLpoB,KAAKiT,gBACL,EACAjT,KAAKiT,gBAAgBnT,OACrBE,KAAKkT,OAET,CAYA,eAAAkY,CAAgB1C,EAAU1W,GACxB,OAAOyW,GACLzoB,KAAKiT,gBACL,EACAjT,KAAKiT,gBAAgBnT,OACrBE,KAAKkT,OACLwV,EACA1W,EACAhS,KAAKkT,OAET,CAOA,SAAAmY,GACE,OAAOV,GACL3qB,KAAKiT,gBACL,EACAjT,KAAKiT,gBAAgBnT,OACrBE,KAAKkT,OAET,CAKA,eAAAoY,GAKE,OAJItrB,KAAK6qB,uBAAyB7qB,KAAKye,gBACrCze,KAAK4qB,cAAgB5qB,KAAKorB,gBAAgB,GAAKprB,KAAK4qB,eACpD5qB,KAAK6qB,sBAAwB7qB,KAAKye,eAE7Bze,KAAK4qB,aACd,CAOA,6BAAA/E,CAA8B/B,GAC5B,MAAMwD,EAA4B,GAUlC,OATAA,EAA0BxnB,OAASunB,GACjCrnB,KAAKiT,gBACL,EACAjT,KAAKiT,gBAAgBnT,OACrBE,KAAKkT,OACL4Q,EACAwD,EACA,GAEK,IAAI,GAAWA,EAA2B,KACnD,CAOA,OAAAlN,GACE,MAAO,YACT,CAQA,gBAAA0K,CAAiB3X,GACf,OAAOyc,GACL5pB,KAAKiT,gBACL,EACAjT,KAAKiT,gBAAgBnT,OACrBE,KAAKkT,OACL/F,EAEJ,CAQA,cAAA6Y,CAAepU,EAAa0T,GAC1BtlB,KAAKimB,UAAUX,EAAQ1T,EAAa,GAC/B5R,KAAKiT,kBACRjT,KAAKiT,gBAAkB,IAEzBjT,KAAKiT,gBAAgBnT,OAASmnB,GAC5BjnB,KAAKiT,gBACL,EACArB,EACA5R,KAAKkT,QAEPlT,KAAKwe,SACP,EAGF,UC/RA,MAAM,WAAwB,GAQ5B,WAAA3R,CAAY+E,EAAa0T,EAAQoB,GAqB/B,GApBAlX,QAMAxP,KAAKurB,MAAQ,GAMbvrB,KAAK8qB,WAAa,EAMlB9qB,KAAK+qB,mBAAqB,EAEtB7a,MAAM4L,QAAQlK,EAAY,IAC5B5R,KAAKgmB,eACgE,EAGnEV,QAEG,QAAevZ,IAAXuZ,GAAwBoB,EACjC1mB,KAAK+lB,mBACHT,EAC6B,GAE/BtlB,KAAKurB,MAAQ7E,MACR,CACL,IAAIpB,EAAStlB,KAAK2lB,YAClB,MAAM6F,EAA+C,EAC/CvY,EAAkB,GAClByT,EAAO,GACb,IAAK,IAAIroB,EAAI,EAAGyT,EAAK0Z,EAAY1rB,OAAQzB,EAAIyT,IAAMzT,EAAG,CACpD,MAAM4sB,EAAaO,EAAYntB,GACrB,IAANA,IACFinB,EAAS2F,EAAWtF,aAEtB,GAAO1S,EAAiBgY,EAAWxF,sBACnCiB,EAAKxmB,KAAK+S,EAAgBnT,OAC5B,CACAE,KAAK+lB,mBAAmBT,EAAQrS,GAChCjT,KAAKurB,MAAQ7E,CACf,CACF,CAOA,gBAAA+E,CAAiBR,GACVjrB,KAAKiT,gBAGR,GAAOjT,KAAKiT,gBAAiBgY,EAAWxF,qBAAqB9lB,SAF7DK,KAAKiT,gBAAkBgY,EAAWxF,qBAAqB9lB,QAIzDK,KAAKurB,MAAMrrB,KAAKF,KAAKiT,gBAAgBnT,QACrCE,KAAKwe,SACP,CAOA,KAAAwF,GACE,MAAM0H,EAAkB,IAAI,GAC1B1rB,KAAKiT,gBAAgBtT,QACrBK,KAAKslB,OACLtlB,KAAKurB,MAAM5rB,SAGb,OADA+rB,EAAgB5L,gBAAgB9f,MACzB0rB,CACT,CASA,cAAAxH,CAAe/a,EAAGgH,EAAGgU,EAAcC,GACjC,OAAIA,EAAqBnS,EAAyBjS,KAAKkO,YAAa/E,EAAGgH,GAC9DiU,GAELpkB,KAAK+qB,mBAAqB/qB,KAAKye,gBACjCze,KAAK8qB,UAAYpsB,KAAKuK,KACpBwd,GACEzmB,KAAKiT,gBACL,EACAjT,KAAKurB,MACLvrB,KAAKkT,OACL,IAGJlT,KAAK+qB,kBAAoB/qB,KAAKye,eAEzBuI,GACLhnB,KAAKiT,gBACL,EACAjT,KAAKurB,MACLvrB,KAAKkT,OACLlT,KAAK8qB,WACL,EACA3hB,EACAgH,EACAgU,EACAC,GAEJ,CAwBA,gBAAA+G,CAAiBntB,EAAGorB,EAAauC,GAC/B,MACkB,OAAf3rB,KAAKslB,QAAkC,QAAftlB,KAAKslB,QACE,IAAhCtlB,KAAKiT,gBAAgBnT,OAEd,MAETspB,OAA8Brd,IAAhBqd,GAA4BA,EAC1CuC,OAA8B5f,IAAhB4f,GAA4BA,EL9BvC,SACL1Y,EACAtV,EACA+oB,EACAxT,EACAlV,EACAorB,EACAuC,GAEA,GAAIA,EACF,OAAOxC,GACLlW,EACAtV,EACA+oB,EAAKA,EAAK5mB,OAAS,GACnBoT,EACAlV,EACAorB,GAGJ,IAAI/W,EACJ,GAAIrU,EAAIiV,EAAgBC,EAAS,GAC/B,OAAIkW,GACF/W,EAAaY,EAAgBtT,MAAM,EAAGuT,GACtCb,EAAWa,EAAS,GAAKlV,EAClBqU,GAEF,KAET,GAAIY,EAAgBA,EAAgBnT,OAAS,GAAK9B,EAChD,OAAIorB,GACF/W,EAAaY,EAAgBtT,MAAMsT,EAAgBnT,OAASoT,GAC5Db,EAAWa,EAAS,GAAKlV,EAClBqU,GAEF,KAET,IAAK,IAAIhU,EAAI,EAAGyT,EAAK4U,EAAK5mB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC7C,MAAM6F,EAAMwiB,EAAKroB,GACjB,GAAIV,GAAUuG,EAAd,CAGA,GAAIlG,EAAIiV,EAAgBtV,EAASuV,EAAS,GACxC,OAAO,KAET,GAAIlV,GAAKiV,EAAgB/O,EAAM,GAC7B,OAAOilB,GACLlW,EACAtV,EACAuG,EACAgP,EACAlV,GACA,GAGJL,EAASuG,CAdT,CAeF,CACA,OAAO,IACT,CK1BW0nB,CACL5rB,KAAKiT,gBACL,EACAjT,KAAKurB,MACLvrB,KAAKkT,OACLlV,EACAorB,EACAuC,GAEJ,CAOA,cAAApG,GACE,OAAO8C,GACLroB,KAAKiT,gBACL,EACAjT,KAAKurB,MACLvrB,KAAKkT,OAET,CAKA,OAAA2Y,GACE,OAAO7rB,KAAKurB,KACd,CAQA,aAAAO,CAAcpO,GACZ,OAAIA,EAAQ,GAAK1d,KAAKurB,MAAMzrB,QAAU4d,EAC7B,KAEF,IAAI,GACT1d,KAAKiT,gBAAgBtT,MACT,IAAV+d,EAAc,EAAI1d,KAAKurB,MAAM7N,EAAQ,GACrC1d,KAAKurB,MAAM7N,IAEb1d,KAAKslB,OAET,CAOA,cAAAyG,GACE,MAAM9Y,EAAkBjT,KAAKiT,gBACvByT,EAAO1mB,KAAKurB,MACZjG,EAAStlB,KAAKslB,OAEdkG,EAAc,GACpB,IAAI7tB,EAAS,EACb,IAAK,IAAIU,EAAI,EAAGyT,EAAK4U,EAAK5mB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC7C,MAAM6F,EAAMwiB,EAAKroB,GACX4sB,EAAa,IAAI,GACrBhY,EAAgBtT,MAAMhC,EAAQuG,GAC9BohB,GAEFkG,EAAYtrB,KAAK+qB,GACjBttB,EAASuG,CACX,CACA,OAAOsnB,CACT,CAKA,gBAAAQ,GACE,MAAMC,EAAY,GACZhZ,EAAkBjT,KAAKiT,gBAC7B,IAAItV,EAAS,EACb,MAAM+oB,EAAO1mB,KAAKurB,MACZrY,EAASlT,KAAKkT,OACpB,IAAK,IAAI7U,EAAI,EAAGyT,EAAK4U,EAAK5mB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC7C,MAAM6F,EAAMwiB,EAAKroB,GAQjB,GAAO4tB,EAPUxD,GACfxV,EACAtV,EACAuG,EACAgP,EACA,KAGFvV,EAASuG,CACX,CACA,OAAO+nB,CACT,CAOA,6BAAApG,CAA8B/B,GAC5B,MAAMwD,EAA4B,GAC5BO,EAAiB,GAWvB,OAVAP,EAA0BxnB,OAAS8nB,GACjC5nB,KAAKiT,gBACL,EACAjT,KAAKurB,MACLvrB,KAAKkT,OACL4Q,EACAwD,EACA,EACAO,GAEK,IAAI,GAAgBP,EAA2B,KAAMO,EAC9D,CAOA,OAAAzN,GACE,MAAO,iBACT,CAQA,gBAAA0K,CAAiB3X,GACf,OHrPG,SACL8F,EACAtV,EACA+oB,EACAxT,EACA/F,GAEA,IAAK,IAAI9O,EAAI,EAAGyT,EAAK4U,EAAK5mB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC7C,GACEurB,GAAqB3W,EAAiBtV,EAAQ+oB,EAAKroB,GAAI6U,EAAQ/F,GAE/D,OAAO,EAETxP,EAAS+oB,EAAKroB,EAChB,CACA,OAAO,CACT,CGqOW6tB,CACLlsB,KAAKiT,gBACL,EACAjT,KAAKurB,MACLvrB,KAAKkT,OACL/F,EAEJ,CAQA,cAAA6Y,CAAepU,EAAa0T,GAC1BtlB,KAAKimB,UAAUX,EAAQ1T,EAAa,GAC/B5R,KAAKiT,kBACRjT,KAAKiT,gBAAkB,IAEzB,MAAMyT,EAAOQ,GACXlnB,KAAKiT,gBACL,EACArB,EACA5R,KAAKkT,OACLlT,KAAKurB,OAEPvrB,KAAKiT,gBAAgBnT,OAAyB,IAAhB4mB,EAAK5mB,OAAe,EAAI4mB,EAAKA,EAAK5mB,OAAS,GACzEE,KAAKwe,SACP,EAGF,UC/UA,MAAM,WAAc,GAKlB,WAAA3R,CAAY+E,EAAa0T,GACvB9V,QACAxP,KAAKgmB,eAAepU,EAAa0T,EACnC,CAOA,KAAAtB,GACE,MAAMrU,EAAQ,IAAI,GAAM3P,KAAKiT,gBAAgBtT,QAASK,KAAKslB,QAE3D,OADA3V,EAAMmQ,gBAAgB9f,MACf2P,CACT,CASA,cAAAuU,CAAe/a,EAAGgH,EAAGgU,EAAcC,GACjC,MAAMnR,EAAkBjT,KAAKiT,gBACvB8T,EAAkB,GACtB5d,EACAgH,EACA8C,EAAgB,GAChBA,EAAgB,IAElB,GAAI8T,EAAkB3C,EAAoB,CACxC,MAAMlR,EAASlT,KAAKkT,OACpB,IAAK,IAAI7U,EAAI,EAAGA,EAAI6U,IAAU7U,EAC5B8lB,EAAa9lB,GAAK4U,EAAgB5U,GAGpC,OADA8lB,EAAarkB,OAASoT,EACf6T,CACT,CACA,OAAO3C,CACT,CAOA,cAAAmB,GACE,OAAQvlB,KAAKiT,gBAAuBjT,KAAKiT,gBAAgBtT,QAA1B,EACjC,CAOA,aAAA6kB,CAAcrX,GACZ,OAAO4F,EAA6B/S,KAAKiT,gBAAiB9F,EAC5D,CAOA,OAAAiN,GACE,MAAO,OACT,CAQA,gBAAA0K,CAAiB3X,GACf,OAAOmF,EAAWnF,EAAQnN,KAAKiT,gBAAgB,GAAIjT,KAAKiT,gBAAgB,GAC1E,CAOA,cAAA+S,CAAepU,EAAa0T,GAC1BtlB,KAAKimB,UAAUX,EAAQ1T,EAAa,GAC/B5R,KAAKiT,kBACRjT,KAAKiT,gBAAkB,IAEzBjT,KAAKiT,gBAAgBnT,OVjGlB,SAA2BmT,EAAiBtV,EAAQ0U,EAAYa,GACrE,IAAK,IAAI7U,EAAI,EAAGyT,EAAKO,EAAWvS,OAAQzB,EAAIyT,IAAMzT,EAChD4U,EAAgBtV,KAAY0U,EAAWhU,GAEzC,OAAOV,CACT,CU4FkCwuB,CAC5BnsB,KAAKiT,gBACL,EACArB,EACA5R,KAAKkT,QAEPlT,KAAKwe,SACP,EAGF,UCrGA,MAAM,WAAmB,GAMvB,WAAA3R,CAAY+E,EAAa0T,GACvB9V,QACI8V,IAAWpV,MAAM4L,QAAQlK,EAAY,IACvC5R,KAAK+lB,mBACHT,EAC6B,GAG/BtlB,KAAKgmB,eACyD,EAG5DV,EAGN,CAOA,WAAA8G,CAAYzc,GACL3P,KAAKiT,gBAGR,GAAOjT,KAAKiT,gBAAiBtD,EAAM8V,sBAFnCzlB,KAAKiT,gBAAkBtD,EAAM8V,qBAAqB9lB,QAIpDK,KAAKwe,SACP,CAOA,KAAAwF,GACE,MAAMqI,EAAa,IAAI,GACrBrsB,KAAKiT,gBAAgBtT,QACrBK,KAAKslB,QAGP,OADA+G,EAAWvM,gBAAgB9f,MACpBqsB,CACT,CASA,cAAAnI,CAAe/a,EAAGgH,EAAGgU,EAAcC,GACjC,GAAIA,EAAqBnS,EAAyBjS,KAAKkO,YAAa/E,EAAGgH,GACrE,OAAOiU,EAET,MAAMnR,EAAkBjT,KAAKiT,gBACvBC,EAASlT,KAAKkT,OACpB,IAAK,IAAI7U,EAAI,EAAGyT,EAAKmB,EAAgBnT,OAAQzB,EAAIyT,EAAIzT,GAAK6U,EAAQ,CAChE,MAAM6T,EAAkB,GACtB5d,EACAgH,EACA8C,EAAgB5U,GAChB4U,EAAgB5U,EAAI,IAEtB,GAAI0oB,EAAkB3C,EAAoB,CACxCA,EAAqB2C,EACrB,IAAK,IAAIpE,EAAI,EAAGA,EAAIzP,IAAUyP,EAC5BwB,EAAaxB,GAAK1P,EAAgB5U,EAAIskB,GAExCwB,EAAarkB,OAASoT,CACxB,CACF,CACA,OAAOkR,CACT,CAOA,cAAAmB,GACE,OAAO6C,GACLpoB,KAAKiT,gBACL,EACAjT,KAAKiT,gBAAgBnT,OACrBE,KAAKkT,OAET,CAQA,QAAAoZ,CAAS5O,GACP,MAAM9U,EAAK5I,KAAKiT,gBAEZjT,KAAKiT,gBAAgBnT,OAASE,KAAKkT,OADnC,EAEJ,OAAIwK,EAAQ,GAAK9U,GAAK8U,EACb,KAEF,IAAI,GACT1d,KAAKiT,gBAAgBtT,MACnB+d,EAAQ1d,KAAKkT,QACZwK,EAAQ,GAAK1d,KAAKkT,QAErBlT,KAAKslB,OAET,CAOA,SAAAiH,GACE,MAAMtZ,EAAkBjT,KAAKiT,gBACvBqS,EAAStlB,KAAKslB,OACdpS,EAASlT,KAAKkT,OAEdsZ,EAAS,GACf,IAAK,IAAInuB,EAAI,EAAGyT,EAAKmB,EAAgBnT,OAAQzB,EAAIyT,EAAIzT,GAAK6U,EAAQ,CAChE,MAAMvD,EAAQ,IAAI,GAAMsD,EAAgBtT,MAAMtB,EAAGA,EAAI6U,GAASoS,GAC9DkH,EAAOtsB,KAAKyP,EACd,CACA,OAAO6c,CACT,CAOA,OAAApS,GACE,MAAO,YACT,CAQA,gBAAA0K,CAAiB3X,GACf,MAAM8F,EAAkBjT,KAAKiT,gBACvBC,EAASlT,KAAKkT,OACpB,IAAK,IAAI7U,EAAI,EAAGyT,EAAKmB,EAAgBnT,OAAQzB,EAAIyT,EAAIzT,GAAK6U,EAAQ,CAGhE,GAAIZ,EAAWnF,EAFL8F,EAAgB5U,GAChB4U,EAAgB5U,EAAI,IAE5B,OAAO,CAEX,CACA,OAAO,CACT,CAQA,cAAA2nB,CAAepU,EAAa0T,GAC1BtlB,KAAKimB,UAAUX,EAAQ1T,EAAa,GAC/B5R,KAAKiT,kBACRjT,KAAKiT,gBAAkB,IAEzBjT,KAAKiT,gBAAgBnT,OAASmnB,GAC5BjnB,KAAKiT,gBACL,EACArB,EACA5R,KAAKkT,QAEPlT,KAAKwe,SACP,EAGF,UC/LO,SAASiO,GAAWxZ,EAAiBtV,EAAQuG,EAAKgP,GACvD,IAAIwZ,EAAY,EACZ5W,EAAK7C,EAAgB/O,EAAMgP,GAC3B6C,EAAK9C,EAAgB/O,EAAMgP,EAAS,GACxC,KAAOvV,EAASuG,EAAKvG,GAAUuV,EAAQ,CACrC,MAAM8C,EAAK/C,EAAgBtV,GACrBsY,EAAKhD,EAAgBtV,EAAS,GACpC+uB,GAAa3W,EAAKC,EAAKF,EAAKG,EAC5BH,EAAKE,EACLD,EAAKE,CACP,CACA,OAAOyW,EAAY,CACrB,CASO,SAASC,GAAY1Z,EAAiBtV,EAAQ+oB,EAAMxT,GACzD,IAAIU,EAAO,EACX,IAAK,IAAIvV,EAAI,EAAGyT,EAAK4U,EAAK5mB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC7C,MAAM6F,EAAMwiB,EAAKroB,GACjBuV,GAAQ6Y,GAAWxZ,EAAiBtV,EAAQuG,EAAKgP,GACjDvV,EAASuG,CACX,CACA,OAAO0P,CACT,CCtBA,MAAMgZ,WAAmB,GAMvB,WAAA/f,CAAY+E,EAAa0T,GACvB9V,QAMAxP,KAAK8qB,WAAa,EAMlB9qB,KAAK+qB,mBAAqB,OAEXhf,IAAXuZ,GAAyBpV,MAAM4L,QAAQlK,EAAY,IAMrD5R,KAAKgmB,eACyD,EAG5DV,GATFtlB,KAAK+lB,mBACHT,EAC6B,EAUnC,CAOA,KAAAtB,GACE,OAAO,IAAI4I,GAAW5sB,KAAKiT,gBAAgBtT,QAASK,KAAKslB,OAC3D,CASA,cAAApB,CAAe/a,EAAGgH,EAAGgU,EAAcC,GACjC,OAAIA,EAAqBnS,EAAyBjS,KAAKkO,YAAa/E,EAAGgH,GAC9DiU,GAELpkB,KAAK+qB,mBAAqB/qB,KAAKye,gBACjCze,KAAK8qB,UAAYpsB,KAAKuK,KACpBsd,GACEvmB,KAAKiT,gBACL,EACAjT,KAAKiT,gBAAgBnT,OACrBE,KAAKkT,OACL,IAGJlT,KAAK+qB,kBAAoB/qB,KAAKye,eAEzBkI,GACL3mB,KAAKiT,gBACL,EACAjT,KAAKiT,gBAAgBnT,OACrBE,KAAKkT,OACLlT,KAAK8qB,WACL,EACA3hB,EACAgH,EACAgU,EACAC,GAEJ,CAOA,OAAAzQ,GACE,OAAO8Y,GACLzsB,KAAKiT,gBACL,EACAjT,KAAKiT,gBAAgBnT,OACrBE,KAAKkT,OAET,CAOA,cAAAqS,GACE,OAAO6C,GACLpoB,KAAKiT,gBACL,EACAjT,KAAKiT,gBAAgBnT,OACrBE,KAAKkT,OAET,CAOA,6BAAA2S,CAA8B/B,GAC5B,MAAMwD,EAA4B,GAUlC,OATAA,EAA0BxnB,OAASunB,GACjCrnB,KAAKiT,gBACL,EACAjT,KAAKiT,gBAAgBnT,OACrBE,KAAKkT,OACL4Q,EACAwD,EACA,GAEK,IAAIsF,GAAWtF,EAA2B,KACnD,CAOA,OAAAlN,GACE,MAAO,YACT,CAQA,gBAAA0K,CAAiB3X,GACf,OAAO,CACT,CAQA,cAAA6Y,CAAepU,EAAa0T,GAC1BtlB,KAAKimB,UAAUX,EAAQ1T,EAAa,GAC/B5R,KAAKiT,kBACRjT,KAAKiT,gBAAkB,IAEzBjT,KAAKiT,gBAAgBnT,OAASmnB,GAC5BjnB,KAAKiT,gBACL,EACArB,EACA5R,KAAKkT,QAEPlT,KAAKwe,SACP,EAGF,UCxKO,SAASqO,GACd5Z,EACAtV,EACA+oB,EACAxT,EACA4Z,EACAC,EACA/a,GAEA,IAAI3T,EAAGyT,EAAI3I,EAAG2M,EAAIE,EAAID,EAAIE,EAC1B,MAAM9F,EAAI2c,EAAYC,EAAoB,GAEpCC,EAAgB,GAEtB,IAAK,IAAItkB,EAAI,EAAGukB,EAAKvG,EAAK5mB,OAAQ4I,EAAIukB,IAAMvkB,EAAG,CAC7C,MAAMxE,EAAMwiB,EAAKhe,GAGjB,IAFAoN,EAAK7C,EAAgB/O,EAAMgP,GAC3B6C,EAAK9C,EAAgB/O,EAAMgP,EAAS,GAC/B7U,EAAIV,EAAQU,EAAI6F,EAAK7F,GAAK6U,EAC7B8C,EAAK/C,EAAgB5U,GACrB4X,EAAKhD,EAAgB5U,EAAI,IACpB8R,GAAK4F,GAAME,GAAM9F,GAAO4F,GAAM5F,GAAKA,GAAK8F,KAC3C9M,GAAMgH,EAAI4F,IAAOE,EAAKF,IAAQC,EAAKF,GAAMA,EACzCkX,EAAc9sB,KAAKiJ,IAErB2M,EAAKE,EACLD,EAAKE,CAET,CAGA,IAAIiX,EAAS1uB,IACT2uB,GAAoB1uB,IAGxB,IAFAuuB,EAActhB,KAAK4P,IACnBxF,EAAKkX,EAAc,GACd3uB,EAAI,EAAGyT,EAAKkb,EAAcltB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAClD2X,EAAKgX,EAAc3uB,GACnB,MAAM+uB,EAAgB1uB,KAAKM,IAAIgX,EAAKF,GAChCsX,EAAgBD,IAClBhkB,GAAK2M,EAAKE,GAAM,EACZ2T,GAAsB1W,EAAiBtV,EAAQ+oB,EAAMxT,EAAQ/J,EAAGgH,KAClE+c,EAAS/jB,EACTgkB,EAAmBC,IAGvBtX,EAAKE,CACP,CAMA,OALI/W,MAAMiuB,KAGRA,EAASJ,EAAYC,IAEnB/a,GACFA,EAAK9R,KAAKgtB,EAAQ/c,EAAGgd,GACdnb,GAEF,CAACkb,EAAQ/c,EAAGgd,EACrB,CAWO,SAASE,GACdpa,EACAtV,EACA4qB,EACArV,EACA4Z,GAEA,IAAIQ,EAAiB,GACrB,IAAK,IAAIjvB,EAAI,EAAGyT,EAAKyW,EAAMzoB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC9C,MAAMqoB,EAAO6B,EAAMlqB,GACnBivB,EAAiBT,GACf5Z,EACAtV,EACA+oB,EACAxT,EACA4Z,EACA,EAAIzuB,EACJivB,GAEF3vB,EAAS+oB,EAAKA,EAAK5mB,OAAS,EAC9B,CACA,OAAOwtB,CACT,CCnGO,SAAS1b,GAAYqB,EAAiBtV,EAAQuG,EAAKgP,GACxD,KAAOvV,EAASuG,EAAMgP,GAAQ,CAC5B,IAAK,IAAI7U,EAAI,EAAGA,EAAI6U,IAAU7U,EAAG,CAC/B,MAAMud,EAAM3I,EAAgBtV,EAASU,GACrC4U,EAAgBtV,EAASU,GAAK4U,EAAgB/O,EAAMgP,EAAS7U,GAC7D4U,EAAgB/O,EAAMgP,EAAS7U,GAAKud,CACtC,CACAje,GAAUuV,EACVhP,GAAOgP,CACT,CACF,CCLO,SAASqa,GAAsBta,EAAiBtV,EAAQuG,EAAKgP,GAGlE,IAAIsa,EAAO,EACP1X,EAAK7C,EAAgB/O,EAAMgP,GAC3B6C,EAAK9C,EAAgB/O,EAAMgP,EAAS,GACxC,KAAOvV,EAASuG,EAAKvG,GAAUuV,EAAQ,CACrC,MAAM8C,EAAK/C,EAAgBtV,GACrBsY,EAAKhD,EAAgBtV,EAAS,GACpC6vB,IAASxX,EAAKF,IAAOG,EAAKF,GAC1BD,EAAKE,EACLD,EAAKE,CACP,CACA,OAAgB,IAATuX,OAAazhB,EAAYyhB,EAAO,CACzC,CAeO,SAASC,GACdxa,EACAtV,EACA+oB,EACAxT,EACAwa,GAEAA,OAAkB3hB,IAAV2hB,GAAsBA,EAC9B,IAAK,IAAIrvB,EAAI,EAAGyT,EAAK4U,EAAK5mB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC7C,MAAM6F,EAAMwiB,EAAKroB,GACXsvB,EAAcJ,GAClBta,EACAtV,EACAuG,EACAgP,GAEF,GAAU,IAAN7U,GACF,GAAKqvB,GAASC,IAAkBD,IAAUC,EACxC,OAAO,OAGT,GAAKD,IAAUC,IAAkBD,GAASC,EACxC,OAAO,EAGXhwB,EAASuG,CACX,CACA,OAAO,CACT,CA+CO,SAAS0pB,GACd3a,EACAtV,EACA+oB,EACAxT,EACAwa,GAEAA,OAAkB3hB,IAAV2hB,GAAsBA,EAC9B,IAAK,IAAIrvB,EAAI,EAAGyT,EAAK4U,EAAK5mB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC7C,MAAM6F,EAAMwiB,EAAKroB,GACXsvB,EAAcJ,GAClBta,EACAtV,EACAuG,EACAgP,IAGM,IAAN7U,EACKqvB,GAASC,IAAkBD,IAAUC,EACrCD,IAAUC,IAAkBD,GAASC,IAE1C,GAAmB1a,EAAiBtV,EAAQuG,EAAKgP,GAEnDvV,EAASuG,CACX,CACA,OAAOvG,CACT,CAeO,SAASkwB,GACd5a,EACAtV,EACA4qB,EACArV,EACAwa,GAEA,IAAK,IAAIrvB,EAAI,EAAGyT,EAAKyW,EAAMzoB,OAAQzB,EAAIyT,IAAMzT,EAC3CV,EAASiwB,GACP3a,EACAtV,EACA4qB,EAAMlqB,GACN6U,EACAwa,GAGJ,OAAO/vB,CACT,CCvJA,MAAM,WAAgB,GAYpB,WAAAkP,CAAY+E,EAAa0T,EAAQoB,GAC/BlX,QAMAxP,KAAKurB,MAAQ,GAMbvrB,KAAK8tB,4BAA8B,EAMnC9tB,KAAK+tB,mBAAqB,KAM1B/tB,KAAK8qB,WAAa,EAMlB9qB,KAAK+qB,mBAAqB,EAM1B/qB,KAAKguB,mBAAqB,EAM1BhuB,KAAKiuB,yBAA2B,UAEjBliB,IAAXuZ,GAAwBoB,GAC1B1mB,KAAK+lB,mBACHT,EAC6B,GAE/BtlB,KAAKurB,MAAQ7E,GAEb1mB,KAAKgmB,eACgE,EAGnEV,EAGN,CAOA,gBAAA4I,CAAiBzB,GACVzsB,KAAKiT,gBAGR,GAAOjT,KAAKiT,gBAAiBwZ,EAAWhH,sBAFxCzlB,KAAKiT,gBAAkBwZ,EAAWhH,qBAAqB9lB,QAIzDK,KAAKurB,MAAMrrB,KAAKF,KAAKiT,gBAAgBnT,QACrCE,KAAKwe,SACP,CAOA,KAAAwF,GACE,MAAMmK,EAAU,IAAI,GAClBnuB,KAAKiT,gBAAgBtT,QACrBK,KAAKslB,OACLtlB,KAAKurB,MAAM5rB,SAGb,OADAwuB,EAAQrO,gBAAgB9f,MACjBmuB,CACT,CASA,cAAAjK,CAAe/a,EAAGgH,EAAGgU,EAAcC,GACjC,OAAIA,EAAqBnS,EAAyBjS,KAAKkO,YAAa/E,EAAGgH,GAC9DiU,GAELpkB,KAAK+qB,mBAAqB/qB,KAAKye,gBACjCze,KAAK8qB,UAAYpsB,KAAKuK,KACpBwd,GACEzmB,KAAKiT,gBACL,EACAjT,KAAKurB,MACLvrB,KAAKkT,OACL,IAGJlT,KAAK+qB,kBAAoB/qB,KAAKye,eAEzBuI,GACLhnB,KAAKiT,gBACL,EACAjT,KAAKurB,MACLvrB,KAAKkT,OACLlT,KAAK8qB,WACL,EACA3hB,EACAgH,EACAgU,EACAC,GAEJ,CAOA,UAAA9R,CAAWnJ,EAAGgH,GACZ,OAAOwZ,GACL3pB,KAAKouB,6BACL,EACApuB,KAAKurB,MACLvrB,KAAKkT,OACL/J,EACAgH,EAEJ,CAOA,OAAAwD,GACE,OAAOgZ,GACL3sB,KAAKouB,6BACL,EACApuB,KAAKurB,MACLvrB,KAAKkT,OAET,CAeA,cAAAqS,CAAemI,GACb,IAAIza,EAQJ,YAPclH,IAAV2hB,GACFza,EAAkBjT,KAAKouB,6BAA6BzuB,QACpDiuB,GAAkB3a,EAAiB,EAAGjT,KAAKurB,MAAOvrB,KAAKkT,OAAQwa,IAE/Dza,EAAkBjT,KAAKiT,gBAGlBoV,GAAwBpV,EAAiB,EAAGjT,KAAKurB,MAAOvrB,KAAKkT,OACtE,CAKA,OAAA2Y,GACE,OAAO7rB,KAAKurB,KACd,CAKA,oBAAA8C,GACE,GAAIruB,KAAK8tB,4BAA8B9tB,KAAKye,cAAe,CACzD,MAAM6P,EAAaxa,EAAU9T,KAAKkO,aAClClO,KAAK+tB,mBAAqBlB,GACxB7sB,KAAKouB,6BACL,EACApuB,KAAKurB,MACLvrB,KAAKkT,OACLob,EACA,GAEFtuB,KAAK8tB,2BAA6B9tB,KAAKye,aACzC,CACA,OAAOze,KAAK+tB,kBACd,CAQA,gBAAAQ,GACE,OAAO,IAAI,GAAMvuB,KAAKquB,uBAAwB,MAChD,CASA,kBAAAG,GACE,OAAOxuB,KAAKurB,MAAMzrB,MACpB,CAYA,aAAA2uB,CAAc/Q,GACZ,OAAIA,EAAQ,GAAK1d,KAAKurB,MAAMzrB,QAAU4d,EAC7B,KAEF,IAAI,GACT1d,KAAKiT,gBAAgBtT,MACT,IAAV+d,EAAc,EAAI1d,KAAKurB,MAAM7N,EAAQ,GACrC1d,KAAKurB,MAAM7N,IAEb1d,KAAKslB,OAET,CAOA,cAAAoJ,GACE,MAAMpJ,EAAStlB,KAAKslB,OACdrS,EAAkBjT,KAAKiT,gBACvByT,EAAO1mB,KAAKurB,MACZoB,EAAc,GACpB,IAAIhvB,EAAS,EACb,IAAK,IAAIU,EAAI,EAAGyT,EAAK4U,EAAK5mB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC7C,MAAM6F,EAAMwiB,EAAKroB,GACXouB,EAAa,IAAI,GACrBxZ,EAAgBtT,MAAMhC,EAAQuG,GAC9BohB,GAEFqH,EAAYzsB,KAAKusB,GACjB9uB,EAASuG,CACX,CACA,OAAOyoB,CACT,CAKA,0BAAAyB,GACE,GAAIpuB,KAAKguB,mBAAqBhuB,KAAKye,cAAe,CAChD,MAAMxL,EAAkBjT,KAAKiT,gBACzBwa,GAAuBxa,EAAiB,EAAGjT,KAAKurB,MAAOvrB,KAAKkT,QAC9DlT,KAAKiuB,yBAA2Bhb,GAEhCjT,KAAKiuB,yBAA2Bhb,EAAgBtT,QAChDK,KAAKiuB,yBAAyBnuB,OAAS8tB,GACrC5tB,KAAKiuB,yBACL,EACAjuB,KAAKurB,MACLvrB,KAAKkT,SAGTlT,KAAKguB,kBAAoBhuB,KAAKye,aAChC,CACA,OAAOze,KAAKiuB,wBACd,CAOA,6BAAApI,CAA8B/B,GAC5B,MAAMwD,EAA4B,GAC5BO,EAAiB,GAWvB,OAVAP,EAA0BxnB,OAASooB,GACjCloB,KAAKiT,gBACL,EACAjT,KAAKurB,MACLvrB,KAAKkT,OACLxU,KAAKuK,KAAK6a,GACVwD,EACA,EACAO,GAEK,IAAI,GAAQP,EAA2B,KAAMO,EACtD,CAOA,OAAAzN,GACE,MAAO,SACT,CAQA,gBAAA0K,CAAiB3X,GACf,OAAOud,GACL1qB,KAAKouB,6BACL,EACApuB,KAAKurB,MACLvrB,KAAKkT,OACL/F,EAEJ,CAQA,cAAA6Y,CAAepU,EAAa0T,GAC1BtlB,KAAKimB,UAAUX,EAAQ1T,EAAa,GAC/B5R,KAAKiT,kBACRjT,KAAKiT,gBAAkB,IAEzB,MAAMyT,EAAOQ,GACXlnB,KAAKiT,gBACL,EACArB,EACA5R,KAAKkT,OACLlT,KAAKurB,OAEPvrB,KAAKiT,gBAAgBnT,OAAyB,IAAhB4mB,EAAK5mB,OAAe,EAAI4mB,EAAKA,EAAK5mB,OAAS,GACzEE,KAAKwe,SACP,EAGF,UAkCO,SAASmQ,GAAWxhB,GACzB,GAAI,GAAQA,GACV,MAAM,IAAInI,MAAM,2CAElB,MAAMyE,EAAO0D,EAAO,GACdzD,EAAOyD,EAAO,GACdxD,EAAOwD,EAAO,GACdvD,EAAOuD,EAAO,GACd8F,EAAkB,CACtBxJ,EACAC,EACAD,EACAG,EACAD,EACAC,EACAD,EACAD,EACAD,EACAC,GAEF,OAAO,IAAI,GAAQuJ,EAAiB,KAAM,CAACA,EAAgBnT,QAC7D,CChcO,SAAS,GAAamT,EAAiBtV,EAAQ4qB,EAAOrV,GAC3D,MAAM4Z,EAAc,GACpB,IAAI3f,E1CuLG,CAAC1O,IAAUA,KAAU,KAAW,K0CtLvC,IAAK,IAAIJ,EAAI,EAAGyT,EAAKyW,EAAMzoB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC9C,MAAMqoB,EAAO6B,EAAMlqB,GACnB8O,EAAS6F,EACPC,EACAtV,EACA+oB,EAAK,GACLxT,GAEF4Z,EAAY5sB,MAAMiN,EAAO,GAAKA,EAAO,IAAM,GAAIA,EAAO,GAAKA,EAAO,IAAM,GACxExP,EAAS+oB,EAAKA,EAAK5mB,OAAS,EAC9B,CACA,OAAOgtB,CACT,CCIA,MAAM,WAAqB,GAOzB,WAAAjgB,CAAY+E,EAAa0T,EAAQiD,GA6C/B,GA5CA/Y,QAMAxP,KAAK4uB,OAAS,GAMd5uB,KAAK6uB,6BAA+B,EAMpC7uB,KAAK8uB,oBAAsB,KAM3B9uB,KAAK8qB,WAAa,EAMlB9qB,KAAK+qB,mBAAqB,EAM1B/qB,KAAKguB,mBAAqB,EAM1BhuB,KAAKiuB,yBAA2B,MAE3B1F,IAAUrY,MAAM4L,QAAQlK,EAAY,IAAK,CAC5C,IAAImd,EAAa/uB,KAAK2lB,YACtB,MAAMqJ,EAAyC,EACzC/b,EAAkB,GAClBgc,EAAY,GAClB,IAAK,IAAI5wB,EAAI,EAAGyT,EAAKkd,EAASlvB,OAAQzB,EAAIyT,IAAMzT,EAAG,CACjD,MAAM8vB,EAAUa,EAAS3wB,GACf,IAANA,IACF0wB,EAAaZ,EAAQxI,aAEvB,MAAMhoB,EAASsV,EAAgBnT,OACzB4mB,EAAOyH,EAAQtC,UACrB,IAAK,IAAIlJ,EAAI,EAAGyE,EAAKV,EAAK5mB,OAAQ6iB,EAAIyE,IAAMzE,EAC1C+D,EAAK/D,IAAMhlB,EAEb,GAAOsV,EAAiBkb,EAAQ1I,sBAChCwJ,EAAU/uB,KAAKwmB,EACjB,CACApB,EAASyJ,EACTnd,EAAcqB,EACdsV,EAAQ0G,CACV,MACeljB,IAAXuZ,GAAwBiD,GAC1BvoB,KAAK+lB,mBACHT,EAC6B,GAE/BtlB,KAAK4uB,OAASrG,GAEdvoB,KAAKgmB,eACuE,EAG1EV,EAGN,CAOA,aAAA4J,CAAcf,GAEZ,IAAIzH,EACJ,GAAK1mB,KAAKiT,gBAIH,CACL,MAAMtV,EAASqC,KAAKiT,gBAAgBnT,OACpC,GAAOE,KAAKiT,gBAAiBkb,EAAQ1I,sBACrCiB,EAAOyH,EAAQtC,UAAUlsB,QACzB,IAAK,IAAItB,EAAI,EAAGyT,EAAK4U,EAAK5mB,OAAQzB,EAAIyT,IAAMzT,EAC1CqoB,EAAKroB,IAAMV,CAEf,MAVEqC,KAAKiT,gBAAkBkb,EAAQ1I,qBAAqB9lB,QACpD+mB,EAAOyH,EAAQtC,UAAUlsB,QACzBK,KAAK4uB,OAAO1uB,OASdF,KAAK4uB,OAAO1uB,KAAKwmB,GACjB1mB,KAAKwe,SACP,CAOA,KAAAwF,GACE,MAAM7hB,EAAMnC,KAAK4uB,OAAO9uB,OAClBqvB,EAAW,IAAIjf,MAAM/N,GAC3B,IAAK,IAAI9D,EAAI,EAAGA,EAAI8D,IAAO9D,EACzB8wB,EAAS9wB,GAAK2B,KAAK4uB,OAAOvwB,GAAGsB,QAG/B,MAAMyvB,EAAe,IAAI,GACvBpvB,KAAKiT,gBAAgBtT,QACrBK,KAAKslB,OACL6J,GAIF,OAFAC,EAAatP,gBAAgB9f,MAEtBovB,CACT,CASA,cAAAlL,CAAe/a,EAAGgH,EAAGgU,EAAcC,GACjC,OAAIA,EAAqBnS,EAAyBjS,KAAKkO,YAAa/E,EAAGgH,GAC9DiU,GAELpkB,KAAK+qB,mBAAqB/qB,KAAKye,gBACjCze,KAAK8qB,UAAYpsB,KAAKuK,KpBjErB,SACLgK,EACAtV,EACA4qB,EACArV,EACAhK,GAEA,IAAK,IAAI7K,EAAI,EAAGyT,EAAKyW,EAAMzoB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC9C,MAAMqoB,EAAO6B,EAAMlqB,GACnB6K,EAAMud,GAAqBxT,EAAiBtV,EAAQ+oB,EAAMxT,EAAQhK,GAClEvL,EAAS+oB,EAAKA,EAAK5mB,OAAS,EAC9B,CACA,OAAOoJ,CACT,CoBqDQmmB,CACErvB,KAAKiT,gBACL,EACAjT,KAAK4uB,OACL5uB,KAAKkT,OACL,IAGJlT,KAAK+qB,kBAAoB/qB,KAAKye,epBmH7B,SACLxL,EACAtV,EACA4qB,EACArV,EACA0T,EACAC,EACA1d,EACAgH,EACAgU,EACAC,EACA0C,GAEAA,EAAWA,GAAsB,CAACtoB,IAAKA,KACvC,IAAK,IAAIH,EAAI,EAAGyT,EAAKyW,EAAMzoB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC9C,MAAMqoB,EAAO6B,EAAMlqB,GACnB+lB,EAAqB4C,GACnB/T,EACAtV,EACA+oB,EACAxT,EACA0T,EACAC,EACA1d,EACAgH,EACAgU,EACAC,EACA0C,GAEFnpB,EAAS+oB,EAAKA,EAAK5mB,OAAS,EAC9B,CACA,OAAOskB,CACT,CoBjJWkL,CACLtvB,KAAKouB,6BACL,EACApuB,KAAK4uB,OACL5uB,KAAKkT,OACLlT,KAAK8qB,WACL,EACA3hB,EACAgH,EACAgU,EACAC,GAEJ,CAOA,UAAA9R,CAAWnJ,EAAGgH,GACZ,OdrFG,SACL8C,EACAtV,EACA4qB,EACArV,EACA/J,EACAgH,GAEA,GAAqB,IAAjBoY,EAAMzoB,OACR,OAAO,EAET,IAAK,IAAIzB,EAAI,EAAGyT,EAAKyW,EAAMzoB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC9C,MAAMqoB,EAAO6B,EAAMlqB,GACnB,GAAIsrB,GAAsB1W,EAAiBtV,EAAQ+oB,EAAMxT,EAAQ/J,EAAGgH,GAClE,OAAO,EAETxS,EAAS+oB,EAAKA,EAAK5mB,OAAS,EAC9B,CACA,OAAO,CACT,CckEWyvB,CACLvvB,KAAKouB,6BACL,EACApuB,KAAK4uB,OACL5uB,KAAKkT,OACL/J,EACAgH,EAEJ,CAOA,OAAAwD,GACE,OPjLG,SAAsBV,EAAiBtV,EAAQ4qB,EAAOrV,GAC3D,IAAIU,EAAO,EACX,IAAK,IAAIvV,EAAI,EAAGyT,EAAKyW,EAAMzoB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC9C,MAAMqoB,EAAO6B,EAAMlqB,GACnBuV,GAAQ+Y,GAAY1Z,EAAiBtV,EAAQ+oB,EAAMxT,GACnDvV,EAAS+oB,EAAKA,EAAK5mB,OAAS,EAC9B,CACA,OAAO8T,CACT,COyKW4b,CACLxvB,KAAKouB,6BACL,EACApuB,KAAK4uB,OACL5uB,KAAKkT,OAET,CAeA,cAAAqS,CAAemI,GACb,IAAIza,EAcJ,YAbclH,IAAV2hB,GACFza,EAAkBjT,KAAKouB,6BAA6BzuB,QACpDkuB,GACE5a,EACA,EACAjT,KAAK4uB,OACL5uB,KAAKkT,OACLwa,IAGFza,EAAkBjT,KAAKiT,gBAGlBqV,GACLrV,EACA,EACAjT,KAAK4uB,OACL5uB,KAAKkT,OAET,CAKA,QAAAuc,GACE,OAAOzvB,KAAK4uB,MACd,CAKA,qBAAAc,GACE,GAAI1vB,KAAK6uB,6BAA+B7uB,KAAKye,cAAe,CAC1D,MAAMqO,EAAc,GAClB9sB,KAAKiT,gBACL,EACAjT,KAAK4uB,OACL5uB,KAAKkT,QAEPlT,KAAK8uB,oBAAsBzB,GACzBrtB,KAAKouB,6BACL,EACApuB,KAAK4uB,OACL5uB,KAAKkT,OACL4Z,GAEF9sB,KAAK6uB,4BAA8B7uB,KAAKye,aAC1C,CACA,OAAOze,KAAK8uB,mBACd,CAQA,iBAAAa,GACE,OAAO,IAAI,GAAW3vB,KAAK0vB,wBAAwB/vB,QAAS,MAC9D,CAKA,0BAAAyuB,GACE,GAAIpuB,KAAKguB,mBAAqBhuB,KAAKye,cAAe,CAChD,MAAMxL,EAAkBjT,KAAKiT,iBHpO5B,SACLA,EACAtV,EACA4qB,EACArV,EACAwa,GAEA,IAAK,IAAIrvB,EAAI,EAAGyT,EAAKyW,EAAMzoB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC9C,MAAMqoB,EAAO6B,EAAMlqB,GACnB,IAAKovB,GAAuBxa,EAAiBtV,EAAQ+oB,EAAMxT,EAAQwa,GACjE,OAAO,EAELhH,EAAK5mB,SACPnC,EAAS+oB,EAAKA,EAAK5mB,OAAS,GAEhC,CACA,OAAO,CACT,CGqNQ8vB,CAAwB3c,EAAiB,EAAGjT,KAAK4uB,OAAQ5uB,KAAKkT,SAI9DlT,KAAKiuB,yBAA2Bhb,EAAgBtT,QAChDK,KAAKiuB,yBAAyBnuB,OAAS+tB,GACrC7tB,KAAKiuB,yBACL,EACAjuB,KAAK4uB,OACL5uB,KAAKkT,SAPPlT,KAAKiuB,yBAA2Bhb,EAUlCjT,KAAKguB,kBAAoBhuB,KAAKye,aAChC,CACA,OAAOze,KAAKiuB,wBACd,CAOA,6BAAApI,CAA8B/B,GAC5B,MAAMwD,EAA4B,GAC5BuI,EAAkB,GAWxB,OAVAvI,EAA0BxnB,OlB0GvB,SACLmT,EACAtV,EACA4qB,EACArV,EACA2R,EACAyC,EACAC,EACAsI,GAEA,IAAK,IAAIxxB,EAAI,EAAGyT,EAAKyW,EAAMzoB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC9C,MAAMqoB,EAAO6B,EAAMlqB,GACbwpB,EAAiB,GACvBN,EAAmBW,GACjBjV,EACAtV,EACA+oB,EACAxT,EACA2R,EACAyC,EACAC,EACAM,GAEFgI,EAAgB3vB,KAAK2nB,GACrBlqB,EAAS+oB,EAAKA,EAAK5mB,OAAS,EAC9B,CACA,OAAOynB,CACT,CkBrIuCuI,CACjC9vB,KAAKiT,gBACL,EACAjT,KAAK4uB,OACL5uB,KAAKkT,OACLxU,KAAKuK,KAAK6a,GACVwD,EACA,EACAuI,GAEK,IAAI,GAAavI,EAA2B,KAAMuI,EAC3D,CAQA,UAAAE,CAAWrS,GACT,GAAIA,EAAQ,GAAK1d,KAAK4uB,OAAO9uB,QAAU4d,EACrC,OAAO,KAET,IAAI/f,EACJ,GAAc,IAAV+f,EACF/f,EAAS,MACJ,CACL,MAAMqyB,EAAWhwB,KAAK4uB,OAAOlR,EAAQ,GACrC/f,EAASqyB,EAASA,EAASlwB,OAAS,EACtC,CACA,MAAM4mB,EAAO1mB,KAAK4uB,OAAOlR,GAAO/d,QAC1BuE,EAAMwiB,EAAKA,EAAK5mB,OAAS,GAC/B,GAAe,IAAXnC,EACF,IAAK,IAAIU,EAAI,EAAGyT,EAAK4U,EAAK5mB,OAAQzB,EAAIyT,IAAMzT,EAC1CqoB,EAAKroB,IAAMV,EAGf,OAAO,IAAI,GACTqC,KAAKiT,gBAAgBtT,MAAMhC,EAAQuG,GACnClE,KAAKslB,OACLoB,EAEJ,CAOA,WAAAuJ,GACE,MAAM3K,EAAStlB,KAAKslB,OACdrS,EAAkBjT,KAAKiT,gBACvBsV,EAAQvoB,KAAK4uB,OACbI,EAAW,GACjB,IAAIrxB,EAAS,EACb,IAAK,IAAIU,EAAI,EAAGyT,EAAKyW,EAAMzoB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC9C,MAAMqoB,EAAO6B,EAAMlqB,GAAGsB,QAChBuE,EAAMwiB,EAAKA,EAAK5mB,OAAS,GAC/B,GAAe,IAAXnC,EACF,IAAK,IAAIglB,EAAI,EAAGyE,EAAKV,EAAK5mB,OAAQ6iB,EAAIyE,IAAMzE,EAC1C+D,EAAK/D,IAAMhlB,EAGf,MAAMwwB,EAAU,IAAI,GAClBlb,EAAgBtT,MAAMhC,EAAQuG,GAC9BohB,EACAoB,GAEFsI,EAAS9uB,KAAKiuB,GACdxwB,EAASuG,CACX,CACA,OAAO8qB,CACT,CAOA,OAAA5U,GACE,MAAO,cACT,CAQA,gBAAA0K,CAAiB3X,GACf,Ob1NG,SACL8F,EACAtV,EACA4qB,EACArV,EACA/F,GAEA,IAAK,IAAI9O,EAAI,EAAGyT,EAAKyW,EAAMzoB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC9C,MAAMqoB,EAAO6B,EAAMlqB,GACnB,GACEqsB,GAA0BzX,EAAiBtV,EAAQ+oB,EAAMxT,EAAQ/F,GAEjE,OAAO,EAETxP,EAAS+oB,EAAKA,EAAK5mB,OAAS,EAC9B,CACA,OAAO,CACT,CayMWowB,CACLlwB,KAAKouB,6BACL,EACApuB,KAAK4uB,OACL5uB,KAAKkT,OACL/F,EAEJ,CAQA,cAAA6Y,CAAepU,EAAa0T,GAC1BtlB,KAAKimB,UAAUX,EAAQ1T,EAAa,GAC/B5R,KAAKiT,kBACRjT,KAAKiT,gBAAkB,IAEzB,MAAMsV,EnBrXH,SACLtV,EACAtV,EACA6qB,EACAtV,EACAqV,GAEAA,EAAQA,GAAgB,GACxB,IAAIlqB,EAAI,EACR,IAAK,IAAIskB,EAAI,EAAGyE,EAAKoB,EAAc1oB,OAAQ6iB,EAAIyE,IAAMzE,EAAG,CACtD,MAAM+D,EAAOQ,GACXjU,EACAtV,EACA6qB,EAAc7F,GACdzP,EACAqV,EAAMlqB,IAEY,IAAhBqoB,EAAK5mB,SACP4mB,EAAK,GAAK/oB,GAEZ4qB,EAAMlqB,KAAOqoB,EACb/oB,EAAS+oB,EAAKA,EAAK5mB,OAAS,EAC9B,CAEA,OADAyoB,EAAMzoB,OAASzB,EACRkqB,CACT,CmB4VkB4H,CACZnwB,KAAKiT,gBACL,EACArB,EACA5R,KAAKkT,OACLlT,KAAK4uB,QAEP,GAAqB,IAAjBrG,EAAMzoB,OACRE,KAAKiT,gBAAgBnT,OAAS,MACzB,CACL,MAAMswB,EAAW7H,EAAMA,EAAMzoB,OAAS,GACtCE,KAAKiT,gBAAgBnT,OACC,IAApBswB,EAAStwB,OAAe,EAAIswB,EAASA,EAAStwB,OAAS,EAC3D,CACAE,KAAKwe,SACP,EAGF,U,UClbA,MAAM,GzBAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GyBOzB,MAAM6R,GASJ,WAAAxjB,CAAY5L,EAAMgS,EAAiByT,EAAM4J,EAAYC,GAInDvwB,KAAKwwB,cAMLxwB,KAAKkN,QAMLlN,KAAKywB,IAAMF,EAMXvwB,KAAK0wB,MAAQzvB,EAMbjB,KAAK2wB,iBAAmB1d,EAMxBjT,KAAK8uB,oBAAsB,KAM3B9uB,KAAK4wB,eAAiB,KAMtB5wB,KAAKurB,MAAQ7E,EAMb1mB,KAAK6wB,YAAcP,CACrB,CAQA,GAAA/jB,CAAI7M,GACF,OAAOM,KAAK6wB,YAAYnxB,EAC1B,CAOA,SAAAwO,GAYE,OAXKlO,KAAKkN,UACRlN,KAAKkN,QACY,UAAflN,KAAK0wB,MACD3d,EAA6B/S,KAAK2wB,kBAClC3d,EACEhT,KAAK2wB,iBACL,EACA3wB,KAAK2wB,iBAAiB7wB,OACtB,IAGHE,KAAKkN,OACd,CAKA,oBAAAmhB,GACE,IAAKruB,KAAK8uB,oBAAqB,CAC7B,MAAMR,EAAaxa,EAAU9T,KAAKkO,aAClClO,KAAK8uB,oBAAsBjC,GACzB7sB,KAAK2wB,iBACL,EAC8B3wB,KAAU,MACxC,EACAsuB,EACA,EAEJ,CACA,OAAOtuB,KAAK8uB,mBACd,CAKA,qBAAAY,GACE,IAAK1vB,KAAK8uB,oBAAqB,CAC7B,MAAMhC,EAAc,GAClB9sB,KAAK2wB,iBACL,EACqC3wB,KAAU,MAC/C,GAEFA,KAAK8uB,oBAAsBzB,GACzBrtB,KAAK2wB,iBACL,EACqC3wB,KAAU,MAC/C,EACA8sB,EAEJ,CACA,OAAO9sB,KAAK8uB,mBACd,CAKA,eAAAxD,GAUE,OATKtrB,KAAK4wB,iBACR5wB,KAAK4wB,eAAiBnI,GACpBzoB,KAAK2wB,iBACL,EACA3wB,KAAK2wB,iBAAiB7wB,OACtB,EACA,KAGGE,KAAK4wB,cACd,CAKA,gBAAA5E,GACE,IAAKhsB,KAAK4wB,eAAgB,CACxB5wB,KAAK4wB,eAAiB,GACtB,MAAM3d,EAAkBjT,KAAK2wB,iBAC7B,IAAIhzB,EAAS,EACb,MAAM+oB,EAAqC1mB,KAAU,MACrD,IAAK,IAAI3B,EAAI,EAAGyT,EAAK4U,EAAK5mB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC7C,MAAM6F,EAAMwiB,EAAKroB,GACXyyB,EAAWrI,GAAiBxV,EAAiBtV,EAAQuG,EAAK,EAAG,IACnE,GAAOlE,KAAK4wB,eAAgBE,GAC5BnzB,EAASuG,CACX,CACF,CACA,OAAOlE,KAAK4wB,cACd,CAQA,KAAAG,GACE,OAAO/wB,KAAKywB,GACd,CAKA,0BAAArC,GACE,OAAOpuB,KAAK2wB,gBACd,CAQA,WAAAK,GACE,OAAOhxB,IACT,CAMA,qBAAA+jB,CAAsBD,GACpB,OAAO9jB,IACT,CASA,mBAAAikB,CAAoBH,EAAkB9K,GACpC,OAAOhZ,IACT,CAOA,aAAAqf,GACE,OAAOrf,KAAK6wB,WACd,CAOA,qBAAAvR,GACE,OAAOtf,KAAK6wB,WACd,CAKA,SAAA/K,GACE,OAAO,CACT,CAKA,gBAAAmL,GACE,OAAOjxB,KAAKwwB,aACd,CAOA,OAAApW,GACE,OAAOpa,KAAK0wB,KACd,CAOA,SAAA1X,CAAUxD,GAER,MAAM2P,GADN3P,EAAa,GAAcA,IACItH,YACzBkX,EAAkB5P,EAAWnH,iBACnC,GAAI8W,GAAeC,EAAiB,CAClC,MAAMT,EAAQ9Q,EAAUuR,GAAmBvR,EAAUsR,GACrD1D,GACE,GACA2D,EAAgB,GAChBA,EAAgB,GAChBT,GACCA,EACD,EACA,EACA,GAEFjC,GACE1iB,KAAK2wB,iBACL,EACA3wB,KAAK2wB,iBAAiB7wB,OACtB,EACA,GACAE,KAAK2wB,iBAET,CACF,CAIA,OAAA9E,GACE,OAAO7rB,KAAKurB,KACd,EAGF8E,GAAcxsB,UAAU4rB,SAAWY,GAAcxsB,UAAUgoB,QAK3DwE,GAAcxsB,UAAU4hB,mBACtB4K,GAAcxsB,UAAUuqB,2BA8D1B,UCjGA,SAAS8C,GAAgB/sB,EAAKgtB,EAAQxvB,GACpC,GAAY,IAARwC,EAAW,CACb,MAAMitB,EAAQ,CACZ3xB,KAAM,GACNwf,OAAQ,GACRtE,SAAU,IAENzW,EAAMvC,EAAIC,aAAeD,EAAIX,IACnCW,EAAIoC,WAAWstB,GAAgBD,EAAOltB,GACtCktB,EAAMtxB,OAASsxB,EAAMzW,SAAS7a,OAC1BsxB,EAAMtxB,SACRqxB,EAAOC,EAAM7f,MAAQ6f,EAEzB,CACF,CAQA,SAASC,GAAeltB,EAAKitB,EAAOzvB,GAClC,GAAY,KAARwC,EACFitB,EAAME,QAAU3vB,EAAIC,kBACf,GAAY,IAARuC,EACTitB,EAAM7f,KAAO5P,EAAI4D,kBACZ,GAAY,IAARpB,EACTitB,EAAMjkB,OAASxL,EAAIC,kBACd,GAAY,IAARuC,EACTitB,EAAMzW,SAASza,KAAKyB,EAAIX,UACnB,GAAY,IAARmD,EACTitB,EAAM3xB,KAAKS,KAAKyB,EAAI4D,mBACf,GAAY,IAARpB,EAAW,CACpB,IAAItF,EAAQ,KACZ,MAAMqF,EAAMvC,EAAIC,aAAeD,EAAIX,IACnC,KAAOW,EAAIX,IAAMkD,GAEfrF,EACU,KAFVsF,EAAMxC,EAAIC,cAAgB,GAGpBD,EAAI4D,aACI,IAARpB,EACAxC,EAAI+C,YACI,IAARP,EACAxC,EAAIgD,aACI,IAARR,EACAxC,EAAIuD,eACI,IAARf,EACAxC,EAAIC,aACI,IAARuC,EACAxC,EAAIwD,cACI,IAARhB,EACAxC,EAAI0D,cACJ,KAER+rB,EAAMnS,OAAO/e,KAAKrB,EACpB,CACF,CAQA,SAAS0yB,GAAiBptB,EAAKsW,EAAS9Y,GACtC,GAAW,GAAPwC,EACFsW,EAAQ8V,GAAK5uB,EAAIC,kBACZ,GAAW,GAAPuC,EAAU,CACnB,MAAMD,EAAMvC,EAAIC,aAAeD,EAAIX,IACnC,KAAOW,EAAIX,IAAMkD,GAAK,CACpB,MAAMxE,EAAM+a,EAAQ2W,MAAM3xB,KAAKkC,EAAIC,cAC7B/C,EAAQ4b,EAAQ2W,MAAMnS,OAAOtd,EAAIC,cACvC6Y,EAAQ6V,WAAW5wB,GAAOb,CAC5B,CACF,MAAkB,GAAPsF,EACTsW,EAAQxZ,KAAOU,EAAIC,aACH,GAAPuC,IACTsW,EAAQI,SAAWlZ,EAAIX,IAE3B,CASA,SAASwwB,GAAe7vB,EAAKyvB,EAAO/yB,GAClCsD,EAAIX,IAAMowB,EAAMzW,SAAStc,GACzB,MAAM6F,EAAMvC,EAAIC,aAAeD,EAAIX,IAE7ByZ,EAAU,CACd2W,MAAOA,EACPnwB,KAAM,EACNqvB,WAAY,CAAC,GAGf,OADA3uB,EAAIoC,WAAWwtB,GAAkB9W,EAASvW,GACnCuW,CACT,CAuBA,OAzYA,cAAkB,GAIhB,WAAA5N,CAAYC,GACV0C,QAEA1C,EAAUA,GAAoB,CAAC,EAK/B9M,KAAK4Z,eAAiB,IAAI,EAAW,CACnC5M,KAAM,GACNyC,MAAO,gBAOTzP,KAAKyxB,cAAgB3kB,EAAQ4kB,aACzB5kB,EAAQ4kB,aACR,GAMJ1xB,KAAK2xB,cAAgB7kB,EAAQ8kB,aAM7B5xB,KAAK6xB,WAAa/kB,EAAQglB,UAAYhlB,EAAQglB,UAAY,QAM1D9xB,KAAK+xB,QAAUjlB,EAAQqkB,OAASrkB,EAAQqkB,OAAS,KAMjDnxB,KAAKgyB,YAAcllB,EAAQmlB,WAE3BjyB,KAAK8Z,oBAAsB,CACzB,qCACA,yBAEJ,CAWA,gBAAAoY,CAAiBvwB,EAAK8Y,EAASxH,EAAiByT,GAC9C/kB,EAAIX,IAAMyZ,EAAQI,SAElB,MAAM3W,EAAMvC,EAAIC,aAAeD,EAAIX,IACnC,IAAImxB,EAAM,EACNryB,EAAS,EACTqJ,EAAI,EACJgH,EAAI,EACJiiB,EAAY,EACZC,EAAa,EAEjB,KAAO1wB,EAAIX,IAAMkD,GAAK,CACpB,IAAKpE,EAAQ,CACX,MAAMwyB,EAAS3wB,EAAIC,aACnBuwB,EAAe,EAATG,EACNxyB,EAASwyB,GAAU,CACrB,CAEAxyB,IAEY,IAARqyB,GAAqB,IAARA,GACfhpB,GAAKxH,EAAIwD,cACTgL,GAAKxO,EAAIwD,cAEG,IAARgtB,GAEEC,EAAYC,IACd3L,EAAKxmB,KAAKkyB,GACVC,EAAaD,GAIjBnf,EAAgB/S,KAAKiJ,EAAGgH,GACxBiiB,GAAa,GACI,IAARD,EACLC,EAAYC,IAEdpf,EAAgB/S,KACd+S,EAAgBof,GAChBpf,EAAgBof,EAAa,IAE/BD,GAAa,GAGf5gB,GAAO,EAAO,GAElB,CAEI4gB,EAAYC,IACd3L,EAAKxmB,KAAKkyB,GACVC,EAAaD,EAEjB,CASA,cAAAG,CAAe5wB,EAAK6wB,EAAY1lB,GAC9B,MAAM7L,EAAOuxB,EAAWvxB,KACxB,GAAa,IAATA,EACF,OAAO,KAGT,IAAIwZ,EACJ,MAAMwE,EAASuT,EAAWlC,WAE1B,IAAIC,EACCvwB,KAAKgyB,aAGRzB,EAAKtR,EAAOjf,KAAKgyB,oBACV/S,EAAOjf,KAAKgyB,cAHnBzB,EAAKiC,EAAWjC,GAMlBtR,EAAOjf,KAAK6xB,YAAcW,EAAWpB,MAAM7f,KAE3C,MAAM0B,EAA+C,GAC/CyT,EAAoC,GAC1C1mB,KAAKkyB,iBAAiBvwB,EAAK6wB,EAAYvf,EAAiByT,GAExD,MAAM+L,EAsOV,SAAyBxxB,EAAMyxB,GAE7B,IAAID,EACS,IAATxxB,EACFwxB,EAA2B,IAAZC,EAAgB,QAAU,aACvB,IAATzxB,EACTwxB,EAA2B,IAAZC,EAAgB,aAAe,kBAC5B,IAATzxB,IACTwxB,EAAe,WAIjB,OAAOA,CACT,CAnPyBE,CAAgB1xB,EAAMylB,EAAK5mB,QAEhD,GAAIE,KAAKyxB,gBAAkB,GACzBhX,EAAU,IAAIza,KAAKyxB,cACjBgB,EACAxf,EACAyT,EACAzH,EACAsR,GAEF9V,EAAQzB,UAAUlM,EAAQ8M,oBACrB,CACL,IAAIgZ,EACJ,GAAoB,WAAhBH,EAA2B,CAC7B,MAAMlK,ELfP,SAAqBtV,EAAiByT,GAC3C,MAAM6B,EAAQ,GACd,IAAI5qB,EAAS,EACTk1B,EAAe,EACnB,IAAK,IAAIx0B,EAAI,EAAGyT,EAAK4U,EAAK5mB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC7C,MAAM6F,EAAMwiB,EAAKroB,GAEjB,GAAKkvB,GAAsBta,EAAiBtV,EAAQuG,EAAK,GAElD,CACL,GAAqB,IAAjBqkB,EAAMzoB,OACR,SAEFyoB,EAAMA,EAAMzoB,OAAS,GAAGI,KAAKwmB,EAAKmM,GACpC,MANEtK,EAAMroB,KAAKwmB,EAAK/mB,MAAMkzB,EAAcx0B,EAAI,IAO1Cw0B,EAAex0B,EAAI,EACnBV,EAASuG,CACX,CACA,OAAOqkB,CACT,CKJsB,CAAYtV,EAAiByT,GAC3CkM,EACErK,EAAMzoB,OAAS,EACX,IAAI,GAAamT,EAAiB,KAAMsV,GACxC,IAAI,GAAQtV,EAAiB,KAAMyT,EAC3C,MACEkM,EACmB,UAAjBH,EACI,IAAI,GAAMxf,EAAiB,MACV,eAAjBwf,EACA,IAAI,GAAWxf,EAAiB,MACf,eAAjBwf,EACA,IAAI,GAAWxf,EAAiB,MACf,oBAAjBwf,EACA,IAAI,GAAgBxf,EAAiB,KAAMyT,GAC3C,KAKRjM,EAAU,IAAIqY,EAFZ9yB,KACF,eAEIA,KAAK2xB,eACPlX,EAAQsY,gBAAgB/yB,KAAK2xB,eAE/B,MAAM9W,EvCUL,SAAsCA,EAAUjc,EAAOkO,GAC5D,MAAMmN,EAAoBnN,EACtB,GAAcA,EAAQmN,mBACtB,KACEL,EAAiB9M,EAAU,GAAcA,EAAQ8M,gBAAkB,KAEzE,IAAIoZ,EAaJ,GAPEA,EAJA/Y,GACAL,IACC,GAAqBK,EAAmBL,IAE1Bhb,EAAQic,EAASmJ,QAAUnJ,GAAU7B,UAClDpa,EAAQqb,EAAoBL,EAC5Bhb,EAAQgb,EAAiBK,GAGbY,EAGdjc,GACAkO,QACmDf,IAAvB,EAAUqK,SACtC,CACA,MAAM6c,EAAQv0B,KAAKC,IAAI,GAAgC,EAAUyX,UAM3D4C,EAAY,SAAUpH,GAC1B,IAAK,IAAIvT,EAAI,EAAGyT,EAAKF,EAAY9R,OAAQzB,EAAIyT,IAAMzT,EACjDuT,EAAYvT,GAAKK,KAAK4X,MAAM1E,EAAYvT,GAAK40B,GAASA,EAExD,OAAOrhB,CACT,EACIohB,IAAgBnY,IAClBmY,EAAcnY,EAASmJ,SAEzBgP,EAAYhe,eAAegE,EAC7B,CACA,OAAOga,CACT,CuCpDuBE,CAA6BN,GAAM,EAAO9lB,GAC3D2N,EAAQ0Y,YAAYtY,QACT9O,IAAPwkB,GACF9V,EAAQ2Y,MAAM7C,GAEhB9V,EAAQ0E,cAAcF,GAAQ,EAChC,CAEA,OAAOxE,CACT,CAKA,OAAAL,GACE,MAAO,aACT,CAUA,YAAAE,CAAa7J,EAAQ3D,GACnB,MAAMqkB,EAASnxB,KAAK+xB,QAEdnY,EAAiB,IADvB9M,EAAU9M,KAAKka,aAAapN,IACO8M,gBACnCA,EAAe/K,eAAe/B,EAAQK,QACtCL,EAAQ8M,eAAiBA,EAEzB,MAAMjY,EAAM,IAAI,GAA+B,GACzC0xB,EAAY1xB,EAAIoC,WAAWmtB,GAAiB,CAAC,GAC7CvW,EAAW,GACjB,IAAK,MAAMpJ,KAAQ8hB,EAAW,CAC5B,GAAIlC,IAAWA,EAAOvU,SAASrL,GAC7B,SAEF,MAAM+hB,EAAWD,EAAU9hB,GAErBpE,EAASmmB,EAAW,CAAC,EAAG,EAAGA,EAASnmB,OAAQmmB,EAASnmB,QAAU,KACrEyM,EAAehL,UAAUzB,GAEzB,IAAK,IAAI9O,EAAI,EAAGyT,EAAKwhB,EAASxzB,OAAQzB,EAAIyT,IAAMzT,EAAG,CACjD,MAAMm0B,EAAahB,GAAe7vB,EAAK2xB,EAAUj1B,GAC3Coc,EAAUza,KAAKuyB,eAAe5wB,EAAK6wB,EAAY1lB,GACrC,OAAZ2N,GACFE,EAASza,KAAKua,EAElB,CACF,CAEA,OAAOE,CACT,CASA,cAAAX,CAAevJ,GACb,OAAOzQ,KAAK4Z,cACd,CAOA,SAAA2Z,CAAUpC,GACRnxB,KAAK+xB,QAAUZ,CACjB,GCnSK,MAAMqC,GAAO/0B,IA4PpB,OA9OA,MAKE,WAAAoO,CAAY4mB,EAAkBC,GAK5B1zB,KAAK2zB,kBAAoBF,EAMzBzzB,KAAK4zB,aAAeF,EAMpB1zB,KAAK6zB,UAAY,GAMjB7zB,KAAK8zB,YAAc,GAMnB9zB,KAAK+zB,gBAAkB,CAAC,CAC1B,CAKA,KAAAxqB,GACEvJ,KAAK6zB,UAAU/zB,OAAS,EACxBE,KAAK8zB,YAAYh0B,OAAS,EAC1B,GAAME,KAAK+zB,gBACb,CAMA,OAAAC,GACE,MAAMC,EAAWj0B,KAAK6zB,UAChBK,EAAal0B,KAAK8zB,YAClBK,EAAUF,EAAS,GACF,GAAnBA,EAASn0B,QACXm0B,EAASn0B,OAAS,EAClBo0B,EAAWp0B,OAAS,IAEpBm0B,EAAS,GAAKA,EAASlqB,MACvBmqB,EAAW,GAAKA,EAAWnqB,MAC3B/J,KAAKo0B,QAAQ,IAEf,MAAMC,EAAar0B,KAAK4zB,aAAaO,GAErC,cADOn0B,KAAK+zB,gBAAgBM,GACrBF,CACT,CAOA,OAAAG,CAAQH,GACN3iB,IAASxR,KAAK4zB,aAAaO,KAAYn0B,KAAK+zB,iBAAkB,IAC9D,MAAMQ,EAAWv0B,KAAK2zB,kBAAkBQ,GACxC,OAAII,GAAYf,KACdxzB,KAAK6zB,UAAU3zB,KAAKi0B,GACpBn0B,KAAK8zB,YAAY5zB,KAAKq0B,GACtBv0B,KAAK+zB,gBAAgB/zB,KAAK4zB,aAAaO,KAAY,EACnDn0B,KAAKw0B,UAAU,EAAGx0B,KAAK6zB,UAAU/zB,OAAS,IACnC,EAGX,CAKA,QAAA20B,GACE,OAAOz0B,KAAK6zB,UAAU/zB,MACxB,CAQA,kBAAA40B,CAAmBhX,GACjB,OAAe,EAARA,EAAY,CACrB,CAQA,mBAAAiX,CAAoBjX,GAClB,OAAe,EAARA,EAAY,CACrB,CAQA,eAAAkX,CAAgBlX,GACd,OAAQA,EAAQ,GAAM,CACxB,CAMA,QAAAmX,GACE,IAAIx2B,EACJ,IAAKA,GAAK2B,KAAK6zB,UAAU/zB,QAAU,GAAK,EAAGzB,GAAK,EAAGA,IACjD2B,KAAKo0B,QAAQ/1B,EAEjB,CAKA,OAAAy2B,GACE,OAAiC,IAA1B90B,KAAK6zB,UAAU/zB,MACxB,CAMA,WAAAi1B,CAAYr1B,GACV,OAAOA,KAAOM,KAAK+zB,eACrB,CAMA,QAAAiB,CAASb,GACP,OAAOn0B,KAAK+0B,YAAY/0B,KAAK4zB,aAAaO,GAC5C,CAMA,OAAAC,CAAQ1W,GACN,MAAMuW,EAAWj0B,KAAK6zB,UAChBK,EAAal0B,KAAK8zB,YAClBmB,EAAQhB,EAASn0B,OACjBq0B,EAAUF,EAASvW,GACnB6W,EAAWL,EAAWxW,GACtBwX,EAAaxX,EAEnB,KAAOA,EAAQuX,GAAS,GAAG,CACzB,MAAME,EAASn1B,KAAK00B,mBAAmBhX,GACjC0X,EAASp1B,KAAK20B,oBAAoBjX,GAElC2X,EACJD,EAASH,GAASf,EAAWkB,GAAUlB,EAAWiB,GAC9CC,EACAD,EAENlB,EAASvW,GAASuW,EAASoB,GAC3BnB,EAAWxW,GAASwW,EAAWmB,GAC/B3X,EAAQ2X,CACV,CAEApB,EAASvW,GAASyW,EAClBD,EAAWxW,GAAS6W,EACpBv0B,KAAKw0B,UAAUU,EAAYxX,EAC7B,CAOA,SAAA8W,CAAUU,EAAYxX,GACpB,MAAMuW,EAAWj0B,KAAK6zB,UAChBK,EAAal0B,KAAK8zB,YAClBK,EAAUF,EAASvW,GACnB6W,EAAWL,EAAWxW,GAE5B,KAAOA,EAAQwX,GAAY,CACzB,MAAMI,EAAct1B,KAAK40B,gBAAgBlX,GACzC,KAAIwW,EAAWoB,GAAef,GAK5B,MAJAN,EAASvW,GAASuW,EAASqB,GAC3BpB,EAAWxW,GAASwW,EAAWoB,GAC/B5X,EAAQ4X,CAIZ,CACArB,EAASvW,GAASyW,EAClBD,EAAWxW,GAAS6W,CACtB,CAKA,YAAAgB,GACE,MAAM9B,EAAmBzzB,KAAK2zB,kBACxBM,EAAWj0B,KAAK6zB,UAChBK,EAAal0B,KAAK8zB,YACxB,IAAIpW,EAAQ,EACZ,MAAM9U,EAAIqrB,EAASn0B,OACnB,IAAIq0B,EAAS91B,EAAGk2B,EAChB,IAAKl2B,EAAI,EAAGA,EAAIuK,IAAKvK,EACnB81B,EAAUF,EAAS51B,GACnBk2B,EAAWd,EAAiBU,GACxBI,GAAYf,UACPxzB,KAAK+zB,gBAAgB/zB,KAAK4zB,aAAaO,KAE9CD,EAAWxW,GAAS6W,EACpBN,EAASvW,KAAWyW,GAGxBF,EAASn0B,OAAS4d,EAClBwW,EAAWp0B,OAAS4d,EACpB1d,KAAK60B,UACP,GC3PF,GACQ,EADR,GAEW,EAFX,GAGU,EAHV,GAQS,EART,GASS,EC6GT,OAlHA,cAAwB,GAKtB,WAAAhoB,CAAY2oB,EAAsBC,GAChCjmB,OAKE,SAAU2kB,GACR,OAAOqB,EAAqBvqB,MAAM,KAAMkpB,EAC1C,IAKA,SAAUA,GACR,OAAmDA,EAAQ,GAAIuB,QACjE,IAIF11B,KAAK21B,uBAAyB31B,KAAK41B,iBAAiB9X,KAAK9d,MAMzDA,KAAK61B,oBAAsBJ,EAM3Bz1B,KAAK81B,cAAgB,EAMrB91B,KAAK+1B,kBAAoB,CAAC,CAC5B,CAMA,OAAAzB,CAAQH,GACN,MAAM6B,EAAQxmB,MAAM8kB,QAAQH,GAC5B,GAAI6B,EAAO,CACI7B,EAAQ,GAChB3X,iBAAiB,GAAkBxc,KAAK21B,uBAC/C,CACA,OAAOK,CACT,CAKA,eAAAC,GACE,OAAOj2B,KAAK81B,aACd,CAMA,gBAAAF,CAAiB9Y,GACf,MAAMoZ,EAAmDpZ,EAAY,OAC/DqZ,EAAQD,EAAKE,WACnB,GACED,IAAUE,IACVF,IAAUE,IACVF,IAAUE,GACV,CACIF,IAAUE,IACZH,EAAK3Y,oBAAoB,GAAkBvd,KAAK21B,wBAElD,MAAMW,EAAUJ,EAAKR,SACjBY,KAAWt2B,KAAK+1B,2BACX/1B,KAAK+1B,kBAAkBO,KAC5Bt2B,KAAK81B,eAET91B,KAAK61B,qBACP,CACF,CAMA,aAAAU,CAAcC,EAAiBC,GAC7B,IACIN,EAAOD,EAAMI,EADbI,EAAW,EAEf,KACE12B,KAAK81B,cAAgBU,GACrBE,EAAWD,GACXz2B,KAAKy0B,WAAa,GAElByB,EAAmDl2B,KAAKg0B,UAAU,GAClEsC,EAAUJ,EAAKR,SACfS,EAAQD,EAAKE,WACTD,IAAUE,IAAoBC,KAAWt2B,KAAK+1B,oBAChD/1B,KAAK+1B,kBAAkBO,IAAW,IAChCt2B,KAAK81B,gBACLY,EACFR,EAAK5rB,OAGX,GCnHF,OACW,UADX,GAEW,UAFX,GAGU,SAHV,GAIW,SAJX,GAKkB,gBALlB,GAMkB,gBANlB,GAOY,UAPZ,GAQY,UARZ,GASU,SATV,GAUO,MCgYP,OAnVA,cAAwB,GAItB,WAAAuC,CAAYC,GACV0C,QAKAxP,KAAKqe,GAKLre,KAAK6d,KAKL7d,KAAKse,GAMLte,KAAK22B,YAAc7pB,EAAQ8pB,WAK3B,MAAMtG,EAAalkB,OAAO+N,OAAO,CAAC,EAAGrN,GACH,iBAAvBA,EAAQwjB,oBACVA,EAAWA,WAClBlkB,OAAO+N,OAAOmW,EAAYxjB,EAAQwjB,aAGpCA,EAAW,SACWvkB,IAApBe,EAAQ+pB,QAAwB/pB,EAAQ+pB,QAAU,EACpDrlB,EAAoD,iBAAtC8e,EAAW,IAAqC,IAE9DA,EAAW,SACWvkB,IAApBe,EAAQgqB,SAAwBhqB,EAAQgqB,QAC1CxG,EAAW,IAAyBxjB,EAAQiqB,OAC5CzG,EAAW,SACiBvkB,IAA1Be,EAAQkqB,cAA8BlqB,EAAQkqB,cAAgBv4B,IAChE6xB,EAAW,SACiBvkB,IAA1Be,EAAQmqB,cAA8BnqB,EAAQmqB,cAAgB,EAChE3G,EAAW,SACWvkB,IAApBe,EAAQoqB,QAAwBpqB,EAAQoqB,SAAWz4B,IACrD6xB,EAAW,SACWvkB,IAApBe,EAAQqqB,QAAwBrqB,EAAQqqB,QAAU14B,IAMpDuB,KAAKo3B,gBACsBrrB,IAAzBukB,EAAW+G,UAA0B/G,EAAW+G,UAAY,kBACvD/G,EAAW+G,UAElBr3B,KAAKmf,cAAcmR,GAMnBtwB,KAAKs3B,OAAS,IAChB,CAMA,aAAAC,GACE,OAAOv3B,KAAK22B,WACd,CAKA,YAAAa,GACE,OAAOx3B,KAAKo3B,UACd,CASA,aAAAK,CAAcC,GAEZ,MAAMvB,EACJn2B,KAAKs3B,QACY,CACflG,MAAOpxB,KACP03B,aAAqB3rB,IAAZ2rB,GAA+BA,GAEtCX,EAAS/2B,KAAK23B,YAWpB,OAVAxB,EAAMU,QAAU,GAAMn4B,KAAK4X,MAA0B,IAApBtW,KAAK43B,cAAsB,IAAK,EAAG,GACpEzB,EAAMW,QAAU92B,KAAK63B,aACrB1B,EAAMhpB,OAASnN,KAAKkO,YACpBioB,EAAMY,YAAoBhrB,IAAXgrB,GAAyBZ,EAAMuB,QAAqBX,EAAXt4B,IACxD03B,EAAMa,cAAgBh3B,KAAK83B,mBAC3B3B,EAAMc,cAAgBv4B,KAAKwK,IAAIlJ,KAAK+3B,mBAAoB,GACxD5B,EAAMe,QAAUl3B,KAAKg4B,aACrB7B,EAAMgB,QAAUn3B,KAAKi4B,aACrBj4B,KAAKs3B,OAASnB,EAEPA,CACT,CAQA,cAAA+B,CAAeC,GACb,OAAO,GACT,CAQA,mBAAAC,CAAoBC,GAClB,OAAO,GACT,CASA,SAAAnqB,GACE,OACElO,KAAKuM,IAAI,GAEb,CASA,gBAAAurB,GACE,OAA8B93B,KAAKuM,IAAI,GACzC,CASA,gBAAAwrB,GACE,OAA8B/3B,KAAKuM,IAAI,GACzC,CASA,UAAAyrB,GACE,OAA8Bh4B,KAAKuM,IAAI,GACzC,CASA,UAAA0rB,GACE,OAA8Bj4B,KAAKuM,IAAI,GACzC,CAQA,UAAAqrB,GACE,OAA8B53B,KAAKuM,IAAI,GACzC,CAMA,cAAA+rB,GACE,OAAO,GACT,CASA,UAAAT,GACE,OAA+B73B,KAAKuM,IAAI,GAC1C,CASA,SAAAorB,GACE,OAAwC33B,KAAKuM,IAAI,GACnD,CAMA,aAAAgsB,CAAc3B,GACZ52B,KAAK22B,YAAcC,EACnB52B,KAAKwe,SACP,CASA,SAAA5P,CAAUzB,GACRnN,KAAKgH,IAAI,GAAsBmG,EACjC,CAQA,gBAAAqrB,CAAiBxB,GACfh3B,KAAKgH,IAAI,GAA8BgwB,EACzC,CAQA,gBAAAyB,CAAiBxB,GACfj3B,KAAKgH,IAAI,GAA8BiwB,EACzC,CAUA,UAAAyB,CAAWvB,GACTn3B,KAAKgH,IAAI,GAAwBmwB,EACnC,CAUA,UAAAwB,CAAWzB,GACTl3B,KAAKgH,IAAI,GAAwBkwB,EACnC,CAQA,UAAA0B,CAAW/B,GACTrlB,EAA0B,iBAAZqlB,EAAsB,IACpC72B,KAAKgH,IAAI,GAAuB6vB,EAClC,CAQA,UAAAgC,CAAW/B,GACT92B,KAAKgH,IAAI,GAAuB8vB,EAClC,CASA,SAAAgC,CAAUC,GACR/4B,KAAKgH,IAAI,GAAuB+xB,EAClC,CAKA,eAAA1d,GACMrb,KAAKs3B,SACPt3B,KAAKs3B,OAAOlG,MAAQ,KACpBpxB,KAAKs3B,OAAS,MAEhB9nB,MAAM6L,iBACR,GCvYF,GAMa,YANb,GAac,aAbd,GAsBc,aCtBd,GACa,EADb,GAEe,ECFf,IACE2d,OAAQ,SACRC,WAAY,aACZC,SAAU,YCFL,MAAMC,GAAmB,GAMnBC,GAAoB,ICE1B,SAASC,GAAalsB,EAAQmsB,EAAYC,GAC/C,OAAO,SASKrlB,EAAQxE,EAAY0E,EAAMolB,EAAUC,GAC5C,IAAKvlB,EACH,OAEF,IAAKxE,IAAe4pB,EAClB,OAAOplB,EAET,MAAMwlB,EAAYJ,EAAa,EAAIllB,EAAK,GAAK1E,EACvCiqB,EAAaL,EAAa,EAAIllB,EAAK,GAAK1E,EACxCkqB,EAASH,EAAcA,EAAY,GAAK,EACxCI,EAASJ,EAAcA,EAAY,GAAK,EAC9C,IAAIhwB,EAAO0D,EAAO,GAAKusB,EAAY,EAAIE,EACnCjwB,EAAOwD,EAAO,GAAKusB,EAAY,EAAIE,EACnClwB,EAAOyD,EAAO,GAAKwsB,EAAa,EAAIE,EACpCjwB,EAAOuD,EAAO,GAAKwsB,EAAa,EAAIE,EAIpCpwB,EAAOE,IACTF,GAAQE,EAAOF,GAAQ,EACvBE,EAAOF,GAELC,EAAOE,IACTF,GAAQE,EAAOF,GAAQ,EACvBE,EAAOF,GAGT,IAAIP,EAAI,GAAM+K,EAAO,GAAIzK,EAAME,GAC3BwG,EAAI,GAAM+D,EAAO,GAAIxK,EAAME,GAG/B,GAAI4vB,GAAYD,GAAU7pB,EAAY,CACpC,MAAMoqB,EAAQ,GAAKpqB,EACnBvG,IACG2wB,EAAQp7B,KAAKS,IAAI,EAAIT,KAAKwK,IAAI,EAAGO,EAAOyK,EAAO,IAAM4lB,GACtDA,EAAQp7B,KAAKS,IAAI,EAAIT,KAAKwK,IAAI,EAAGgL,EAAO,GAAKvK,GAAQmwB,GACvD3pB,IACG2pB,EAAQp7B,KAAKS,IAAI,EAAIT,KAAKwK,IAAI,EAAGQ,EAAOwK,EAAO,IAAM4lB,GACtDA,EAAQp7B,KAAKS,IAAI,EAAIT,KAAKwK,IAAI,EAAGgL,EAAO,GAAKtK,GAAQkwB,EACzD,CAEA,MAAO,CAAC3wB,EAAGgH,EAEf,CACF,CAMO,SAASkH,GAAKnD,GACnB,OAAOA,CACT,CC1DA,SAAS6lB,GACPrqB,EACAsqB,EACAC,EACAC,GAEA,MAAMC,EAAc,GAASH,GAAaC,EAAa,GACjDG,EAAcvmB,EAAUmmB,GAAaC,EAAa,GAExD,OAAIC,EACKx7B,KAAKqI,IAAI2I,EAAYhR,KAAKwK,IAAIixB,EAAaC,IAE7C17B,KAAKqI,IAAI2I,EAAYhR,KAAKqI,IAAIozB,EAAaC,GACpD,CAcA,SAASC,GAA2B3qB,EAAYsnB,EAAeC,GAC7D,IAAIhzB,EAASvF,KAAKqI,IAAI2I,EAAYsnB,GAalC,OAVA/yB,GACEvF,KAAKS,IAAI,EAHG,GAGST,KAAKwK,IAAI,EAAGwG,EAAasnB,EAAgB,IAHlD,GAIZ,EACEC,IACFhzB,EAASvF,KAAKwK,IAAIjF,EAAQgzB,GAC1BhzB,GACEvF,KAAKS,IAAI,EARC,GAQWT,KAAKwK,IAAI,EAAG+tB,EAAgBvnB,EAAa,IARpD,GAUV,GAEG,GAAMzL,EAAQgzB,EAAgB,EAAmB,EAAhBD,EAC1C,CA0IO,SAASsD,GACdtD,EACAC,EACAsC,EACAS,EACAE,GAIA,OAFAX,OAAoBxtB,IAAXwtB,GAAuBA,EAEzB,SAQK7pB,EAAY8L,EAAWpH,EAAMolB,GACrC,QAAmBztB,IAAf2D,EAA0B,CAC5B,MAAM6qB,EAAeP,EACjBD,GACE/C,EACAgD,EACA5lB,EACA8lB,GAEFlD,EAEJ,OAAKuC,GAAWC,EAGTa,GACL3qB,EACA6qB,EACAtD,GALO,GAAMvnB,EAAYunB,EAAesD,EAO5C,CAGJ,CACF,CCnOO,SAAS9iB,GAAQtD,GACtB,QAAiBpI,IAAboI,EACF,OAAO,CAGX,CAMO,SAAS,GAAKA,GACnB,QAAiBpI,IAAboI,EACF,OAAOA,CAGX,CCnBO,SAASqmB,GAAO/xB,GACrB,OAAO/J,KAAKC,IAAI8J,EAAG,EACrB,CAQO,SAASgyB,GAAQhyB,GACtB,OAAO,EAAI+xB,GAAO,EAAI/xB,EACxB,CAQO,SAASiyB,GAASjyB,GACvB,OAAO,EAAIA,EAAIA,EAAI,EAAIA,EAAIA,EAAIA,CACjC,CC61DA,SAASkyB,GAAkBpnB,EAAUqnB,GACnCC,YAAW,WACTtnB,EAASqnB,EACX,GAAG,EACL,CAkMO,SAASE,GAAgBC,GAC9B,QAAIA,EAAUC,cAAgBD,EAAUE,eACjC,GAAiBF,EAAUC,aAAcD,EAAUE,iBAItDF,EAAUG,mBAAqBH,EAAUI,kBAGzCJ,EAAUK,iBAAmBL,EAAUM,eAI7C,CAUA,SAASC,GAAkBjpB,EAAY+B,EAAMmnB,EAAU7rB,EAAYyE,GAEjE,MAAMqnB,EAAW98B,KAAK4V,KAAKH,GAC3B,IAAIsnB,EAAW/8B,KAAK8V,KAAKL,GACrBunB,EAAOrpB,EAAW,GAAKmpB,EAAWnpB,EAAW,GAAKopB,EAClDE,EAAOtpB,EAAW,GAAKmpB,EAAWnpB,EAAW,GAAKopB,EACtDC,IAAStnB,EAAK,GAAK,EAAImnB,EAAS,IAAM7rB,EACtCisB,IAASJ,EAAS,GAAKnnB,EAAK,GAAK,GAAK1E,EAGtC+rB,GAAYA,EAIZ,MAAO,CAHSC,EAAOF,EAAWG,EAAOF,EACzBE,EAAOH,EAAWE,EAAOD,EAG3C,CAEA,OApzDA,cAAmB,GAIjB,WAAA5uB,CAAYC,GACV0C,QAKAxP,KAAKqe,GAKLre,KAAK6d,KAKL7d,KAAKse,GAELxR,EAAUV,OAAO+N,OAAO,CAAC,EAAGrN,GAM5B9M,KAAK47B,OAAS,CAAC,EAAG,GAMlB57B,KAAK67B,YAAc,GAMnB77B,KAAK87B,oBAOL97B,KAAK+7B,YAAcvjB,GAAiB1L,EAAQ0I,WAAY,aAMxDxV,KAAKg8B,cAAgB,CAAC,IAAK,KAM3Bh8B,KAAKi8B,cAAgB,KAMrBj8B,KAAKk8B,kBAMLl8B,KAAKm8B,gBAMLn8B,KAAKo8B,YAAc,KAMnBp8B,KAAKq8B,gBAMLr8B,KAAKs8B,cAMLt8B,KAAKu8B,mBAAgBxwB,EAEjBe,EAAQ0I,YACVgC,KAEE1K,EAAQoH,SACVpH,EAAQoH,OAASkF,GAAmBtM,EAAQoH,OAAQlU,KAAK+7B,cAEvDjvB,EAAQK,SACVL,EAAQK,OAASqM,GAAe1M,EAAQK,OAAQnN,KAAK+7B,cAGvD/7B,KAAKw8B,cAAc1vB,EACrB,CAMA,aAAA0vB,CAAc1vB,GACZ,MAAMwjB,EAAalkB,OAAO+N,OAAO,CAAC,EAAGrN,GACrC,IAAK,MAAMpN,KAAO+8B,UACTnM,EAAW5wB,GAEpBM,KAAKmf,cAAcmR,GAAY,GAE/B,MAAMoM,EAg/CH,SAAoC5vB,GACzC,IAAI6vB,EACA3F,EACAC,EAIJ,MAAM2F,EAAiB,GACjBC,EAAoB,EAE1B,IAAI3F,OACkBnrB,IAApBe,EAAQoqB,QAAwBpqB,EAAQoqB,QAzsDnB,EA2sDnBC,OACkBprB,IAApBe,EAAQqqB,QAAwBrqB,EAAQqqB,QAAUyF,EAEpD,MAAME,OACmB/wB,IAAvBe,EAAQgwB,WAA2BhwB,EAAQgwB,WAAaD,EAEpDE,OACmBhxB,IAAvBe,EAAQiwB,YAA2BjwB,EAAQiwB,WAEvCxD,OACmCxtB,IAAvCe,EAAQkwB,4BACJlwB,EAAQkwB,2BAGR9C,OACuBnuB,IAA3Be,EAAQotB,gBAA+BptB,EAAQotB,eAE3C1kB,EAAagD,GAAiB1L,EAAQ0I,WAAY,aAClDynB,EAAaznB,EAAWtH,YAC9B,IAAIgvB,EAAsBpwB,EAAQowB,oBAC9B/vB,EAASL,EAAQK,OAChB4vB,GAAe5vB,IAAUqI,EAAWjH,aACvC2uB,GAAsB,EACtB/vB,EAAS8vB,GAGX,QAA4BlxB,IAAxBe,EAAQqwB,YAA2B,CACrC,MAAMA,EAAcrwB,EAAQqwB,YAC5BnG,EAAgBmG,EAAYjG,GAC5BD,OAC2BlrB,IAAzBoxB,EAAYhG,GACRgG,EAAYhG,GACZgG,EAAYA,EAAYr9B,OAAS,GAGrC68B,EADE7vB,EAAQswB,oBHx4DT,SACLD,EACA5D,EACAS,EACAE,GAGA,OADAX,OAAoBxtB,IAAXwtB,GAAuBA,EACzB,SAQK7pB,EAAY8L,EAAWpH,EAAMolB,GACrC,QAAmBztB,IAAf2D,EAA0B,CAC5B,MAAMsnB,EAAgBmG,EAAY,GAC5BlG,EAAgBkG,EAAYA,EAAYr9B,OAAS,GACjDy6B,EAAeP,EACjBD,GACE/C,EACAgD,EACA5lB,EACA8lB,GAEFlD,EAGJ,GAAIwC,EACF,OAAKD,EAGEc,GACL3qB,EACA6qB,EACAtD,GALO,GAAMvnB,EAAYunB,EAAesD,GAS5C,MAAM8C,EAAS3+B,KAAKqI,IAAIwzB,EAAc7qB,GAChC4tB,EAAI5+B,KAAKQ,MAAMqc,GAAkB4hB,EAAaE,EAAQ7hB,IAC5D,OAAI2hB,EAAYG,GAAK/C,GAAgB+C,EAAIH,EAAYr9B,OAAS,EACrDq9B,EAAYG,EAAI,GAElBH,EAAYG,EACrB,CAGJ,CACF,CGu1D6BC,CACrBJ,EACA5D,GACC2D,GAAuB/vB,EACxB+sB,GAGqBI,GACrBtD,EACAC,EACAsC,GACC2D,GAAuB/vB,EACxB+sB,EAGN,KAAO,CAEL,MAKMsD,GALQP,EAGVv+B,KAAKwK,IAAI,GAAS+zB,GAAappB,EAAUopB,IADxC,IAAM,EAAgBQ,QAAWjoB,EAAWpH,oBAIxCgrB,GAAoB16B,KAAKC,IAAIk+B,EArwDjB,GAuwDfa,EACJF,EACA9+B,KAAKC,IAAIk+B,EAAmBD,EAzwDT,GA4wDrB5F,EAAgBlqB,EAAQkqB,mBACFjrB,IAAlBirB,EACFE,EAAU,EAEVF,EAAgBwG,EAAuB9+B,KAAKC,IAAIm+B,EAAY5F,GAI9DD,EAAgBnqB,EAAQmqB,mBACFlrB,IAAlBkrB,IAGEA,OAFoBlrB,IAApBe,EAAQqqB,aACoBprB,IAA1Be,EAAQkqB,cACMA,EAAgBt4B,KAAKC,IAAIm+B,EAAY3F,GAErCqG,EAAuB9+B,KAAKC,IAAIm+B,EAAY3F,GAG9CuG,GAKpBvG,EACED,EACAx4B,KAAKQ,MACHR,KAAKS,IAAI63B,EAAgBC,GAAiBv4B,KAAKS,IAAI29B,IAEvD7F,EAAgBD,EAAgBt4B,KAAKC,IAAIm+B,EAAY3F,EAAUD,GAG7DyF,EADE7vB,EAAQswB,oBHv4DT,SACLnK,EACA+D,EACAC,EACAsC,EACAS,EACAE,GAKA,OAHAX,OAAoBxtB,IAAXwtB,GAAuBA,EAChCtC,OAAkClrB,IAAlBkrB,EAA8BA,EAAgB,EAEvD,SAQKvnB,EAAY8L,EAAWpH,EAAMolB,GACrC,QAAmBztB,IAAf2D,EAA0B,CAC5B,MAAM6qB,EAAeP,EACjBD,GACE/C,EACAgD,EACA5lB,EACA8lB,GAEFlD,EAGJ,GAAIwC,EACF,OAAKD,EAGEc,GACL3qB,EACA6qB,EACAtD,GALO,GAAMvnB,EAAYunB,EAAesD,GAS5C,MAAM1V,EAAY,KACZ8Y,EAAej/B,KAAK4K,KACxB5K,KAAKS,IAAI63B,EAAgBuD,GAAgB77B,KAAKS,IAAI8zB,GAASpO,GAEvDlnB,GAAU6d,GAAa,GAAMqJ,GAAa,GAC1CwY,EAAS3+B,KAAKqI,IAAIwzB,EAAc7qB,GAChCkuB,EAAkBl/B,KAAKQ,MAC3BR,KAAKS,IAAI63B,EAAgBqG,GAAU3+B,KAAKS,IAAI8zB,GAASt1B,GAEjDkgC,EAAYn/B,KAAKwK,IAAIy0B,EAAcC,GAEzC,OAAO,GADe5G,EAAgBt4B,KAAKC,IAAIs0B,EAAO4K,GAC1B5G,EAAesD,EAC7C,CAGJ,CACF,CG80D6BuD,CACrBhB,EACA9F,EACAC,EACAsC,GACC2D,GAAuB/vB,EACxB+sB,GAGqBI,GACrBtD,EACAC,EACAsC,GACC2D,GAAuB/vB,EACxB+sB,EAGN,CACA,MAAO,CACL6D,WAAYpB,EACZ3F,cAAeA,EACfC,cAAeA,EACfC,QAASA,EACT4F,WAAYA,EAEhB,CArnDqCkB,CAA2BlxB,GAM5D9M,KAAKi+B,eAAiBvB,EAAyB1F,cAM/Ch3B,KAAKk+B,eAAiBxB,EAAyBzF,cAM/Cj3B,KAAKm+B,YAAczB,EAAyBI,WAM5C98B,KAAKo+B,aAAetxB,EAAQqwB,YAM5Bn9B,KAAKq+B,SAAWvxB,EAAQwxB,QAMxBt+B,KAAKu+B,SAAW7B,EAAyBxF,QAEzC,MAAMsH,EAi7CH,SAAgC1xB,GACrC,QAAuBf,IAAnBe,EAAQK,OAAsB,CAChC,MAAMosB,OAC+BxtB,IAAnCe,EAAQ2xB,wBACJ3xB,EAAQ2xB,uBAEd,OAAOpF,GAAavsB,EAAQK,OAAQL,EAAQowB,oBAAqB3D,EACnE,CAEA,MAAM/jB,EAAagD,GAAiB1L,EAAQ0I,WAAY,aACxD,IAA2B,IAAvB1I,EAAQiwB,YAAuBvnB,EAAWjH,WAAY,CACxD,MAAMpB,EAASqI,EAAWtH,YAAYvO,QAGtC,OAFAwN,EAAO,IAAM1O,IACb0O,EAAO,GAAK1O,IACL46B,GAAalsB,GAAQ,GAAO,EACrC,CAEA,OAAO,EACT,CAn8C6BuxB,CAAuB5xB,GAC1C6vB,EAAuBD,EAAyBqB,WAChDY,EAmlDH,SAAkC7xB,GACvC,MAAM8xB,OACuB7yB,IAA3Be,EAAQ8xB,gBAA+B9xB,EAAQ8xB,eACjD,GAAIA,EAAgB,CAClB,MAAMC,EAAoB/xB,EAAQ+xB,kBAClC,YAA0B9yB,IAAtB8yB,IAAyD,IAAtBA,GFl/DzCha,EAAYA,GAAa,GAAU,GAC5B,SAMK1Q,EAAUqlB,GAClB,OAAIA,EACKrlB,OAGQpI,IAAboI,EACEzV,KAAKM,IAAImV,IAAa0Q,EACjB,EAEF1Q,OAJT,CAQJ,IEi+D4B,IAAtB0qB,EACK,GAEwB,iBAAtBA,EFnhER,SAAuBj2B,GAC5B,MAAMk2B,EAAS,EAAIpgC,KAAKkO,GAAMhE,EAC9B,OAAO,SAMKuL,EAAUqlB,GAClB,OAAIA,EACKrlB,OAGQpI,IAAboI,EACFA,EAAWzV,KAAKQ,MAAMiV,EAAW2qB,EAAQ,IAAOA,OADlD,CAMJ,CACF,CEggEaC,CAAcF,GAEhB,EACT,CF7/DK,IAA0Bha,EE8/D/B,OAAOpN,EACT,CApmD+BunB,CAAyBlyB,GAMpD9M,KAAKi/B,aAAe,CAClB/qB,OAAQsqB,EACR9uB,WAAYitB,EACZxoB,SAAUwqB,GAGZ3+B,KAAKk/B,iBAAiCnzB,IAArBe,EAAQqH,SAAyBrH,EAAQqH,SAAW,GACrEnU,KAAKm/B,uBACgBpzB,IAAnBe,EAAQoH,OAAuBpH,EAAQoH,OAAS,WAEvBnI,IAAvBe,EAAQ4C,WACV1P,KAAKo/B,cAActyB,EAAQ4C,iBACD3D,IAAjBe,EAAQuyB,MACjBr/B,KAAKs/B,QAAQxyB,EAAQuyB,KAEzB,CAWA,WAAIf,GACF,OAAOt+B,KAAKq+B,QACd,CACA,WAAIC,CAAQA,GACV,IAAIiB,EAAav/B,KAAKq+B,SACtBr+B,KAAKq+B,SAAWC,EAChB,MAAMpqB,EAASlU,KAAKw/B,oBACpB,GAAItrB,EAAQ,CACV,MAAMurB,EAAanB,GAAW,CAAC,EAAG,EAAG,EAAG,GACxCiB,EAAaA,GAAc,CAAC,EAAG,EAAG,EAAG,GACrC,MAAM7vB,EAAa1P,KAAK0/B,gBAClBC,EACHjwB,EAAa,GACb+vB,EAAW,GAAKF,EAAW,GAAKA,EAAW,GAAKE,EAAW,IACxDG,EACHlwB,EAAa,GACb+vB,EAAW,GAAKF,EAAW,GAAKA,EAAW,GAAKE,EAAW,IAC9Dz/B,KAAKm/B,kBAAkB,CAACjrB,EAAO,GAAKyrB,EAASzrB,EAAO,GAAK0rB,GAC3D,CACF,CAUA,kBAAAC,CAAmBC,GACjB,MAAMhzB,EAAU9M,KAAKqf,gBAerB,YAZ2BtT,IAAvBe,EAAQ4C,WACV5C,EAAQ4C,WAAa1P,KAAK0/B,gBAE1B5yB,EAAQuyB,KAAOr/B,KAAK+/B,UAItBjzB,EAAQoH,OAASlU,KAAKw/B,oBAGtB1yB,EAAQqH,SAAWnU,KAAKggC,cAEjB5zB,OAAO+N,OAAO,CAAC,EAAGrN,EAASgzB,EACpC,CAmCA,OAAAG,CAAQC,GACFlgC,KAAKmgC,UAAYngC,KAAKogC,gBACxBpgC,KAAKqgC,mBAAmB,GAE1B,MAAM/mB,EAAO,IAAIpJ,MAAM8N,UAAUle,QACjC,IAAK,IAAIzB,EAAI,EAAGA,EAAIib,EAAKxZ,SAAUzB,EAAG,CACpC,IAAIyO,EAAUkR,UAAU3f,GACpByO,EAAQoH,SACVpH,EAAUV,OAAO+N,OAAO,CAAC,EAAGrN,GAC5BA,EAAQoH,OAASkF,GACftM,EAAQoH,OACRlU,KAAKsgC,kBAGLxzB,EAAQ8V,SACV9V,EAAUV,OAAO+N,OAAO,CAAC,EAAGrN,GAC5BA,EAAQ8V,OAASxJ,GACftM,EAAQ8V,OACR5iB,KAAKsgC,kBAGThnB,EAAKjb,GAAKyO,CACZ,CACA9M,KAAKugC,gBAAgBt1B,MAAMjL,KAAMsZ,EACnC,CAKA,eAAAinB,CAAgBL,GACd,IACI3sB,EADAitB,EAAiBxiB,UAAUle,OAG7B0gC,EAAiB,GACwB,mBAAlCxiB,UAAUwiB,EAAiB,KAElCjtB,EAAWyK,UAAUwiB,EAAiB,KACpCA,GAGJ,IAAIniC,EAAI,EACR,KAAOA,EAAImiC,IAAmBxgC,KAAKmgC,UAAW9hC,EAAG,CAE/C,MAAM83B,EAAQnY,UAAU3f,GACpB83B,EAAMjiB,QACRlU,KAAKm/B,kBAAkBhJ,EAAMjiB,aAEZnI,IAAfoqB,EAAMkJ,KACRr/B,KAAKs/B,QAAQnJ,EAAMkJ,MACVlJ,EAAMzmB,YACf1P,KAAKo/B,cAAcjJ,EAAMzmB,iBAEJ3D,IAAnBoqB,EAAMhiB,UACRnU,KAAKk/B,YAAY/I,EAAMhiB,SAE3B,CACA,GAAI9V,IAAMmiC,EAIR,YAHIjtB,GACFonB,GAAkBpnB,GAAU,IAKhC,IAAIyW,EAAQyW,KAAKC,MACbxsB,EAASlU,KAAKi8B,cAAct8B,QAC5B+P,EAAa1P,KAAKk8B,kBAClB/nB,EAAWnU,KAAKm8B,gBACpB,MAAMwE,EAAS,GACf,KAAOtiC,EAAImiC,IAAkBniC,EAAG,CAC9B,MAAMyO,EAA2CkR,UAAU3f,GAErD08B,EAAY,CAChB/Q,MAAOA,EACP4W,UAAU,EACVhe,OAAQ9V,EAAQ8V,OAChBie,cAA+B90B,IAArBe,EAAQ+zB,SAAyB/zB,EAAQ+zB,SAAW,IAC9DC,OAAQh0B,EAAQg0B,QAAUpG,GAC1BnnB,SAAUA,GAmBZ,GAhBIzG,EAAQoH,SACV6mB,EAAUC,aAAe9mB,EACzB6mB,EAAUE,aAAenuB,EAAQoH,OAAOvU,QACxCuU,EAAS6mB,EAAUE,mBAGAlvB,IAAjBe,EAAQuyB,MACVtE,EAAUG,iBAAmBxrB,EAC7BqrB,EAAUI,iBAAmBn7B,KAAK+gC,qBAAqBj0B,EAAQuyB,MAC/D3vB,EAAaqrB,EAAUI,kBACdruB,EAAQ4C,aACjBqrB,EAAUG,iBAAmBxrB,EAC7BqrB,EAAUI,iBAAmBruB,EAAQ4C,WACrCA,EAAaqrB,EAAUI,uBAGApvB,IAArBe,EAAQqH,SAAwB,CAClC4mB,EAAUK,eAAiBjnB,EAC3B,MAAM6sB,EACJ,GAAOl0B,EAAQqH,SAAWA,EAAWzV,KAAKkO,GAAI,EAAIlO,KAAKkO,IAAMlO,KAAKkO,GACpEmuB,EAAUM,eAAiBlnB,EAAW6sB,EACtC7sB,EAAW4mB,EAAUM,cACvB,CAGIP,GAAgBC,GAClBA,EAAU6F,UAAW,EAGrB5W,GAAS+Q,EAAU8F,SAErBF,EAAOzgC,KAAK66B,EACd,CACA/6B,KAAK67B,YAAY37B,KAAKygC,GACtB3gC,KAAKihC,QAAQC,GAAoB,GACjClhC,KAAKmhC,mBACP,CAOA,YAAAf,GACE,OAAOpgC,KAAK47B,OAAOsF,IAAsB,CAC3C,CAOA,cAAAE,GACE,OAAOphC,KAAK47B,OAAOsF,IAAwB,CAC7C,CAMA,gBAAAG,GAEE,IAAIze,EADJ5iB,KAAKihC,QAAQC,IAAqBlhC,KAAK47B,OAAOsF,KAE9C,IAAK,IAAI7iC,EAAI,EAAGyT,EAAK9R,KAAK67B,YAAY/7B,OAAQzB,EAAIyT,IAAMzT,EAAG,CACzD,MAAMsiC,EAAS3gC,KAAK67B,YAAYx9B,GAIhC,GAHIsiC,EAAO,GAAGptB,UACZonB,GAAkBgG,EAAO,GAAGptB,UAAU,IAEnCqP,EACH,IAAK,IAAID,EAAI,EAAGyE,EAAKuZ,EAAO7gC,OAAQ6iB,EAAIyE,IAAMzE,EAAG,CAC/C,MAAMoY,EAAY4F,EAAOhe,GACzB,IAAKoY,EAAU6F,SAAU,CACvBhe,EAASmY,EAAUnY,OACnB,KACF,CACF,CAEJ,CACA5iB,KAAK67B,YAAY/7B,OAAS,EAC1BE,KAAKu8B,cAAgB3Z,EACrB5iB,KAAKo8B,YAAc,KACnBp8B,KAAKq8B,gBAAkB79B,IACvBwB,KAAKs8B,cAAgB99B,GACvB,CAKA,iBAAA2iC,GAKE,QAJiCp1B,IAA7B/L,KAAK87B,sBACPwF,qBAAqBthC,KAAK87B,qBAC1B97B,KAAK87B,yBAAsB/vB,IAExB/L,KAAKogC,eACR,OAEF,MAAMM,EAAMD,KAAKC,MACjB,IAAIa,GAAO,EACX,IAAK,IAAIljC,EAAI2B,KAAK67B,YAAY/7B,OAAS,EAAGzB,GAAK,IAAKA,EAAG,CACrD,MAAMsiC,EAAS3gC,KAAK67B,YAAYx9B,GAChC,IAAImjC,GAAiB,EACrB,IAAK,IAAI7e,EAAI,EAAGyE,EAAKuZ,EAAO7gC,OAAQ6iB,EAAIyE,IAAMzE,EAAG,CAC/C,MAAMoY,EAAY4F,EAAOhe,GACzB,GAAIoY,EAAU6F,SACZ,SAEF,MAAMa,EAAUf,EAAM3F,EAAU/Q,MAChC,IAAItB,EACFqS,EAAU8F,SAAW,EAAIY,EAAU1G,EAAU8F,SAAW,EACtDnY,GAAY,GACdqS,EAAU6F,UAAW,EACrBlY,EAAW,GAEX8Y,GAAiB,EAEnB,MAAME,EAAW3G,EAAU+F,OAAOpY,GAClC,GAAIqS,EAAUC,aAAc,CAC1B,MAAM2G,EAAK5G,EAAUC,aAAa,GAC5B4G,EAAK7G,EAAUC,aAAa,GAC5BllB,EAAKilB,EAAUE,aAAa,GAC5BllB,EAAKglB,EAAUE,aAAa,GAClCj7B,KAAKo8B,YAAcrB,EAAUE,aAC7B,MAAM9xB,EAAIw4B,EAAKD,GAAY5rB,EAAK6rB,GAC1BxxB,EAAIyxB,EAAKF,GAAY3rB,EAAK6rB,GAChC5hC,KAAKi8B,cAAgB,CAAC9yB,EAAGgH,EAC3B,CACA,GAAI4qB,EAAUG,kBAAoBH,EAAUI,iBAAkB,CAC5D,MAAMzrB,EACS,IAAbgyB,EACI3G,EAAUI,iBACVJ,EAAUG,iBACVwG,GACG3G,EAAUI,iBAAmBJ,EAAUG,kBAChD,GAAIH,EAAUnY,OAAQ,CACpB,MAAMxO,EAAOpU,KAAK6hC,iBAAiB7hC,KAAKggC,eAClC8B,EAAwB9hC,KAAKi/B,aAAavvB,WAC9CA,EACA,EACA0E,GACA,GAEFpU,KAAKi8B,cAAgBj8B,KAAK+hC,oBACxBD,EACA/G,EAAUnY,OAEd,CACA5iB,KAAKq8B,gBAAkBtB,EAAUI,iBACjCn7B,KAAKk8B,kBAAoBxsB,EACzB1P,KAAKgiC,mBAAkB,EACzB,CACA,QAC+Bj2B,IAA7BgvB,EAAUK,qBACmBrvB,IAA7BgvB,EAAUM,eACV,CACA,MAAMlnB,EACS,IAAbutB,EACI,GAAO3G,EAAUM,eAAiB38B,KAAKkO,GAAI,EAAIlO,KAAKkO,IACpDlO,KAAKkO,GACLmuB,EAAUK,eACVsG,GACG3G,EAAUM,eAAiBN,EAAUK,gBAC9C,GAAIL,EAAUnY,OAAQ,CACpB,MAAMqf,EAAsBjiC,KAAKi/B,aAAa9qB,SAC5CA,GACA,GAEFnU,KAAKi8B,cAAgBj8B,KAAKkiC,sBACxBD,EACAlH,EAAUnY,OAEd,CACA5iB,KAAKs8B,cAAgBvB,EAAUM,eAC/Br7B,KAAKm8B,gBAAkBhoB,CACzB,CAGA,GAFAnU,KAAKgiC,mBAAkB,GACvBT,GAAO,GACFxG,EAAU6F,SACb,KAEJ,CACA,GAAIY,EAAgB,CAClBxhC,KAAK67B,YAAYx9B,GAAK,KACtB2B,KAAKihC,QAAQC,IAAqB,GAClClhC,KAAKo8B,YAAc,KACnBp8B,KAAKq8B,gBAAkB79B,IACvBwB,KAAKs8B,cAAgB99B,IACrB,MAAM+U,EAAWotB,EAAO,GAAGptB,SACvBA,GACFonB,GAAkBpnB,GAAU,EAEhC,CACF,CAEAvT,KAAK67B,YAAc77B,KAAK67B,YAAYsG,OAAO78B,SACvCi8B,QAAqCx1B,IAA7B/L,KAAK87B,sBACf97B,KAAK87B,oBAAsBsG,sBACzBpiC,KAAKmhC,kBAAkBrjB,KAAK9d,OAGlC,CAOA,qBAAAkiC,CAAsB/tB,EAAUyO,GAC9B,IAAI1O,EACJ,MAAMmuB,EAAgBriC,KAAKw/B,oB1Dj0BxB,IAAantB,EAAY2uB,E0Du0B5B,YALsBj1B,IAAlBs2B,IACFnuB,EAAS,CAACmuB,EAAc,GAAKzf,EAAO,GAAIyf,EAAc,GAAKzf,EAAO,I1D9lBjE,SAAgBvQ,EAAYyP,GACjC,MAAM0Z,EAAW98B,KAAK4V,IAAIwN,GACpB2Z,EAAW/8B,KAAK8V,IAAIsN,GACpB3Y,EAAIkJ,EAAW,GAAKmpB,EAAWnpB,EAAW,GAAKopB,EAC/CtrB,EAAIkC,EAAW,GAAKmpB,EAAWnpB,EAAW,GAAKopB,EACrDppB,EAAW,GAAKlJ,EAChBkJ,EAAW,GAAKlC,CAElB,C0DulBMuU,CAAiBxQ,EAAQC,EAAWnU,KAAKggC,e1Dp0BfgB,E0Dq0BJpe,G1Dr0BRvQ,E0Dq0BA6B,G1Dp0BP,KAAO8sB,EAAM,GACxB3uB,EAAW,KAAO2uB,EAAM,I0Dq0Bf9sB,CACT,CAOA,mBAAA6tB,CAAoBryB,EAAYkT,GAC9B,IAAI1O,EACJ,MAAMmuB,EAAgBriC,KAAKw/B,oBACrB8C,EAAoBtiC,KAAK0/B,gBAC/B,QAAsB3zB,IAAlBs2B,QAAqDt2B,IAAtBu2B,EAAiC,CAOlEpuB,EAAS,CALP0O,EAAO,GACNlT,GAAckT,EAAO,GAAKyf,EAAc,IAAOC,EAEhD1f,EAAO,GACNlT,GAAckT,EAAO,GAAKyf,EAAc,IAAOC,EAEpD,CACA,OAAOpuB,CACT,CAQA,gBAAA2tB,CAAiB1tB,GACf,MAAMC,EAAOpU,KAAKg8B,cAClB,GAAI7nB,EAAU,CACZ,MAAMouB,EAAInuB,EAAK,GACTrP,EAAIqP,EAAK,GACf,MAAO,CACL1V,KAAKM,IAAIujC,EAAI7jC,KAAK4V,IAAIH,IAAazV,KAAKM,IAAI+F,EAAIrG,KAAK8V,IAAIL,IACzDzV,KAAKM,IAAIujC,EAAI7jC,KAAK8V,IAAIL,IAAazV,KAAKM,IAAI+F,EAAIrG,KAAK4V,IAAIH,IAE7D,CACA,OAAOC,CACT,CASA,eAAAouB,CAAgBpuB,GACdpU,KAAKg8B,cAAgB9rB,MAAM4L,QAAQ1H,GAAQA,EAAKzU,QAAU,CAAC,IAAK,KAC3DK,KAAKogC,gBACRpgC,KAAKqgC,mBAAmB,EAE5B,CAQA,SAAAvsB,GACE,MAAMI,EAASlU,KAAKw/B,oBACpB,OAAKtrB,EAGEiF,GAAiBjF,EAAQlU,KAAKsgC,iBAF5BpsB,CAGX,CAMA,iBAAAsrB,GACE,OACEx/B,KAAKuM,IAAIkwB,GAAazD,OAE1B,CAKA,cAAAyJ,GACE,OAAOziC,KAAKi/B,YACd,CAKA,sBAAAyD,GACE,OAAO1iC,KAAKuM,IAAI,sBAClB,CAMA,QAAAo2B,CAASC,GACP,YAAc72B,IAAV62B,GACFA,EAAM,GAAK5iC,KAAK47B,OAAO,GACvBgH,EAAM,GAAK5iC,KAAK47B,OAAO,GAChBgH,GAEF5iC,KAAK47B,OAAOj8B,OACrB,CAYA,eAAAkjC,CAAgBzuB,GAEd,OtD5WG,SAAsBjH,EAAQ0L,GACnC,OAAKK,GAGE,GAAgB/L,EAAQ0L,EAAkBK,IAFxC/L,CAGX,CsDuWW21B,CADQ9iC,KAAK+iC,wBAAwB3uB,GAChBpU,KAAKsgC,gBACnC,CAOA,uBAAAyC,CAAwB3uB,GACtBA,EAAOA,GAAQpU,KAAKgjC,+BACpB,MAAM9uB,EACJlU,KAAKw/B,oBAEPhuB,EAAO0C,EAAQ,GACf,MAAMxE,EAAqC1P,KAAK0/B,gBAChDluB,OAAsBzF,IAAf2D,EAA0B,GACjC,MAAMyE,EAAmCnU,KAAKggC,cAG9C,OAFAxuB,OAAoBzF,IAAboI,EAAwB,G3Dze5B,SAA2BD,EAAQxE,EAAYyE,EAAUC,EAAMpC,GACpE,MAAO2vB,EAAIC,EAAI9rB,EAAIC,EAAIC,EAAIC,EAAI+R,EAAIC,GAAMhU,EACvCC,EACAxE,EACAyE,EACAC,GAEF,OAAOvB,EACLnU,KAAKqI,IAAI46B,EAAI7rB,EAAIE,EAAIgS,GACrBtpB,KAAKqI,IAAI66B,EAAI7rB,EAAIE,EAAIgS,GACrBvpB,KAAKwK,IAAIy4B,EAAI7rB,EAAIE,EAAIgS,GACrBtpB,KAAKwK,IAAI04B,EAAI7rB,EAAIE,EAAIgS,GACrBjW,EAEJ,C2D6dWixB,CAAkB/uB,EAAQxE,EAAYyE,EAAUC,EACzD,CAOA,gBAAA0jB,GACE,OAAO93B,KAAKi+B,cACd,CAOA,gBAAAlG,GACE,OAAO/3B,KAAKk+B,cACd,CAOA,UAAAjG,GACE,OACEj4B,KAAKkjC,qBAAqBljC,KAAKk+B,eAEnC,CAOA,UAAAxF,CAAW2G,GACTr/B,KAAKw8B,cAAcx8B,KAAK6/B,mBAAmB,CAAC1I,QAASkI,IACvD,CAOA,UAAArH,GACE,OACEh4B,KAAKkjC,qBAAqBljC,KAAKi+B,eAEnC,CAOA,UAAAtF,CAAW0G,GACTr/B,KAAKw8B,cAAcx8B,KAAK6/B,mBAAmB,CAAC3I,QAASmI,IACvD,CAOA,sBAAA8D,CAAuBC,GACrBpjC,KAAKw8B,cAAcx8B,KAAK6/B,mBAAmB,CAACzC,oBAAqBgG,IACnE,CAOA,aAAA9C,GACE,OAAOtgC,KAAK+7B,WACd,CAQA,aAAA2D,GACE,OAAwC1/B,KAAKuM,IAAIkwB,GAAaxD,WAChE,CAQA,cAAAoK,GACE,OAAOrjC,KAAKo+B,YACd,CAUA,sBAAAkF,CAAuBn2B,EAAQiH,GAC7B,OAAOpU,KAAKujC,+BACV/pB,GAAerM,EAAQnN,KAAKsgC,iBAC5BlsB,EAEJ,CASA,8BAAAmvB,CAA+Bp2B,EAAQiH,GACrCA,EAAOA,GAAQpU,KAAKgjC,+BACpB,MAAM7I,EAAc,GAAShtB,GAAUiH,EAAK,GACtCgmB,EAAcvmB,EAAU1G,GAAUiH,EAAK,GAC7C,OAAO1V,KAAKwK,IAAIixB,EAAaC,EAC/B,CAQA,6BAAAoJ,CAA8BvQ,GAC5BA,EAAQA,GAAS,EACjB,MAAM+D,EAAgBh3B,KAAKyjC,yBAAyBzjC,KAAKi+B,gBACnDhH,EAAgBj3B,KAAKk+B,eACrBh1B,EAAMxK,KAAKS,IAAI63B,EAAgBC,GAAiBv4B,KAAKS,IAAI8zB,GAC/D,OAAO,SAKKp0B,GAER,OADmBm4B,EAAgBt4B,KAAKC,IAAIs0B,EAAOp0B,EAAQqK,EAG/D,CACF,CAQA,WAAA82B,GACE,OAA8BhgC,KAAKuM,IAAIkwB,GAAavD,SACtD,CAQA,6BAAAwK,CAA8BzQ,GAC5B,MAAM0Q,EAAWjlC,KAAKS,IAAI8zB,GAAS,GAC7B+D,EAAgBh3B,KAAKyjC,yBAAyBzjC,KAAKi+B,gBACnDhH,EAAgBj3B,KAAKk+B,eACrBh1B,EAAMxK,KAAKS,IAAI63B,EAAgBC,GAAiB0M,EACtD,OAAO,SAKKj0B,GAER,OADchR,KAAKS,IAAI63B,EAAgBtnB,GAAci0B,EAAWz6B,CAGpE,CACF,CAQA,4BAAA85B,CAA6B7uB,GAC3B,IAAIC,EAAOpU,KAAK6hC,iBAAiB1tB,GACjC,MAAMmqB,EAAUt+B,KAAKq+B,SAOrB,OANIC,IACFlqB,EAAO,CACLA,EAAK,GAAKkqB,EAAQ,GAAKA,EAAQ,GAC/BlqB,EAAK,GAAKkqB,EAAQ,GAAKA,EAAQ,KAG5BlqB,CACT,CAKA,QAAAgiB,GACE,MAAM5gB,EAAaxV,KAAKsgC,gBAClB5wB,EAAa1P,KAAK0/B,gBAClBvrB,EAAWnU,KAAKggC,cACtB,IAAI9rB,EACFlU,KAAKw/B,oBAEP,MAAMlB,EAAUt+B,KAAKq+B,SACrB,GAAIC,EAAS,CACX,MAAMsF,EAAc5jC,KAAKgjC,+BACzB9uB,EAASonB,GACPpnB,EACAlU,KAAK6hC,mBACL,CAAC+B,EAAY,GAAK,EAAItF,EAAQ,GAAIsF,EAAY,GAAK,EAAItF,EAAQ,IAC/D5uB,EACAyE,EAEJ,CACA,MAAO,CACLD,OAAQA,EAAOvU,MAAM,GACrB6V,gBAA2BzJ,IAAfyJ,EAA2BA,EAAa,KACpD9F,WAAYA,EACZm0B,WAAY7jC,KAAKo8B,YACjB0H,eAAgB9jC,KAAKq8B,gBACrB0H,aAAc/jC,KAAKs8B,cACnBnoB,SAAUA,EACVkrB,KAAMr/B,KAAK+/B,UAEf,CAKA,qBAAAiE,GACE,MAAO,CACLC,UAAWjkC,KAAKo2B,WAChBjpB,OAAQnN,KAAK6iC,kBAEjB,CASA,OAAA9C,GACE,IAAIV,EACJ,MAAM3vB,EAAa1P,KAAK0/B,gBAIxB,YAHmB3zB,IAAf2D,IACF2vB,EAAOr/B,KAAKkjC,qBAAqBxzB,IAE5B2vB,CACT,CAQA,oBAAA6D,CAAqBxzB,GACnB,IACIxG,EAAK4zB,EADLn/B,EAASqC,KAAKu+B,UAAY,EAE9B,GAAIv+B,KAAKo+B,aAAc,CACrB,MAAM8F,EAAU3oB,GAAkBvb,KAAKo+B,aAAc1uB,EAAY,GACjE/R,EAASumC,EACTh7B,EAAMlJ,KAAKo+B,aAAa8F,GAEtBpH,EADEoH,GAAWlkC,KAAKo+B,aAAat+B,OAAS,EAC3B,EAEAoJ,EAAMlJ,KAAKo+B,aAAa8F,EAAU,EAEnD,MACEh7B,EAAMlJ,KAAKi+B,eACXnB,EAAa98B,KAAKm+B,YAEpB,OAAOxgC,EAASe,KAAKS,IAAI+J,EAAMwG,GAAchR,KAAKS,IAAI29B,EACxD,CAQA,oBAAAiE,CAAqB1B,GACnB,GAAIr/B,KAAKo+B,aAAc,CACrB,GAAIp+B,KAAKo+B,aAAat+B,QAAU,EAC9B,OAAO,EAET,MAAMqkC,EAAY,GAChBzlC,KAAKQ,MAAMmgC,GACX,EACAr/B,KAAKo+B,aAAat+B,OAAS,GAEvBg9B,EACJ98B,KAAKo+B,aAAa+F,GAAankC,KAAKo+B,aAAa+F,EAAY,GAC/D,OACEnkC,KAAKo+B,aAAa+F,GAClBzlC,KAAKC,IAAIm+B,EAAY,GAAMuC,EAAO8E,EAAW,EAAG,GAEpD,CACA,OACEnkC,KAAKi+B,eAAiBv/B,KAAKC,IAAIqB,KAAKm+B,YAAakB,EAAOr/B,KAAKu+B,SAEjE,CAYA,GAAA6F,CAAIC,EAAkBv3B,GAEpB,IAAI+N,EAOJ,GANArJ,EACEtB,MAAM4L,QAAQuoB,IAEV,mBADuB,EAAwC,sBAEnE,IAEEn0B,MAAM4L,QAAQuoB,GAAmB,CACnC7yB,GAAQ,GAAQ6yB,GAAmB,IAEnCxpB,EAAW,GADIrB,GAAe6qB,EAAkBrkC,KAAKsgC,iBAEvD,MAAO,GAAmC,WAA/B+D,EAAiBjqB,UAAwB,CAClD,MAAMjN,EAASqM,GACb6qB,EAAiBn2B,YACjBlO,KAAKsgC,iBAEPzlB,EAAW,GAAkB1N,GAC7B0N,EAAS6J,OAAO1kB,KAAKggC,cAAelsB,EAAU3G,GAChD,KAAO,CACL,MAAM+L,EAAiB,KAErB2B,EADE3B,EAEAmrB,EACGrgB,QACAhL,UAAUE,EAAgBlZ,KAAKsgC,iBAGzB+D,CAEf,CAEArkC,KAAKskC,YAAYzpB,EAAU/N,EAC7B,CAOA,wBAAAy3B,CAAyB1pB,GACvB,MAAM1G,EAAWnU,KAAKggC,cAChBxE,EAAW98B,KAAK4V,IAAIH,GACpBsnB,EAAW/8B,KAAK8V,KAAKL,GACrBqwB,EAAS3pB,EAAS4K,qBAClBvS,EAAS2H,EAASiL,YACxB,IAAI2e,EAAWhmC,IACXimC,EAAWjmC,IACXkmC,GAAWlmC,IACXmmC,GAAWnmC,IACf,IAAK,IAAIJ,EAAI,EAAGyT,EAAK0yB,EAAO1kC,OAAQzB,EAAIyT,EAAIzT,GAAK6U,EAAQ,CACvD,MAAMwoB,EAAO8I,EAAOnmC,GAAKm9B,EAAWgJ,EAAOnmC,EAAI,GAAKo9B,EAC9CE,EAAO6I,EAAOnmC,GAAKo9B,EAAW+I,EAAOnmC,EAAI,GAAKm9B,EACpDiJ,EAAU/lC,KAAKqI,IAAI09B,EAAS/I,GAC5BgJ,EAAUhmC,KAAKqI,IAAI29B,EAAS/I,GAC5BgJ,EAAUjmC,KAAKwK,IAAIy7B,EAASjJ,GAC5BkJ,EAAUlmC,KAAKwK,IAAI07B,EAASjJ,EAC9B,CACA,MAAO,CAAC8I,EAASC,EAASC,EAASC,EACrC,CAMA,WAAAN,CAAYzpB,EAAU/N,GAEpB,IAAIsH,GADJtH,EAAUA,GAAW,CAAC,GACHsH,KACdA,IACHA,EAAOpU,KAAKgjC,gCAEd,MAAM1E,OACgBvyB,IAApBe,EAAQwxB,QAAwBxxB,EAAQwxB,QAAU,CAAC,EAAG,EAAG,EAAG,GACxD4F,OAA8Bn4B,IAApBe,EAAQo3B,SAAwBp3B,EAAQo3B,QACxD,IAAIjN,EAEFA,OAD4BlrB,IAA1Be,EAAQmqB,cACMnqB,EAAQmqB,mBACKlrB,IAApBe,EAAQqqB,QACDn3B,KAAK+gC,qBAAqBj0B,EAAQqqB,SAElC,EAGlB,MAAM0N,EAAgB7kC,KAAKukC,yBAAyB1pB,GAGpD,IAAInL,EAAa1P,KAAKujC,+BAA+BsB,EAAe,CAClEzwB,EAAK,GAAKkqB,EAAQ,GAAKA,EAAQ,GAC/BlqB,EAAK,GAAKkqB,EAAQ,GAAKA,EAAQ,KAEjC5uB,EAAazQ,MAAMyQ,GACfunB,EACAv4B,KAAKwK,IAAIwG,EAAYunB,GACzBvnB,EAAa1P,KAAKyjC,yBAAyB/zB,EAAYw0B,EAAU,EAAI,GAGrE,MAAM/vB,EAAWnU,KAAKggC,cAChBvE,EAAW/8B,KAAK8V,IAAIL,GACpBqnB,EAAW98B,KAAK4V,IAAIH,GACpB2wB,EAAYhxB,EAAU+wB,GAC5BC,EAAU,KAAQxG,EAAQ,GAAKA,EAAQ,IAAM,EAAK5uB,EAClDo1B,EAAU,KAAQxG,EAAQ,GAAKA,EAAQ,IAAM,EAAK5uB,EAClD,MAAMq1B,EAAUD,EAAU,GAAKtJ,EAAWsJ,EAAU,GAAKrJ,EACnDuJ,EAAUF,EAAU,GAAKtJ,EAAWsJ,EAAU,GAAKrJ,EACnDvnB,EAASlU,KAAKilC,qBAAqB,CAACF,EAASC,GAAUt1B,GACvD6D,EAAWzG,EAAQyG,SAAWzG,EAAQyG,SAAW,QAE9BxH,IAArBe,EAAQ+zB,SACV7gC,KAAKugC,gBACH,CACE7wB,WAAYA,EACZwE,OAAQA,EACR2sB,SAAU/zB,EAAQ+zB,SAClBC,OAAQh0B,EAAQg0B,QAElBvtB,IAGFvT,KAAKk8B,kBAAoBxsB,EACzB1P,KAAKi8B,cAAgB/nB,EACrBlU,KAAKgiC,mBAAkB,GAAO,GAC9BrH,GAAkBpnB,GAAU,GAEhC,CASA,QAAA2xB,CAAS7yB,EAAY+B,EAAMmnB,GACzBv7B,KAAKmlC,iBACH/rB,GAAmB/G,EAAYrS,KAAKsgC,iBACpClsB,EACAmnB,EAEJ,CAOA,gBAAA4J,CAAiB9yB,EAAY+B,EAAMmnB,GACjCv7B,KAAKm/B,kBACH7D,GACEjpB,EACA+B,EACAmnB,EACAv7B,KAAK0/B,gBACL1/B,KAAKggC,eAGX,CAUA,oBAAAoF,CAAqBlxB,EAAQxE,EAAYyE,EAAUC,GACjD,IAAIqlB,EACJ,MAAM6E,EAAUt+B,KAAKq+B,SACrB,GAAIC,GAAWpqB,EAAQ,CACrB,MAAM0vB,EAAc5jC,KAAKgjC,8BAA8B7uB,GACjDkxB,EAAgB/J,GACpBpnB,EACAE,EACA,CAACwvB,EAAY,GAAK,EAAItF,EAAQ,GAAIsF,EAAY,GAAK,EAAItF,EAAQ,IAC/D5uB,EACAyE,GAEFslB,EAAc,CACZvlB,EAAO,GAAKmxB,EAAc,GAC1BnxB,EAAO,GAAKmxB,EAAc,GAE9B,CACA,OAAO5L,CACT,CAKA,KAAA0G,GACE,QAASngC,KAAKw/B,0BAAgDzzB,IAAzB/L,KAAK0/B,eAC5C,CAOA,YAAA4F,CAAaC,GACX,MAAMrxB,EAASiF,GAAiBnZ,KAAKi8B,cAAej8B,KAAKsgC,iBACzDtgC,KAAKwlC,UAAU,CACbtxB,EAAO,GAAKqxB,EAAiB,GAC7BrxB,EAAO,GAAKqxB,EAAiB,IAEjC,CAMA,oBAAAE,CAAqBF,GACnB,MAAMrxB,EAASlU,KAAKi8B,cACpBj8B,KAAKm/B,kBAAkB,CACrBjrB,EAAO,GAAKqxB,EAAiB,GAC7BrxB,EAAO,GAAKqxB,EAAiB,IAEjC,CASA,gBAAAG,CAAiB5L,EAAOlX,GACtBA,EAASA,GAAUxJ,GAAmBwJ,EAAQ5iB,KAAKsgC,iBACnDtgC,KAAK2lC,yBAAyB7L,EAAOlX,EACvC,CAQA,wBAAA+iB,CAAyB7L,EAAOlX,GAC9B,MAAM4W,EAAWx5B,KAAKogC,gBAAkBpgC,KAAKohC,iBACvChtB,EAAOpU,KAAK6hC,iBAAiB7hC,KAAKggC,eAClC4F,EAAgB5lC,KAAKi/B,aAAavvB,WACtC1P,KAAKk8B,kBAAoBpC,EACzB,EACA1lB,EACAolB,GAGE5W,IACF5iB,KAAKi8B,cAAgBj8B,KAAK+hC,oBAAoB6D,EAAehjB,IAG/D5iB,KAAKk8B,mBAAqBpC,EAC1B95B,KAAKgiC,mBACP,CASA,UAAA6D,CAAW7E,EAAOpe,GAChB5iB,KAAK0lC,iBAAiBhnC,KAAKC,IAAIqB,KAAKm+B,aAAc6C,GAAQpe,EAC5D,CASA,cAAAkjB,CAAe9E,EAAOpe,GAChBA,IACFA,EAASxJ,GAAmBwJ,EAAQ5iB,KAAKsgC,kBAE3CtgC,KAAK+lC,uBAAuB/E,EAAOpe,EACrC,CAMA,sBAAAmjB,CAAuB/E,EAAOpe,GAC5B,MAAM4W,EAAWx5B,KAAKogC,gBAAkBpgC,KAAKohC,iBACvC4E,EAAchmC,KAAKi/B,aAAa9qB,SACpCnU,KAAKm8B,gBAAkB6E,EACvBxH,GAEE5W,IACF5iB,KAAKi8B,cAAgBj8B,KAAKkiC,sBAAsB8D,EAAapjB,IAE/D5iB,KAAKm8B,iBAAmB6E,EACxBhhC,KAAKgiC,mBACP,CAQA,SAAAwD,CAAUtxB,GACRlU,KAAKm/B,kBACHjrB,EAASkF,GAAmBlF,EAAQlU,KAAKsgC,iBAAmBpsB,EAEhE,CAMA,iBAAAirB,CAAkBjrB,GAChBlU,KAAKi8B,cAAgB/nB,EACrBlU,KAAKgiC,mBACP,CAOA,OAAAf,CAAQgF,EAAMjF,GAGZ,OAFAhhC,KAAK47B,OAAOqK,IAASjF,EACrBhhC,KAAKwe,UACExe,KAAK47B,OAAOqK,EACrB,CAQA,aAAA7G,CAAc1vB,GACZ1P,KAAKk8B,kBAAoBxsB,EACzB1P,KAAKgiC,mBACP,CAQA,WAAA9C,CAAY/qB,GACVnU,KAAKm8B,gBAAkBhoB,EACvBnU,KAAKgiC,mBACP,CAOA,OAAA1C,CAAQD,GACNr/B,KAAKo/B,cAAcp/B,KAAK+gC,qBAAqB1B,GAC/C,CAUA,iBAAA2C,CAAkBkE,EAAkBC,GAClC,MAAM3M,EACJx5B,KAAKogC,gBAAkBpgC,KAAKohC,kBAAoB+E,EAG5CH,EAAchmC,KAAKi/B,aAAa9qB,SACpCnU,KAAKm8B,gBACL3C,GAEIplB,EAAOpU,KAAK6hC,iBAAiBmE,GAC7BJ,EAAgB5lC,KAAKi/B,aAAavvB,WACtC1P,KAAKk8B,kBACL,EACA9nB,EACAolB,GAEI4M,EAAYpmC,KAAKi/B,aAAa/qB,OAClClU,KAAKi8B,cACL2J,EACAxxB,EACAolB,EACAx5B,KAAKolC,qBACHplC,KAAKi8B,cACL2J,EACAI,EACA5xB,IAIApU,KAAKuM,IAAIkwB,GAAavD,YAAc8M,GACtChmC,KAAKgH,IAAIy1B,GAAavD,SAAU8M,GAE9BhmC,KAAKuM,IAAIkwB,GAAaxD,cAAgB2M,IACxC5lC,KAAKgH,IAAIy1B,GAAaxD,WAAY2M,GAClC5lC,KAAKgH,IAAI,OAAQhH,KAAK+/B,WAAW,IAGhCqG,GACApmC,KAAKuM,IAAIkwB,GAAazD,SACtB,GAAOh5B,KAAKuM,IAAIkwB,GAAazD,QAASoN,IAEvCpmC,KAAKgH,IAAIy1B,GAAazD,OAAQoN,GAG5BpmC,KAAKogC,iBAAmB8F,GAC1BlmC,KAAKqhC,mBAEPrhC,KAAKu8B,mBAAgBxwB,CACvB,CAWA,kBAAAs0B,CAAmBQ,EAAUwF,EAAqBzjB,GAChDie,OAAwB90B,IAAb80B,EAAyBA,EAAW,IAC/C,MAAMrlB,EAAY6qB,GAAuB,EAEnCL,EAAchmC,KAAKi/B,aAAa9qB,SAASnU,KAAKm8B,iBAC9C/nB,EAAOpU,KAAK6hC,iBAAiBmE,GAC7BJ,EAAgB5lC,KAAKi/B,aAAavvB,WACtC1P,KAAKk8B,kBACL1gB,EACApH,GAEIgyB,EAAYpmC,KAAKi/B,aAAa/qB,OAClClU,KAAKi8B,cACL2J,EACAxxB,GACA,EACApU,KAAKolC,qBACHplC,KAAKi8B,cACL2J,EACAI,EACA5xB,IAIJ,GAAiB,IAAbysB,IAAmB7gC,KAAKu8B,cAK1B,OAJAv8B,KAAKk8B,kBAAoB0J,EACzB5lC,KAAKm8B,gBAAkB6J,EACvBhmC,KAAKi8B,cAAgBmK,OACrBpmC,KAAKgiC,oBAIPpf,EAASA,IAAwB,IAAbie,EAAiB7gC,KAAKu8B,mBAAgBxwB,GAC1D/L,KAAKu8B,mBAAgBxwB,EAGnB/L,KAAK0/B,kBAAoBkG,GACzB5lC,KAAKggC,gBAAkBgG,GACtBhmC,KAAKw/B,qBACL,GAAOx/B,KAAKw/B,oBAAqB4G,KAE9BpmC,KAAKogC,gBACPpgC,KAAKqhC,mBAGPrhC,KAAKugC,gBAAgB,CACnBpsB,SAAU6xB,EACV9xB,OAAQkyB,EACR12B,WAAYk2B,EACZ/E,SAAUA,EACVC,OAAQrG,GACR7X,OAAQA,IAGd,CAQA,gBAAA0jB,GACEtmC,KAAKqgC,mBAAmB,GAExBrgC,KAAKihC,QAAQC,GAAsB,EACrC,CAUA,cAAAqF,CAAe1F,EAAUwF,EAAqBzjB,GAC5CA,EAASA,GAAUxJ,GAAmBwJ,EAAQ5iB,KAAKsgC,iBACnDtgC,KAAKwmC,uBAAuB3F,EAAUwF,EAAqBzjB,EAC7D,CASA,sBAAA4jB,CAAuB3F,EAAUwF,EAAqBzjB,GAC/C5iB,KAAKohC,mBAGVphC,KAAKihC,QAAQC,IAAuB,GACpClhC,KAAKqgC,mBAAmBQ,EAAUwF,EAAqBzjB,GACzD,CASA,oBAAAqiB,CAAqBhK,EAAcE,GACjC,MAAM/mB,EAAOpU,KAAK6hC,iBAAiB7hC,KAAKggC,eACxC,OAAOhgC,KAAKi/B,aAAa/qB,OACvB+mB,EACAE,GAAoBn7B,KAAK0/B,gBACzBtrB,EAEJ,CAWA,kBAAAqyB,CAAmBC,EAAYlrB,GAC7B,MAAMmrB,EAAY3mC,KAAK+gC,qBAAqB2F,GAC5C,OAAO1mC,KAAKkjC,qBACVljC,KAAKyjC,yBAAyBkD,EAAWnrB,GAE7C,CAWA,wBAAAioB,CAAyBtI,EAAkB3f,GACzCA,EAAYA,GAAa,EACzB,MAAMpH,EAAOpU,KAAK6hC,iBAAiB7hC,KAAKggC,eAExC,OAAOhgC,KAAKi/B,aAAavvB,WAAWyrB,EAAkB3f,EAAWpH,EACnE,GC13CK,SAASwyB,GAAOC,EAAY5C,GACjC,IAAK4C,EAAW/P,QACd,OAAO,EAET,MAAMpnB,EAAau0B,EAAUv0B,WAC7B,GACEA,EAAam3B,EAAW5P,eACxBvnB,GAAcm3B,EAAW7P,cAEzB,OAAO,EAET,MAAMqI,EAAO4E,EAAU5E,KACvB,OAAOA,EAAOwH,EAAW3P,SAAWmI,GAAQwH,EAAW1P,OACzD,CAEA,OAxaA,cAAoB2P,GAIlB,WAAAj6B,CAAYC,GACV,MAAMi6B,EAAc36B,OAAO+N,OAAO,CAAC,EAAGrN,UAC/Bi6B,EAAYt2B,OAEnBjB,MAAMu3B,GAKN/mC,KAAKqe,GAKLre,KAAK6d,KAKL7d,KAAKse,GAMLte,KAAKgnC,kBAAoB,KAMzBhnC,KAAKinC,cAAgB,KAMrBjnC,KAAKknC,iBAAmB,KAMxBlnC,KAAKmnC,UAAY,KAMjBnnC,KAAKonC,cAAe,EAMpBpnC,KAAKqnC,UAAW,EAGZv6B,EAAQw6B,SACVtnC,KAAKsnC,OAASx6B,EAAQw6B,QAGpBx6B,EAAQy6B,KACVvnC,KAAKwnC,OAAO16B,EAAQy6B,KAGtBvnC,KAAK2f,kBACH,GACA3f,KAAKynC,6BAGP,MAAMh3B,EAAS3D,EAAQ2D,OACQ3D,EAAc,OACzC,KACJ9M,KAAK0nC,UAAUj3B,EACjB,CAMA,cAAAynB,CAAeC,GAGb,OAFAA,EAAQA,GAAgB,IAClBj4B,KAAKF,MACJm4B,CACT,CAMA,mBAAAC,CAAoBC,GAGlB,OAFAA,EAASA,GAAkB,IACpBn4B,KAAKF,KAAKy3B,iBACVY,CACT,CAQA,SAAAsP,GACE,OAAkC3nC,KAAKuM,IAAI,KAA0B,IACvE,CAKA,eAAAq7B,GACE,OAAO5nC,KAAK2nC,WACd,CAKA,cAAArP,GACE,MAAM7nB,EAASzQ,KAAK2nC,YACpB,OAAQl3B,EAAuBA,EAAO2lB,WAArB,WACnB,CAKA,mBAAAyR,GACE7nC,KAAKwe,UACDxe,KAAKonC,cAAgD,UAAhCpnC,KAAK2nC,YAAYvR,aAG1Cp2B,KAAKonC,cAAe,EACpBpnC,KAAK6c,cAAc,eACrB,CAKA,2BAAA4qB,GACMznC,KAAKknC,mBACP/oB,GAAcne,KAAKknC,kBACnBlnC,KAAKknC,iBAAmB,MAE1BlnC,KAAKonC,cAAe,EACpB,MAAM32B,EAASzQ,KAAK2nC,YAChBl3B,IACFzQ,KAAKknC,iBAAmBvpB,GACtBlN,EACA,GACAzQ,KAAK6nC,oBACL7nC,MAEwB,UAAtByQ,EAAO2lB,aACTp2B,KAAKonC,cAAe,EACpBvM,YAAW,KACT76B,KAAK6c,cAAc,cAAc,GAChC,KAGP7c,KAAKwe,SACP,CAOA,WAAAspB,CAAYC,GACV,OAAK/nC,KAAKmnC,UAGHnnC,KAAKmnC,UAAUW,YAAYC,GAFzBC,QAAQC,QAAQ,GAG3B,CAMA,OAAAC,CAAQH,GACN,OAAK/nC,KAAKmnC,WAAcnnC,KAAKqnC,SAGtBrnC,KAAKmnC,UAAUe,QAAQH,GAFrB,IAGX,CAWA,SAAAI,CAAUC,GACR,IAAIC,EACJ,MAAMd,EAAMvnC,KAAKsoC,iBAejB,IAAIzB,GAdCuB,GAAQb,IACXa,EAAOb,EAAIgB,WAGXF,EADED,aAAgB,GACL,CACXnE,UAAWmE,EAAKhS,WAChBjpB,OAAQi7B,EAAKvF,mBAGFuF,GAEVC,EAAWG,kBAAoBjB,IAClCc,EAAWG,iBAAmBjB,EAAIkB,gBAAgBrQ,uBAIlDyO,EADEwB,EAAWG,iBACAH,EAAWG,iBAAiBE,MACtC7B,GAAeA,EAAWzV,QAAUpxB,OAG1BA,KAAKy3B,gBAGpB,MAAMkR,EAAc3oC,KAAKkO,YAEzB,OACE04B,GAAOC,EAAYwB,EAAWpE,cAC5B0E,GAAe5zB,GAAW4zB,EAAaN,EAAWl7B,QAExD,CASA,eAAAy7B,CAAgBR,GACd,IAAKpoC,KAAKmoC,UAAUC,GAClB,MAAO,GAET,IAAIQ,EACJ,MAAMn4B,EAASzQ,KAAK2nC,YAIpB,GAHIl3B,IACFm4B,EAAkBn4B,EAAOm4B,oBAEtBA,EACH,MAAO,GAIT,IAAIC,EAAeD,EADjBR,aAAgB,GAAOA,EAAKpE,wBAA0BoE,GAKxD,OAHKl4B,MAAM4L,QAAQ+sB,KACjBA,EAAe,CAACA,IAEXA,CACT,CAUA,MAAAvB,CAAOe,EAAYrtB,GACjB,MAAM8tB,EAAgB9oC,KAAK+oC,cAE3B,OAAID,EAAcE,aAAaX,IAC7BroC,KAAKqnC,UAAW,EACTyB,EAAcG,YAAYZ,EAAYrtB,IAExC,IACT,CAKA,QAAAkuB,GACElpC,KAAKqnC,UAAW,CAClB,CAMA,cAAA8B,CAAe5B,GACRA,GACHvnC,KAAKkpC,WAEPlpC,KAAKgH,IAAI,GAAmBugC,EAC9B,CAMA,cAAAe,GACE,OAAOtoC,KAAKuM,IAAI,GAClB,CAaA,MAAAi7B,CAAOD,GACDvnC,KAAKgnC,oBACP7oB,GAAcne,KAAKgnC,mBACnBhnC,KAAKgnC,kBAAoB,MAEtBO,GACHvnC,KAAKwe,UAEHxe,KAAKinC,gBACP9oB,GAAcne,KAAKinC,eACnBjnC,KAAKinC,cAAgB,MAEnBM,IACFvnC,KAAKgnC,kBAAoBrpB,GACvB4pB,EACA,IACA,SAAUvqB,GACR,MAEMwrB,EADgD,EACjBH,WAAWG,iBAC1C3B,EAAa7mC,KAAKy3B,eAAc,GAEtCjmB,GACGg3B,EAAiBY,MAAK,SAAUC,GAC/B,OAAOA,EAAgBjY,QAAUyV,EAAWzV,KAC9C,IACA,IAEFoX,EAAiBtoC,KAAK2mC,EACxB,GACA7mC,MAEFA,KAAKinC,cAAgBtpB,GAAO3d,KAAM,GAAkBunC,EAAID,OAAQC,GAChEvnC,KAAKwe,UAET,CAQA,SAAAkpB,CAAUj3B,GACRzQ,KAAKgH,IAAI,GAAsByJ,EACjC,CAMA,WAAAs4B,GAIE,OAHK/oC,KAAKmnC,YACRnnC,KAAKmnC,UAAYnnC,KAAKspC,kBAEjBtpC,KAAKmnC,SACd,CAKA,WAAAoC,GACE,QAASvpC,KAAKmnC,SAChB,CAOA,cAAAmC,GACE,OAAO,IACT,CAKA,eAAAjuB,GACMrb,KAAKmnC,YACPnnC,KAAKmnC,UAAU/rB,iBACRpb,KAAKmnC,WAGdnnC,KAAK0nC,UAAU,MACfl4B,MAAM6L,iBACR,G,UC3eF,GACQ,EADR,GAEW,EAFX,GAGU,EAHV,GAIS,ECiDF,SAASmuB,GAAOp1B,EAAMpC,GAC3B,OAAI9B,MAAM4L,QAAQ1H,GACTA,QAEIrI,IAATiG,EACFA,EAAO,CAACoC,EAAMA,IAEdpC,EAAK,GAAKoC,EACVpC,EAAK,GAAKoC,GAELpC,EACT,CChDA,MAAMy3B,GAIJ,WAAA58B,CAAYC,GAKV9M,KAAK0pC,SAAW58B,EAAQ+pB,QAMxB72B,KAAK2pC,gBAAkB78B,EAAQ88B,eAM/B5pC,KAAK6pC,UAAY/8B,EAAQqH,SAMzBnU,KAAK8pC,OAASh9B,EAAQ6X,MAMtB3kB,KAAK+pC,YAAcP,GAAO18B,EAAQ6X,OAMlC3kB,KAAKgqC,cAAgBl9B,EAAQm9B,aAM7BjqC,KAAKkqC,eAAiBp9B,EAAQq9B,aAChC,CAOA,KAAAnmB,GACE,MAAMW,EAAQ3kB,KAAKoqC,WACnB,OAAO,IAAIX,GAAW,CACpB5S,QAAS72B,KAAK43B,aACdjT,MAAOzU,MAAM4L,QAAQ6I,GAASA,EAAMhlB,QAAUglB,EAC9CxQ,SAAUnU,KAAKggC,cACf4J,eAAgB5pC,KAAKqqC,oBACrBJ,aAAcjqC,KAAKsqC,kBAAkB3qC,QACrCwqC,cAAenqC,KAAKuqC,oBAExB,CAOA,UAAA3S,GACE,OAAO53B,KAAK0pC,QACd,CAOA,iBAAAW,GACE,OAAOrqC,KAAK2pC,eACd,CAOA,WAAA3J,GACE,OAAOhgC,KAAK6pC,SACd,CAOA,QAAAO,GACE,OAAOpqC,KAAK8pC,MACd,CAMA,aAAAU,GACE,OAAOxqC,KAAK+pC,WACd,CAOA,eAAAO,GACE,OAAOtqC,KAAKgqC,aACd,CAOA,gBAAAO,GACE,OAAOvqC,KAAKkqC,cACd,CAQA,SAAAO,GACE,OAAO,GACT,CAQA,QAAAC,CAASC,GACP,OAAO,GACT,CAMA,oBAAAC,GACE,OAAO,GACT,CAOA,aAAAC,CAAcF,GACZ,OAAO,CACT,CAMA,aAAAG,GACE,OAAO,GACT,CAMA,YAAAC,GACE,OAAO,GACT,CAOA,SAAAC,GACE,OAAO,GACT,CAOA,OAAAC,GACE,OAAO,GACT,CAQA,eAAAC,CAAgBjB,GACdjqC,KAAKgqC,cAAgBC,CACvB,CAQA,UAAArR,CAAW/B,GACT72B,KAAK0pC,SAAW7S,CAClB,CAQA,iBAAAsU,CAAkBvB,GAChB5pC,KAAK2pC,gBAAkBC,CACzB,CAQA,WAAA1K,CAAY/qB,GACVnU,KAAK6pC,UAAY11B,CACnB,CAQA,QAAAi3B,CAASzmB,GACP3kB,KAAK8pC,OAASnlB,EACd3kB,KAAK+pC,YAAcP,GAAO7kB,EAC5B,CAMA,iBAAA0mB,CAAkB5uB,GAChB,GACF,CAMA,IAAAnS,GACE,GACF,CAMA,mBAAAghC,CAAoB7uB,GAClB,GACF,EAGF,UCpRA,MAAM8uB,GAAgB,oDAQhBC,GAAkB,4BAQjB,SAASC,GAASC,GACvB,MAAqB,iBAAVA,EACFA,EAEF,GAASA,EAClB,CAOA,SAASC,GAAUD,GACjB,MAAME,EAAKrpB,SAASC,cAAc,OAElC,GADAopB,EAAGnpB,MAAMipB,MAAQA,EACM,KAAnBE,EAAGnpB,MAAMipB,MAAc,CACzBnpB,SAASspB,KAAKC,YAAYF,GAC1B,MAAMG,EAAMC,iBAAiBJ,GAAIF,MAEjC,OADAnpB,SAASspB,KAAKI,YAAYL,GACnBG,CACT,CACA,MAAO,EACT,CAMO,MAAMG,GAAa,WASxB,MAKM37B,EAAQ,CAAC,EAKf,IAAI47B,EAAY,EAEhB,OAAO,SAKK5tC,GACR,IAAImtC,EACJ,GAAIn7B,EAAM9D,eAAelO,GACvBmtC,EAAQn7B,EAAMhS,OACT,CACL,GAAI4tC,GAtBa,KAsBgB,CAC/B,IAAI9tC,EAAI,EACR,IAAK,MAAMqB,KAAO6Q,EACE,IAAP,EAANlS,cACIkS,EAAM7Q,KACXysC,EAGR,CACAT,EA4BR,SAA6BntC,GAC3B,IAAImK,EAAG0jC,EAAGxnC,EAAG+D,EAAG+iC,EAEZF,GAAgBa,KAAK9tC,KACvBA,EAAIotC,GAAUptC,IAGhB,GAAIgtC,GAAcc,KAAK9tC,GAAI,CAEzB,MAAMqK,EAAIrK,EAAEuB,OAAS,EACrB,IAAIxB,EAEFA,EADEsK,GAAK,EACH,EAEA,EAEN,MAAM0jC,EAAiB,IAAN1jC,GAAiB,IAANA,EAC5BF,EAAI6jC,SAAShuC,EAAEiuC,OAAO,EAAI,EAAIluC,EAAGA,GAAI,IACrC8tC,EAAIG,SAAShuC,EAAEiuC,OAAO,EAAI,EAAIluC,EAAGA,GAAI,IACrCsG,EAAI2nC,SAAShuC,EAAEiuC,OAAO,EAAI,EAAIluC,EAAGA,GAAI,IAEnCqK,EADE2jC,EACEC,SAAShuC,EAAEiuC,OAAO,EAAI,EAAIluC,EAAGA,GAAI,IAEjC,IAEG,GAALA,IACFoK,GAAKA,GAAK,GAAKA,EACf0jC,GAAKA,GAAK,GAAKA,EACfxnC,GAAKA,GAAK,GAAKA,EACX0nC,IACF3jC,GAAKA,GAAK,GAAKA,IAGnB+iC,EAAQ,CAAChjC,EAAG0jC,EAAGxnC,EAAG+D,EAAI,IACxB,MAAWpK,EAAEkuC,WAAW,UAEtBf,EAAQntC,EAAEoB,MAAM,GAAI,GAAG+sC,MAAM,KAAKnF,IAAIoF,QACtCC,GAAUlB,IACDntC,EAAEkuC,WAAW,SAEtBf,EAAQntC,EAAEoB,MAAM,GAAI,GAAG+sC,MAAM,KAAKnF,IAAIoF,QACtCjB,EAAMxrC,KAAK,GACX0sC,GAAUlB,IAEVl6B,GAAO,EAAO,IAEhB,OAAOk6B,CACT,CA3EgBmB,CAAoBtuC,GAC5BgS,EAAMhS,GAAKmtC,IACTS,CACJ,CACA,OAAOT,CAEX,CACD,CA/CyB,GAwDnB,SAASoB,GAAQpB,GACtB,OAAIx7B,MAAM4L,QAAQ4vB,GACTA,EAEFQ,GAAWR,EACpB,CA6DO,SAASkB,GAAUlB,GAKxB,OAJAA,EAAM,GAAK,GAAOA,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAK,GAAOA,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAK,GAAOA,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAK,GAAMA,EAAM,GAAI,EAAG,GACvBA,CACT,CAMO,SAAS,GAASA,GACvB,IAAIhjC,EAAIgjC,EAAM,GACVhjC,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAElB,IAAI0jC,EAAIV,EAAM,GACVU,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAElB,IAAIxnC,EAAI8mC,EAAM,GACV9mC,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAGlB,MAAO,QAAU8D,EAAI,IAAM0jC,EAAI,IAAMxnC,EAAI,UADlBmH,IAAb2/B,EAAM,GAAmB,EAAIhtC,KAAK4X,MAAiB,IAAXo1B,EAAM,IAAY,KACjB,GACrD,CChMO,SAASqB,GAAYrB,GAC1B,OAAIx7B,MAAM4L,QAAQ4vB,GACT,GAASA,GAEXA,CACT,CCZO,SAASsB,GAAsB93B,EAAOpL,EAAQmjC,EAAYC,GAE/D,IAAIC,EAeJ,OAbEA,EADEF,GAAcA,EAAWntC,OAClBmtC,EAAWG,QACXhtB,GACA,IAAII,gBAAgBtL,GAAS,IAAKpL,GAAU,KAE5CyY,SAASC,cAAc,UAE9BtN,IACFi4B,EAAOj4B,MAAQA,GAEbpL,IACFqjC,EAAOrjC,OAASA,GAIhBqjC,EAAOE,WAAW,KAAMH,EAE5B,CAOO,SAASI,GAAcC,GAC5B,MAAMJ,EAASI,EAAQJ,OACvBA,EAAOj4B,MAAQ,EACfi4B,EAAOrjC,OAAS,EAChByjC,EAAQC,UAAU,EAAG,EAAG,EAAG,EAC7B,CC1BO,MA+CDC,GAAY,IAAIC,OACpB,CACE,qDACA,4CACA,8DACA,gDACA,8EACA,gEACA,mCACA7tC,KAAK,IACP,KAEI8tC,GAAsB,CAC1B,QACA,UACA,SACA,OACA,aACA,UASWC,GAAoB,SAAUC,GACzC,MAAMC,EAAQD,EAASC,MAAML,IAC7B,IAAKK,EACH,OAAO,KAET,MAAMrrB,EAAsC,CAC1CsrB,WAAY,SACZ35B,KAAM,QACNqO,MAAO,SACPurB,OAAQ,SACRC,QAAS,UAEX,IAAK,IAAI5vC,EAAI,EAAGyT,EAAK67B,GAAoB7tC,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC5D,MAAMQ,EAAQivC,EAAMzvC,EAAI,QACV0N,IAAVlN,IACF4jB,EAAMkrB,GAAoBtvC,IAAMQ,EAEpC,CAEA,OADA4jB,EAAMyrB,SAAWzrB,EAAM0rB,OAAOzB,MAAM,QAC7BjqB,CACT,ECxBa2rB,GAAc,kBAMdC,GAAmB,OAMnBC,GAAiB,QAMjBC,GAAkB,GAYlBC,GAAkB,QAYlBC,GAAqB,OAMrBC,GAAmB,SAMnBC,GAAsB,SAMtBC,GAAiB,CAAC,EAAG,EAAG,EAAG,GAW3B,GAAe,IAAI,GAKhC,IAKIC,GALAC,GAAiB,KAUd,MAAMC,GAAc,CAAC,EAMf,GAAe,WAC1B,MACM36B,EAAO,QACP46B,EAAiB,CAAC,YAAa,SAC/B7sC,EAAM6sC,EAAelvC,OACrBmvC,EAAO,2BACb,IAAIC,EAAUC,EAQd,SAASC,EAAYC,EAAWC,EAAYC,GAC1C,IAAIC,GAAY,EAChB,IAAK,IAAInxC,EAAI,EAAGA,EAAI8D,IAAO9D,EAAG,CAC5B,MAAMoxC,EAAgBT,EAAe3wC,GAKrC,GAJA8wC,EAAiBO,GACfL,EAAY,IAAMC,EAAa,IAAMl7B,EAAOq7B,EAC5CR,GAEEM,GAAcE,EAAe,CAC/B,MAAMv6B,EAAQw6B,GACZL,EACE,IACAC,EACA,IACAl7B,EACAm7B,EACA,IACAE,EACFR,GAIFO,EAAYA,GAAat6B,GAASi6B,CACpC,CACF,CACA,QAAIK,CAIN,CAEA,SAASG,IACP,IAAIC,GAAO,EACX,MAAMC,EAAQ,GAAazwB,UAC3B,IAAK,IAAI/gB,EAAI,EAAGyT,EAAK+9B,EAAM/vC,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC9C,MAAMyxC,EAAOD,EAAMxxC,GACf,GAAakO,IAAIujC,GAjDT,MAkDNV,EAAYnkC,MAAMjL,KAAM8vC,EAAKpD,MAAM,QACrC,GAAMqC,IAEND,GAAiB,KACjBD,QAAc9iC,EACd,GAAa/E,IAAI8oC,EAvDT,OAyDR,GAAa9oC,IAAI8oC,EAAM,GAAavjC,IAAIujC,GAAQ,GAAG,GACnDF,GAAO,GAGb,CACIA,IACFG,cAAcb,GACdA,OAAWnjC,EAEf,CAEA,OAAO,SAAU8hC,GACf,MAAMiC,EAAOlC,GAAkBC,GAC/B,IAAKiC,EACH,OAEF,MAAM5B,EAAW4B,EAAK5B,SACtB,IAAK,IAAI7vC,EAAI,EAAGyT,EAAKo8B,EAASpuC,OAAQzB,EAAIyT,IAAMzT,EAAG,CACjD,MAAM8vC,EAASD,EAAS7vC,GAClBqB,EAAMowC,EAAKrtB,MAAQ,KAAOqtB,EAAK9B,OAAS,KAAOG,OACvBpiC,IAA1B,GAAaQ,IAAI7M,KACnB,GAAasH,IAAItH,EA9EP,KA8EqB,GAC1B0vC,EAAYU,EAAKrtB,MAAOqtB,EAAK9B,OAAQG,KACxC,GAAannC,IAAItH,EAAK,GAAG,QACRqM,IAAbmjC,IACFA,EAAWc,YAAYL,EAAO,MAItC,CACF,CACD,CAzF2B,GA+FfM,GAAoB,WAI/B,IAAIC,EACJ,OAAO,SAAUrC,GACf,IAAI/jC,EAASilC,GAAYlB,GACzB,GAAc9hC,MAAVjC,EAAqB,CACvB,GAAIsW,GAAyB,CAC3B,MAAM0vB,EAAOlC,GAAkBC,GACzBsC,EAAUC,GAAYvC,EAAU,MAItC/jC,GAHmB7K,MAAM0tC,OAAOmD,EAAK/B,aACjC,IACApB,OAAOmD,EAAK/B,cAGboC,EAAQE,wBAA0BF,EAAQG,yBAC/C,MACOJ,IACHA,EAAiB3tB,SAASC,cAAc,OACxC0tB,EAAeK,UAAY,IAC3BL,EAAeztB,MAAM+tB,UAAY,IACjCN,EAAeztB,MAAMguB,UAAY,OACjCP,EAAeztB,MAAM3Y,OAAS,OAC9BomC,EAAeztB,MAAM6b,QAAU,IAC/B4R,EAAeztB,MAAMiuB,OAAS,OAC9BR,EAAeztB,MAAM8Y,SAAW,WAChC2U,EAAeztB,MAAMkuB,QAAU,QAC/BT,EAAeztB,MAAMmuB,KAAO,YAE9BV,EAAeztB,MAAMqtB,KAAOjC,EAC5BtrB,SAASspB,KAAKC,YAAYoE,GAC1BpmC,EAASomC,EAAeW,aACxBtuB,SAASspB,KAAKI,YAAYiE,GAE5BnB,GAAYlB,GAAY/jC,CAC1B,CACA,OAAOA,CACT,CACD,CAvCgC,GA8CjC,SAASsmC,GAAYN,EAAMb,GAQzB,OAPKH,KACHA,GAAiB9B,GAAsB,EAAG,IAExC8C,GAAQjB,KACVC,GAAegB,KAAOA,EACtBjB,GAAcC,GAAegB,MAExBhB,GAAesB,YAAYnB,EACpC,CAOO,SAASS,GAAiBI,EAAMb,GACrC,OAAOmB,GAAYN,EAAMb,GAAM/5B,KACjC,CASO,SAAS47B,GAAyBhB,EAAMb,EAAM1+B,GACnD,GAAI0+B,KAAQ1+B,EACV,OAAOA,EAAM0+B,GAEf,MAAM/5B,EAAQ+5B,EACXvC,MAAM,MACNqE,QAAO,CAACC,EAAMC,IAASvyC,KAAKwK,IAAI8nC,EAAMtB,GAAiBI,EAAMmB,KAAQ,GAExE,OADA1gC,EAAM0+B,GAAQ/5B,EACPA,CACT,CA8DO,SAASg8B,GACd3D,EACAv0B,EACA6d,EACAsa,EACAC,EACAC,EACA9O,EACAx9B,EACAoE,EACAgH,EACAwU,GAEA4oB,EAAQ+D,OAEQ,IAAZza,IACF0W,EAAQgE,aAAe1a,GAErB7d,GACFu0B,EAAQv0B,UAAU/N,MAAMsiC,EAASv0B,GAGd,EAAew4B,qBAElCjE,EAAQxoB,UAAU5b,EAAGgH,GACrBo9B,EAAQ5oB,MAAMA,EAAM,GAAIA,EAAM,IA2ClC,SAAkC8sB,EAAOlE,GACvC,MAAMiE,EAAsBC,EAAMD,oBAClC,IAAK,IAAInzC,EAAI,EAAGyT,EAAK0/B,EAAoB1xC,OAAQzB,EAAIyT,EAAIzT,GAAK,EACxD6R,MAAM4L,QAAQ01B,EAAoBnzC,EAAI,IACxCkvC,EAAQiE,EAAoBnzC,IAAI4M,MAC9BsiC,EACAiE,EAAoBnzC,EAAI,IAG1BkvC,EAAQiE,EAAoBnzC,IAAMmzC,EAAoBnzC,EAAI,EAGhE,CAtDIqzC,CAA8C,EAAgBnE,IACrD5oB,EAAM,GAAK,GAAKA,EAAM,GAAK,GAEpC4oB,EAAQxoB,UAAU5b,EAAGgH,GACrBo9B,EAAQ5oB,MAAMA,EAAM,GAAIA,EAAM,IAC9B4oB,EAAQoE,UAC6D,EAGnEP,EACAC,EACA9O,EACAx9B,EACA,EACA,EACAw9B,EACAx9B,IAIFwoC,EAAQoE,UAC6D,EAGnEP,EACAC,EACA9O,EACAx9B,EACAoE,EACAgH,EACAoyB,EAAI5d,EAAM,GACV5f,EAAI4f,EAAM,IAId4oB,EAAQqE,SACV,CC7aA,MAAMC,WAAqB,GAIzB,WAAAhlC,CAAYC,GAOV0C,MAAM,CACJqnB,QAAS,EACT+S,oBAJ2B79B,IAA3Be,EAAQ88B,gBAA+B98B,EAAQ88B,eAK/Cz1B,cAA+BpI,IAArBe,EAAQqH,SAAyBrH,EAAQqH,SAAW,EAC9DwQ,WAAyB5Y,IAAlBe,EAAQ6X,MAAsB7X,EAAQ6X,MAAQ,EACrDslB,kBAC2Bl+B,IAAzBe,EAAQm9B,aAA6Bn9B,EAAQm9B,aAAe,CAAC,EAAG,GAClEE,cAAer9B,EAAQq9B,gBAOzBnqC,KAAK8xC,aAAU/lC,EAMf/L,KAAK+xC,oBAAsB,KAM3B/xC,KAAKgyC,WAAyBjmC,IAAjBe,EAAQmlC,KAAqBnlC,EAAQmlC,KAAO,KAMzDjyC,KAAKkyC,QAAU,CAAC,EAAG,GAMnBlyC,KAAKmyC,QAAUrlC,EAAQ0f,OAMvBxsB,KAAKoyC,aACgBrmC,IAAnBe,EAAQ6J,OAAuB7J,EAAQ6J,OAAS7J,EAAQulC,QAM1DryC,KAAKsyC,SAAWxlC,EAAQylC,QAMxBvyC,KAAKwyC,YAA2BzmC,IAAlBe,EAAQgV,MAAsBhV,EAAQgV,MAAQ,EAM5D9hB,KAAKyyC,aAA6B1mC,IAAnBe,EAAQ4lC,OAAuB5lC,EAAQ4lC,OAAS,KAM/D1yC,KAAK2yC,MAAQ,KAMb3yC,KAAK4yC,eAAiB,KAEtB5yC,KAAKsnC,QACP,CAOA,KAAAtjB,GACE,MAAMW,EAAQ3kB,KAAKoqC,WACb3nB,EAAQ,IAAIovB,GAAa,CAC7BI,KAAMjyC,KAAK6yC,UAAY7yC,KAAK6yC,UAAU7uB,aAAUjY,EAChDygB,OAAQxsB,KAAKusB,YACb5V,OAAQ3W,KAAK8yC,YACbP,QAASvyC,KAAK+yC,aACdjxB,MAAO9hB,KAAKgzC,WACZN,OAAQ1yC,KAAKizC,YAAcjzC,KAAKizC,YAAYjvB,aAAUjY,EACtDoI,SAAUnU,KAAKggC,cACf4J,eAAgB5pC,KAAKqqC,oBACrB1lB,MAAOzU,MAAM4L,QAAQ6I,GAASA,EAAMhlB,QAAUglB,EAC9CslB,aAAcjqC,KAAKsqC,kBAAkB3qC,QACrCwqC,cAAenqC,KAAKuqC,qBAGtB,OADA9nB,EAAMmW,WAAW54B,KAAK43B,cACfnV,CACT,CAQA,SAAAgoB,GACE,MAAMr2B,EAAOpU,KAAK2yC,MAClB,IAAKv+B,EACH,OAAO,KAET,MAAM61B,EAAejqC,KAAKsqC,kBACpB3lB,EAAQ3kB,KAAKwqC,gBAGnB,MAAO,CACLp2B,EAAK,GAAK,EAAI61B,EAAa,GAAKtlB,EAAM,GACtCvQ,EAAK,GAAK,EAAI61B,EAAa,GAAKtlB,EAAM,GAE1C,CAOA,QAAAquB,GACE,OAAOhzC,KAAKwyC,MACd,CAOA,OAAAK,GACE,OAAO7yC,KAAKgyC,KACd,CAOA,OAAAkB,CAAQjB,GACNjyC,KAAKgyC,MAAQC,EACbjyC,KAAKsnC,QACP,CAKA,oBAAAsD,GAIE,OAHK5qC,KAAK+xC,qBACR/xC,KAAKmzC,0BAA0BnzC,KAAK4yC,gBAE/B5yC,KAAK+xC,mBACd,CAQA,QAAArH,CAASC,GACP,IAAIyI,EAAQpzC,KAAK8xC,QAAQnH,GACzB,IAAKyI,EAAO,CACV,MAAMC,EAAgBrzC,KAAK4yC,eACrBrF,EAAUP,GACdqG,EAAcj/B,KAAOu2B,EACrB0I,EAAcj/B,KAAOu2B,GAEvB3qC,KAAKszC,MAAMD,EAAe9F,EAAS5C,GAEnCyI,EAAQ7F,EAAQJ,OAChBntC,KAAK8xC,QAAQnH,GAAcyI,CAC7B,CACA,OAAOA,CACT,CAOA,aAAAvI,CAAcF,GACZ,OAAOA,CACT,CAKA,YAAAI,GACE,OAAO/qC,KAAK2yC,KACd,CAKA,aAAA7H,GACE,OAAO,EACT,CAOA,SAAAE,GACE,OAAOhrC,KAAKkyC,OACd,CAOA,SAAA3lB,GACE,OAAOvsB,KAAKmyC,OACd,CAOA,SAAAW,GACE,OAAO9yC,KAAKoyC,OACd,CAOA,UAAAW,GACE,OAAO/yC,KAAKsyC,QACd,CAOA,OAAArH,GACE,OAAOjrC,KAAK2yC,KACd,CAOA,SAAAM,GACE,OAAOjzC,KAAKyyC,OACd,CAOA,SAAAc,CAAUb,GACR1yC,KAAKyyC,QAAUC,EACf1yC,KAAKsnC,QACP,CAKA,iBAAA+D,CAAkB5uB,GAAW,CAK7B,IAAAnS,GAAQ,CAKR,mBAAAghC,CAAoB7uB,GAAW,CAU/B,sBAAA+2B,CAAuBC,EAAUC,EAAaC,GAC5C,GACkB,IAAhBD,GACA1zC,KAAKmyC,UAAY1zC,KACH,UAAbg1C,GAAqC,UAAbA,EAEzB,OAAOC,EAwBT,IAAIE,EAAK5zC,KAAKoyC,QACVyB,OAAuB9nC,IAAlB/L,KAAKsyC,SAAyBsB,EAAK5zC,KAAKsyC,SACjD,GAAIsB,EAAKC,EAAI,CACX,MAAMj4B,EAAMg4B,EACZA,EAAKC,EACLA,EAAKj4B,CACP,CACA,MAAM4Q,OACczgB,IAAlB/L,KAAKsyC,SAAyBtyC,KAAKmyC,QAAyB,EAAfnyC,KAAKmyC,QAC9C2B,EAAS,EAAIp1C,KAAKkO,GAAM4f,EACxB7jB,EAAIkrC,EAAKn1C,KAAK8V,IAAIs/B,GAElBx1C,EAAIs1C,EADAl1C,KAAKuK,KAAK4qC,EAAKA,EAAKlrC,EAAIA,GAE5B5K,EAAIW,KAAKuK,KAAKN,EAAIA,EAAIrK,EAAIA,GAC1By1C,EAAah2C,EAAI4K,EACvB,GAAiB,UAAb8qC,GAAwBM,GAAcJ,EACxC,OAAOI,EAAaL,EAetB,MAAMzwB,EAAIywB,EAAc,EAAIK,EACtBlvC,EAAK6uC,EAAc,GAAMp1C,EAAIP,GAE7Bi2C,EADOt1C,KAAKuK,MAAM2qC,EAAK3wB,IAAM2wB,EAAK3wB,GAAKpe,EAAIA,GACzB+uC,EACxB,QAAsB7nC,IAAlB/L,KAAKsyC,UAAuC,UAAbmB,EACjC,OAAkB,EAAXO,EAIT,MAAMC,EAAKL,EAAKl1C,KAAK8V,IAAIs/B,GAEnBI,EAAKL,EADAn1C,KAAKuK,KAAK2qC,EAAKA,EAAKK,EAAKA,GAG9BE,EADKz1C,KAAKuK,KAAKgrC,EAAKA,EAAKC,EAAKA,GACPD,EAC7B,GAAIE,GAAmBR,EAAY,CACjC,MAAMS,EAAeD,EAAkBT,EAAe,EAAIG,EAAKD,EAC/D,OAAO,EAAIl1C,KAAKwK,IAAI8qC,EAAUI,EAChC,CACA,OAAkB,EAAXJ,CACT,CAMA,mBAAAK,GACE,IAIIC,EAJAb,EAAWjF,GACXmF,EAAa,EACbY,EAAW,KACXC,EAAiB,EAEjBd,EAAc,EAEd1zC,KAAKyyC,UACP6B,EAAct0C,KAAKyyC,QAAQgC,WACP,OAAhBH,IACFA,EAAc7F,IAEhB6F,EAAcvH,GAAYuH,GAC1BZ,EAAc1zC,KAAKyyC,QAAQiC,gBACP3oC,IAAhB2nC,IACFA,EDlTwB,GCoT1Ba,EAAWv0C,KAAKyyC,QAAQkC,cACxBH,EAAiBx0C,KAAKyyC,QAAQmC,oBAC9BnB,EAAWzzC,KAAKyyC,QAAQoC,mBACP9oC,IAAb0nC,IACFA,EAAWjF,IAEbmF,EAAa3zC,KAAKyyC,QAAQqC,qBACP/oC,IAAf4nC,IACFA,ED1VyB,KC8V7B,MAAM97B,EAAM7X,KAAKwzC,uBAAuBC,EAAUC,EAAaC,GACzDoB,EAAYr2C,KAAKwK,IAAIlJ,KAAKoyC,QAASpyC,KAAKsyC,UAAY,GAG1D,MAAO,CACLgC,YAAaA,EACbZ,YAAaA,EACbt/B,KALW1V,KAAK4K,KAAK,EAAIyrC,EAAYl9B,GAMrC08B,SAAUA,EACVC,eAAgBA,EAChBf,SAAUA,EACVE,WAAYA,EAEhB,CAKA,MAAArM,GACEtnC,KAAK4yC,eAAiB5yC,KAAKq0C,sBAC3B,MAAMjgC,EAAOpU,KAAK4yC,eAAex+B,KACjCpU,KAAK8xC,QAAU,CAAC,EAChB9xC,KAAK2yC,MAAQ,CAACv+B,EAAMA,EACtB,CAQA,KAAAk/B,CAAMD,EAAe9F,EAAS5C,GAO5B,GANA4C,EAAQ5oB,MAAMgmB,EAAYA,GAE1B4C,EAAQxoB,UAAUsuB,EAAcj/B,KAAO,EAAGi/B,EAAcj/B,KAAO,GAE/DpU,KAAKg1C,YAAYzH,GAEbvtC,KAAKgyC,MAAO,CACd,IAAItG,EAAQ1rC,KAAKgyC,MAAMyC,WACT,OAAV/I,IACFA,EAAQ2C,IAEVd,EAAQ0H,UAAYlI,GAAYrB,GAChC6B,EAAQ0E,MACV,CACIjyC,KAAKyyC,UACPlF,EAAQ+G,YAAcjB,EAAciB,YACpC/G,EAAQ2H,UAAY7B,EAAcK,YAC9BL,EAAckB,WAChBhH,EAAQ4H,YAAY9B,EAAckB,UAClChH,EAAQiH,eAAiBnB,EAAcmB,gBAEzCjH,EAAQkG,SAAWJ,EAAcI,SACjClG,EAAQoG,WAAaN,EAAcM,WACnCpG,EAAQmF,SAEZ,CAMA,yBAAAS,CAA0BE,GACxB,GAAIrzC,KAAKgyC,MAAO,CACd,IAAItG,EAAQ1rC,KAAKgyC,MAAMyC,WAGnB5d,EAAU,EASd,GARqB,iBAAV6U,IACTA,EAAQoB,GAAQpB,IAEJ,OAAVA,EACF7U,EAAU,EACD3mB,MAAM4L,QAAQ4vB,KACvB7U,EAA2B,IAAjB6U,EAAM5rC,OAAe4rC,EAAM,GAAK,GAE5B,IAAZ7U,EAAe,CAGjB,MAAM0W,EAAUP,GACdqG,EAAcj/B,KACdi/B,EAAcj/B,MAEhBpU,KAAK+xC,oBAAsBxE,EAAQJ,OAEnCntC,KAAKo1C,wBAAwB/B,EAAe9F,EAC9C,CACF,CACKvtC,KAAK+xC,sBACR/xC,KAAK+xC,oBAAsB/xC,KAAK0qC,SAAS,GAE7C,CAMA,WAAAsK,CAAYzH,GACV,IAAI/gB,EAASxsB,KAAKmyC,QAClB,MAAMx7B,EAAS3W,KAAKoyC,QACpB,GAAI5lB,IAAW/tB,IACb8uC,EAAQ8H,IAAI,EAAG,EAAG1+B,EAAQ,EAAG,EAAIjY,KAAKkO,QACjC,CACL,MAAM2lC,OAA4BxmC,IAAlB/L,KAAKsyC,SAAyB37B,EAAS3W,KAAKsyC,cACtCvmC,IAAlB/L,KAAKsyC,WACP9lB,GAAU,GAEZ,MAAM8oB,EAAat1C,KAAKwyC,OAAS9zC,KAAKkO,GAAK,EACrC2oC,EAAQ,EAAI72C,KAAKkO,GAAM4f,EAC7B,IAAK,IAAInuB,EAAI,EAAGA,EAAImuB,EAAQnuB,IAAK,CAC/B,MAAMm3C,EAASF,EAAaj3C,EAAIk3C,EAC1BE,EAAUp3C,EAAI,GAAM,EAAIsY,EAAS47B,EACvChF,EAAQmI,OAAOD,EAAU/2C,KAAK4V,IAAIkhC,GAASC,EAAU/2C,KAAK8V,IAAIghC,GAChE,CACAjI,EAAQoI,WACV,CACF,CAOA,uBAAAP,CAAwB/B,EAAe9F,GAErCA,EAAQxoB,UAAUsuB,EAAcj/B,KAAO,EAAGi/B,EAAcj/B,KAAO,GAE/DpU,KAAKg1C,YAAYzH,GAEjBA,EAAQ0H,UAAY5G,GACpBd,EAAQ0E,OACJjyC,KAAKyyC,UACPlF,EAAQ+G,YAAcjB,EAAciB,YACpC/G,EAAQ2H,UAAY7B,EAAcK,YAC9BL,EAAckB,WAChBhH,EAAQ4H,YAAY9B,EAAckB,UAClChH,EAAQiH,eAAiBnB,EAAcmB,gBAEzCjH,EAAQkG,SAAWJ,EAAcI,SACjClG,EAAQoG,WAAaN,EAAcM,WACnCpG,EAAQmF,SAEZ,EAGF,UCrlBA,MAAM,WAAoB,GAIxB,WAAA7lC,CAAYC,GAGV0C,MAAM,CACJgd,OAAQ/tB,IACRwzC,MAJFnlC,EAAUA,GAAoB,CAAC6J,OAAQ,IAIvBs7B,KACdt7B,OAAQ7J,EAAQ6J,OAChB+7B,OAAQ5lC,EAAQ4lC,OAChB/tB,WAAyB5Y,IAAlBe,EAAQ6X,MAAsB7X,EAAQ6X,MAAQ,EACrDxQ,cAA+BpI,IAArBe,EAAQqH,SAAyBrH,EAAQqH,SAAW,EAC9Dy1B,oBAC6B79B,IAA3Be,EAAQ88B,gBAA+B98B,EAAQ88B,eACjDK,kBAC2Bl+B,IAAzBe,EAAQm9B,aAA6Bn9B,EAAQm9B,aAAe,CAAC,EAAG,GAClEE,cAAer9B,EAAQq9B,eAE3B,CAOA,KAAAnmB,GACE,MAAMW,EAAQ3kB,KAAKoqC,WACb3nB,EAAQ,IAAI,GAAY,CAC5BwvB,KAAMjyC,KAAK6yC,UAAY7yC,KAAK6yC,UAAU7uB,aAAUjY,EAChD2mC,OAAQ1yC,KAAKizC,YAAcjzC,KAAKizC,YAAYjvB,aAAUjY,EACtD4K,OAAQ3W,KAAK8yC,YACbnuB,MAAOzU,MAAM4L,QAAQ6I,GAASA,EAAMhlB,QAAUglB,EAC9CxQ,SAAUnU,KAAKggC,cACf4J,eAAgB5pC,KAAKqqC,oBACrBJ,aAAcjqC,KAAKsqC,kBAAkB3qC,QACrCwqC,cAAenqC,KAAKuqC,qBAGtB,OADA9nB,EAAMmW,WAAW54B,KAAK43B,cACfnV,CACT,CAQA,SAAAmzB,CAAUj/B,GACR3W,KAAKoyC,QAAUz7B,EACf3W,KAAKsnC,QACP,EAGF,UCjEA,MAAM,GAIJ,WAAAz6B,CAAYC,GACVA,EAAUA,GAAW,CAAC,EAMtB9M,KAAK61C,YAA2B9pC,IAAlBe,EAAQ4+B,MAAsB5+B,EAAQ4+B,MAAQ,IAC9D,CAOA,KAAA1nB,GACE,MAAM0nB,EAAQ1rC,KAAKy0C,WACnB,OAAO,IAAI,GAAK,CACd/I,MAAOx7B,MAAM4L,QAAQ4vB,GAASA,EAAM/rC,QAAU+rC,QAAS3/B,GAE3D,CAOA,QAAA0oC,GACE,OAAOz0C,KAAK61C,MACd,CAQA,QAAAC,CAASpK,GACP1rC,KAAK61C,OAASnK,CAChB,EAGF,UCrCA,MAAM,GAIJ,WAAA7+B,CAAYC,GACVA,EAAUA,GAAW,CAAC,EAMtB9M,KAAK61C,YAA2B9pC,IAAlBe,EAAQ4+B,MAAsB5+B,EAAQ4+B,MAAQ,KAM5D1rC,KAAK+1C,SAAWjpC,EAAQkpC,QAMxBh2C,KAAKi2C,eAAiClqC,IAArBe,EAAQynC,SAAyBznC,EAAQynC,SAAW,KAMrEv0C,KAAKk2C,gBAAkBppC,EAAQ0nC,eAM/Bx0C,KAAKm2C,UAAYrpC,EAAQ2mC,SAMzBzzC,KAAKo2C,YAActpC,EAAQ6mC,WAM3B3zC,KAAKq2C,OAASvpC,EAAQoI,KACxB,CAOA,KAAA8O,GACE,MAAM0nB,EAAQ1rC,KAAKy0C,WACnB,OAAO,IAAI,GAAO,CAChB/I,MAAOx7B,MAAM4L,QAAQ4vB,GAASA,EAAM/rC,QAAU+rC,QAAS3/B,EACvDiqC,QAASh2C,KAAKs2C,aACd/B,SAAUv0C,KAAK20C,cAAgB30C,KAAK20C,cAAch1C,aAAUoM,EAC5DyoC,eAAgBx0C,KAAK40C,oBACrBnB,SAAUzzC,KAAK60C,cACflB,WAAY3zC,KAAK80C,gBACjB5/B,MAAOlV,KAAK00C,YAEhB,CAOA,QAAAD,GACE,OAAOz0C,KAAK61C,MACd,CAOA,UAAAS,GACE,OAAOt2C,KAAK+1C,QACd,CAOA,WAAApB,GACE,OAAO30C,KAAKi2C,SACd,CAOA,iBAAArB,GACE,OAAO50C,KAAKk2C,eACd,CAOA,WAAArB,GACE,OAAO70C,KAAKm2C,SACd,CAOA,aAAArB,GACE,OAAO90C,KAAKo2C,WACd,CAOA,QAAA1B,GACE,OAAO10C,KAAKq2C,MACd,CAQA,QAAAP,CAASpK,GACP1rC,KAAK61C,OAASnK,CAChB,CAQA,UAAA6K,CAAWP,GACTh2C,KAAK+1C,SAAWC,CAClB,CAQA,WAAAb,CAAYZ,GACVv0C,KAAKi2C,UAAY1B,CACnB,CAQA,iBAAAiC,CAAkBhC,GAChBx0C,KAAKk2C,gBAAkB1B,CACzB,CAQA,WAAAiC,CAAYhD,GACVzzC,KAAKm2C,UAAY1C,CACnB,CAQA,aAAAiD,CAAc/C,GACZ3zC,KAAKo2C,YAAczC,CACrB,CAQA,QAAAgD,CAASzhC,GACPlV,KAAKq2C,OAASnhC,CAChB,EAGF,UC5EA,MAAM0hC,GAIJ,WAAA/pC,CAAYC,GACVA,EAAUA,GAAW,CAAC,EAMtB9M,KAAK62C,UAAY,KAMjB72C,KAAK82C,kBAAoBC,QAEAhrC,IAArBe,EAAQ+N,UACV7a,KAAKmzB,YAAYrmB,EAAQ+N,UAO3B7a,KAAKgyC,WAAyBjmC,IAAjBe,EAAQmlC,KAAqBnlC,EAAQmlC,KAAO,KAMzDjyC,KAAKg3C,YAA2BjrC,IAAlBe,EAAQsmC,MAAsBtmC,EAAQsmC,MAAQ,KAM5DpzC,KAAKmnC,eAAiCp7B,IAArBe,EAAQmqC,SAAyBnqC,EAAQmqC,SAAW,KAMrEj3C,KAAKk3C,2BAC8BnrC,IAAjCe,EAAQqqC,qBACJrqC,EAAQqqC,qBACR,KAMNn3C,KAAKyyC,aAA6B1mC,IAAnBe,EAAQ4lC,OAAuB5lC,EAAQ4lC,OAAS,KAM/D1yC,KAAKo3C,WAAyBrrC,IAAjBe,EAAQmiC,KAAqBniC,EAAQmiC,KAAO,KAMzDjvC,KAAKq3C,QAAUvqC,EAAQiqB,MACzB,CAOA,KAAA/S,GACE,IAAInJ,EAAW7a,KAAKgxB,cAMpB,OALInW,GAAgC,iBAAbA,IACrBA,EAAgE,EAE9DmJ,SAEG,IAAI4yB,GAAM,CACf/7B,SAAUA,EACVo3B,KAAMjyC,KAAK6yC,UAAY7yC,KAAK6yC,UAAU7uB,aAAUjY,EAChDqnC,MAAOpzC,KAAK0qC,WAAa1qC,KAAK0qC,WAAW1mB,aAAUjY,EACnDkrC,SAAUj3C,KAAK+oC,cACf2J,OAAQ1yC,KAAKizC,YAAcjzC,KAAKizC,YAAYjvB,aAAUjY,EACtDkjC,KAAMjvC,KAAKs3C,UAAYt3C,KAAKs3C,UAAUtzB,aAAUjY,EAChDgrB,OAAQ/2B,KAAK23B,aAEjB,CAQA,WAAAoR,GACE,OAAO/oC,KAAKmnC,SACd,CAQA,WAAAoQ,CAAYN,GACVj3C,KAAKmnC,UAAY8P,CACnB,CAQA,uBAAAO,CAAwBP,GACtBj3C,KAAKk3C,sBAAwBD,CAC/B,CAQA,uBAAAQ,GACE,OAAOz3C,KAAKk3C,qBACd,CASA,WAAAlmB,GACE,OAAOhxB,KAAK62C,SACd,CAQA,mBAAAa,GACE,OAAO13C,KAAK82C,iBACd,CAOA,OAAAjE,GACE,OAAO7yC,KAAKgyC,KACd,CAOA,OAAAkB,CAAQjB,GACNjyC,KAAKgyC,MAAQC,CACf,CAOA,QAAAvH,GACE,OAAO1qC,KAAKg3C,MACd,CAOA,QAAAW,CAASvE,GACPpzC,KAAKg3C,OAAS5D,CAChB,CAOA,SAAAH,GACE,OAAOjzC,KAAKyyC,OACd,CAOA,SAAAc,CAAUb,GACR1yC,KAAKyyC,QAAUC,CACjB,CAOA,OAAA4E,GACE,OAAOt3C,KAAKo3C,KACd,CAOA,OAAAQ,CAAQ3I,GACNjvC,KAAKo3C,MAAQnI,CACf,CAOA,SAAAtX,GACE,OAAO33B,KAAKq3C,OACd,CAUA,WAAAlkB,CAAYtY,GACc,mBAAbA,EACT7a,KAAK82C,kBAAoBj8B,EACI,iBAAbA,EAChB7a,KAAK82C,kBAAoB,SAAUr8B,GACjC,OACEA,EAAQlO,IAAIsO,EAEhB,EACUA,OAEY9O,IAAb8O,IACT7a,KAAK82C,kBAAoB,WACvB,OAA4D,CAC9D,GAJA92C,KAAK82C,kBAAoBC,GAM3B/2C,KAAK62C,UAAYh8B,CACnB,CAQA,SAAAie,CAAU/B,GACR/2B,KAAKq3C,QAAUtgB,CACjB,EAsCF,IAAI8gB,GAAgB,KAOb,SAASC,GAAmBr9B,EAAS/K,GAM1C,IAAKmoC,GAAe,CAClB,MAAM5F,EAAO,IAAI,GAAK,CACpBvG,MAAO,0BAEHgH,EAAS,IAAI,GAAO,CACxBhH,MAAO,UACPx2B,MAAO,OAET2iC,GAAgB,CACd,IAAIjB,GAAM,CACRxD,MAAO,IAAI2E,GAAY,CACrB9F,KAAMA,EACNS,OAAQA,EACR/7B,OAAQ,IAEVs7B,KAAMA,EACNS,OAAQA,IAGd,CACA,OAAOmF,EACT,CAqEA,SAASd,GAAwBt8B,GAC/B,OAAOA,EAAQuW,aACjB,CAEA,UC5iBA,MAAMgnB,GACJ,WAAAnrC,GAKE7M,KAAKi4C,OAAS,CAAC,EAMfj4C,KAAKk4C,WAAa,EAMlBl4C,KAAKm4C,cAAgB,EACvB,CAKA,KAAA5uC,GACEvJ,KAAKi4C,OAAS,CAAC,EACfj4C,KAAKk4C,WAAa,CACpB,CAKA,cAAAE,GACE,OAAOp4C,KAAKk4C,WAAal4C,KAAKm4C,aAChC,CAKA,MAAAE,GACE,GAAIr4C,KAAKo4C,iBAAkB,CACzB,IAAI/5C,EAAI,EACR,IAAK,MAAMqB,KAAOM,KAAKi4C,OAAQ,CAC7B,MAAMK,EAAYt4C,KAAKi4C,OAAOv4C,GACZ,IAAP,EAANrB,MAAmBi6C,EAAU76B,uBACzBzd,KAAKi4C,OAAOv4C,KACjBM,KAAKk4C,WAEX,CACF,CACF,CAQA,GAAA3rC,CAAIgsC,EAAKC,EAAa9M,GACpB,MAAMhsC,EAAMg2B,GAAO6iB,EAAKC,EAAa9M,GACrC,OAAOhsC,KAAOM,KAAKi4C,OAASj4C,KAAKi4C,OAAOv4C,GAAO,IACjD,CAQA,GAAAsH,CAAIuxC,EAAKC,EAAa9M,EAAO4M,GAC3B,MAAM54C,EAAMg2B,GAAO6iB,EAAKC,EAAa9M,GACrC1rC,KAAKi4C,OAAOv4C,GAAO44C,IACjBt4C,KAAKk4C,UACT,CASA,OAAAO,CAAQC,GACN14C,KAAKm4C,cAAgBO,EACrB14C,KAAKq4C,QACP,EASF,SAAS3iB,GAAO6iB,EAAKC,EAAa9M,GAEhC,OAAO8M,EAAc,IAAMD,EAAM,KADb7M,EAAQD,GAASC,GAAS,OAEhD,CASO,MAAMiN,GAAS,IAAIX,GCqGnB,SAASY,GAAYxF,EAAOyF,EAAaC,GAC9C,MAAMC,EAAsC,EAC5C,IAAIC,GAAY,EACZC,GAAW,EACXC,GAAS,EAEb,MAAMC,EAAe,CACnBj7B,GAAW66B,EAAK,IAAgB,WAC9BG,GAAS,EACJD,GACHJ,GAEJ,KAyBF,OAtBIE,EAAIR,KAAO,IACbU,GAAW,EACXF,EACGvzC,SACA4zC,MAAK,WACAJ,GACFH,GAEJ,IACCQ,OAAM,SAAUjiC,GACX4hC,IACEE,EACFL,IAEAC,IAGN,KAEFK,EAAaj5C,KAAKge,GAAW66B,EAAK,GAAiBD,IAG9C,WACLE,GAAY,EACZG,EAAa7gC,QAAQ6F,GACvB,CACF,CClPA,IAAIm7B,GAAqB,KAEzB,MAAMC,WAAkB,GAStB,WAAA1sC,CAAYumC,EAAOmF,EAAKnkC,EAAMokC,EAAagB,EAAY9N,GACrDl8B,QAMAxP,KAAKy5C,mBAAqB,KAM1Bz5C,KAAKg3C,OAAS5D,EAMdpzC,KAAK05C,aAAelB,EAMpBx4C,KAAK8xC,QAAU,CAAC,EAMhB9xC,KAAK61C,OAASnK,EAMd1rC,KAAK25C,UAAY,KAMjB35C,KAAK45C,YAAcJ,EAMnBx5C,KAAK2yC,MAAQv+B,EAMbpU,KAAK65C,KAAOtB,EAKZv4C,KAAK85C,QACP,CAKA,gBAAAC,GACE/5C,KAAKg3C,OAAS,IAAIt2B,MACQ,OAAtB1gB,KAAK05C,eACP15C,KAAKg3C,OAAOwB,YAAcx4C,KAAK05C,aAEnC,CAMA,UAAAM,GACE,QAAsBjuC,IAAlB/L,KAAK85C,UAA0B95C,KAAK45C,cAAgB,GAAmB,CACpEN,KACHA,GAAqBtM,GAAsB,EAAG,OAAGjhC,EAAW,CAC1DkuC,oBAAoB,KAGxBX,GAAmB3H,UAAU3xC,KAAKg3C,OAAQ,EAAG,GAC7C,IACEsC,GAAmBY,aAAa,EAAG,EAAG,EAAG,GACzCl6C,KAAK85C,UAAW,CAClB,CAAE,MAAO/7C,GACPu7C,GAAqB,KACrBt5C,KAAK85C,UAAW,CAClB,CACF,CACA,OAAyB,IAAlB95C,KAAK85C,QACd,CAKA,oBAAAK,GACEn6C,KAAK6c,cAAc,GACrB,CAKA,iBAAAu9B,GACEp6C,KAAK45C,YAAc,GACnB55C,KAAKq6C,iBACLr6C,KAAKm6C,sBACP,CAKA,gBAAAG,GACEt6C,KAAK45C,YAAc,GACf55C,KAAK2yC,OACP3yC,KAAKg3C,OAAO9hC,MAAQlV,KAAK2yC,MAAM,GAC/B3yC,KAAKg3C,OAAOltC,OAAS9J,KAAK2yC,MAAM,IAEhC3yC,KAAK2yC,MAAQ,CAAC3yC,KAAKg3C,OAAO9hC,MAAOlV,KAAKg3C,OAAOltC,QAE/C9J,KAAKq6C,iBACLr6C,KAAKm6C,sBACP,CAMA,QAAAzP,CAASC,GAKP,OAJK3qC,KAAKg3C,QACRh3C,KAAK+5C,mBAEP/5C,KAAKu6C,cAAc5P,GACZ3qC,KAAK8xC,QAAQnH,GAAc3qC,KAAK8xC,QAAQnH,GAAc3qC,KAAKg3C,MACpE,CAMA,aAAAnM,CAAcF,GAEZ,OADA3qC,KAAKu6C,cAAc5P,GACZ3qC,KAAK8xC,QAAQnH,GAAcA,EAAa,CACjD,CAKA,aAAAG,GACE,OAAO9qC,KAAK45C,WACd,CAKA,oBAAAhP,GAIE,GAHK5qC,KAAKg3C,QACRh3C,KAAK+5C,oBAEF/5C,KAAKy5C,mBACR,GAAIz5C,KAAKg6C,aAAc,CACrB,MAAM9kC,EAAQlV,KAAK2yC,MAAM,GACnB7oC,EAAS9J,KAAK2yC,MAAM,GACpBpF,EAAUP,GAAsB93B,EAAOpL,GAC7CyjC,EAAQiN,SAAS,EAAG,EAAGtlC,EAAOpL,GAC9B9J,KAAKy5C,mBAAqBlM,EAAQJ,MACpC,MACEntC,KAAKy5C,mBAAqBz5C,KAAKg3C,OAGnC,OAAOh3C,KAAKy5C,kBACd,CAMA,OAAAxO,GACE,OAAOjrC,KAAK2yC,KACd,CAKA,MAAA8H,GACE,OAAOz6C,KAAK65C,IACd,CAKA,IAAAvvC,GACE,GAAItK,KAAK45C,cAAgB,GAAzB,CAGK55C,KAAKg3C,QACRh3C,KAAK+5C,mBAGP/5C,KAAK45C,YAAc,GACnB,IACmC55C,KAAW,OAAEu4C,IAAMv4C,KAAK65C,IAC3D,CAAE,MAAO97C,GACPiC,KAAKo6C,mBACP,CACAp6C,KAAK25C,UAAYf,GACf54C,KAAKg3C,OACLh3C,KAAKs6C,iBAAiBx8B,KAAK9d,MAC3BA,KAAKo6C,kBAAkBt8B,KAAK9d,MAd9B,CAgBF,CAMA,aAAAu6C,CAAc5P,GACZ,IACG3qC,KAAK61C,QACN71C,KAAK8xC,QAAQnH,IACb3qC,KAAK45C,cAAgB,GAErB,OAGF,MAAMxG,EAAQpzC,KAAKg3C,OACb7J,EAAS5qB,SAASC,cAAc,UACtC2qB,EAAOj4B,MAAQxW,KAAK4K,KAAK8pC,EAAMl+B,MAAQy1B,GACvCwC,EAAOrjC,OAASpL,KAAK4K,KAAK8pC,EAAMtpC,OAAS6gC,GAEzC,MAAM+P,EAAMvN,EAAOE,WAAW,MAC9BqN,EAAI/1B,MAAMgmB,EAAYA,GACtB+P,EAAI/I,UAAUyB,EAAO,EAAG,GAExBsH,EAAIC,yBAA2B,WAC/BD,EAAIzF,UAAYxJ,GAASzrC,KAAK61C,QAC9B6E,EAAIF,SAAS,EAAG,EAAGrN,EAAOj4B,MAAQy1B,EAAYwC,EAAOrjC,OAAS6gC,GAE9D+P,EAAIC,yBAA2B,iBAC/BD,EAAI/I,UAAUyB,EAAO,EAAG,GAExBpzC,KAAK8xC,QAAQnH,GAAcwC,CAC7B,CAOA,cAAAkN,GACMr6C,KAAK25C,YACP35C,KAAK25C,YACL35C,KAAK25C,UAAY,KAErB,ECxNF,SAASiB,GAAe1lC,EAAOpL,EAAQ+wC,EAAaC,GAClD,YAAoB/uC,IAAhB8uC,QAA8C9uC,IAAjB+uC,EACxB,CAACD,EAAc3lC,EAAO4lC,EAAehxC,QAE1BiC,IAAhB8uC,EACKA,EAAc3lC,OAEFnJ,IAAjB+uC,EACKA,EAAehxC,EAEjB,CACT,CAOA,MAAMixC,WAAa,GAIjB,WAAAluC,CAAYC,GAMV,MAAM+pB,OAA8B9qB,KALpCe,EAAUA,GAAW,CAAC,GAKE+pB,QAAwB/pB,EAAQ+pB,QAAU,EAK5D1iB,OAAgCpI,IAArBe,EAAQqH,SAAyBrH,EAAQqH,SAAW,EAK/DwQ,OAA0B5Y,IAAlBe,EAAQ6X,MAAsB7X,EAAQ6X,MAAQ,EAKtDilB,OACuB79B,IAA3Be,EAAQ88B,gBAA+B98B,EAAQ88B,eAEjDp6B,MAAM,CACJqnB,QAASA,EACT1iB,SAAUA,EACVwQ,MAAOA,EACPslB,kBAC2Bl+B,IAAzBe,EAAQm9B,aAA6Bn9B,EAAQm9B,aAAe,CAAC,EAAG,GAClEL,eAAgBA,EAChBO,cAAer9B,EAAQq9B,gBAOzBnqC,KAAKg7C,aAA6BjvC,IAAnBe,EAAQ8V,OAAuB9V,EAAQ8V,OAAS,CAAC,GAAK,IAMrE5iB,KAAKi7C,kBAAoB,KAMzBj7C,KAAKk7C,mBACsBnvC,IAAzBe,EAAQquC,aAA6BruC,EAAQquC,aAAe,WAM9Dn7C,KAAKo7C,mBACsBrvC,IAAzBe,EAAQuuC,aAA6BvuC,EAAQuuC,aAAe,WAM9Dr7C,KAAKs7C,mBACsBvvC,IAAzBe,EAAQyuC,aAA6BzuC,EAAQyuC,aAAe,WAM9Dv7C,KAAK05C,kBACqB3tC,IAAxBe,EAAQ0rC,YAA4B1rC,EAAQ0rC,YAAc,KAK5D,MAAMpF,OAAwBrnC,IAAhBe,EAAQisC,IAAoBjsC,EAAQisC,IAAM,KAMxD/4C,KAAKw7C,SAAW1uC,EAAQ2uC,QAKxB,IAAIlD,EAAMzrC,EAAQyrC,IAElB/mC,SAAiBzF,IAARwsC,GAAqBnF,GAAQ,GACtC5hC,GAAQ4hC,GAAUA,GAASpzC,KAAKw7C,SAAW,QAE9BzvC,IAARwsC,GAAoC,IAAfA,EAAIz4C,SAAiBszC,IAC7CmF,EAAsC,EAAQA,KAAO,EAAOnF,IAE9D5hC,OAAezF,IAARwsC,GAAqBA,EAAIz4C,OAAS,EAAG,GAG5C0R,UAEuBzF,IAAlBe,EAAQoI,YAA0CnJ,IAAnBe,EAAQhD,cACtBiC,IAAlBe,EAAQ6X,OAEV,IAMF,MAAM60B,OACYztC,IAAhBe,EAAQyrC,IAAoB,GAAkB,GAgDhD,GA1CAv4C,KAAK61C,YAA2B9pC,IAAlBe,EAAQ4+B,MAAsBoB,GAAQhgC,EAAQ4+B,OAAS,KAMrE1rC,KAAK07C,WDmFF,SAAatI,EAAOmF,EAAKnkC,EAAMokC,EAAagB,EAAY9N,GAC7D,IAAI4M,EAAY,GAAe/rC,IAAIgsC,EAAKC,EAAa9M,GAKrD,OAJK4M,IACHA,EAAY,IAAIiB,GAAUnG,EAAOmF,EAAKnkC,EAAMokC,EAAagB,EAAY9N,GACrE,GAAe1kC,IAAIuxC,EAAKC,EAAa9M,EAAO4M,IAEvCA,CACT,CC1FsB,CAChBlF,EACsB,OACJrnC,IAAlB/L,KAAKw7C,SAAyBx7C,KAAKw7C,SAAW,KAC9Cx7C,KAAK05C,aACLF,EACAx5C,KAAK61C,QAOP71C,KAAK27C,aAA6B5vC,IAAnBe,EAAQnP,OAAuBmP,EAAQnP,OAAS,CAAC,EAAG,GAKnEqC,KAAK47C,mBACsB7vC,IAAzBe,EAAQ+uC,aAA6B/uC,EAAQ+uC,aAAe,WAM9D77C,KAAKkyC,QAAU,KAMflyC,KAAK2yC,WAAyB5mC,IAAjBe,EAAQsH,KAAqBtH,EAAQsH,KAAO,UAKnCrI,IAAlBe,EAAQoI,YAA0CnJ,IAAnBe,EAAQhD,OAAsB,CAC/D,IAAIoL,EAAOpL,EACX,GAAIgD,EAAQsH,MACTc,EAAOpL,GAAUgD,EAAQsH,SACrB,CACL,MAAMg/B,EAAQpzC,KAAK0qC,SAAS,GAC5B,KACE0I,aAAiB0I,mBAChB1I,EAAMmF,KAAOnF,EAAMxS,UAIf,CACL5gC,KAAK+7C,gBAAkBjvC,EACvB,MAAMkvC,EAAS,KAEb,GADAh8C,KAAKsrC,oBAAoB0Q,IACpBh8C,KAAK+7C,gBACR,OAEF,MAAME,EAAYj8C,KAAK07C,WAAWzQ,UAClCjrC,KAAKorC,SACHwP,GACEqB,EAAU,GACVA,EAAU,GACVnvC,EAAQoI,MACRpI,EAAQhD,QAEX,EAGH,YADA9J,KAAKqrC,kBAAkB2Q,EAEzB,CArBE9mC,EAAQk+B,EAAMl+B,MACdpL,EAASspC,EAAMtpC,MAqBnB,MACciC,IAAVmJ,GACFlV,KAAKorC,SACHwP,GAAe1lC,EAAOpL,EAAQgD,EAAQoI,MAAOpI,EAAQhD,QAG3D,CACF,CAOA,KAAAka,GACE,IAAIW,EAAOzP,EAAOpL,EACd9J,KAAK+7C,iBACP7mC,EAAQlV,KAAK+7C,gBAAgB7mC,MAC7BpL,EAAS9J,KAAK+7C,gBAAgBjyC,SAE9B6a,EAAQ3kB,KAAKoqC,WACbzlB,EAAQzU,MAAM4L,QAAQ6I,GAASA,EAAMhlB,QAAUglB,GA0BjD,OAxBc,IAAIo2B,GAAK,CACrBn4B,OAAQ5iB,KAAKg7C,QAAQr7C,QACrBw7C,aAAcn7C,KAAKk7C,cACnBG,aAAcr7C,KAAKo7C,cACnBG,aAAcv7C,KAAKs7C,cACnB5P,MACE1rC,KAAK61C,QAAU71C,KAAK61C,OAAOl2C,MACvBK,KAAK61C,OAAOl2C,QACZK,KAAK61C,aAAU9pC,EACrBysC,YAAax4C,KAAK05C,aAClB+B,QAASz7C,KAAKw7C,SACd79C,OAAQqC,KAAK27C,QAAQh8C,QACrBk8C,aAAc77C,KAAK47C,cACnB/kB,QAAS72B,KAAK43B,aACdgS,eAAgB5pC,KAAKqqC,oBACrBl2B,SAAUnU,KAAKggC,cACfrb,QACAzP,QACApL,SACAsK,KAAqB,OAAfpU,KAAK2yC,MAAiB3yC,KAAK2yC,MAAMhzC,aAAUoM,EACjDwsC,IAAKv4C,KAAKy6C,SACVxQ,aAAcjqC,KAAKsqC,kBAAkB3qC,QACrCwqC,cAAenqC,KAAKuqC,oBAGxB,CAQA,SAAAE,GACE,IAAI7nB,EAAS5iB,KAAKi7C,kBAClB,IAAKr4B,EAAQ,CACXA,EAAS5iB,KAAKg7C,QACd,MAAM5mC,EAAOpU,KAAKirC,UAClB,GACwB,YAAtBjrC,KAAKo7C,eACiB,YAAtBp7C,KAAKs7C,cACL,CACA,IAAKlnC,EACH,OAAO,KAETwO,EAAS5iB,KAAKg7C,QAAQr7C,QACI,YAAtBK,KAAKo7C,gBACPx4B,EAAO,IAAMxO,EAAK,IAEM,YAAtBpU,KAAKs7C,gBACP14B,EAAO,IAAMxO,EAAK,GAEtB,CAEA,GAA0B,YAAtBpU,KAAKk7C,cAA6B,CACpC,IAAK9mC,EACH,OAAO,KAELwO,IAAW5iB,KAAKg7C,UAClBp4B,EAAS5iB,KAAKg7C,QAAQr7C,SAGA,aAAtBK,KAAKk7C,eACiB,gBAAtBl7C,KAAKk7C,gBAELt4B,EAAO,IAAMA,EAAO,GAAKxO,EAAK,IAGR,eAAtBpU,KAAKk7C,eACiB,gBAAtBl7C,KAAKk7C,gBAELt4B,EAAO,IAAMA,EAAO,GAAKxO,EAAK,GAElC,CACApU,KAAKi7C,kBAAoBr4B,CAC3B,CACA,MAAMqnB,EAAejqC,KAAKsqC,kBACpB3lB,EAAQ3kB,KAAKwqC,gBAGnB,MAAO,CACL5nB,EAAO,GAAKqnB,EAAa,GAAKtlB,EAAM,GACpC/B,EAAO,GAAKqnB,EAAa,GAAKtlB,EAAM,GAExC,CASA,SAAAu3B,CAAUt5B,GACR5iB,KAAKg7C,QAAUp4B,EACf5iB,KAAKi7C,kBAAoB,IAC3B,CAOA,QAAAxG,GACE,OAAOz0C,KAAK61C,MACd,CAQA,QAAAnL,CAASC,GACP,OAAO3qC,KAAK07C,WAAWhR,SAASC,EAClC,CAQA,aAAAE,CAAcF,GACZ,OAAO3qC,KAAK07C,WAAW7Q,cAAcF,EACvC,CAKA,YAAAI,GACE,OAAO/qC,KAAK07C,WAAWzQ,SACzB,CAKA,aAAAH,GACE,OAAO9qC,KAAK07C,WAAW5Q,eACzB,CAKA,oBAAAF,GACE,OAAO5qC,KAAK07C,WAAW9Q,sBACzB,CAOA,SAAAI,GACE,GAAIhrC,KAAKkyC,QACP,OAAOlyC,KAAKkyC,QAEd,IAAIv0C,EAASqC,KAAK27C,QAElB,GAA0B,YAAtB37C,KAAK47C,cAA6B,CACpC,MAAMxnC,EAAOpU,KAAKirC,UACZkR,EAAgBn8C,KAAK07C,WAAWzQ,UACtC,IAAK72B,IAAS+nC,EACZ,OAAO,KAETx+C,EAASA,EAAOgC,QAEQ,aAAtBK,KAAK47C,eACiB,gBAAtB57C,KAAK47C,gBAELj+C,EAAO,GAAKw+C,EAAc,GAAK/nC,EAAK,GAAKzW,EAAO,IAG1B,eAAtBqC,KAAK47C,eACiB,gBAAtB57C,KAAK47C,gBAELj+C,EAAO,GAAKw+C,EAAc,GAAK/nC,EAAK,GAAKzW,EAAO,GAEpD,CAEA,OADAqC,KAAKkyC,QAAUv0C,EACRqC,KAAKkyC,OACd,CAOA,MAAAuI,GACE,OAAOz6C,KAAK07C,WAAWjB,QACzB,CAOA,OAAAxP,GACE,OAAQjrC,KAAK2yC,MAAoC3yC,KAAK2yC,MAAjC3yC,KAAK07C,WAAWzQ,SACvC,CAOA,QAAAyJ,GACE,MAAM/vB,EAAQ3kB,KAAKwqC,gBACnB,OAAIxqC,KAAK2yC,MACA3yC,KAAK2yC,MAAM,GAAKhuB,EAAM,GAE3B3kB,KAAK07C,WAAW5Q,iBAAmB,GAC9B9qC,KAAK07C,WAAWzQ,UAAU,GAAKtmB,EAAM,QAD9C,CAIF,CAOA,SAAA9Q,GACE,MAAM8Q,EAAQ3kB,KAAKwqC,gBACnB,OAAIxqC,KAAK2yC,MACA3yC,KAAK2yC,MAAM,GAAKhuB,EAAM,GAE3B3kB,KAAK07C,WAAW5Q,iBAAmB,GAC9B9qC,KAAK07C,WAAWzQ,UAAU,GAAKtmB,EAAM,QAD9C,CAIF,CAQA,QAAAymB,CAASzmB,UACA3kB,KAAK+7C,gBACZvsC,MAAM47B,SAASzmB,EACjB,CAKA,iBAAA0mB,CAAkB5uB,GAChBzc,KAAK07C,WAAWl/B,iBAAiB,GAAkBC,EACrD,CASA,IAAAnS,GACEtK,KAAK07C,WAAWpxC,MAClB,CAKA,mBAAAghC,CAAoB7uB,GAClBzc,KAAK07C,WAAWn+B,oBAAoB,GAAkBd,EACxD,EAGF,UCtfA,MAAM2/B,GAIJ,WAAAvvC,CAAYC,GACVA,EAAUA,GAAW,CAAC,EAMtB9M,KAAKq8C,MAAQvvC,EAAQgjC,KAMrB9vC,KAAK6pC,UAAY/8B,EAAQqH,SAMzBnU,KAAK2pC,gBAAkB78B,EAAQ88B,eAM/B5pC,KAAK8pC,OAASh9B,EAAQ6X,MAMtB3kB,KAAK+pC,YAAcP,QAAyBz9B,IAAlBe,EAAQ6X,MAAsB7X,EAAQ6X,MAAQ,GAMxE3kB,KAAKo3C,MAAQtqC,EAAQmiC,KAMrBjvC,KAAKs8C,WAAaxvC,EAAQyvC,UAM1Bv8C,KAAKw8C,SAAW1vC,EAAQ2vC,QAMxBz8C,KAAK08C,QAAU5vC,EAAQ6vC,OAMvB38C,KAAK48C,cAAgB9vC,EAAQ+vC,aAM7B78C,KAAKgyC,WACcjmC,IAAjBe,EAAQmlC,KACJnlC,EAAQmlC,KACR,IAAI,GAAK,CAACvG,MAzHO,SA+HvB1rC,KAAK88C,eACkB/wC,IAArBe,EAAQiwC,SAAyBjwC,EAAQiwC,SAAWr+C,KAAKkO,GAAK,EAMhE5M,KAAKg9C,gBACmBjxC,IAAtBe,EAAQmwC,UAA0BnwC,EAAQmwC,UAAY,QAMxDj9C,KAAKk9C,YAAcpwC,EAAQqwC,SAM3Bn9C,KAAKyyC,aAA6B1mC,IAAnBe,EAAQ4lC,OAAuB5lC,EAAQ4lC,OAAS,KAM/D1yC,KAAKo9C,cAA+BrxC,IAApBe,EAAQ6yB,QAAwB7yB,EAAQ6yB,QAAU,EAMlE3/B,KAAKq9C,cAA+BtxC,IAApBe,EAAQ8yB,QAAwB9yB,EAAQ8yB,QAAU,EAMlE5/B,KAAKs9C,gBAAkBxwC,EAAQywC,eAC3BzwC,EAAQywC,eACR,KAMJv9C,KAAKw9C,kBAAoB1wC,EAAQ2wC,iBAC7B3wC,EAAQ2wC,iBACR,KAMJz9C,KAAKq+B,cAA+BtyB,IAApBe,EAAQwxB,QAAwB,KAAOxxB,EAAQwxB,OACjE,CAOA,KAAAta,GACE,MAAMW,EAAQ3kB,KAAKoqC,WACnB,OAAO,IAAIgS,GAAK,CACdtM,KAAM9vC,KAAK09C,UACXT,UAAWj9C,KAAK29C,eAChBhB,OAAQ38C,KAAK49C,YACbb,SAAU/8C,KAAK69C,cACfV,SAAUn9C,KAAK89C,cACf3pC,SAAUnU,KAAKggC,cACf4J,eAAgB5pC,KAAKqqC,oBACrB1lB,MAAOzU,MAAM4L,QAAQ6I,GAASA,EAAMhlB,QAAUglB,EAC9CsqB,KAAMjvC,KAAKs3C,UACXiF,UAAWv8C,KAAK+9C,eAChBtB,QAASz8C,KAAKg+C,aACdnB,aAAc78C,KAAKi+C,kBACnBhM,KAAMjyC,KAAK6yC,UAAY7yC,KAAK6yC,UAAU7uB,aAAUjY,EAChD2mC,OAAQ1yC,KAAKizC,YAAcjzC,KAAKizC,YAAYjvB,aAAUjY,EACtD4zB,QAAS3/B,KAAKk+C,aACdte,QAAS5/B,KAAKm+C,aACdZ,eAAgBv9C,KAAKo+C,oBACjBp+C,KAAKo+C,oBAAoBp6B,aACzBjY,EACJ0xC,iBAAkBz9C,KAAKq+C,sBACnBr+C,KAAKq+C,sBAAsBr6B,aAC3BjY,EACJuyB,QAASt+B,KAAKs+C,mBAAgBvyC,GAElC,CAOA,WAAA+xC,GACE,OAAO99C,KAAKk9C,SACd,CAOA,OAAAQ,GACE,OAAO19C,KAAKq8C,KACd,CAOA,WAAAwB,GACE,OAAO79C,KAAK88C,SACd,CAOA,YAAAa,GACE,OAAO39C,KAAKg9C,UACd,CAOA,SAAAY,GACE,OAAO59C,KAAK08C,OACd,CAOA,UAAAwB,GACE,OAAOl+C,KAAKo9C,QACd,CAOA,UAAAe,GACE,OAAOn+C,KAAKq9C,QACd,CAOA,OAAAxK,GACE,OAAO7yC,KAAKgyC,KACd,CAOA,iBAAA3H,GACE,OAAOrqC,KAAK2pC,eACd,CAOA,WAAA3J,GACE,OAAOhgC,KAAK6pC,SACd,CAOA,QAAAO,GACE,OAAOpqC,KAAK8pC,MACd,CAMA,aAAAU,GACE,OAAOxqC,KAAK+pC,WACd,CAOA,SAAAkJ,GACE,OAAOjzC,KAAKyyC,OACd,CAOA,OAAA6E,GACE,OAAOt3C,KAAKo3C,KACd,CAOA,YAAA2G,GACE,OAAO/9C,KAAKs8C,UACd,CAOA,UAAA0B,GACE,OAAOh+C,KAAKw8C,QACd,CAOA,eAAAyB,GACE,OAAOj+C,KAAK48C,aACd,CAOA,iBAAAwB,GACE,OAAOp+C,KAAKs9C,eACd,CAOA,mBAAAe,GACE,OAAOr+C,KAAKw9C,iBACd,CAOA,UAAAc,GACE,OAAOt+C,KAAKq+B,QACd,CAQA,WAAAkgB,CAAYpB,GACVn9C,KAAKk9C,UAAYC,CACnB,CAQA,OAAAqB,CAAQ1O,GACN9vC,KAAKq8C,MAAQvM,CACf,CAQA,WAAA2O,CAAY1B,GACV/8C,KAAK88C,UAAYC,CACnB,CAQA,UAAA2B,CAAW/e,GACT3/B,KAAKo9C,SAAWzd,CAClB,CAQA,UAAAgf,CAAW/e,GACT5/B,KAAKq9C,SAAWzd,CAClB,CAQA,YAAAgf,CAAa3B,GACXj9C,KAAKg9C,WAAaC,CACpB,CAOA,SAAA4B,CAAUlC,GACR38C,KAAK08C,QAAUC,CACjB,CAQA,iBAAAxR,CAAkBvB,GAChB5pC,KAAK2pC,gBAAkBC,CACzB,CAQA,OAAAsJ,CAAQjB,GACNjyC,KAAKgyC,MAAQC,CACf,CAQA,WAAA/S,CAAY/qB,GACVnU,KAAK6pC,UAAY11B,CACnB,CAQA,QAAAi3B,CAASzmB,GACP3kB,KAAK8pC,OAASnlB,EACd3kB,KAAK+pC,YAAcP,QAAiBz9B,IAAV4Y,EAAsBA,EAAQ,EAC1D,CAQA,SAAA4uB,CAAUb,GACR1yC,KAAKyyC,QAAUC,CACjB,CAQA,OAAAkF,CAAQ3I,GACNjvC,KAAKo3C,MAAQnI,CACf,CAQA,YAAA6P,CAAavC,GACXv8C,KAAKs8C,WAAaC,CACpB,CAQA,UAAAwC,CAAWtC,GACTz8C,KAAKw8C,SAAWC,CAClB,CAQA,eAAAuC,CAAgBnC,GACd78C,KAAK48C,cAAgBC,CACvB,CAQA,iBAAAoC,CAAkBhN,GAChBjyC,KAAKs9C,gBAAkBrL,CACzB,CAQA,mBAAAiN,CAAoBxM,GAClB1yC,KAAKw9C,kBAAoB9K,CAC3B,CAQA,UAAAyM,CAAW7gB,GACTt+B,KAAKq+B,SAAWC,CAClB,EAGF,UCvlBA,IAAI8gB,GAAW,EACR,MACMC,GAAc,GAAKD,KACnBE,GAAa,GAAKF,KAClBG,GAAa,GAAKH,KAClBI,GAAY,GAAKJ,KACjBK,GAAkB,GAAKL,KACvBM,GAAUhhD,KAAKC,IAAI,EADIygD,GACW,EAEzCO,GAAY,CAChB,CAACN,IAAc,UACf,CAACC,IAAa,SACd,CAACC,IAAa,SACd,CAACC,IAAY,QACb,CAACC,IAAkB,YAGfG,GAAaxzC,OAAO3M,KAAKkgD,IAAWpY,IAAIoF,QAAQjhC,KAAK4P,IAOpD,SAASukC,GAAS5+C,GACvB,MAAM6+C,EAAQ,GACd,IAAK,MAAMC,KAAaH,IACL3+C,GAkBe++C,EAlBTD,MAmBKC,GAlB1BF,EAAM5/C,KAAKy/C,GAAUI,IAiBpB,IAA6BC,EAdlC,OAAqB,IAAjBF,EAAMhgD,OACD,UAELggD,EAAMhgD,OAAS,EACVggD,EAAMjgD,KAAK,QAEbigD,EAAMngD,MAAM,GAAI,GAAGE,KAAK,MAAQ,QAAUigD,EAAMA,EAAMhgD,OAAS,EACxE,CAgBO,SAASmgD,GAAaC,EAASC,GACpC,SAAUD,EAAUC,EACtB,CAeO,MAAMC,GAKX,WAAAvzC,CAAY5L,EAAMpC,GAChBmB,KAAKiB,KAAOA,EACZjB,KAAKnB,MAAQA,CACf,EAGK,MAAMwhD,GAMX,WAAAxzC,CAAY5L,EAAMq/C,KAAahnC,GAC7BtZ,KAAKiB,KAAOA,EACZjB,KAAKsgD,SAAWA,EAChBtgD,KAAKsZ,KAAOA,CACd,EAgBK,SAASinC,KACd,MAAO,CACLC,UAAW,IAAIC,IACfnwB,WAAY,IAAImwB,IAEpB,CAWO,SAASC,GAAMC,EAASpT,GAC7B,cAAeoT,GACb,IAAK,UACH,OAAO,IAAIP,GAAkBf,GAAasB,GAE5C,IAAK,SACH,OAAO,IAAIP,GAAkBd,GAAYqB,GAE3C,IAAK,SACH,OAAO,IAAIP,GAAkBb,GAAYoB,GAO7C,IAAKzwC,MAAM4L,QAAQ6kC,GACjB,MAAM,IAAI37C,MAAM,oDAGlB,GAAuB,IAAnB27C,EAAQ7gD,OACV,MAAM,IAAIkF,MAAM,oBAGlB,GAA0B,iBAAf27C,EAAQ,GACjB,OAoNJ,SAA6BA,EAASpT,GACpC,MAAM+S,EAAWK,EAAQ,GAEnBC,EAASC,GAAQP,GACvB,IAAKM,EACH,MAAM,IAAI57C,MAAM,qBAAqBs7C,KAEvC,OAAOM,EAAOD,EAASpT,EACzB,CA5NWuT,CAAoBH,EAASpT,GAGtC,IAAK,MAAMwT,KAAQJ,EACjB,GAAoB,iBAATI,EACT,MAAM,IAAI/7C,MAAM,gCAIpB,IAAI/D,EAAOw+C,GAKX,OAJuB,IAAnBkB,EAAQ7gD,QAAmC,IAAnB6gD,EAAQ7gD,SAClCmB,GAAQu+C,IAGH,IAAIY,GAAkBn/C,EAAM0/C,EACrC,CAKO,MAAMK,GAAM,CACjBrU,OAAQ,SACR1mC,OAAQ,SACRg7C,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,IACLC,WAAY,aACZC,MAAO,KACPC,SAAU,KACVC,YAAa,IACbC,qBAAsB,KACtBC,SAAU,IACVC,kBAAmB,KACnBC,SAAU,IACVC,OAAQ,IACRC,IAAK,IACLC,SAAU,IACVC,MAAO,QACPC,IAAK,IACLC,IAAK,IACLC,IAAK,MACLC,MAAO,QACPC,KAAM,OACNC,MAAO,QACPC,IAAK,MACLC,IAAK,MACLC,KAAM,OACNC,KAAM,OACNC,MAAO,SAUH/B,GAAU,CACd,CAACG,GAAIrU,QAASkW,GAAaC,GAAS,EAAGrkD,IAAUihD,IAAUJ,IAC3D,CAAC0B,GAAI/6C,QAAS48C,GAAaC,GAAS,EAAGrkD,IAAUihD,IAAUH,IAC3D,CAACyB,GAAIC,KAAM4B,IA2Cb,SAAqBlC,EAASpT,GAC5B,GAAuB,IAAnBoT,EAAQ7gD,OACV,MAAM,IAAIkF,MAAM,yCAElB,MAAM+9C,EAAMrC,GAAMC,EAAQ,GAAIpT,GAC9B,KAAMwV,aAAe3C,IACnB,MAAM,IAAIp7C,MAAM,iDAElB,GAAyB,iBAAd+9C,EAAIlkD,MACb,MAAM,IAAImG,MAAM,gDAGlB,OADAuoC,EAAQjd,WAAWzY,IAAIkrC,EAAIlkD,OACpB,CAACkkD,EACV,GAxDuCrD,IACrC,CAACsB,GAAIE,KAAM2B,IA4Db,SAAqBlC,EAASpT,GAC5B,GAAuB,IAAnBoT,EAAQ7gD,OACV,MAAM,IAAIkF,MAAM,yCAElB,MAAM+9C,EAAMrC,GAAMC,EAAQ,GAAIpT,GAC9B,KAAMwV,aAAe3C,IACnB,MAAM,IAAIp7C,MAAM,iDAElB,GAAyB,iBAAd+9C,EAAIlkD,MACb,MAAM,IAAImG,MAAM,gDAGlB,OADAuoC,EAAQiT,UAAU3oC,IAAIkrC,EAAIlkD,OACnB,CAACkkD,EACV,GAzEuCrD,IACrC,CAACsB,GAAIM,YAAauB,IA6EpB,SAAoBlC,EAASpT,GAC3B,MAAMyV,EAAYrC,EAAQ,GAC1B,GAAuB,IAAnBA,EAAQ7gD,OACV,MAAM,IAAIkF,MAAM,6BAA6Bg+C,eAE/C,MAAO,EACT,GAnF6C1D,IAC3C,CAAC0B,GAAIG,KAAM0B,GAAaC,GAAS,EAAGrkD,IAAU4gD,IAAcA,IAC5D,CAAC2B,GAAII,KAAMyB,GAAaC,GAAS,EAAGrkD,IAAU4gD,IAAcA,IAC5D,CAAC2B,GAAIK,KAAMwB,GAAaC,GAAS,EAAG,EAAGzD,IAAcA,IACrD,CAAC2B,GAAIO,OAAQsB,GAAaC,GAAS,EAAG,EAAGpD,IAAUL,IACnD,CAAC2B,GAAIQ,UAAWqB,GAAaC,GAAS,EAAG,EAAGpD,IAAUL,IACtD,CAAC2B,GAAIS,aAAcoB,GAAaC,GAAS,EAAG,EAAGpD,IAAUL,IACzD,CAAC2B,GAAIU,sBAAuBmB,GAC1BC,GAAS,EAAG,EAAGpD,IACfL,IAEF,CAAC2B,GAAIW,UAAWkB,GAAaC,GAAS,EAAG,EAAGpD,IAAUL,IACtD,CAAC2B,GAAIY,mBAAoBiB,GAAaC,GAAS,EAAG,EAAGpD,IAAUL,IAC/D,CAAC2B,GAAIa,UAAWgB,GAAaC,GAAS,EAAGrkD,IAAU6gD,IAAaA,IAChE,CAAC0B,GAAIc,QAASe,GAAaC,GAAS,EAAG,EAAGxD,IAAaA,IACvD,CAAC0B,GAAIe,KAAMc,GAAaC,GAAS,EAAGrkD,IAAU6gD,IAAaA,IAC3D,CAAC0B,GAAIgB,UAAWa,GAAaC,GAAS,EAAG,EAAGxD,IAAaA,IACzD,CAAC0B,GAAIiB,OAAQY,GAAaC,GAAS,EAAG,EAAGxD,IAAaA,IACtD,CAAC0B,GAAIkB,KAAMW,GAAaC,GAAS,EAAG,EAAGxD,IAAaA,IACpD,CAAC0B,GAAImB,KAAMU,GAAaC,GAAS,EAAG,EAAGxD,IAAaA,IACpD,CAAC0B,GAAIoB,KAAMS,GAAaC,GAAS,EAAG,EAAGxD,IAAaA,IACpD,CAAC0B,GAAIqB,OAAQQ,GAAaC,GAAS,EAAG,EAAGxD,IAAaA,IACtD,CAAC0B,GAAIsB,MAAOO,GAAaC,GAAS,EAAG,EAAGxD,IAAaA,IACrD,CAAC0B,GAAIuB,OAAQM,GAAaC,GAAS,EAAG,EAAGxD,IAAaA,IACtD,CAAC0B,GAAIwB,KAAMK,GAAaC,GAAS,EAAG,EAAGxD,IAAaA,IACpD,CAAC0B,GAAIyB,KAAMI,GAAaC,GAAS,EAAG,EAAGxD,IAAaA,IACpD,CAAC0B,GAAI0B,MAAOG,GAAaC,GAAS,EAAG,EAAGxD,IAAaA,IACrD,CAAC0B,GAAI2B,MAAOE,GAAaC,GAAS,EAAG,EAAGxD,IAAaA,IACrD,CAAC0B,GAAI4B,OAAQC,GACXC,GAAS,EAAGrkD,IAAU8gD,GAAaD,IACnCI,KA6DJ,SAASoD,GAASG,EAASC,EAASC,GAClC,OAAO,SAAUxC,EAASpT,GACxB,MAAMyV,EAAYrC,EAAQ,GACpByC,EAAWzC,EAAQ7gD,OAAS,EAClC,GAAImjD,IAAYC,GACd,GAAIE,IAAaH,EAAS,CAExB,MAAM,IAAIj+C,MACR,YAAYi+C,aAFa,IAAZA,EAAgB,GAAK,qBAEqBD,UAAkBI,IAE7E,OACK,GAAIA,EAAWH,GAAWG,EAAWF,EAC1C,MAAM,IAAIl+C,MACR,YAAYi+C,QAAcC,6BAAmCF,UAAkBI,KAOnF,MAAM9pC,EAAO,IAAIpJ,MAAMkzC,GACvB,IAAK,IAAI/kD,EAAI,EAAGA,EAAI+kD,IAAY/kD,EAAG,CACjC,MAAMglD,EAAa3C,GAAMC,EAAQtiD,EAAI,GAAIkvC,GACzC,IAAK0S,GAAakD,EAASE,EAAWpiD,MAAO,CAC3C,MAAMqiD,EAAUzD,GAASsD,GACnBI,EAAe1D,GAASwD,EAAWpiD,MACzC,MAAM,IAAI+D,MACR,gCAAgC3G,QAAQ2kD,qBAC5BM,kBAAwBC,IAExC,CACAjqC,EAAKjb,GAAKglD,CACZ,CAEA,OAAO/pC,CACT,CACF,CAOA,SAASupC,GAAaW,EAAcC,GAClC,OAAO,SAAU9C,EAASpT,GACxB,MAAM+S,EAAWK,EAAQ,GACnBrnC,EAAOkqC,EAAa7C,EAASpT,GACnC,OAAO,IAAI8S,GAAeoD,EAAYnD,KAAahnC,EACrD,CACF,CCnSO,SAASoqC,GAAgB/C,EAAS1/C,EAAMssC,GAC7C,MAAM8V,EAAa3C,GAAMC,EAASpT,GAClC,IAAK0S,GAAah/C,EAAMoiD,EAAWpiD,MAAO,CACxC,MAAM0iD,EAAW9D,GAAS5+C,GACpB2iD,EAAS/D,GAASwD,EAAWpiD,MACnC,MAAM,IAAI+D,MACR,qCAAqC2+C,UAAiBC,IAE1D,CACA,OAAOC,GAAkBR,EAAY9V,EACvC,CAOA,SAASsW,GAAkBR,EAAY9V,GACrC,GAAI8V,aAAsBjD,GACxB,OAAO,WACL,OAAOiD,EAAWxkD,KACpB,EAEF,MAAMyhD,EAAW+C,EAAW/C,SAC5B,OAAQA,GACN,KAAKU,GAAIrU,OACT,KAAKqU,GAAI/6C,OACP,OAqDN,SAAoCo9C,EAAY9V,GAC9C,MAAMtsC,EAAOoiD,EAAW/C,SAClBxgD,EAASujD,EAAW/pC,KAAKxZ,OAEzBwZ,EAAO,IAAIpJ,MAAMpQ,GACvB,IAAK,IAAIzB,EAAI,EAAGA,EAAIyB,IAAUzB,EAC5Bib,EAAKjb,GAAKwlD,GAAkBR,EAAW/pC,KAAKjb,GAAIkvC,GAElD,OAAQtsC,GACN,KAAK+/C,GAAIrU,OACT,KAAKqU,GAAI/6C,OACP,OAAQsnC,IACN,IAAK,IAAIlvC,EAAI,EAAGA,EAAIyB,IAAUzB,EAAG,CAC/B,MAAMQ,EAAQya,EAAKjb,GAAGkvC,GACtB,UAAW1uC,IAAUoC,EACnB,OAAOpC,CAEX,CACA,MAAM,IAAImG,MAAM,sCAAsC/D,IAAO,EAGjE,QACE,MAAM,IAAI+D,MAAM,kCAAkC/D,KAGxD,CA9Ea6iD,CAA2BT,EAAY9V,GAEhD,KAAKyT,GAAIC,IACT,KAAKD,GAAIE,IACP,OAiFN,SAAmCmC,EAAY9V,GAC7C,MAAMwW,EAAiBV,EAAW/pC,KAAK,GACvC,KAAMyqC,aAA0B3D,IAC9B,MAAM,IAAIp7C,MAAM,yBAElB,MAAMuM,EAAOwyC,EAAellD,MAC5B,GAAoB,iBAAT0S,EACT,MAAM,IAAIvM,MAAM,wBAElB,OAAQq+C,EAAW/C,UACjB,KAAKU,GAAIC,IACP,OAAQ1T,GAAYA,EAAQjd,WAAW/e,GAEzC,KAAKyvC,GAAIE,IACP,OAAQ3T,GAAYA,EAAQiT,UAAUjvC,GAExC,QACE,MAAM,IAAIvM,MAAM,iCAAiCq+C,EAAW/C,YAGlE,CArGa0D,CAA0BX,GAEnC,KAAKrC,GAAIM,WACP,OAAQ/T,GAAYA,EAAQ79B,WAE9B,KAAKsxC,GAAIG,IACT,KAAKH,GAAII,IACT,KAAKJ,GAAIK,IACP,OAsIN,SAAkCgC,EAAY9V,GAC5C,MAAM0W,EAAKZ,EAAW/C,SAChBxgD,EAASujD,EAAW/pC,KAAKxZ,OAEzBwZ,EAAO,IAAIpJ,MAAMpQ,GACvB,IAAK,IAAIzB,EAAI,EAAGA,EAAIyB,IAAUzB,EAC5Bib,EAAKjb,GAAKwlD,GAAkBR,EAAW/pC,KAAKjb,GAAIkvC,GAElD,OAAQ0W,GACN,KAAKjD,GAAIG,IACP,OAAQ5T,IACN,IAAK,IAAIlvC,EAAI,EAAGA,EAAIyB,IAAUzB,EAC5B,GAAIib,EAAKjb,GAAGkvC,GACV,OAAO,EAGX,OAAO,CAAK,EAGhB,KAAKyT,GAAII,IACP,OAAQ7T,IACN,IAAK,IAAIlvC,EAAI,EAAGA,EAAIyB,IAAUzB,EAC5B,IAAKib,EAAKjb,GAAGkvC,GACX,OAAO,EAGX,OAAO,CAAI,EAGf,KAAKyT,GAAIK,IACP,OAAQ9T,IAAaj0B,EAAK,GAAGi0B,GAE/B,QACE,MAAM,IAAIvoC,MAAM,gCAAgCi/C,KAGtD,CA1KaC,CAAyBb,EAAY9V,GAE9C,KAAKyT,GAAIO,MACT,KAAKP,GAAIQ,SACT,KAAKR,GAAIW,SACT,KAAKX,GAAIY,kBACT,KAAKZ,GAAIS,YACT,KAAKT,GAAIU,qBACP,OA4FN,SAAqC2B,EAAY9V,GAC/C,MAAM0W,EAAKZ,EAAW/C,SAChB1P,EAAOiT,GAAkBR,EAAW/pC,KAAK,GAAIi0B,GAC7C7f,EAAQm2B,GAAkBR,EAAW/pC,KAAK,GAAIi0B,GACpD,OAAQ0W,GACN,KAAKjD,GAAIO,MACP,OAAQhU,GAAYqD,EAAKrD,KAAa7f,EAAM6f,GAE9C,KAAKyT,GAAIQ,SACP,OAAQjU,GAAYqD,EAAKrD,KAAa7f,EAAM6f,GAE9C,KAAKyT,GAAIW,SACP,OAAQpU,GAAYqD,EAAKrD,GAAW7f,EAAM6f,GAE5C,KAAKyT,GAAIY,kBACP,OAAQrU,GAAYqD,EAAKrD,IAAY7f,EAAM6f,GAE7C,KAAKyT,GAAIS,YACP,OAAQlU,GAAYqD,EAAKrD,GAAW7f,EAAM6f,GAE5C,KAAKyT,GAAIU,qBACP,OAAQnU,GAAYqD,EAAKrD,IAAY7f,EAAM6f,GAE7C,QACE,MAAM,IAAIvoC,MAAM,mCAAmCi/C,KAGzD,CAvHaE,CAA4Bd,EAAY9V,GAEjD,KAAKyT,GAAIa,SACT,KAAKb,GAAIc,OACT,KAAKd,GAAIe,IACT,KAAKf,GAAIgB,SACT,KAAKhB,GAAIiB,MACT,KAAKjB,GAAIkB,IACT,KAAKlB,GAAImB,IACT,KAAKnB,GAAIoB,IACT,KAAKpB,GAAIqB,MACT,KAAKrB,GAAIsB,KACT,KAAKtB,GAAIuB,MACT,KAAKvB,GAAIwB,IACT,KAAKxB,GAAIyB,IACT,KAAKzB,GAAI0B,KACT,KAAK1B,GAAI2B,KACP,OAwJN,SAAkCU,EAAY9V,GAC5C,MAAM0W,EAAKZ,EAAW/C,SAChBxgD,EAASujD,EAAW/pC,KAAKxZ,OAEzBwZ,EAAO,IAAIpJ,MAAMpQ,GACvB,IAAK,IAAIzB,EAAI,EAAGA,EAAIyB,IAAUzB,EAC5Bib,EAAKjb,GAAKwlD,GAAkBR,EAAW/pC,KAAKjb,GAAIkvC,GAElD,OAAQ0W,GACN,KAAKjD,GAAIa,SACP,OAAQtU,IACN,IAAI1uC,EAAQ,EACZ,IAAK,IAAIR,EAAI,EAAGA,EAAIyB,IAAUzB,EAC5BQ,GAASya,EAAKjb,GAAGkvC,GAEnB,OAAO1uC,CAAK,EAGhB,KAAKmiD,GAAIc,OACP,OAAQvU,GAAYj0B,EAAK,GAAGi0B,GAAWj0B,EAAK,GAAGi0B,GAEjD,KAAKyT,GAAIe,IACP,OAAQxU,IACN,IAAI1uC,EAAQ,EACZ,IAAK,IAAIR,EAAI,EAAGA,EAAIyB,IAAUzB,EAC5BQ,GAASya,EAAKjb,GAAGkvC,GAEnB,OAAO1uC,CAAK,EAGhB,KAAKmiD,GAAIgB,SACP,OAAQzU,GAAYj0B,EAAK,GAAGi0B,GAAWj0B,EAAK,GAAGi0B,GAEjD,KAAKyT,GAAIiB,MACP,OAAQ1U,IACN,MAAM1uC,EAAQya,EAAK,GAAGi0B,GAChBxmC,EAAMuS,EAAK,GAAGi0B,GACpB,GAAI1uC,EAAQkI,EACV,OAAOA,EAET,MAAMmC,EAAMoQ,EAAK,GAAGi0B,GACpB,OAAI1uC,EAAQqK,EACHA,EAEFrK,CAAK,EAGhB,KAAKmiD,GAAIkB,IACP,OAAQ3U,GAAYj0B,EAAK,GAAGi0B,GAAWj0B,EAAK,GAAGi0B,GAEjD,KAAKyT,GAAImB,IACP,OAAQ5U,GAAY7uC,KAAKC,IAAI2a,EAAK,GAAGi0B,GAAUj0B,EAAK,GAAGi0B,IAEzD,KAAKyT,GAAIoB,IACP,OAAQ7U,GAAY7uC,KAAKM,IAAIsa,EAAK,GAAGi0B,IAEvC,KAAKyT,GAAIqB,MACP,OAAQ9U,GAAY7uC,KAAKQ,MAAMoa,EAAK,GAAGi0B,IAEzC,KAAKyT,GAAIsB,KACP,OAAQ/U,GAAY7uC,KAAK4K,KAAKgQ,EAAK,GAAGi0B,IAExC,KAAKyT,GAAIuB,MACP,OAAQhV,GAAY7uC,KAAK4X,MAAMgD,EAAK,GAAGi0B,IAEzC,KAAKyT,GAAIwB,IACP,OAAQjV,GAAY7uC,KAAK8V,IAAI8E,EAAK,GAAGi0B,IAEvC,KAAKyT,GAAIyB,IACP,OAAQlV,GAAY7uC,KAAK4V,IAAIgF,EAAK,GAAGi0B,IAEvC,KAAKyT,GAAI0B,KACP,OAAe,IAAX5iD,EACMytC,GAAY7uC,KAAKsY,MAAMsC,EAAK,GAAGi0B,GAAUj0B,EAAK,GAAGi0B,IAEnDA,GAAY7uC,KAAK2R,KAAKiJ,EAAK,GAAGi0B,IAExC,KAAKyT,GAAI2B,KACP,OAAQpV,GAAY7uC,KAAKuK,KAAKqQ,EAAK,GAAGi0B,IAExC,QACE,MAAM,IAAIvoC,MAAM,gCAAgCi/C,KAGtD,CA5OaG,CAAyBf,EAAY9V,GAE9C,KAAKyT,GAAI4B,MACP,OAgPN,SAAgCS,EAAY9V,GAC1C,MAAMztC,EAASujD,EAAW/pC,KAAKxZ,OACzBwZ,EAAO,IAAIpJ,MAAMpQ,GACvB,IAAK,IAAIzB,EAAI,EAAGA,EAAIyB,IAAUzB,EAC5Bib,EAAKjb,GAAKwlD,GAAkBR,EAAW/pC,KAAKjb,GAAIkvC,GAElD,OAAQA,IACN,MAAM1uC,EAAQya,EAAK,GAAGi0B,GACtB,IAAK,IAAIlvC,EAAI,EAAGA,EAAIyB,EAAQzB,GAAK,EAC/B,GAAIQ,IAAUya,EAAKjb,GAAGkvC,GACpB,OAAOj0B,EAAKjb,EAAI,GAAGkvC,GAGvB,OAAOj0B,EAAKxZ,EAAS,GAAGytC,EAAQ,CAEpC,CA/Pa8W,CAAuBhB,EAAY9V,GAE5C,QACE,MAAM,IAAIvoC,MAAM,wBAAwBs7C,KAG9C,CC3FA,SAASgE,GAAO/W,GACd,OAAO,CACT,CAUO,SAASgX,GAAqBC,GACnC,MACMC,EA4DD,SAAsBD,EAAOjX,GAClC,MAAMztC,EAAS0kD,EAAM1kD,OAKf4kD,EAAgB,IAAIx0C,MAAMpQ,GAEhC,IAAK,IAAIzB,EAAI,EAAGA,EAAIyB,IAAUzB,EAAG,CAC/B,MAAMsmD,EAAOH,EAAMnmD,GACb8jC,EACJ,WAAYwiB,EACRjB,GAAgBiB,EAAKxiB,OAAQkd,GAAa9R,GAC1C+W,GAKN,IAAIM,EACJ,GAAI10C,MAAM4L,QAAQ6oC,EAAKliC,OAAQ,CAC7B,MAAMoiC,EAAcF,EAAKliC,MAAM3iB,OAC/B8kD,EAAS,IAAI10C,MAAM20C,GACnB,IAAK,IAAIliC,EAAI,EAAGA,EAAIkiC,IAAeliC,EACjCiiC,EAAOjiC,GAAKmiC,GAAWH,EAAKliC,MAAME,GAAI4qB,EAE1C,MACEqX,EAAS,CAACE,GAAWH,EAAKliC,MAAO8qB,IAGnCmX,EAAcrmD,GAAK,CAAC8jC,SAAQyiB,SAC9B,CAEA,OAAO,SAAUrX,GAIf,MAAMqX,EAAS,GAEf,IAAIG,GAAc,EAClB,IAAK,IAAI1mD,EAAI,EAAGA,EAAIyB,IAAUzB,EAAG,CAE/B,IAAK2mD,EADmBN,EAAcrmD,GAAG8jC,QACpBoL,MAGjBiX,EAAMnmD,GAAG4mD,OAAQF,GAArB,CAGAA,GAAc,EACd,IAAK,MAAMG,KAAkBR,EAAcrmD,GAAGumD,OAAQ,CACpD,MAAMniC,EAAQyiC,EAAe3X,GACxB9qB,GAGLmiC,EAAO1kD,KAAKuiB,EACd,CARA,CASF,CAEA,OAAOmiC,CACT,CACF,CAvHoBO,CAAaX,EADRjE,MAEjB6E,ED1CC,CACL5E,UAAW,CAAC,EACZlwB,WAAY,CAAC,EACb5gB,WAAYlR,KCwCd,OAAO,SAAUic,EAAS/K,GAGxB,OAFA01C,EAAkB90B,WAAa7V,EAAQ6E,wBACvC8lC,EAAkB11C,WAAaA,EACxB+0C,EAAUW,EACnB,CACF,CAUO,SAASC,GAA0BC,GACxC,MAAMC,EAAiBhF,KACjBzgD,EAASwlD,EAAWxlD,OAKpB0lD,EAAa,IAAIt1C,MAAMpQ,GAC7B,IAAK,IAAIzB,EAAI,EAAGA,EAAIyB,IAAUzB,EAC5BmnD,EAAWnnD,GAAKymD,GAAWQ,EAAWjnD,GAAIknD,GAE5C,MAAMH,EDrEC,CACL5E,UAAW,CAAC,EACZlwB,WAAY,CAAC,EACb5gB,WAAYlR,KCuERomD,EAAS,IAAI10C,MAAMpQ,GAEzB,OAAO,SAAU2a,EAAS/K,GACxB01C,EAAkB90B,WAAa7V,EAAQ6E,wBACvC8lC,EAAkB11C,WAAaA,EAC/B,IAAK,IAAIrR,EAAI,EAAGA,EAAIyB,IAAUzB,EAC5BumD,EAAOvmD,GAAKmnD,EAAWnnD,GAAG+mD,GAE5B,OAAOR,CACT,CACF,CAwFO,SAASE,GAAWW,EAAWlY,GACpC,MAAMmY,EAAeC,GAAUF,EAAW,GAAIlY,GACxCqY,EAAiBC,GAAYJ,EAAW,GAAIlY,GAC5CuY,EAgMR,SAAmBL,EAAWlY,GAC5B,MAAMwY,EAAS,QAMTC,EAAgBC,GAAgBR,EAAWM,EAAS,QAASxY,GACnE,IAAKyY,EACH,OAAO,KAGT,MAAMN,EAAeC,GAAUF,EAAWM,EAAQxY,GAE5C2Y,EAAyBP,GAC7BF,EACAM,EAAS,cACTxY,GAGIqY,EAAiBC,GAAYJ,EAAWM,EAAQxY,GAEhD4Y,EAA2BN,GAC/BJ,EACAM,EAAS,cACTxY,GAGI6Y,EAAeH,GAAgBR,EAAWM,EAAS,OAAQxY,GAE3D8Y,EAAmBC,GACvBb,EACAM,EAAS,YACTxY,GAGIgZ,EAAkBD,GACtBb,EACAM,EAAS,WACTxY,GAGIiZ,EAAkBF,GACtBb,EACAM,EAAS,WACTxY,GAGIkZ,EAAmBC,GACvBjB,EACAM,EAAS,WACTxY,GAGIoZ,EAAoBV,GACxBR,EACAM,EAAS,YACTxY,GAGIqZ,EAAiBN,GAAgBb,EAAWM,EAAS,SAAUxY,GAE/DsZ,EAAgBC,GAAkBrB,EAAWM,EAAS,QAASxY,GAE/DwZ,EAAyBL,GAC7BjB,EACAM,EAAS,mBACTxY,GAGIyZ,EAAmBV,GACvBb,EACAM,EAAS,WACTxY,GAGI0Z,EAAgBhB,GAAgBR,EAAWM,EAAS,QAASxY,GAE7D2Z,EAAkBjB,GACtBR,EACAM,EAAS,UACTxY,GAGI4Z,EAAmBlB,GACvBR,EACAM,EAAS,WACTxY,GAGI6Z,EAAkBC,GACtB5B,EACAM,EAAS,UACTxY,GAGI0B,EAAO,IAAI,GAAK,CAAC,GACvB,OAAO,SAAU1B,GAuCf,GAtCA0B,EAAK2I,QAAQoO,EAAczY,IAEvBmY,GACFzW,EAAKiE,QAAQwS,EAAanY,IAGxB2Y,GACFjX,EAAKgQ,kBAAkBiH,EAAuB3Y,IAG5CqY,GACF3W,EAAKsE,UAAUqS,EAAerY,IAG5B4Y,GACFlX,EAAKiQ,oBAAoBiH,EAAyB5Y,IAGhD6Y,GACFnX,EAAKuP,QAAQ4H,EAAa7Y,IAGxB8Y,GACFpX,EAAKwP,YAAY4H,EAAiB9Y,IAGhCgZ,GACFtX,EAAKyP,WAAW6H,EAAgBhZ,IAG9BiZ,GACFvX,EAAK0P,WAAW6H,EAAgBjZ,IAG9BkZ,GACFxX,EAAKsP,YAAYkI,EAAiBlZ,IAGhCoZ,EAAmB,CACrB,MAAM1J,EAAY0J,EAAkBpZ,GACpC,GAAkB,UAAd0P,GAAuC,SAAdA,EAC3B,MAAM,IAAIj4C,MAAM,6CAElBiqC,EAAK2P,aAAa3B,EACpB,CAkBA,GAhBI2J,GACF3X,EAAK4P,UAAU+H,EAAerZ,IAG5BsZ,GACF5X,EAAK7D,SAASyb,EAActZ,IAG1BwZ,GACF9X,EAAK9D,kBAAkB4b,EAAuBxZ,IAG5CyZ,GACF/X,EAAK/P,YAAY8nB,EAAiBzZ,IAGhC0Z,EAAe,CACjB,MAAM1K,EAAY0K,EAAc1Z,GAChC,GACgB,SAAdgP,GACc,WAAdA,GACc,UAAdA,GACc,QAAdA,GACc,UAAdA,EAEA,MAAM,IAAIv3C,MACR,8DAGJiqC,EAAK6P,aAAavC,EACpB,CAEA,GAAI2K,EAAiB,CACnB,MAAMzK,EAAUyK,EAAgB3Z,GAChC,GAAgB,SAAZkP,GAAkC,UAAZA,GAAmC,WAAZA,EAC/C,MAAM,IAAIz3C,MAAM,oDAElBiqC,EAAK8P,WAAWtC,EAClB,CAEA,GAAI0K,EAAkB,CACpB,MAAMtK,EAAesK,EAAiB5Z,GACtC,GACmB,WAAjBsP,GACiB,QAAjBA,GACiB,WAAjBA,GACiB,eAAjBA,GACiB,YAAjBA,EAEA,MAAM,IAAI73C,MACR,0EAGJiqC,EAAK+P,gBAAgBnC,EACvB,CAMA,OAJIuK,GACFnY,EAAKkQ,WAAWiI,EAAgB7Z,IAG3B0B,CACT,CACF,CA9YuBqY,CAAU7B,EAAWlY,GACpCga,EAwZR,SAAoB9B,EAAWlY,GAC7B,GAAI,aAAckY,EAChB,OAmBJ,SAAmBA,EAAWlY,GAC5B,MAAMwY,EAAS,QAGTyB,EAAUzB,EAAS,MACnBxN,EAAMkP,GAAchC,EAAU+B,GAAUA,GAGxCE,EAAiBC,GACrBlC,EACAM,EAAS,SACTxY,GAGIsZ,EAAgBC,GAAkBrB,EAAWM,EAAS,QAASxY,GAE/Dqa,EAAkBtB,GACtBb,EACAM,EAAS,UACTxY,GAGIsa,EAAuBF,GAC3BlC,EACAM,EAAS,eACTxY,GAGIyZ,EAAmBV,GACvBb,EACAM,EAAS,WACTxY,GAGIwZ,EAAyBL,GAC7BjB,EACAM,EAAS,mBACTxY,GAII4N,EAAe2M,GAAmBrC,EAAWM,EAAS,iBACtD1K,EAAe0M,GACnBtC,EACAM,EAAS,kBAELxK,EAAewM,GACnBtC,EACAM,EAAS,kBAELra,EAocR,SAA2B+Z,EAAWtpC,GACpC,MAAMwkC,EAAU8E,EAAUtpC,GAC1B,QAAgBpQ,IAAZ40C,EACF,OAEF,OAAOqH,GAAiBrH,EAASxkC,EACnC,CA1cgB8rC,CAAkBxC,EAAWM,EAAS,SAC9CvN,EA4WR,SAAwBiN,EAAWtpC,GACjC,MAAMwkC,EAAU8E,EAAUtpC,GAC1B,QAAgBpQ,IAAZ40C,EACF,OAEF,GAAuB,iBAAZA,EACT,MAAM,IAAI37C,MAAM,yBAAyBmX,KAE3C,OAAOwkC,CACT,CArXsBuH,CAAezC,EAAWM,EAAS,gBACjDpoD,EAkaR,SAA6B8nD,EAAWtpC,GACtC,MAAMwkC,EAAU8E,EAAUtpC,GAC1B,QAAgBpQ,IAAZ40C,EACF,OAEF,OAAOwH,GAAmBxH,EAASxkC,EACrC,CAxaiBisC,CAAoB3C,EAAWM,EAAS,UACjDlK,EAAeiM,GAAmBrC,EAAWM,EAAS,iBACtD7wC,EAAQmzC,GAAe5C,EAAWM,EAAS,SAC3Cj8C,EAASu+C,GAAe5C,EAAWM,EAAS,UAC5C3xC,EA6UR,SAAsBqxC,EAAWtpC,GAC/B,MAAMwkC,EAAU8E,EAAUtpC,GAC1B,QAAgBpQ,IAAZ40C,EACF,OAEF,GAAuB,iBAAZA,EACT,OAAOnX,GAAOmX,GAEhB,IAAKzwC,MAAM4L,QAAQ6kC,GACjB,MAAM,IAAI37C,MAAM,uCAAuCmX,KAEzD,GACqB,IAAnBwkC,EAAQ7gD,QACc,iBAAf6gD,EAAQ,IACO,iBAAfA,EAAQ,GAEf,MAAM,IAAI37C,MAAM,uCAAuCmX,KAEzD,OAAOwkC,CACT,CAhWe2H,CAAa7C,EAAWM,EAAS,QACxC5b,EAAgBoe,GAAsB9C,EAAWM,EAAS,aAE1DyC,EAAO,IAAI,GAAK,CACpBjQ,MACA4C,eACAE,eACAE,eACA7P,QACA8M,cACA76C,SACAk+C,eACA/xC,SACAoL,QACAd,OACA+1B,kBAGF,OAAO,SAAUoD,GAwBf,OAvBIqa,GACFY,EAAK5vB,WAAWgvB,EAAgBra,IAG9Bsa,GACFW,EAAKtd,gBAAgB2c,EAAqBta,IAGxCyZ,GACFwB,EAAKtpB,YAAY8nB,EAAiBzZ,IAGhCwZ,GACFyB,EAAKrd,kBAAkB4b,EAAuBxZ,IAG5CsZ,GACF2B,EAAKpd,SAASyb,EAActZ,IAG1Bma,GACFc,EAAKtM,UAAUwL,EAAena,IAEzBib,CACT,CACF,CAvHWC,CAAUhD,EAAWlY,GAG9B,GAAI,iBAAkBkY,EACpB,OA0HJ,SAAoBA,EAAWlY,GAC7B,MAAMwY,EAAS,SAGT2C,EAAa3C,EAAS,SACtBv5B,EAASm8B,GAAclD,EAAUiD,GAAaA,GAG9ChD,EAAeC,GAAUF,EAAWM,EAAQxY,GAC5CqY,EAAiBC,GAAYJ,EAAWM,EAAQxY,GAChDsZ,EAAgBC,GAAkBrB,EAAWM,EAAS,QAASxY,GAC/Dsa,EAAuBF,GAC3BlC,EACAM,EAAS,eACTxY,GAEIyZ,EAAmBV,GACvBb,EACAM,EAAS,WACTxY,GAEIwZ,EAAyBL,GAC7BjB,EACAM,EAAS,mBACTxY,GAII52B,EAAS0xC,GAAe5C,EAAWM,EAAS,UAC5C1T,EAAUgW,GAAe5C,EAAWM,EAAS,WAC7CxT,EAAU8V,GAAe5C,EAAWM,EAAS,WAC7CjkC,EAAQumC,GAAe5C,EAAWM,EAAS,SAC3C5b,EAAgBoe,GACpB9C,EACAM,EAAS,kBAGL6C,EAAQ,IAAI,GAAa,CAC7Bp8B,SACA7V,SACA07B,UACAE,UACAzwB,QACAqoB,kBAGF,OAAO,SAAUoD,GAoBf,OAnBImY,GACFkD,EAAM1V,QAAQwS,EAAanY,IAEzBqY,GACFgD,EAAMrV,UAAUqS,EAAerY,IAE7Bsa,GACFe,EAAM1d,gBAAgB2c,EAAqBta,IAEzCyZ,GACF4B,EAAM1pB,YAAY8nB,EAAiBzZ,IAEjCwZ,GACF6B,EAAMzd,kBAAkB4b,EAAuBxZ,IAE7CsZ,GACF+B,EAAMxd,SAASyb,EAActZ,IAGxBqb,CACT,CACF,CA9LWC,CAAWpD,EAAWlY,GAG/B,GAAI,kBAAmBkY,EACrB,OAiMJ,SAAqBA,EAAWlY,GAC9B,MAAMwY,EAAS,UAGTL,EAAeC,GAAUF,EAAWM,EAAQxY,GAC5CqY,EAAiBC,GAAYJ,EAAWM,EAAQxY,GAChDub,EAAiBxC,GAAgBb,EAAWM,EAAS,SAAUxY,GAC/DsZ,EAAgBC,GAAkBrB,EAAWM,EAAS,QAASxY,GAC/Dsa,EAAuBF,GAC3BlC,EACAM,EAAS,eACTxY,GAEIyZ,EAAmBV,GACvBb,EACAM,EAAS,WACTxY,GAEIwZ,EAAyBL,GAC7BjB,EACAM,EAAS,mBACTxY,GAIIpD,EAAgBoe,GACpB9C,EACAM,EAAS,kBAGLgD,EAAS,IAAIhR,GAAO,CACxBphC,OAAQ,EACRwzB,kBAGF,OAAO,SAAUoD,GAuBf,OAtBIub,GACFC,EAAOnT,UAAUkT,EAAevb,IAE9BmY,GACFqD,EAAO7V,QAAQwS,EAAanY,IAE1BqY,GACFmD,EAAOxV,UAAUqS,EAAerY,IAE9Bsa,GACFkB,EAAO7d,gBAAgB2c,EAAqBta,IAE1CyZ,GACF+B,EAAO7pB,YAAY8nB,EAAiBzZ,IAElCwZ,GACFgC,EAAO5d,kBAAkB4b,EAAuBxZ,IAE9CsZ,GACFkC,EAAO3d,SAASyb,EAActZ,IAGzBwb,CACT,CACF,CA7PWC,CAAYvD,EAAWlY,GAGhC,OAAO,IACT,CAtawB0b,CAAWxD,EAAWlY,GACtC2b,EAAiB5C,GAAgBb,EAAW,UAAWlY,GAEvD9qB,EAAQ,IAAI,GAClB,OAAO,SAAU8qB,GACf,IAAI4b,GAAQ,EACZ,GAAIzD,EAAc,CAChB,MAAMzT,EAAOyT,EAAanY,GACtB0E,IACFkX,GAAQ,GAEV1mC,EAAMywB,QAAQjB,EAChB,CACA,GAAI2T,EAAgB,CAClB,MAAMlT,EAASkT,EAAerY,GAC1BmF,IACFyW,GAAQ,GAEV1mC,EAAM8wB,UAAUb,EAClB,CACA,GAAIoT,EAAc,CAChB,MAAM7W,EAAO6W,EAAavY,GACtB0B,IACFka,GAAQ,GAEV1mC,EAAMm1B,QAAQ3I,EAChB,CACA,GAAIsY,EAAe,CACjB,MAAMnU,EAAQmU,EAAcha,GACxB6F,IACF+V,GAAQ,GAEV1mC,EAAMk1B,SAASvE,EACjB,CAIA,OAHI8V,GACFzmC,EAAMqW,UAAUowB,EAAe3b,IAE7B4b,EACK,KAEF1mC,CACT,CACF,CAYA,SAASkjC,GAAUF,EAAWM,EAAQxY,GACpC,MAAM6b,EAAgBC,GACpB5D,EACAM,EAAS,aACTxY,GAEF,IAAK6b,EACH,OAAO,KAGT,MAAMnX,EAAO,IAAI,GACjB,OAAO,SAAU1E,GACf,MAAM7B,EAAQ0d,EAAc7b,GAC5B,MAAc,SAAV7B,EACK,MAETuG,EAAK6D,SAASpK,GACPuG,EACT,CACF,CAYA,SAAS4T,GAAYJ,EAAWM,EAAQxY,GACtC,MAAM+b,EAAgBhD,GACpBb,EACAM,EAAS,eACTxY,GAGI6b,EAAgBC,GACpB5D,EACAM,EAAS,eACTxY,GAGF,IAAK+b,IAAkBF,EACrB,OAAO,KAGT,MAAMG,EAAkBtD,GACtBR,EACAM,EAAS,kBACTxY,GAGIic,EAAmBvD,GACvBR,EACAM,EAAS,mBACTxY,GAGIkc,EAAmBpC,GACvB5B,EACAM,EAAS,mBACTxY,GAGImc,EAAyBpD,GAC7Bb,EACAM,EAAS,0BACTxY,GAGIoc,EAAqBrD,GACzBb,EACAM,EAAS,qBACTxY,GAGImF,EAAS,IAAI,GACnB,OAAO,SAAUnF,GACf,GAAI6b,EAAe,CACjB,MAAM1d,EAAQ0d,EAAc7b,GAC5B,GAAc,SAAV7B,EACF,OAAO,KAETgH,EAAOoD,SAASpK,EAClB,CAMA,GAJI4d,GACF5W,EAAOiE,SAAS2S,EAAc/b,IAG5Bgc,EAAiB,CACnB,MAAMvT,EAAUuT,EAAgBhc,GAChC,GAAgB,SAAZyI,GAAkC,UAAZA,GAAmC,WAAZA,EAC/C,MAAM,IAAIhxC,MAAM,4CAElB0tC,EAAO6D,WAAWP,EACpB,CAEA,GAAIwT,EAAkB,CACpB,MAAM/V,EAAW+V,EAAiBjc,GAClC,GACe,UAAbkG,GACa,UAAbA,GACa,UAAbA,EAEA,MAAM,IAAIzuC,MAAM,6CAElB0tC,EAAO+D,YAAYhD,EACrB,CAcA,OAZIgW,GACF/W,EAAOyC,YAAYsU,EAAiBlc,IAGlCmc,GACFhX,EAAO8D,kBAAkBkT,EAAuBnc,IAG9Coc,GACFjX,EAAOgE,cAAciT,EAAmBpc,IAGnCmF,CACT,CACF,CAmfA,SAAS4T,GAAgBb,EAAWl0C,EAAMg8B,GACxC,KAAMh8B,KAAQk0C,GACZ,OAEF,MAAMhB,EAAYf,GAAgB+B,EAAUl0C,GAAO+tC,GAAY/R,GAC/D,OAAO,SAAUA,GACf,OAAOob,GAAclE,EAAUlX,GAAUh8B,EAC3C,CACF,CAQA,SAAS00C,GAAgBR,EAAWl0C,EAAMg8B,GACxC,KAAMh8B,KAAQk0C,GACZ,OAAO,KAET,MAAMhB,EAAYf,GAAgB+B,EAAUl0C,GAAOguC,GAAYhS,GAC/D,OAAO,SAAUA,GACf,OAAOka,GAAchD,EAAUlX,GAAUh8B,EAC3C,CACF,CAQA,SAASm1C,GAAiBjB,EAAWl0C,EAAMg8B,GACzC,KAAMh8B,KAAQk0C,GACZ,OAAO,KAET,MAAMhB,EAAYf,GAAgB+B,EAAUl0C,GAAO8tC,GAAa9R,GAChE,OAAO,SAAUA,GACf,MAAM1uC,EAAQ4lD,EAAUlX,GACxB,GAAqB,kBAAV1uC,EACT,MAAM,IAAImG,MAAM,0BAA0BuM,KAE5C,OAAO1S,CACT,CACF,CAQA,SAASwqD,GAAmB5D,EAAWl0C,EAAMg8B,GAC3C,KAAMh8B,KAAQk0C,GACZ,OAAO,KAET,MAAMhB,EAAYf,GAChB+B,EAAUl0C,GACViuC,GAAYD,GACZhS,GAEF,OAAO,SAAUA,GACf,OAAOya,GAAiBvD,EAAUlX,GAAUh8B,EAC9C,CACF,CAQA,SAAS81C,GAAqB5B,EAAWl0C,EAAMg8B,GAC7C,KAAMh8B,KAAQk0C,GACZ,OAAO,KAET,MAAMhB,EAAYf,GAAgB+B,EAAUl0C,GAAOkuC,GAAiBlS,GACpE,OAAO,SAAUA,GACf,OAAO4a,GAAmB1D,EAAUlX,GAAUh8B,EAChD,CACF,CAQA,SAASo2C,GAAoBlC,EAAWl0C,EAAMg8B,GAC5C,KAAMh8B,KAAQk0C,GACZ,OAAO,KAET,MAAMhB,EAAYf,GAAgB+B,EAAUl0C,GAAOkuC,GAAiBlS,GACpE,OAAO,SAAUA,GACf,MAAMpV,EAAQgwB,GAAmB1D,EAAUlX,GAAUh8B,GACrD,GAAqB,IAAjB4mB,EAAMr4B,OACR,MAAM,IAAIkF,MAAM,4BAA4BuM,KAE9C,OAAO4mB,CACT,CACF,CAQA,SAAS2uB,GAAkBrB,EAAWl0C,EAAMg8B,GAC1C,KAAMh8B,KAAQk0C,GACZ,OAAO,KAET,MAAMhB,EAAYf,GAAgB+B,EAAUl0C,GAAOkuC,GAAiBlS,GACpE,OAAO,SAAUA,GACf,OAkNJ,SAAyB1uC,EAAOsd,GAC9B,GAAqB,iBAAVtd,EACT,OAAOA,EAET,MAAMuV,EAAO+zC,GAAmBtpD,EAAOsd,GACvC,GAAoB,IAAhB/H,EAAKtU,OACP,MAAM,IAAIkF,MAAM,wCAAwCmX,KAE1D,OAAO/H,CACT,CA3NWw1C,CAAgBnF,EAAUlX,GAAUh8B,EAC7C,CACF,CAOA,SAAS82C,GAAe5C,EAAWtpC,GACjC,MAAMtd,EAAQ4mD,EAAUtpC,GACxB,QAAcpQ,IAAVlN,EAAJ,CAGA,GAAqB,iBAAVA,EACT,MAAM,IAAImG,MAAM,yBAAyBmX,KAE3C,OAAOtd,CAJP,CAKF,CAiDA,SAASipD,GAAmBrC,EAAWtpC,GACrC,MAAMwkC,EAAU8E,EAAUtpC,GAC1B,QAAgBpQ,IAAZ40C,EAAJ,CAGA,GACc,gBAAZA,GACY,iBAAZA,GACY,aAAZA,GACY,cAAZA,EAEA,MAAM,IAAI37C,MACR,kEAAkEmX,KAGtE,OAAOwkC,CAXP,CAYF,CAOA,SAASoH,GAAwBtC,EAAWtpC,GAC1C,MAAMwkC,EAAU8E,EAAUtpC,GAC1B,QAAgBpQ,IAAZ40C,EAAJ,CAGA,GAAgB,WAAZA,GAAoC,aAAZA,EAC1B,MAAM,IAAI37C,MAAM,mCAAmCmX,KAErD,OAAOwkC,CAJP,CAKF,CAoBA,SAAS4H,GAAsB9C,EAAWtpC,GACxC,MAAMwkC,EAAU8E,EAAUtpC,GAC1B,QAAgBpQ,IAAZ40C,EAAJ,CAGA,GAAuB,iBAAZA,EACT,MAAM,IAAI37C,MAAM,yBAAyBmX,KAE3C,GAAgB,cAAZwkC,GAAuC,aAAZA,GAAsC,SAAZA,EACvD,MAAM,IAAI37C,MAAM,6CAA6CmX,KAE/D,OAAOwkC,CAPP,CAQF,CAoBA,SAASwH,GAAmBtpD,EAAOsd,GACjC,IAAKjM,MAAM4L,QAAQjd,GACjB,MAAM,IAAImG,MAAM,yBAAyBmX,KAE3C,MAAMrc,EAASjB,EAAMiB,OACrB,IAAK,IAAIzB,EAAI,EAAGA,EAAIyB,IAAUzB,EAC5B,GAAwB,iBAAbQ,EAAMR,GACf,MAAM,IAAI2G,MAAM,oCAAoCmX,KAGxD,OAAOtd,CACT,CAOA,SAAS4oD,GAAc5oD,EAAOsd,GAC5B,GAAqB,iBAAVtd,EACT,MAAM,IAAImG,MAAM,yBAAyBmX,KAE3C,OAAOtd,CACT,CAOA,SAAS8pD,GAAc9pD,EAAOsd,GAC5B,GAAqB,iBAAVtd,EACT,MAAM,IAAImG,MAAM,yBAAyBmX,KAE3C,OAAOtd,CACT,CAOA,SAASmpD,GAAiBnpD,EAAOsd,GAC/B,GAAqB,iBAAVtd,EACT,OAAOA,EAET,MAAMs5B,EAAQgwB,GAAmBtpD,EAAOsd,GAClCrc,EAASq4B,EAAMr4B,OACrB,GAAIA,EAAS,GAAKA,EAAS,EACzB,MAAM,IAAIkF,MAAM,2CAA2CmX,KAE7D,OAAOgc,CACT,CC1mCA,MAAM,GACU,cA6QhB,OA9PA,cAA8B,GAI5B,WAAAtrB,CAAYC,GACVA,EAAUA,GAAoB,CAAC,EAE/B,MAAMi6B,EAAc36B,OAAO+N,OAAO,CAAC,EAAGrN,UAE/Bi6B,EAAYtkB,aACZskB,EAAY8iB,oBACZ9iB,EAAY+iB,4BACZ/iB,EAAYgjB,uBACnBv6C,MAAMu3B,GAMN/mC,KAAKgqD,gBACmBj+C,IAAtBe,EAAQm9C,WAA0Bn9C,EAAQm9C,UAM5CjqD,KAAKkqD,mBACsBn+C,IAAzBe,EAAQ+8C,aAA6B/8C,EAAQ+8C,aAAe,IAO9D7pD,KAAKmqD,OAAS,KAOdnqD,KAAKoqD,oBAAiBr+C,EAEtB/L,KAAKqqD,SAASv9C,EAAQ2V,OAMtBziB,KAAKsqD,2BAC8Bv+C,IAAjCe,EAAQg9C,sBACJh9C,EAAQg9C,qBAOd9pD,KAAKuqD,6BACgCx+C,IAAnCe,EAAQi9C,wBACJj9C,EAAQi9C,sBAEhB,CAKA,YAAAS,GACE,OAAOxqD,KAAKgqD,UACd,CAgBA,WAAAliB,CAAYC,GACV,OAAOv4B,MAAMs4B,YAAYC,EAC3B,CAKA,eAAA0iB,GACE,OAAOzqD,KAAKkqD,aACd,CAMA,cAAAQ,GACE,OACE1qD,KAAKuM,IAAI,GAEb,CAQA,QAAAo+C,GACE,OAAO3qD,KAAKmqD,MACd,CAOA,gBAAAl5B,GACE,OAAOjxB,KAAKoqD,cACd,CAMA,uBAAAQ,GACE,OAAO5qD,KAAKsqD,qBACd,CAMA,yBAAAO,GACE,OAAO7qD,KAAKuqD,uBACd,CAMA,eAAAO,CAAgBziB,GACTA,EAAW0iB,gBACd1iB,EAAW0iB,cAAgB,IAAI,GAAM,IAErB/qD,KAAK+oC,cAAe+hB,gBAAgBziB,EACxD,CAMA,cAAA2iB,CAAeC,GACbjrD,KAAKgH,IAAI,GAAuBikD,EAClC,CAuBA,QAAAZ,CAAS5nC,GACPziB,KAAKmqD,OAcT,SAAqB1nC,GACnB,QAAc1W,IAAV0W,EACF,OAAOq1B,GAET,IAAKr1B,EACH,OAAO,KAET,GAAqB,mBAAVA,EACT,OAAOA,EAET,GAAIA,aAAiB,GACnB,OAAOA,EAET,IAAKvS,MAAM4L,QAAQ2G,GACjB,OAAO4iC,GAA0B,CAAC5iC,IAEpC,GAAqB,IAAjBA,EAAM3iB,OACR,MAAO,GAGT,MAAMA,EAAS2iB,EAAM3iB,OACf4nB,EAAQjF,EAAM,GAEpB,GAAIiF,aAAiB,GAAO,CAI1B,MAAMk9B,EAAS,IAAI10C,MAAMpQ,GACzB,IAAK,IAAIzB,EAAI,EAAGA,EAAIyB,IAAUzB,EAAG,CAC/B,MAAMod,EAAYgH,EAAMpkB,GACxB,KAAMod,aAAqB,IACzB,MAAM,IAAIzW,MAAM,sCAElB4/C,EAAOvmD,GAAKod,CACd,CACA,OAAOmpC,CACT,CAEA,GAAI,UAAWl9B,EAAO,CAIpB,MAAM88B,EAAQ,IAAIt0C,MAAMpQ,GACxB,IAAK,IAAIzB,EAAI,EAAGA,EAAIyB,IAAUzB,EAAG,CAC/B,MAAMod,EAAYgH,EAAMpkB,GACxB,KAAM,UAAWod,GACf,MAAM,IAAIzW,MAAM,kDAElBw/C,EAAMnmD,GAAKod,CACb,CACA,OAAO8oC,GAAqBC,EAC9B,CAEA,MAAMc,EACuD,EAC7D,OAAOD,GAA0BC,EACnC,CAtEkB4F,CAAYzoC,GAC1BziB,KAAKoqD,eACO,OAAV3nC,OAAiB1W,ET8JhB,SAAoB1L,GACzB,IAAImwB,EAEJ,GAAmB,mBAARnwB,EACTmwB,EAAgBnwB,MACX,CAIL,IAAIukD,EACA10C,MAAM4L,QAAQzb,GAChBukD,EAASvkD,GAETmR,EAAqD,mBAArB,EAAe,UAAkB,IAEjEozC,EAAS,CAD0B,IAGrCp0B,EAAgB,WACd,OAAOo0B,CACT,CACF,CACA,OAAOp0B,CACT,CSpLmC,CAAgBxwB,KAAKmqD,QACpDnqD,KAAKwe,SACP,GC5QF,MAAM2sC,GAAc,CAClBC,eAAgB,EAChBC,WAAY,EACZC,OAAQ,EACRC,WAAY,EACZC,OAAQ,EACRC,WAAY,EACZC,WAAY,EACZC,aAAc,EACdC,KAAM,EACNC,gBAAiB,EACjBC,eAAgB,GAChBC,iBAAkB,GAClBC,OAAQ,IAMGC,GAAkB,CAACd,GAAYS,MAK/BM,GAAoB,CAACf,GAAYa,QAKjCG,GAAuB,CAAChB,GAAYE,YAKpCe,GAAuB,CAACjB,GAAYI,YAEjD,UCuEA,OAxGA,MASE,UAAAc,CAAWxxC,EAAUJ,EAASw8B,EAAUE,GAAuB,CAO/D,YAAAmV,CAAazxC,GAAW,CAOxB,QAAAwvC,CAAS5nC,GAAQ,CAMjB,UAAA8pC,CAAWC,EAAgB/xC,GAAU,CAMrC,WAAAgyC,CAAYhyC,EAASgI,GAAQ,CAM7B,sBAAAiqC,CAAuBC,EAA4BlyC,GAAU,CAM7D,cAAAmyC,CAAeC,EAAoBpyC,GAAU,CAM7C,mBAAAqyC,CAAoBC,EAAyBtyC,GAAU,CAMvD,cAAAuyC,CAAeC,EAAoBxyC,GAAU,CAM7C,gBAAAyyC,CAAiBC,EAAsB1yC,GAAU,CAMjD,SAAA2yC,CAAUC,EAAe5yC,GAAU,CAMnC,WAAA6yC,CAAYC,EAAiB9yC,GAAU,CAMvC,QAAA+yC,CAAS3yC,EAAUJ,GAAU,CAM7B,kBAAAgzC,CAAmBxY,EAAWX,GAAc,CAM5C,aAAAoZ,CAAcC,EAAYC,GAAyB,CAMnD,YAAAC,CAAaC,EAAWF,GAAyB,GC2hBnD,OA5mBA,cAA4B,GAO1B,WAAA/gD,CAAYgY,EAAWmV,EAAWtqB,EAAYi7B,GAC5Cn7B,QAMAxP,KAAK6kB,UAAYA,EAOjB7kB,KAAKg6B,UAAYA,EAMjBh6B,KAAK2qC,WAAaA,EAMlB3qC,KAAK+tD,aAAe,EAOpB/tD,KAAK0P,WAAaA,EAMlB1P,KAAKguD,2BAA6B,KAMlChuD,KAAKiuD,2BAA6B,KAMlCjuD,KAAKkuD,mBAAqB,KAM1BluD,KAAKmuD,aAAe,GAMpBnuD,KAAK4R,YAAc,GAMnB5R,KAAKouD,eAAiB,GAMtBpuD,KAAKquD,yBAA2B,GAMhCruD,KAAKm2B,MAA8D,CAAG,CACxE,CAOA,eAAAm4B,CAAgBC,GACd,MAAM5jB,EAAa3qC,KAAK2qC,WACxB,OAAqB,GAAdA,EACH4jB,EACAA,EAAUhnB,KAAI,SAAUinB,GACtB,OAAOA,EAAO7jB,CAChB,GACN,CAQA,0BAAA8jB,CAA2Bx7C,EAAiBC,GAC1C,MAAM/F,EAASnN,KAAK0uD,uBACdC,EAAW3uD,KAAKouD,eAChBx8C,EAAc5R,KAAK4R,YACzB,IAAIg9C,EAAQh9C,EAAY9R,OACxB,IAAK,IAAIzB,EAAI,EAAGyT,EAAKmB,EAAgBnT,OAAQzB,EAAIyT,EAAIzT,GAAK6U,EACxDy7C,EAAS,GAAK17C,EAAgB5U,GAC9BswD,EAAS,GAAK17C,EAAgB5U,EAAI,GAC9B+T,EAAmBjF,EAAQwhD,KAC7B/8C,EAAYg9C,KAAWD,EAAS,GAChC/8C,EAAYg9C,KAAWD,EAAS,IAGpC,OAAOC,CACT,CAYA,yBAAAC,CACE57C,EACAtV,EACAuG,EACAgP,EACA47C,EACAC,GAEA,MAAMn9C,EAAc5R,KAAK4R,YACzB,IAAIg9C,EAAQh9C,EAAY9R,OACxB,MAAMqN,EAASnN,KAAK0uD,uBAChBK,IACFpxD,GAAUuV,GAEZ,IAAI87C,EAAa/7C,EAAgBtV,GAC7BsxD,EAAah8C,EAAgBtV,EAAS,GAC1C,MAAMuxD,EAAYlvD,KAAKouD,eACvB,IAEI/vD,EAAG8wD,EAASC,EAFZC,GAAU,EAGd,IAAKhxD,EAAIV,EAASuV,EAAQ7U,EAAI6F,EAAK7F,GAAK6U,EACtCg8C,EAAU,GAAKj8C,EAAgB5U,GAC/B6wD,EAAU,GAAKj8C,EAAgB5U,EAAI,GACnC+wD,EAAU18C,EAAuBvF,EAAQ+hD,GACrCE,IAAYD,GACVE,IACFz9C,EAAYg9C,KAAWI,EACvBp9C,EAAYg9C,KAAWK,EACvBI,GAAU,GAEZz9C,EAAYg9C,KAAWM,EAAU,GACjCt9C,EAAYg9C,KAAWM,EAAU,IACxBE,IAAYx8C,EAAa7B,cAClCa,EAAYg9C,KAAWM,EAAU,GACjCt9C,EAAYg9C,KAAWM,EAAU,GACjCG,GAAU,GAEVA,GAAU,EAEZL,EAAaE,EAAU,GACvBD,EAAaC,EAAU,GACvBC,EAAUC,EAQZ,OAJKN,GAAUO,GAAYhxD,IAAMV,EAASuV,KACxCtB,EAAYg9C,KAAWI,EACvBp9C,EAAYg9C,KAAWK,GAElBL,CACT,CAUA,sBAAAU,CAAuBr8C,EAAiBtV,EAAQ+oB,EAAMxT,EAAQq8C,GAC5D,IAAK,IAAIlxD,EAAI,EAAGyT,EAAK4U,EAAK5mB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC7C,MAAM6F,EAAMwiB,EAAKroB,GACXmxD,EAAaxvD,KAAK6uD,0BACtB57C,EACAtV,EACAuG,EACAgP,GACA,GACA,GAEFq8C,EAAYrvD,KAAKsvD,GACjB7xD,EAASuG,CACX,CACA,OAAOvG,CACT,CAQA,UAAA0uD,CAAWxxC,EAAUJ,EAASw8B,EAAUE,GACtCn3C,KAAKyvD,cAAc50C,EAAUJ,GAE7B,MAAMxZ,EAAO4Z,EAAST,UAChBlH,EAAS2H,EAASiL,YAClB4pC,EAAe1vD,KAAK4R,YAAY9R,OAEtC,IAAImT,EAAiBu8C,EAAYD,EAAaI,EAC1ChyD,EAEJ,OAAQsD,GACN,IAAK,eACHgS,EAC8D,EAE1Dmb,6BACJuhC,EAAe,GACf,MAAMpnC,EACwD,EAE1DkH,WACJ9xB,EAAS,EACT,IAAK,IAAIU,EAAI,EAAGyT,EAAKyW,EAAMzoB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC9C,MAAMuxD,EAAS,GACfjyD,EAASqC,KAAKsvD,uBACZr8C,EACAtV,EACA4qB,EAAMlqB,GACN6U,EACA08C,GAEFD,EAAazvD,KAAK0vD,EACpB,CACA5vD,KAAKmuD,aAAajuD,KAAK,CACrB,GAAkBsrD,OAClBkE,EACAC,EACA90C,EACAo8B,EACA3uB,KAEFtoB,KAAKquD,yBAAyBnuD,KAAK,CACjC,GAAkBsrD,OAClBkE,EACAC,EACA90C,EACAs8B,GAAwBF,EACxB3uB,KAEF,MACF,IAAK,UACL,IAAK,kBACHinC,EAAc,GACdt8C,EACU,WAARhS,EAC2D,EAErDmtB,6BACFvT,EAAS4K,qBACf9nB,EAASqC,KAAKsvD,uBACZr8C,EACA,EACuG,EAErG4Y,UACF3Y,EACAq8C,GAEFvvD,KAAKmuD,aAAajuD,KAAK,CACrB,GAAkBsrD,OAClBkE,EACAH,EACA10C,EACAo8B,EACA5uB,KAEFroB,KAAKquD,yBAAyBnuD,KAAK,CACjC,GAAkBsrD,OAClBkE,EACAH,EACA10C,EACAs8B,GAAwBF,EACxB5uB,KAEF,MACF,IAAK,aACL,IAAK,SACHpV,EAAkB4H,EAAS4K,qBAC3B+pC,EAAaxvD,KAAK6uD,0BAChB57C,EACA,EACAA,EAAgBnT,OAChBoT,GACA,GACA,GAEFlT,KAAKmuD,aAAajuD,KAAK,CACrB,GAAkBsrD,OAClBkE,EACAF,EACA30C,EACAo8B,EACA7uB,KAEFpoB,KAAKquD,yBAAyBnuD,KAAK,CACjC,GAAkBsrD,OAClBkE,EACAF,EACA30C,EACAs8B,GAAwBF,EACxB7uB,KAEF,MACF,IAAK,aACHnV,EAAkB4H,EAAS4K,qBAC3B+pC,EAAaxvD,KAAKyuD,2BAA2Bx7C,EAAiBC,GAE1Ds8C,EAAaE,IACf1vD,KAAKmuD,aAAajuD,KAAK,CACrB,GAAkBsrD,OAClBkE,EACAF,EACA30C,EACAo8B,EACA7uB,KAEFpoB,KAAKquD,yBAAyBnuD,KAAK,CACjC,GAAkBsrD,OAClBkE,EACAF,EACA30C,EACAs8B,GAAwBF,EACxB7uB,MAGJ,MACF,IAAK,QACHnV,EAAkB4H,EAAS4K,qBAC3BzlB,KAAK4R,YAAY1R,KAAK+S,EAAgB,GAAIA,EAAgB,IAC1Du8C,EAAaxvD,KAAK4R,YAAY9R,OAE9BE,KAAKmuD,aAAajuD,KAAK,CACrB,GAAkBsrD,OAClBkE,EACAF,EACA30C,EACAo8B,IAEFj3C,KAAKquD,yBAAyBnuD,KAAK,CACjC,GAAkBsrD,OAClBkE,EACAF,EACA30C,EACAs8B,GAAwBF,IAK9Bj3C,KAAK6vD,YAAYp1C,EACnB,CAOA,aAAAg1C,CAAc50C,EAAUJ,GACtBza,KAAKguD,2BAA6B,CAChC,GAAkB5C,eAClB3wC,EACA,EACAI,GAEF7a,KAAKmuD,aAAajuD,KAAKF,KAAKguD,4BAC5BhuD,KAAKiuD,2BAA6B,CAChC,GAAkB7C,eAClB3wC,EACA,EACAI,GAEF7a,KAAKquD,yBAAyBnuD,KAAKF,KAAKiuD,2BAC1C,CAKA,MAAAhnD,GACE,MAAO,CACLknD,aAAcnuD,KAAKmuD,aACnBE,yBAA0BruD,KAAKquD,yBAC/Bz8C,YAAa5R,KAAK4R,YAEtB,CAKA,+BAAAk+C,GACE,MAAMzB,EAA2BruD,KAAKquD,yBAItC,IAAIhwD,EAFJgwD,EAAyB0B,UAGzB,MAAMnnD,EAAIylD,EAAyBvuD,OACnC,IAAIkwD,EACA/uD,EACA0a,GAAS,EACb,IAAKtd,EAAI,EAAGA,EAAIuK,IAAKvK,EACnB2xD,EAAc3B,EAAyBhwD,GACvC4C,EAA0D+uD,EAAY,GAClE/uD,GAAQ,GAAkB0qD,aAC5BhwC,EAAQtd,EACC4C,GAAQ,GAAkBmqD,iBACnC4E,EAAY,GAAK3xD,EACjBqd,GAAgB1b,KAAKquD,yBAA0B1yC,EAAOtd,GACtDsd,GAAS,EAGf,CAMA,kBAAA8xC,CAAmBxY,EAAWX,GAC5B,MAAMne,EAAQn2B,KAAKm2B,MACnB,GAAI8e,EAAW,CACb,MAAMgb,EAAiBhb,EAAUR,WACjCte,EAAM8e,UAAYlI,GAChBkjB,GAAkC5hB,GAEtC,MACElY,EAAM8e,eAAYlpC,EAEpB,GAAIuoC,EAAa,CACf,MAAM4b,EAAmB5b,EAAYG,WACrCte,EAAMme,YAAcvH,GAClBmjB,GAAsCzhB,IAExC,MAAM0hB,EAAqB7b,EAAYgC,aACvCngB,EAAM6f,aACmBjqC,IAAvBokD,EAAmCA,EAAqB7hB,GAC1D,MAAM8hB,EAAsB9b,EAAYK,cACxCxe,EAAMoe,SAAW6b,EACbA,EAAoBzwD,QACpB4uC,GACJ,MAAM8hB,EAA4B/b,EAAYM,oBAC9Cze,EAAMqe,eAAiB6b,GjB9XQ,EiBiY/B,MAAMC,EAAsBhc,EAAYO,cACxC1e,EAAMsd,cACoB1nC,IAAxBukD,EACIA,EACA9hB,GACN,MAAM+hB,EAAmBjc,EAAYI,WACrCve,EAAM+e,eACiBnpC,IAArBwkD,EAAiCA,EjB9VT,EiB+V1B,MAAMC,EAAwBlc,EAAYQ,gBAC1C3e,EAAMwd,gBACsB5nC,IAA1BykD,EACIA,EjBhYqB,GiBmYvBr6B,EAAM+e,UAAYl1C,KAAK+tD,eACzB/tD,KAAK+tD,aAAe53B,EAAM+e,UAE1Bl1C,KAAKkuD,mBAAqB,KAE9B,MACE/3B,EAAMme,iBAAcvoC,EACpBoqB,EAAM6f,aAAUjqC,EAChBoqB,EAAMoe,SAAW,KACjBpe,EAAMqe,oBAAiBzoC,EACvBoqB,EAAMsd,cAAW1nC,EACjBoqB,EAAM+e,eAAYnpC,EAClBoqB,EAAMwd,gBAAa5nC,CAEvB,CAMA,UAAA0kD,CAAWt6B,GACT,MAAM8e,EAAY9e,EAAM8e,UAElBgX,EAAkB,CAAC,GAAkBH,eAAgB7W,GAK3D,MAJyB,iBAAdA,GAETgX,EAAgB/rD,MAAK,GAEhB+rD,CACT,CAKA,WAAAyE,CAAYv6B,GACVn2B,KAAKmuD,aAAajuD,KAAKF,KAAK2wD,aAAax6B,GAC3C,CAMA,YAAAw6B,CAAax6B,GACX,MAAO,CACL,GAAkB41B,iBAClB51B,EAAMme,YACNne,EAAM+e,UAAYl1C,KAAK2qC,WACvBxU,EAAM6f,QACN7f,EAAMsd,SACNtd,EAAMwd,WACN3zC,KAAKsuD,gBAAgBn4B,EAAMoe,UAC3Bpe,EAAMqe,eAAiBx0C,KAAK2qC,WAEhC,CAMA,eAAAimB,CAAgBz6B,EAAOs6B,GACrB,MAAMxb,EAAY9e,EAAM8e,UACC,iBAAdA,GAA0B9e,EAAM06B,kBAAoB5b,SAC3ClpC,IAAdkpC,GACFj1C,KAAKmuD,aAAajuD,KAAKuwD,EAAWtwD,KAAKH,KAAMm2B,IAE/CA,EAAM06B,iBAAmB5b,EAE7B,CAMA,iBAAA6b,CAAkB36B,EAAOu6B,GACvB,MAAMpc,EAAcne,EAAMme,YACpB0B,EAAU7f,EAAM6f,QAChBzB,EAAWpe,EAAMoe,SACjBC,EAAiBre,EAAMqe,eACvBf,EAAWtd,EAAMsd,SACjByB,EAAY/e,EAAM+e,UAClBvB,EAAaxd,EAAMwd,YAEvBxd,EAAM46B,oBAAsBzc,GAC5Bne,EAAM66B,gBAAkBhb,GACvBzB,GAAYpe,EAAM86B,kBAChB,GAAO96B,EAAM86B,gBAAiB1c,IACjCpe,EAAM+6B,uBAAyB1c,GAC/Bre,EAAMg7B,iBAAmB1d,GACzBtd,EAAMi7B,kBAAoBlc,GAC1B/e,EAAMk7B,mBAAqB1d,UAEP5nC,IAAhBuoC,GACFoc,EAAYvwD,KAAKH,KAAMm2B,GAEzBA,EAAM46B,mBAAqBzc,EAC3Bne,EAAM66B,eAAiBhb,EACvB7f,EAAM86B,gBAAkB1c,EACxBpe,EAAM+6B,sBAAwB1c,EAC9Bre,EAAMg7B,gBAAkB1d,EACxBtd,EAAMi7B,iBAAmBlc,EACzB/e,EAAMk7B,kBAAoB1d,EAE9B,CAKA,WAAAkc,CAAYp1C,GACVza,KAAKguD,2BAA2B,GAAKhuD,KAAKmuD,aAAaruD,OACvDE,KAAKguD,2BAA6B,KAClChuD,KAAKiuD,2BAA2B,GAAKjuD,KAAKquD,yBAAyBvuD,OACnEE,KAAKiuD,2BAA6B,KAClC,MAAMqD,EAAyB,CAAC,GAAkB3F,aAAclxC,GAChEza,KAAKmuD,aAAajuD,KAAKoxD,GACvBtxD,KAAKquD,yBAAyBnuD,KAAKoxD,EACrC,CASA,oBAAA5C,GACE,IAAK1uD,KAAKkuD,qBACRluD,KAAKkuD,oBrFljBW/gD,EqFkjBgBnN,KAAKg6B,UrFjjBrChoB,GACFA,EAAK,GAAK7E,EAAO,GACjB6E,EAAK,GAAK7E,EAAO,GACjB6E,EAAK,GAAK7E,EAAO,GACjB6E,EAAK,GAAK7E,EAAO,GACV6E,GAEF7E,EAAOxN,SqF2iBNK,KAAK+tD,aAAe,GAAG,CACzB,MAAM74C,EAASlV,KAAK0P,YAAc1P,KAAK+tD,aAAe,GAAM,EAC5DrwD,EAAOsC,KAAKkuD,mBAAoBh5C,EAAOlV,KAAKkuD,mBAC9C,CrFtjBC,IAAe/gD,EAAQ6E,EqFwjB1B,OAAOhS,KAAKkuD,kBACd,GCzXF,OAxQA,cAAiC,GAO/B,WAAArhD,CAAYgY,EAAWmV,EAAWtqB,EAAYi7B,GAC5Cn7B,MAAMqV,EAAWmV,EAAWtqB,EAAYi7B,GAMxC3qC,KAAKy5C,mBAAqB,KAM1Bz5C,KAAKg3C,OAAS,KAMdh3C,KAAKuxD,sBAAmBxlD,EAMxB/L,KAAKwxD,cAAWzlD,EAMhB/L,KAAKyxD,cAAW1lD,EAMhB/L,KAAK0xD,aAAU3lD,EAMf/L,KAAK0pC,cAAW39B,EAMhB/L,KAAK2xD,cAAW5lD,EAMhB/L,KAAK4xD,cAAW7lD,EAMhB/L,KAAK2pC,qBAAkB59B,EAMvB/L,KAAK6pC,eAAY99B,EAMjB/L,KAAK8pC,YAAS/9B,EAMd/L,KAAKq2C,YAAStqC,EAMd/L,KAAKkqC,oBAAiBn+B,EAOtB/L,KAAK6xD,6BAA0B9lD,CACjC,CAMA,SAAAqhD,CAAUC,EAAe5yC,GACvB,IAAKza,KAAKg3C,OACR,OAEFh3C,KAAKyvD,cAAcpC,EAAe5yC,GAClC,MAAMxH,EAAkBo6C,EAAc5nC,qBAChCvS,EAASm6C,EAAcvnC,YACvBgsC,EAAU9xD,KAAK4R,YAAY9R,OAC3B8uD,EAAQ5uD,KAAKyuD,2BAA2Bx7C,EAAiBC,GAC/DlT,KAAKmuD,aAAajuD,KAAK,CACrB,GAAkBwrD,WAClBoG,EACAlD,EACA5uD,KAAKg3C,OAELh3C,KAAKwxD,SAAWxxD,KAAKuxD,iBACrBvxD,KAAKyxD,SAAWzxD,KAAKuxD,iBACrB7yD,KAAK4K,KAAKtJ,KAAK0xD,QAAU1xD,KAAKuxD,kBAC9BvxD,KAAK0pC,SACL1pC,KAAK2xD,SAAW3xD,KAAKuxD,iBACrBvxD,KAAK4xD,SAAW5xD,KAAKuxD,iBACrBvxD,KAAK2pC,gBACL3pC,KAAK6pC,UACL,CACG7pC,KAAK8pC,OAAO,GAAK9pC,KAAK2qC,WAAc3qC,KAAKuxD,iBACzCvxD,KAAK8pC,OAAO,GAAK9pC,KAAK2qC,WAAc3qC,KAAKuxD,kBAE5C7yD,KAAK4K,KAAKtJ,KAAKq2C,OAASr2C,KAAKuxD,kBAC7BvxD,KAAKkqC,eACLlqC,KAAK6xD,0BAEP7xD,KAAKquD,yBAAyBnuD,KAAK,CACjC,GAAkBwrD,WAClBoG,EACAlD,EACA5uD,KAAKy5C,mBAELz5C,KAAKwxD,SACLxxD,KAAKyxD,SACLzxD,KAAK0xD,QACL,EACA1xD,KAAK2xD,SACL3xD,KAAK4xD,SACL5xD,KAAK2pC,gBACL3pC,KAAK6pC,UACL7pC,KAAK8pC,OACL9pC,KAAKq2C,OACLr2C,KAAKkqC,eACLlqC,KAAK6xD,0BAEP7xD,KAAK6vD,YAAYp1C,EACnB,CAMA,cAAAuyC,CAAeC,EAAoBxyC,GACjC,IAAKza,KAAKg3C,OACR,OAEFh3C,KAAKyvD,cAAcxC,EAAoBxyC,GACvC,MAAMxH,EAAkBg6C,EAAmBxnC,qBACrCvS,EAAS+5C,EAAmBnnC,YAC5BgsC,EAAU9xD,KAAK4R,YAAY9R,OAC3B8uD,EAAQ5uD,KAAKyuD,2BAA2Bx7C,EAAiBC,GAC/DlT,KAAKmuD,aAAajuD,KAAK,CACrB,GAAkBwrD,WAClBoG,EACAlD,EACA5uD,KAAKg3C,OAELh3C,KAAKwxD,SAAWxxD,KAAKuxD,iBACrBvxD,KAAKyxD,SAAWzxD,KAAKuxD,iBACrB7yD,KAAK4K,KAAKtJ,KAAK0xD,QAAU1xD,KAAKuxD,kBAC9BvxD,KAAK0pC,SACL1pC,KAAK2xD,SAAW3xD,KAAKuxD,iBACrBvxD,KAAK4xD,SAAW5xD,KAAKuxD,iBACrBvxD,KAAK2pC,gBACL3pC,KAAK6pC,UACL,CACG7pC,KAAK8pC,OAAO,GAAK9pC,KAAK2qC,WAAc3qC,KAAKuxD,iBACzCvxD,KAAK8pC,OAAO,GAAK9pC,KAAK2qC,WAAc3qC,KAAKuxD,kBAE5C7yD,KAAK4K,KAAKtJ,KAAKq2C,OAASr2C,KAAKuxD,kBAC7BvxD,KAAKkqC,eACLlqC,KAAK6xD,0BAEP7xD,KAAKquD,yBAAyBnuD,KAAK,CACjC,GAAkBwrD,WAClBoG,EACAlD,EACA5uD,KAAKy5C,mBAELz5C,KAAKwxD,SACLxxD,KAAKyxD,SACLzxD,KAAK0xD,QACL,EACA1xD,KAAK2xD,SACL3xD,KAAK4xD,SACL5xD,KAAK2pC,gBACL3pC,KAAK6pC,UACL7pC,KAAK8pC,OACL9pC,KAAKq2C,OACLr2C,KAAKkqC,eACLlqC,KAAK6xD,0BAEP7xD,KAAK6vD,YAAYp1C,EACnB,CAKA,MAAAxT,GAgBE,OAfAjH,KAAK8vD,kCAEL9vD,KAAKwxD,cAAWzlD,EAChB/L,KAAKyxD,cAAW1lD,EAChB/L,KAAKy5C,mBAAqB,KAC1Bz5C,KAAKg3C,OAAS,KACdh3C,KAAKuxD,sBAAmBxlD,EACxB/L,KAAK0xD,aAAU3lD,EACf/L,KAAK8pC,YAAS/9B,EACd/L,KAAK0pC,cAAW39B,EAChB/L,KAAK2xD,cAAW5lD,EAChB/L,KAAK4xD,cAAW7lD,EAChB/L,KAAK2pC,qBAAkB59B,EACvB/L,KAAK6pC,eAAY99B,EACjB/L,KAAKq2C,YAAStqC,EACPyD,MAAMvI,QACf,CAMA,aAAAymD,CAAcC,EAAYoE,GACxB,MAAMnvC,EAAS+qC,EAAWljB,YACpBr2B,EAAOu5C,EAAW1iB,UAClB+mB,EAASrE,EAAW3iB,YAC1BhrC,KAAKuxD,iBAAmB5D,EAAW9iB,cAAc7qC,KAAK2qC,YACtD3qC,KAAKwxD,SAAW5uC,EAAO,GACvB5iB,KAAKyxD,SAAW7uC,EAAO,GACvB5iB,KAAKy5C,mBAAqBkU,EAAW/iB,uBACrC5qC,KAAKg3C,OAAS2W,EAAWjjB,SAAS1qC,KAAK2qC,YACvC3qC,KAAK0xD,QAAUt9C,EAAK,GACpBpU,KAAK0pC,SAAWikB,EAAW/1B,aAC3B53B,KAAK2xD,SAAWK,EAAO,GACvBhyD,KAAK4xD,SAAWI,EAAO,GACvBhyD,KAAK2pC,gBAAkBgkB,EAAWtjB,oBAClCrqC,KAAK6pC,UAAY8jB,EAAW3tB,cAC5BhgC,KAAK8pC,OAAS6jB,EAAWnjB,gBACzBxqC,KAAKq2C,OAASjiC,EAAK,GACnBpU,KAAKkqC,eAAiByjB,EAAWpjB,mBACjCvqC,KAAK6xD,wBAA0BE,CACjC,GCzGF,OAxJA,cAAsC,GAOpC,WAAAllD,CAAYgY,EAAWmV,EAAWtqB,EAAYi7B,GAC5Cn7B,MAAMqV,EAAWmV,EAAWtqB,EAAYi7B,EAC1C,CAUA,oBAAAsnB,CAAqBh/C,EAAiBtV,EAAQuG,EAAKgP,GACjD,MAAM4+C,EAAU9xD,KAAK4R,YAAY9R,OAC3B8uD,EAAQ5uD,KAAK6uD,0BACjB57C,EACAtV,EACAuG,EACAgP,GACA,GACA,GAEIg/C,EAA0B,CAC9B,GAAkBrG,gBAClBiG,EACAlD,GAIF,OAFA5uD,KAAKmuD,aAAajuD,KAAKgyD,GACvBlyD,KAAKquD,yBAAyBnuD,KAAKgyD,GAC5BhuD,CACT,CAMA,cAAA0oD,CAAeC,EAAoBpyC,GACjC,MAAM0b,EAAQn2B,KAAKm2B,MACbme,EAAcne,EAAMme,YACpBY,EAAY/e,EAAM+e,UACxB,QAAoBnpC,IAAhBuoC,QAA2CvoC,IAAdmpC,EAC/B,OAEFl1C,KAAK8wD,kBAAkB36B,EAAOn2B,KAAK0wD,aACnC1wD,KAAKyvD,cAAc5C,EAAoBpyC,GACvCza,KAAKquD,yBAAyBnuD,KAC5B,CACE,GAAkB6rD,iBAClB51B,EAAMme,YACNne,EAAM+e,UACN/e,EAAM6f,QACN7f,EAAMsd,SACNtd,EAAMwd,WACNpF,GnB6C6B,GmB1C/B4d,IAEF,MAAMl5C,EAAkB45C,EAAmBpnC,qBACrCvS,EAAS25C,EAAmB/mC,YAClC9lB,KAAKiyD,qBACHh/C,EACA,EACAA,EAAgBnT,OAChBoT,GAEFlT,KAAKquD,yBAAyBnuD,KAAKgsD,IACnClsD,KAAK6vD,YAAYp1C,EACnB,CAMA,mBAAAqyC,CAAoBC,EAAyBtyC,GAC3C,MAAM0b,EAAQn2B,KAAKm2B,MACbme,EAAcne,EAAMme,YACpBY,EAAY/e,EAAM+e,UACxB,QAAoBnpC,IAAhBuoC,QAA2CvoC,IAAdmpC,EAC/B,OAEFl1C,KAAK8wD,kBAAkB36B,EAAOn2B,KAAK0wD,aACnC1wD,KAAKyvD,cAAc1C,EAAyBtyC,GAC5Cza,KAAKquD,yBAAyBnuD,KAC5B,CACE,GAAkB6rD,iBAClB51B,EAAMme,YACNne,EAAM+e,UACN/e,EAAM6f,QACN7f,EAAMsd,SACNtd,EAAMwd,WACNpF,GnBO6B,GmBJ/B4d,IAEF,MAAMzlC,EAAOqmC,EAAwBlhC,UAC/B5Y,EAAkB85C,EAAwBtnC,qBAC1CvS,EAAS65C,EAAwBjnC,YACvC,IAAInoB,EAAS,EACb,IAAK,IAAIU,EAAI,EAAGyT,EAAK4U,EAAK5mB,OAAQzB,EAAIyT,IAAMzT,EAC1CV,EAASqC,KAAKiyD,qBACZh/C,EACAtV,EACuB+oB,EAAKroB,GAC5B6U,GAGJlT,KAAKquD,yBAAyBnuD,KAAKgsD,IACnClsD,KAAK6vD,YAAYp1C,EACnB,CAKA,MAAAxT,GACE,MAAMkvB,EAAQn2B,KAAKm2B,MASnB,OAPsBpqB,MAApBoqB,EAAMg8B,YACNh8B,EAAMg8B,YAAcnyD,KAAK4R,YAAY9R,QAErCE,KAAKmuD,aAAajuD,KAAKgsD,IAEzBlsD,KAAK8vD,kCACL9vD,KAAKm2B,MAAQ,KACN3mB,MAAMvI,QACf,CAKA,WAAAypD,CAAYv6B,GAEYpqB,MAApBoqB,EAAMg8B,YACNh8B,EAAMg8B,YAAcnyD,KAAK4R,YAAY9R,SAErCE,KAAKmuD,aAAajuD,KAAKgsD,IACvB/1B,EAAMg8B,WAAanyD,KAAK4R,YAAY9R,QAEtCq2B,EAAMg8B,WAAa,EACnB3iD,MAAMkhD,YAAYv6B,GAClBn2B,KAAKmuD,aAAajuD,KAAKisD,GACzB,GCqGF,OAnPA,cAAmC,GAOjC,WAAAt/C,CAAYgY,EAAWmV,EAAWtqB,EAAYi7B,GAC5Cn7B,MAAMqV,EAAWmV,EAAWtqB,EAAYi7B,EAC1C,CAUA,qBAAAynB,CAAsBn/C,EAAiBtV,EAAQ+oB,EAAMxT,GACnD,MAAMijB,EAAQn2B,KAAKm2B,MACb8b,OAA2BlmC,IAApBoqB,EAAM8e,UACbvC,OAA+B3mC,IAAtBoqB,EAAMme,YACf5hB,EAAUhM,EAAK5mB,OACrBE,KAAKmuD,aAAajuD,KAAKisD,IACvBnsD,KAAKquD,yBAAyBnuD,KAAKisD,IACnC,IAAK,IAAI9tD,EAAI,EAAGA,EAAIq0B,IAAWr0B,EAAG,CAChC,MAAM6F,EAAMwiB,EAAKroB,GACXyzD,EAAU9xD,KAAK4R,YAAY9R,OAC3B8uD,EAAQ5uD,KAAK6uD,0BACjB57C,EACAtV,EACAuG,EACAgP,GACA,GACCw/B,GAEGwf,EAA0B,CAC9B,GAAkBrG,gBAClBiG,EACAlD,GAEF5uD,KAAKmuD,aAAajuD,KAAKgyD,GACvBlyD,KAAKquD,yBAAyBnuD,KAAKgyD,GAC/Bxf,IAGF1yC,KAAKmuD,aAAajuD,KAAKksD,IACvBpsD,KAAKquD,yBAAyBnuD,KAAKksD,KAErCzuD,EAASuG,CACX,CASA,OARI+tC,IACFjyC,KAAKmuD,aAAajuD,KAAK+rD,IACvBjsD,KAAKquD,yBAAyBnuD,KAAK+rD,KAEjCvZ,IACF1yC,KAAKmuD,aAAajuD,KAAKgsD,IACvBlsD,KAAKquD,yBAAyBnuD,KAAKgsD,KAE9BvuD,CACT,CAMA,UAAA4uD,CAAWC,EAAgB/xC,GACzB,MAAM0b,EAAQn2B,KAAKm2B,MACb8e,EAAY9e,EAAM8e,UAClBX,EAAcne,EAAMme,YAC1B,QAAkBvoC,IAAdkpC,QAA2ClpC,IAAhBuoC,EAC7B,OAEFt0C,KAAKqyD,uBACLryD,KAAKyvD,cAAcjD,EAAgB/xC,QACX1O,IAApBoqB,EAAM8e,WACRj1C,KAAKquD,yBAAyBnuD,KAAK,CACjC,GAAkB4rD,eAClBzd,UAGsBtiC,IAAtBoqB,EAAMme,aACRt0C,KAAKquD,yBAAyBnuD,KAAK,CACjC,GAAkB6rD,iBAClB51B,EAAMme,YACNne,EAAM+e,UACN/e,EAAM6f,QACN7f,EAAMsd,SACNtd,EAAMwd,WACNpF,GpBQ6B,IoBJjC,MAAMt7B,EAAkBu5C,EAAe/mC,qBACjCvS,EAASs5C,EAAe1mC,YACxBgsC,EAAU9xD,KAAK4R,YAAY9R,OACjCE,KAAK6uD,0BACH57C,EACA,EACAA,EAAgBnT,OAChBoT,GACA,GACA,GAEF,MAAMo/C,EAAoB,CAAC,GAAkBhH,OAAQwG,GACrD9xD,KAAKmuD,aAAajuD,KAAKisD,GAAsBmG,GAC7CtyD,KAAKquD,yBAAyBnuD,KAAKisD,GAAsBmG,QACjCvmD,IAApBoqB,EAAM8e,YACRj1C,KAAKmuD,aAAajuD,KAAK+rD,IACvBjsD,KAAKquD,yBAAyBnuD,KAAK+rD,UAEXlgD,IAAtBoqB,EAAMme,cACRt0C,KAAKmuD,aAAajuD,KAAKgsD,IACvBlsD,KAAKquD,yBAAyBnuD,KAAKgsD,KAErClsD,KAAK6vD,YAAYp1C,EACnB,CAMA,WAAA6yC,CAAYC,EAAiB9yC,GAC3B,MAAM0b,EAAQn2B,KAAKm2B,MACb8e,EAAY9e,EAAM8e,UAClBX,EAAcne,EAAMme,YAC1B,QAAkBvoC,IAAdkpC,QAA2ClpC,IAAhBuoC,EAC7B,OAEFt0C,KAAKqyD,uBACLryD,KAAKyvD,cAAclC,EAAiB9yC,QACZ1O,IAApBoqB,EAAM8e,WACRj1C,KAAKquD,yBAAyBnuD,KAAK,CACjC,GAAkB4rD,eAClBzd,UAGsBtiC,IAAtBoqB,EAAMme,aACRt0C,KAAKquD,yBAAyBnuD,KAAK,CACjC,GAAkB6rD,iBAClB51B,EAAMme,YACNne,EAAM+e,UACN/e,EAAM6f,QACN7f,EAAMsd,SACNtd,EAAMwd,WACNpF,GpBhD6B,IoBoDjC,MAAM7nB,EAAO6mC,EAAgB1hC,UACvB5Y,EAAkBs6C,EAAgBn/B,6BAClClb,EAASq6C,EAAgBznC,YAC/B9lB,KAAKoyD,sBACHn/C,EACA,EAC6B,EAC7BC,GAEFlT,KAAK6vD,YAAYp1C,EACnB,CAMA,gBAAAyyC,CAAiBC,EAAsB1yC,GACrC,MAAM0b,EAAQn2B,KAAKm2B,MACb8e,EAAY9e,EAAM8e,UAClBX,EAAcne,EAAMme,YAC1B,QAAkBvoC,IAAdkpC,QAA2ClpC,IAAhBuoC,EAC7B,OAEFt0C,KAAKqyD,uBACLryD,KAAKyvD,cAActC,EAAsB1yC,QACjB1O,IAApBoqB,EAAM8e,WACRj1C,KAAKquD,yBAAyBnuD,KAAK,CACjC,GAAkB4rD,eAClBzd,UAGsBtiC,IAAtBoqB,EAAMme,aACRt0C,KAAKquD,yBAAyBnuD,KAAK,CACjC,GAAkB6rD,iBAClB51B,EAAMme,YACNne,EAAM+e,UACN/e,EAAM6f,QACN7f,EAAMsd,SACNtd,EAAMwd,WACNpF,GpB3F6B,IoB+FjC,MAAMhmB,EAAQ4kC,EAAqB19B,WAC7Bxc,EAAkBk6C,EAAqB/+B,6BACvClb,EAASi6C,EAAqBrnC,YACpC,IAAInoB,EAAS,EACb,IAAK,IAAIU,EAAI,EAAGyT,EAAKyW,EAAMzoB,OAAQzB,EAAIyT,IAAMzT,EAC3CV,EAASqC,KAAKoyD,sBACZn/C,EACAtV,EACA4qB,EAAMlqB,GACN6U,GAGJlT,KAAK6vD,YAAYp1C,EACnB,CAKA,MAAAxT,GACEjH,KAAK8vD,kCACL9vD,KAAKm2B,MAAQ,KAKb,MAAMtR,EAAY7kB,KAAK6kB,UACvB,GAAkB,IAAdA,EAAiB,CACnB,MAAMjT,EAAc5R,KAAK4R,YACzB,IAAK,IAAIvT,EAAI,EAAGyT,EAAKF,EAAY9R,OAAQzB,EAAIyT,IAAMzT,EACjDuT,EAAYvT,GAAKypB,GAAKlW,EAAYvT,GAAIwmB,EAE1C,CACA,OAAOrV,MAAMvI,QACf,CAKA,oBAAAorD,GACE,MAAMl8B,EAAQn2B,KAAKm2B,WAEDpqB,IADAoqB,EAAM8e,WAEtBj1C,KAAK4wD,gBAAgBz6B,EAAOn2B,KAAKywD,iBAET1kD,IAAtBoqB,EAAMme,aACRt0C,KAAK8wD,kBAAkB36B,EAAOn2B,KAAK0wD,YAEvC,GCtPK,SAAS6B,GAAUC,EAAav/C,EAAiBtV,EAAQuG,EAAKgP,GACnE,MAAMu/C,EAAS,GACf,IAAIC,EAAS/0D,EACTg1D,EAAS,EACTC,EAAe3/C,EAAgBtT,MAAMhC,EAAQ,GACjD,KAAOg1D,EAASH,GAAeE,EAASx/C,EAAShP,GAAK,CACpD,MAAO4R,EAAIC,GAAM68C,EAAajzD,OAAO,GAC/BqW,EAAK/C,EAAgBy/C,EAASx/C,GAC9B+C,EAAKhD,EAAgBy/C,EAASx/C,EAAS,GACvCka,EAAgB1uB,KAAKuK,MACxB+M,EAAKF,IAAOE,EAAKF,IAAOG,EAAKF,IAAOE,EAAKF,IAG5C,GADA48C,GAAUvlC,EACNulC,GAAUH,EAAa,CACzB,MAAMx0D,GAAKw0D,EAAcG,EAASvlC,GAAiBA,EAC7CjkB,EAAIgN,GAAKL,EAAIE,EAAIhY,GACjBmS,EAAIgG,GAAKJ,EAAIE,EAAIjY,GACvB40D,EAAa1yD,KAAKiJ,EAAGgH,GACrBsiD,EAAOvyD,KAAK0yD,GACZA,EAAe,CAACzpD,EAAGgH,GACfwiD,GAAUH,IACZE,GAAUx/C,GAEZy/C,EAAS,CACX,MAAO,GAAIA,EAASH,EAClBI,EAAa1yD,KACX+S,EAAgBy/C,EAASx/C,GACzBD,EAAgBy/C,EAASx/C,EAAS,IAEpCw/C,GAAUx/C,MACL,CACL,MAAM2/C,EAAUzlC,EAAgBulC,EAC1BxpD,EAAIgN,GAAKL,EAAIE,EAAI68C,EAAUzlC,GAC3Bjd,EAAIgG,GAAKJ,EAAIE,EAAI48C,EAAUzlC,GACjCwlC,EAAa1yD,KAAKiJ,EAAGgH,GACrBsiD,EAAOvyD,KAAK0yD,GACZA,EAAe,CAACzpD,EAAGgH,GACnBwiD,EAAS,EACTD,GAAUx/C,CACZ,CACF,CAIA,OAHIy/C,EAAS,GACXF,EAAOvyD,KAAK0yD,GAEPH,CACT,CC3CO,SAASK,GAAc/V,EAAU9pC,EAAiBtV,EAAQuG,EAAKgP,GACpE,IAKI6/C,EAAM10D,EAAG20D,EAAKC,EAAKn9C,EAAIC,EAAIm9C,EAAKC,EAAKC,EAAKC,EAL1CC,EAAa31D,EACb41D,EAAW51D,EACXg1D,EAAS,EACT30D,EAAI,EACJgsB,EAAQrsB,EAEZ,IAAKU,EAAIV,EAAQU,EAAI6F,EAAK7F,GAAK6U,EAAQ,CACrC,MAAM8C,EAAK/C,EAAgB5U,GACrB4X,EAAKhD,EAAgB5U,EAAI,QACpB0N,IAAP+J,IACFs9C,EAAMp9C,EAAKF,EACXu9C,EAAMp9C,EAAKF,EACXk9C,EAAMv0D,KAAKuK,KAAKmqD,EAAMA,EAAMC,EAAMA,QACtBtnD,IAARmnD,IACFl1D,GAAKg1D,EACLD,EAAOr0D,KAAKq0D,MAAMG,EAAME,EAAMD,EAAME,IAAQL,EAAMC,IAC9CF,EAAOhW,IACL/+C,EAAI20D,IACNA,EAAS30D,EACTs1D,EAAatpC,EACbupC,EAAWl1D,GAEbL,EAAI,EACJgsB,EAAQ3rB,EAAI6U,IAGhB8/C,EAAMC,EACNC,EAAME,EACND,EAAME,GAERv9C,EAAKE,EACLD,EAAKE,CACP,CAEA,OADAjY,GAAKi1D,EACEj1D,EAAI20D,EAAS,CAAC3oC,EAAO3rB,GAAK,CAACi1D,EAAYC,EAChD,CCpBO,MAAMC,GAAa,CACxB,KAAQ,EACR,OAAU,GACV,MAAS,EACT,IAAO,EACP,OAAU,GACV,QAAW,GACX,WAAc,GACd,YAAe,GACf,OAAU,GA+mBZ,OA5mBA,cAAgC,GAO9B,WAAA3mD,CAAYgY,EAAWmV,EAAWtqB,EAAYi7B,GAC5Cn7B,MAAMqV,EAAWmV,EAAWtqB,EAAYi7B,GAMxC3qC,KAAKyzD,QAAU,KAMfzzD,KAAKo3C,MAAQ,GAMbp3C,KAAK0zD,aAAe,EAMpB1zD,KAAK2zD,aAAe,EAMpB3zD,KAAK4zD,yBAAsB7nD,EAM3B/L,KAAK6zD,cAAgB,EAMrB7zD,KAAK8zD,eAAiB,KAKtB9zD,KAAK+zD,WAAa,CAAC,EACnB/zD,KAAK+zD,WAAW1lB,IAAoB,CAAC4G,UAAW5G,IAMhDruC,KAAKg0D,iBAAmB,KAKxBh0D,KAAKi0D,aAAe,CAAC,EAMrBj0D,KAAKk0D,WAA6D,CAAG,EAKrEl0D,KAAKm0D,WAAa,CAAC,EAMnBn0D,KAAKo0D,SAAW,GAMhBp0D,KAAKq0D,SAAW,GAMhBr0D,KAAKs0D,WAAa,GAOlBt0D,KAAK6xD,6BAA0B9lD,CACjC,CAKA,MAAA9E,GACE,MAAMknD,EAAe3+C,MAAMvI,SAI3B,OAHAknD,EAAagG,WAAan0D,KAAKm0D,WAC/BhG,EAAa4F,WAAa/zD,KAAK+zD,WAC/B5F,EAAa8F,aAAej0D,KAAKi0D,aAC1B9F,CACT,CAMA,QAAAX,CAAS3yC,EAAUJ,GACjB,MAAM85C,EAAYv0D,KAAK8zD,eACjBU,EAAcx0D,KAAKg0D,iBACnBS,EAAYz0D,KAAKk0D,WACvB,GAAmB,KAAfl0D,KAAKo3C,QAAiBqd,IAAeF,IAAcC,EACrD,OAGF,MAAM5iD,EAAc5R,KAAK4R,YACzB,IAAI+J,EAAQ/J,EAAY9R,OAExB,MAAM2yB,EAAe5X,EAAST,UAC9B,IAAInH,EAAkB,KAClBC,EAAS2H,EAASiL,YAEtB,GAC0B,SAAxB2uC,EAAUxX,WACO,cAAhBxqB,GACiB,mBAAhBA,GACgB,WAAhBA,GACgB,gBAAhBA,EAsEG,CACL,IAAIiiC,EAAiBD,EAAUtX,SAAW,KAAO,GACjD,OAAQ1qB,GACN,IAAK,QACL,IAAK,aACHxf,EAC4D,EAExDwS,qBACJ,MACF,IAAK,aACHxS,EAC4D,EAExDqY,kBACJ,MACF,IAAK,SACHrY,EACwD,EAEpDa,YACJ,MACF,IAAK,kBACHb,EACiE,EAE7D+Y,mBACJ9Y,EAAS,EACT,MACF,IAAK,UACHD,EACyD,EAErDob,uBACComC,EAAUtX,UACbuX,EAAex0D,KAAK+S,EAAgB,GAAKjT,KAAK0P,YAEhDwD,EAAS,EACT,MACF,IAAK,eACH,MAAMoa,EACwD,EAE1DoC,wBACJzc,EAAkB,GAClB,IAAK,IAAI5U,EAAI,EAAGyT,EAAKwb,EAAextB,OAAQzB,EAAIyT,EAAIzT,GAAK,EAClDo2D,EAAUtX,UACbuX,EAAex0D,KAAKotB,EAAejvB,EAAI,GAAK2B,KAAK0P,YAEnDuD,EAAgB/S,KAAKotB,EAAejvB,GAAIivB,EAAejvB,EAAI,IAE7D,GAA+B,IAA3B4U,EAAgBnT,OAClB,OAEFoT,EAAS,EAIb,MAAMhP,EAAMlE,KAAKyuD,2BAA2Bx7C,EAAiBC,GAC7D,GAAIhP,IAAQyX,EACV,OAEF,GACE+4C,IACCxwD,EAAMyX,GAAS,GAAM1I,EAAgBnT,OAASoT,EAC/C,CACA,IAAIyhD,EAAMh5C,EAAQ,EAClB+4C,EAAiBA,EAAevyB,QAAO,CAACI,EAAGlkC,KACzC,MAAMu2D,EACJhjD,EAAwB,GAAX+iD,EAAMt2D,MAAY4U,EAAgB5U,EAAI6U,IACnDtB,EAAwB,GAAX+iD,EAAMt2D,GAAS,KAAO4U,EAAgB5U,EAAI6U,EAAS,GAIlE,OAHK0hD,KACDD,EAEGC,CAAI,GAEf,CAEA50D,KAAK60D,mBAEDJ,EAAUlX,gBAAkBkX,EAAUhX,oBACxCz9C,KAAKytD,mBACHgH,EAAUlX,eACVkX,EAAUhX,kBAERgX,EAAUlX,gBACZv9C,KAAK4wD,gBAAgB5wD,KAAKm2B,MAAOn2B,KAAKywD,YAEpCgE,EAAUhX,mBACZz9C,KAAK8wD,kBAAkB9wD,KAAKm2B,MAAOn2B,KAAK0wD,aACxC1wD,KAAKquD,yBAAyBnuD,KAAKF,KAAK2wD,aAAa3wD,KAAKm2B,UAI9Dn2B,KAAKyvD,cAAc50C,EAAUJ,GAG7B,IAAI6jB,EAAUm2B,EAAUn2B,QACxB,GACEA,GAAWsQ,KACV6lB,EAAU9vC,MAAM,GAAK,GAAK8vC,EAAU9vC,MAAM,GAAK,GAChD,CACA,IAAImwC,EAAKL,EAAUn2B,QAAQ,GACvBy2B,EAAKN,EAAUn2B,QAAQ,GACvB02B,EAAKP,EAAUn2B,QAAQ,GACvB22B,EAAKR,EAAUn2B,QAAQ,GACvBm2B,EAAU9vC,MAAM,GAAK,IACvBowC,GAAMA,EACNE,GAAMA,GAEJR,EAAU9vC,MAAM,GAAK,IACvBmwC,GAAMA,EACNE,GAAMA,GAER12B,EAAU,CAACw2B,EAAIC,EAAIC,EAAIC,EACzB,CAKA,MAAMtqB,EAAa3qC,KAAK2qC,WACxB3qC,KAAKmuD,aAAajuD,KAAK,CACrB,GAAkBwrD,WAClB/vC,EACAzX,EACA,KACA1F,IACAA,IACAA,IACA,EACA,EACA,EACAwB,KAAK4zD,oBACL5zD,KAAK6zD,cACL,CAAC,EAAG,GACJr1D,SACAuN,EACA/L,KAAK6xD,wBACLvzB,GAAWsQ,GACPA,GACAtQ,EAAQiJ,KAAI,SAAUziC,GACpB,OAAOA,EAAI6lC,CACb,MACF8pB,EAAUlX,iBACVkX,EAAUhX,iBACZz9C,KAAKo3C,MACLp3C,KAAKo0D,SACLp0D,KAAKs0D,WACLt0D,KAAKq0D,SACLr0D,KAAK0zD,aACL1zD,KAAK2zD,aACLe,IAEF,MAAM/vC,EAAQ,EAAIgmB,EAEZkmB,EAAmB7wD,KAAKm2B,MAAM8e,UAChCwf,EAAUlX,iBACZv9C,KAAKm2B,MAAM8e,UAAY5G,GACvBruC,KAAKquD,yBAAyBnuD,KAAKF,KAAKywD,WAAWzwD,KAAKm2B,SAE1Dn2B,KAAKquD,yBAAyBnuD,KAAK,CACjC,GAAkBwrD,WAClB/vC,EACAzX,EACA,KACA1F,IACAA,IACAA,IACA,EACA,EACA,EACAwB,KAAK4zD,oBACL5zD,KAAK6zD,cACL,CAAClvC,EAAOA,GACRnmB,SACAuN,EACA/L,KAAK6xD,wBACLvzB,IACEm2B,EAAUlX,iBACVkX,EAAUhX,iBACZz9C,KAAKo3C,MACLp3C,KAAKo0D,SACLp0D,KAAKs0D,WACLt0D,KAAKq0D,SAAWhmB,GAAmBruC,KAAKq0D,SACxCr0D,KAAK0zD,aACL1zD,KAAK2zD,aACLe,IAGED,EAAUlX,iBACZv9C,KAAKm2B,MAAM8e,UAAY4b,EACvB7wD,KAAKquD,yBAAyBnuD,KAAKF,KAAKywD,WAAWzwD,KAAKm2B,SAG1Dn2B,KAAK6vD,YAAYp1C,EACnB,KAxQE,CACA,IAAK1F,GAAW/U,KAAK0uD,uBAAwB7zC,EAAS3M,aACpD,OAEF,IAAIwY,EAEJ,GADAzT,EAAkB4H,EAAS4K,qBACP,cAAhBgN,EACF/L,EAAO,CAACzT,EAAgBnT,aACnB,GAAoB,mBAAhB2yB,EACT/L,EAAsE,EAEpEmF,eACG,GAAoB,WAAhB4G,EACT/L,EAA8D,EAC3DmF,UACAlsB,MAAM,EAAG,QACP,GAAoB,gBAAhB8yB,EAAgC,CACzC,MAAMlK,EACwD,EAE1DkH,WACJ/I,EAAO,GACP,IAAK,IAAIroB,EAAI,EAAGyT,EAAKyW,EAAMzoB,OAAQzB,EAAIyT,IAAMzT,EAC3CqoB,EAAKxmB,KAAKqoB,EAAMlqB,GAAG,GAEvB,CACA2B,KAAKyvD,cAAc50C,EAAUJ,GAC7B,MAAMkiC,EAAS8X,EAAU9X,OACnBJ,EAAYI,OAAS5wC,EAAY0oD,EAAUlY,UAEjD,IAAI2Y,EAAa,EACjB,IAAK,IAAIrsD,EAAI,EAAGssD,EAAKzuC,EAAK5mB,OAAQ+I,EAAIssD,IAAMtsD,EAAG,CAC7C,IAAI4pD,EAEFA,EADE9V,EACO4V,GACP5V,EAAS38C,KAAK0P,WACduD,EACAiiD,EACAxuC,EAAK7d,GACLqK,GAGO,CAACD,EAAgBtT,MAAMu1D,EAAYxuC,EAAK7d,KAEnD,IAAK,IAAI/J,EAAI,EAAGs2D,EAAK3C,EAAO3yD,OAAQhB,EAAIs2D,IAAMt2D,EAAG,CAC/C,MAAMu2D,EAAQ5C,EAAO3zD,GACrB,IAAIw2D,EAAa,EACb/B,EAAW8B,EAAMv1D,OACrB,GAAiBiM,MAAbwwC,EAAwB,CAC1B,MAAMgZ,EAAQzC,GACZ2B,EAAU1X,SACVsY,EACA,EACAA,EAAMv1D,OACN,GAEFw1D,EAAaC,EAAM,GACnBhC,EAAWgC,EAAM,EACnB,CACA,IAAK,IAAIl3D,EAAIi3D,EAAYj3D,EAAIk1D,EAAUl1D,GAAK6U,EAC1CtB,EAAY1R,KAAKm1D,EAAMh3D,GAAIg3D,EAAMh3D,EAAI,IAEvC,MAAM6F,EAAM0N,EAAY9R,OACxBo1D,EAAaxuC,EAAK7d,GAClB7I,KAAKw1D,WAAW75C,EAAOzX,GACvByX,EAAQzX,CACV,CACF,CACAlE,KAAK6vD,YAAYp1C,EACnB,CAoMF,CAKA,eAAAo6C,GACE,MAAML,EAAcx0D,KAAKg0D,iBACnBS,EAAYz0D,KAAKk0D,WACjBK,EAAYv0D,KAAK8zD,eAEjB2B,EAAYz1D,KAAKs0D,WACnBE,IACIiB,KAAaz1D,KAAKi0D,eACtBj0D,KAAKi0D,aAAawB,GAAa,CAC7BnhB,YAAakgB,EAAYlgB,YACzB0B,QAASwe,EAAYxe,QACrBxB,eAAgBggB,EAAYhgB,eAC5BU,UAAWsf,EAAYtf,UACvBzB,SAAU+gB,EAAY/gB,SACtBE,WAAY6gB,EAAY7gB,WACxBY,SAAUigB,EAAYjgB,YAI5B,MAAMmhB,EAAU11D,KAAKo0D,SACfsB,KAAW11D,KAAKm0D,aACpBn0D,KAAKm0D,WAAWuB,GAAW,CACzB5lB,KAAM2kB,EAAU3kB,KAChByM,UAAWkY,EAAUlY,WAAa7N,GAClC+N,QAASgY,EAAUhY,QACnBI,aAAc4X,EAAU5X,cAAgBlO,GACxChqB,MAAO8vC,EAAU9vC,QAGrB,MAAMgxC,EAAU31D,KAAKq0D,SACjBE,IACIoB,KAAW31D,KAAK+zD,aACpB/zD,KAAK+zD,WAAW4B,GAAW,CACzB1gB,UAAWsf,EAAUtf,YAI7B,CAOA,UAAAugB,CAAW75C,EAAOzX,GAChB,MAAMswD,EAAcx0D,KAAKg0D,iBACnBS,EAAYz0D,KAAKk0D,WAEjBuB,EAAYz1D,KAAKs0D,WACjBoB,EAAU11D,KAAKo0D,SACfuB,EAAU31D,KAAKq0D,SACrBr0D,KAAK60D,kBAEL,MAAMlqB,EAAa3qC,KAAK2qC,WAClBirB,EAAWpC,GAAWiB,EAAU5X,cAEhCjd,EAAU5/B,KAAK2zD,aAAehpB,EAC9BsE,EAAOjvC,KAAKo3C,MACZ1D,EAAc8gB,EACfA,EAAYtf,UAAYx2C,KAAKM,IAAIy1D,EAAU9vC,MAAM,IAAO,EACzD,EAEJ3kB,KAAKmuD,aAAajuD,KAAK,CACrB,GAAkBurD,WAClB9vC,EACAzX,EACA0xD,EACAnB,EAAUtX,SACVwY,EACAlB,EAAU1X,SACVpS,EACA/K,EACA61B,EACA/hB,EAAc/I,EACdsE,EACAymB,EACA,IAEF11D,KAAKquD,yBAAyBnuD,KAAK,CACjC,GAAkBurD,WAClB9vC,EACAzX,EACA0xD,EACAnB,EAAUtX,SACVwY,EAAUtnB,GAAmBsnB,EAC7BlB,EAAU1X,SACVpS,EACA/K,EACA61B,EACA/hB,EAAc/I,EACdsE,EACAymB,EACA,EAAI/qB,GAER,CAMA,YAAAkjB,CAAaC,EAAWiE,GACtB,IAAI0C,EAAWF,EAAWC,EAC1B,GAAK1G,EAEE,CACL,MAAM+H,EAAgB/H,EAAUjb,UAC3BgjB,GAIHtB,EAAYv0D,KAAK8zD,eACZS,IACHA,EAA4D,CAAG,EAC/Dv0D,KAAK8zD,eAAiBS,GAExBA,EAAUtf,UAAYlI,GACpB8oB,EAAcphB,YAAcpG,MAT9BkmB,EAAY,KACZv0D,KAAK8zD,eAAiBS,GAYxB,MAAMuB,EAAkBhI,EAAU7a,YAClC,GAAK6iB,EAGE,CACLtB,EAAcx0D,KAAKg0D,iBACdQ,IACHA,EAAgE,CAAG,EACnEx0D,KAAKg0D,iBAAmBQ,GAE1B,MAAMjgB,EAAWuhB,EAAgBnhB,cAC3BH,EAAiBshB,EAAgBlhB,oBACjCM,EAAY4gB,EAAgBphB,WAC5Bf,EAAamiB,EAAgBhhB,gBACnC0f,EAAYxe,QAAU8f,EAAgBxf,cAAgBhI,GACtDkmB,EAAYjgB,SAAWA,EAAWA,EAAS50C,QAAU4uC,GACrDimB,EAAYhgB,oBACSzoC,IAAnByoC,EvB3d2B,EuB2d4BA,EACzDggB,EAAY/gB,SAAWqiB,EAAgBjhB,eAAiBrG,GACxDgmB,EAAYtf,eACInpC,IAAdmpC,EvBpbsB,EuBobuBA,EAC/Csf,EAAY7gB,gBACK5nC,IAAf4nC,EvBpduB,GuBodwBA,EACjD6gB,EAAYlgB,YAAcvH,GACxB+oB,EAAgBrhB,YAAchG,GAElC,MAxBE+lB,EAAc,KACdx0D,KAAKg0D,iBAAmBQ,EAyB1BC,EAAYz0D,KAAKk0D,WACjB,MAAMpkB,EAAOge,EAAUpQ,WAAatP,GACpC,GAAa0B,GACb,MAAMimB,EAAYjI,EAAUtjB,gBAC5BiqB,EAAUtX,SAAW2Q,EAAUhQ,cAC/B2W,EAAU3kB,KAAOA,EACjB2kB,EAAU1X,SAAW+Q,EAAUjQ,cAC/B4W,EAAUxX,UAAY6Q,EAAUnQ,eAChC8W,EAAUlY,UAAYuR,EAAU/P,eAChC0W,EAAU9X,OAASmR,EAAUlQ,YAC7B6W,EAAUhY,QAAUqR,EAAU9P,aAC9ByW,EAAU5X,aACRiR,EAAU7P,mBAAqBtP,GACjC8lB,EAAUlX,eAAiBuQ,EAAU1P,oBACrCqW,EAAUhX,iBAAmBqQ,EAAUzP,sBACvCoW,EAAUn2B,QAAUwvB,EAAUxP,cAAgB1P,GAC9C6lB,EAAU9vC,WAAsB5Y,IAAdgqD,EAA0B,CAAC,EAAG,GAAKA,EAErD,MAAMC,EAAclI,EAAU5P,aACxB+X,EAAcnI,EAAU3P,aACxB+X,EAAqBpI,EAAUzjB,oBAC/B8rB,EAAerI,EAAU9tB,cAC/BhgC,KAAKo3C,MAAQ0W,EAAUxW,WAAa,GACpCt3C,KAAK0zD,kBAA+B3nD,IAAhBiqD,EAA4B,EAAIA,EACpDh2D,KAAK2zD,kBAA+B5nD,IAAhBkqD,EAA4B,EAAIA,EACpDj2D,KAAK4zD,yBACoB7nD,IAAvBmqD,GAA2CA,EAC7Cl2D,KAAK6zD,mBAAiC9nD,IAAjBoqD,EAA6B,EAAIA,EAEtDn2D,KAAKs0D,WAAaE,GACqB,iBAA3BA,EAAYlgB,YAChBkgB,EAAYlgB,YACZ,EAAOkgB,EAAYlgB,cACvBkgB,EAAYxe,QACZwe,EAAYhgB,eACZ,IACAggB,EAAYtf,UACZsf,EAAY/gB,SACZ+gB,EAAY7gB,WACZ,IACA6gB,EAAYjgB,SAAS10C,OACrB,IACA,GACJG,KAAKo0D,SACHK,EAAU3kB,KACV2kB,EAAU9vC,OACT8vC,EAAUlY,WAAa,MACvBkY,EAAU9X,QAAU,MACpB8X,EAAUhY,SAAW,MACrBgY,EAAU5X,cAAgB,KAC7B78C,KAAKq0D,SAAWE,EACkB,iBAAvBA,EAAUtf,UACfsf,EAAUtf,UACV,IAAM,EAAOsf,EAAUtf,WACzB,EACN,MApGEj1C,KAAKo3C,MAAQ,GAqGfp3C,KAAK6xD,wBAA0BE,CACjC,GCroBF,MAAMqE,GAAqB,CACzB,OAAUC,GACV,QAAWC,GACX,MAASC,GACT,WAAcC,GACd,QAAWH,GACX,KAAQI,IAqFV,OAlFA,MAOE,WAAA5pD,CAAYgY,EAAWmV,EAAWtqB,EAAYi7B,GAK5C3qC,KAAK02D,WAAa7xC,EAMlB7kB,KAAK22D,WAAa38B,EAMlBh6B,KAAK42D,YAAcjsB,EAMnB3qC,KAAK62D,YAAcnnD,EAMnB1P,KAAK82D,kBAAoB,CAAC,CAC5B,CAKA,MAAA7vD,GACE,MAAM8vD,EAAsB,CAAC,EAC7B,IAAK,MAAMC,KAAQh3D,KAAK82D,kBAAmB,CACzCC,EAAoBC,GAAQD,EAAoBC,IAAS,CAAC,EAC1D,MAAMC,EAAWj3D,KAAK82D,kBAAkBE,GACxC,IAAK,MAAME,KAAcD,EAAU,CACjC,MAAME,EAAqBF,EAASC,GAAYjwD,SAChD8vD,EAAoBC,GAAME,GAAcC,CAC1C,CACF,CACA,OAAOJ,CACT,CAOA,UAAAK,CAAWrgC,EAAQsgC,GACjB,MAAMC,OAAuBvrD,IAAXgrB,EAAuBA,EAAOwgC,WAAa,IAC7D,IAAIC,EAAUx3D,KAAK82D,kBAAkBQ,QACrBvrD,IAAZyrD,IACFA,EAAU,CAAC,EACXx3D,KAAK82D,kBAAkBQ,GAAaE,GAEtC,IAAIC,EAASD,EAAQH,GACrB,QAAetrD,IAAX0rD,EAAsB,CAExBA,EAAS,IAAIC,EADOtB,GAAmBiB,IAErCr3D,KAAK02D,WACL12D,KAAK22D,WACL32D,KAAK62D,YACL72D,KAAK42D,aAEPY,EAAQH,GAAeI,CACzB,CACA,OAAOA,CACT,GC/EK,SAASE,GACd1kD,EACAtV,EACAuG,EACAgP,EACA+7B,EACA2oB,EACA7a,EACAp4B,EACAmsB,EACAhB,EACAv/B,EACA4D,GAEA,IAAI6B,EAAK/C,EAAgBtV,GACrBsY,EAAKhD,EAAgBtV,EAAS,GAC9BmY,EAAK,EACLC,EAAK,EACLqX,EAAgB,EAChByqC,EAAW,EAEf,SAASC,IACPhiD,EAAKE,EACLD,EAAKE,EAELD,EAAK/C,EADLtV,GAAUuV,GAEV+C,EAAKhD,EAAgBtV,EAAS,GAC9Bk6D,GAAYzqC,EACZA,EAAgB1uB,KAAKuK,MAAM+M,EAAKF,IAAOE,EAAKF,IAAOG,EAAKF,IAAOE,EAAKF,GACtE,CACA,GACE+hD,UACOn6D,EAASuG,EAAMgP,GAAU2kD,EAAWzqC,EAAgBwqC,GAE7D,IAAIjsC,EACgB,IAAlByB,EAAsB,GAAKwqC,EAASC,GAAYzqC,EAClD,MAAM2qC,EAAS5hD,GAAKL,EAAIE,EAAI2V,GACtBqsC,EAAS7hD,GAAKJ,EAAIE,EAAI0V,GAEtBssC,EAAct6D,EAASuV,EACvBglD,EAAcL,EACdM,EAAOP,EAASjzC,EAAQmsB,EAAyBhB,EAAMb,EAAM1+B,GACnE,KAAO5S,EAASuG,EAAMgP,GAAU2kD,EAAWzqC,EAAgB+qC,GACzDL,IAEFnsC,EAAgC,IAAlByB,EAAsB,GAAK+qC,EAAON,GAAYzqC,EAC5D,MAAM/C,EAAOlU,GAAKL,EAAIE,EAAI2V,GACpBrB,EAAOnU,GAAKJ,EAAIE,EAAI0V,GAG1B,IAAIokC,EACJ,GAAI57C,EAAU,CACZ,MAAMikD,EAAO,CAACL,EAAQC,EAAQ3tC,EAAMC,GACpC,GAAO8tC,EAAM,EAAG,EAAG,EAAGjkD,EAAUikD,EAAMA,GACtCrI,EAAUqI,EAAK,GAAKA,EAAK,EAC3B,MACErI,EAAUgI,EAAS1tC,EAGrB,MAAMzd,EAAKlO,KAAKkO,GACV3I,EAAS,GACTo0D,EAAgBJ,EAAc/kD,IAAWvV,EAQ/C,IAAI26D,EAEJ,GAPAlrC,EAAgB,EAChByqC,EAAWK,EACXliD,EAAK/C,EAHLtV,EAASs6D,GAIThiD,EAAKhD,EAAgBtV,EAAS,GAI1B06D,EAAe,CACjBP,IAEAQ,EAAgB55D,KAAKsY,MAAMf,EAAKF,EAAIC,EAAKF,GACrCi6C,IACFuI,GAAiBA,EAAgB,GAAK1rD,EAAKA,GAE7C,MAAMzD,GAAKkhB,EAAO0tC,GAAU,EACtB5nD,GAAKma,EAAO0tC,GAAU,EAE5B,OADA/zD,EAAO,GAAK,CAACkF,EAAGgH,GAAIgoD,EAAOP,GAAU,EAAGU,EAAerpB,GAChDhrC,CACT,CAKA,IAAK,IAAI5F,EAAI,EAAGyT,GAFhBm9B,EAAOA,EAAKl3B,QAAQ,MAAO,MAEDjY,OAAQzB,EAAIyT,GAAM,CAC1CgmD,IACA,IAAIh2C,EAAQpjB,KAAKsY,MAAMf,EAAKF,EAAIC,EAAKF,GAIrC,GAHIi6C,IACFjuC,GAASA,EAAQ,GAAKlV,EAAKA,QAEPb,IAAlBusD,EAA6B,CAC/B,IAAIt3B,EAAQlf,EAAQw2C,EAEpB,GADAt3B,GAASA,EAAQp0B,GAAM,EAAIA,EAAKo0B,GAASp0B,EAAK,EAAIA,EAAK,EACnDlO,KAAKM,IAAIgiC,GAAS+b,EACpB,OAAO,IAEX,CACAub,EAAgBx2C,EAEhB,MAAMy2C,EAASl6D,EACf,IAAIm6D,EAAa,EACjB,KAAOn6D,EAAIyT,IAAMzT,EAAG,CAClB,MACM8D,EAAMwiB,EAAQmsB,EAAyBhB,EAAMb,EADrC8gB,EAAUj+C,EAAKzT,EAAI,EAAIA,GAC2BkS,GAChE,GACE5S,EAASuV,EAAShP,GAClB2zD,EAAWzqC,EAAgBwqC,EAASY,EAAar2D,EAAM,EAEvD,MAEFq2D,GAAcr2D,CAChB,CACA,GAAI9D,IAAMk6D,EACR,SAEF,MAAME,EAAQ1I,EACV9gB,EAAKypB,UAAU5mD,EAAKymD,EAAQzmD,EAAKzT,GACjC4wC,EAAKypB,UAAUH,EAAQl6D,GAC3BstB,EACoB,IAAlByB,EACI,GACCwqC,EAASY,EAAa,EAAIX,GAAYzqC,EAC7C,MAAMjkB,EAAIgN,GAAKL,EAAIE,EAAI2V,GACjBxb,EAAIgG,GAAKJ,EAAIE,EAAI0V,GACvB1nB,EAAO/D,KAAK,CAACiJ,EAAGgH,EAAGqoD,EAAa,EAAG12C,EAAO22C,IAC1Cb,GAAUY,CACZ,CACA,OAAOv0D,CACT,CC9FA,MAAM00D,G9F0IG,CAACl6D,IAAUA,KAAU,KAAW,K8FvInCs2D,GAAK,GAELC,GAAK,GAELC,GAAK,GAEL2D,GAAK,GAMX,SAASC,GAAgBC,GACvB,OAAOA,EAAuB,GAAGC,YACnC,CAEA,MAAMC,GAAW,IAAItrB,OAEnB,IACEznC,OAAOC,aAAa,MAAW,IAAMD,OAAOC,aAAa,MACzDD,OAAOC,aAAa,OAAW,IAAMD,OAAOC,aAAa,OACzDD,OAAOC,aAAa,OAAW,IAAMD,OAAOC,aAAa,OACzDD,OAAOC,aAAa,OAAW,IAAMD,OAAOC,aAAa,OACzDD,OAAOC,aAAa,QAAW,IAAMD,OAAOC,aAAa,QAC3D,KASF,SAAS+yD,GAAoBhqB,EAAMiqB,GAMjC,MALc,UAAVA,EACFA,EAAQF,GAAS34C,KAAK4uB,GAAQ,QAAU,OACrB,QAAViqB,IACTA,EAAQF,GAAS34C,KAAK4uB,GAAQ,OAAS,SAElCukB,GAAW0F,EACpB,CAQA,SAASC,GAAiBC,EAAKC,EAAMh7D,GAKnC,OAJIA,EAAI,GACN+6D,EAAIl5D,KAAK,KAAM,IAEjBk5D,EAAIl5D,KAAKm5D,EAAM,IACRD,CACT,CAsnCA,OApnCA,MAOE,WAAAvsD,CAAY6C,EAAYi7B,EAAY2uB,EAAUnL,GAK5CnuD,KAAKs5D,SAAWA,EAMhBt5D,KAAK2qC,WAAaA,EAOlB3qC,KAAK0P,WAAaA,EAMlB1P,KAAKu5D,WAMLv5D,KAAKmuD,aAAeA,EAAaA,aAMjCnuD,KAAK4R,YAAcu8C,EAAav8C,YAMhC5R,KAAKw5D,iBAAmB,CAAC,EAMzBx5D,KAAKy5D,mB3EzIA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G2E+IrBz5D,KAAKquD,yBAA2BF,EAAaE,yBAM7CruD,KAAK05D,kBAAoB,KAMzB15D,KAAK25D,cAAgB,EAKrB35D,KAAK+zD,WAAa5F,EAAa4F,YAAc,CAAC,EAK9C/zD,KAAKi0D,aAAe9F,EAAa8F,cAAgB,CAAC,EAKlDj0D,KAAKm0D,WAAahG,EAAagG,YAAc,CAAC,EAM9Cn0D,KAAK45D,QAAU,CAAC,EAMhB55D,KAAKyzD,QAAU,CAAC,CAClB,CASA,WAAAoG,CAAY5qB,EAAMymB,EAASC,EAASF,GAClC,MAAM/1D,EAAMuvC,EAAOymB,EAAUC,EAAUF,EACvC,GAAIz1D,KAAKyzD,QAAQ/zD,GACf,OAAOM,KAAKyzD,QAAQ/zD,GAEtB,MAAM80D,EAAciB,EAAYz1D,KAAKi0D,aAAawB,GAAa,KACzDlB,EAAYoB,EAAU31D,KAAK+zD,WAAW4B,GAAW,KACjDlB,EAAYz0D,KAAKm0D,WAAWuB,GAC5B/qB,EAAa3qC,KAAK2qC,WAClBhmB,EAAQ,CACZ8vC,EAAU9vC,MAAM,GAAKgmB,EACrB8pB,EAAU9vC,MAAM,GAAKgmB,GAEjBmvB,EAAc5pD,MAAM4L,QAAQmzB,GAC5BiqB,EAAQzE,EAAUhY,QACpB+W,GAAWiB,EAAUhY,SACrBwc,GACE/oD,MAAM4L,QAAQmzB,GAAQA,EAAK,GAAKA,EAChCwlB,EAAUlY,WAAa7N,IAEvBgF,EACJ+hB,GAAajB,EAAYtf,UAAYsf,EAAYtf,UAAY,EAEzDud,EAASqH,EACX7qB,EACAA,EAAKvC,MAAM,MAAMqE,OAAOooB,GAAkB,KAExC,MAACjkD,EAAK,OAAEpL,EAAM,OAAEiwD,EAAM,QAAEC,EAAO,WAAEC,G1BgHpC,SAA2BC,EAAWzH,GAC3C,MAAMsH,EAAS,GACTC,EAAU,GACVC,EAAa,GACnB,IAAI/kD,EAAQ,EACRggC,EAAY,EACZprC,EAAS,EACTikC,EAAa,EACjB,IAAK,IAAI1vC,EAAI,EAAGyT,EAAK2gD,EAAO3yD,OAAQzB,GAAKyT,EAAIzT,GAAK,EAAG,CACnD,MAAM4wC,EAAOwjB,EAAOp0D,GACpB,GAAa,OAAT4wC,GAAiB5wC,IAAMyT,EAAI,CAC7BoD,EAAQxW,KAAKwK,IAAIgM,EAAOggC,GACxB+kB,EAAW/5D,KAAKg1C,GAChBA,EAAY,EACZprC,GAAUikC,EACV,QACF,CACA,MAAM+B,EAAO2iB,EAAOp0D,EAAI,IAAM67D,EAAUpqB,KAClCqqB,EAAezqB,GAAiBI,EAAMb,GAC5C8qB,EAAO75D,KAAKi6D,GACZjlB,GAAailB,EACb,MAAMC,EAAgBnqB,GAAkBH,GACxCkqB,EAAQ95D,KAAKk6D,GACbrsB,EAAarvC,KAAKwK,IAAI6kC,EAAYqsB,EACpC,CACA,MAAO,CAACllD,QAAOpL,SAAQiwD,SAAQC,UAASC,aAC1C,C0B1IyDI,CACnD5F,EACAhC,GAEI6H,EAAcplD,EAAQw+B,EACtBlC,EAAsB,GAEtBjP,GAAK+3B,EAAc,GAAK31C,EAAM,GAC9B5f,GAAK+E,EAAS4pC,GAAe/uB,EAAM,GAEnC8sB,EAAQ,CACZv8B,MAAOqtB,EAAI,EAAI7jC,KAAKQ,MAAMqjC,GAAK7jC,KAAK4K,KAAKi5B,GACzCz4B,OAAQ/E,EAAI,EAAIrG,KAAKQ,MAAM6F,GAAKrG,KAAK4K,KAAKvE,GAC1CysC,oBAAqBA,GAEP,GAAZ7sB,EAAM,IAAuB,GAAZA,EAAM,IACzB6sB,EAAoBtxC,KAAK,QAASykB,GAEhC8wC,IACFjkB,EAAoBtxC,KAAK,cAAes0D,EAAYlgB,aACpD9C,EAAoBtxC,KAAK,YAAawzC,GACtClC,EAAoBtxC,KAAK,UAAWs0D,EAAYxe,SAChDxE,EAAoBtxC,KAAK,WAAYs0D,EAAY/gB,UACjDjC,EAAoBtxC,KAAK,aAAcs0D,EAAY7gB,YACnDnC,EAAoBtxC,KAAK,cAAe,CAACs0D,EAAYjgB,WACrD/C,EAAoBtxC,KAAK,iBAAkBs0D,EAAYhgB,iBAErDmhB,GACFnkB,EAAoBtxC,KAAK,YAAaq0D,EAAUtf,WAElDzD,EAAoBtxC,KAAK,eAAgB,UACzCsxC,EAAoBtxC,KAAK,YAAa,UACtC,MAAMq6D,EAAY,GAAMrB,EACxB,IAAI/vD,EAAI+vD,EAAQoB,EAAcC,EAAY7mB,EAC1C,MAAM8mB,EAAqB,GACrBC,EAAmB,GACzB,IAIIC,EAJA3sB,EAAa,EACb4sB,EAAa,EACbC,EAAmB,EACnBC,EAAiB,EAErB,IAAK,IAAIx8D,EAAI,EAAGyT,EAAK2gD,EAAO3yD,OAAQzB,EAAIyT,EAAIzT,GAAK,EAAG,CAClD,MAAM4wC,EAAOwjB,EAAOp0D,GACpB,GAAa,OAAT4wC,EAAe,CACjB0rB,GAAc5sB,EACdA,EAAa,EACb5kC,EAAI+vD,EAAQoB,EAAcC,EAAY7mB,IACpCmnB,EACF,QACF,CACA,MAAM/qB,EAAO2iB,EAAOp0D,EAAI,IAAMo2D,EAAU3kB,KACpCA,IAAS4qB,IACPjF,GACF+E,EAAmBt6D,KAAK,OAAQ4vC,GAE9B6lB,GACF8E,EAAiBv6D,KAAK,OAAQ4vC,GAEhC4qB,EAAe5qB,GAEjB/B,EAAarvC,KAAKwK,IAAI6kC,EAAYisB,EAAQY,IAC1C,MAAME,EAAiB,CACrB7rB,EACA9lC,EACEoxD,EAAYR,EAAOa,GACnB1B,GAASa,EAAOa,GAAoBX,EAAWY,IACjD,IAAOnnB,EAAc3F,GAAc4sB,GAErCxxD,GAAK4wD,EAAOa,GACRnF,GACF+E,EAAmBt6D,KAAK,aAAc46D,GAEpCnF,GACF8E,EAAiBv6D,KAAK,WAAY46D,KAElCF,CACJ,CAIA,OAHA1qD,MAAMrM,UAAU3D,KAAK+K,MAAMumC,EAAqBgpB,GAChDtqD,MAAMrM,UAAU3D,KAAK+K,MAAMumC,EAAqBipB,GAChDz6D,KAAKyzD,QAAQ/zD,GAAO+xC,EACbA,CACT,CAWA,qBAAAspB,CACExtB,EACAwnB,EACAC,EACAC,EACA2D,EACA3M,EACAC,GAEA3e,EAAQytB,YACRztB,EAAQ0tB,OAAOhwD,MAAMsiC,EAASwnB,GAC9BxnB,EAAQmI,OAAOzqC,MAAMsiC,EAASynB,GAC9BznB,EAAQmI,OAAOzqC,MAAMsiC,EAAS0nB,GAC9B1nB,EAAQmI,OAAOzqC,MAAMsiC,EAASqrB,GAC9BrrB,EAAQmI,OAAOzqC,MAAMsiC,EAASwnB,GAC1B9I,IACFjsD,KAAKu5D,WAAqCtN,EAAgB,GAC1DjsD,KAAKgyC,MAAMzE,IAET2e,IACFlsD,KAAKk7D,gBACH3tB,EACwB,GAE1BA,EAAQmF,SAEZ,CAsBA,gCAAAyoB,CACEC,EACAC,EACAt2B,EACAC,EACA9vB,EACApL,EACA+Y,EACAC,EACAsuB,EACAC,EACAl9B,EACAwQ,EACA22C,EACAh9B,EACAi9B,EACA9gD,GAIA,IAAItR,EAAI47B,GAFRliB,GAAW8B,EAAM,IAGbxU,EAAI60B,GAFRliB,GAAW6B,EAAM,IAIjB,MAAM4d,EAAIrtB,EAAQk8B,EAAUgqB,EAAaA,EAAahqB,EAAUl8B,EAC1DnQ,EAAI+E,EAASunC,EAAUgqB,EAAcA,EAAchqB,EAAUvnC,EAC7D0xD,EAAOl9B,EAAQ,GAAKiE,EAAI5d,EAAM,GAAK2Z,EAAQ,GAC3Cm9B,EAAOn9B,EAAQ,GAAKv5B,EAAI4f,EAAM,GAAK2Z,EAAQ,GAC3Co9B,EAAOvyD,EAAIm1B,EAAQ,GACnBq9B,EAAOxrD,EAAImuB,EAAQ,GAazB,IAAItlB,EAqCJ,OAhDIuiD,GAA2B,IAAbpnD,KAChB4gD,GAAG,GAAK2G,EACR9C,GAAG,GAAK8C,EACR3G,GAAG,GAAK4G,EACR3G,GAAG,GAAK2G,EACR3G,GAAG,GAAK0G,EAAOF,EACfvG,GAAG,GAAKD,GAAG,GACXC,GAAG,GAAK0G,EAAOF,EACf7C,GAAG,GAAK3D,GAAG,IAII,IAAb9gD,GACF6E,EAAYyI,G3ElZT,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G2EoZjBsjB,EACAC,EACA,EACA,EACA7wB,GACC4wB,GACAC,GAGH/5B,GAAe+N,EAAW+7C,IAC1B9pD,GAAe+N,EAAWg8C,IAC1B/pD,GAAe+N,EAAWi8C,IAC1BhqD,GAAe+N,EAAW4/C,IAC1B/lD,EACEnU,KAAKqI,IAAIguD,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAI2D,GAAG,IACjCl6D,KAAKqI,IAAIguD,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAI2D,GAAG,IACjCl6D,KAAKwK,IAAI6rD,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAI2D,GAAG,IACjCl6D,KAAKwK,IAAI6rD,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAI2D,GAAG,IACjCD,KAGF9lD,EACEnU,KAAKqI,IAAI20D,EAAMA,EAAOF,GACtB98D,KAAKqI,IAAI40D,EAAMA,EAAOF,GACtB/8D,KAAKwK,IAAIwyD,EAAMA,EAAOF,GACtB98D,KAAKwK,IAAIyyD,EAAMA,EAAOF,GACtB9C,IAGA2C,IACFnyD,EAAIzK,KAAK4X,MAAMnN,GACfgH,EAAIzR,KAAK4X,MAAMnG,IAEV,CACLyrD,WAAYzyD,EACZ0yD,WAAY1rD,EACZ2rD,WAAYv5B,EACZw5B,WAAYh3D,EACZqsC,QAASA,EACTC,QAASA,EACT0nB,aAAc,CACZtvD,KAAMkvD,GAAU,GAChBjvD,KAAMivD,GAAU,GAChBhvD,KAAMgvD,GAAU,GAChB/uD,KAAM+uD,GAAU,GAChB95D,MAAO4b,GAETuhD,gBAAiBhjD,EACjB2L,MAAOA,EAEX,CAaA,mBAAAs3C,CACE1uB,EACA2uB,EACAC,EACAC,EACAvlC,EACAo1B,EACAC,GAEA,MAAMqP,KAAgBtP,IAAmBC,GAEnCmQ,EAAMD,EAAWrD,aACjB5rB,EAASI,EAAQJ,OACjBmvB,EAAgBpQ,EACjBA,EAAkB,GAAKkQ,EAAWz3C,MAAM,GAAM,EAC/C,EAiCJ,OA/BE03C,EAAI5yD,KAAO6yD,GAAiBnvB,EAAOj4B,MAAQgnD,GAC3CG,EAAI1yD,KAAO2yD,GAAiB,GAC5BD,EAAI3yD,KAAO4yD,GAAiBnvB,EAAOrjC,OAASoyD,GAC5CG,EAAIzyD,KAAO0yD,GAAiB,IAGxBf,GACFv7D,KAAK+6D,sBACHxtB,EACAwnB,GACAC,GACAC,GACA2D,GACwB,EACA,GAG5B1nB,GACE3D,EACA6uB,EAAWJ,gBACXnlC,EACAslC,EACAC,EAAWhrB,QACXgrB,EAAW/qB,QACX+qB,EAAWN,WACXM,EAAWL,WACXK,EAAWR,WACXQ,EAAWP,WACXO,EAAWz3C,SAGR,CACT,CAMA,KAAAqtB,CAAMzE,GACJ,GAAIvtC,KAAKu5D,WAAY,CACnB,MAAMvH,EAAS/mD,GAAejL,KAAKy5D,mBAAoB,CAAC,EAAG,IACrD8C,EAAa,IAAMv8D,KAAK2qC,WAC9B4C,EAAQ+D,OACR/D,EAAQxoB,UAAUitC,EAAO,GAAKuK,EAAYvK,EAAO,GAAKuK,GACtDhvB,EAAQ7oB,OAAO1kB,KAAK25D,cACtB,CACApsB,EAAQ0E,OACJjyC,KAAKu5D,YACPhsB,EAAQqE,SAEZ,CAOA,eAAAspB,CAAgB3tB,EAASyiB,GACvBziB,EAAqB,YACoCyiB,EAAY,GACrEziB,EAAQ2H,UAAmC8a,EAAY,GACvDziB,EAAQyI,QAAwCga,EAAY,GAC5DziB,EAAQkG,SAA0Cuc,EAAY,GAC9DziB,EAAQoG,WAAoCqc,EAAY,GACxDziB,EAAQiH,eAAwCwb,EAAY,GAC5DziB,EAAQ4H,YAA0C6a,EAAY,GAChE,CAUA,4BAAAwM,CAA6BvtB,EAAMymB,EAASD,EAAWE,GACrD,MAAMlB,EAAYz0D,KAAKm0D,WAAWuB,GAE5BjkB,EAAQzxC,KAAK65D,YAAY5qB,EAAMymB,EAASC,EAASF,GAEjDjB,EAAcx0D,KAAKi0D,aAAawB,GAChC9qB,EAAa3qC,KAAK2qC,WAClBuuB,EAAQD,GACZ/oD,MAAM4L,QAAQmzB,GAAQA,EAAK,GAAKA,EAChCwlB,EAAUlY,WAAa7N,IAEnBknB,EAAWpC,GAAWiB,EAAU5X,cAAgBlO,IAChD+E,EACJ8gB,GAAeA,EAAYtf,UAAYsf,EAAYtf,UAAY,EASjE,MAAO,CACLzD,MAAOA,EACP5uB,QAPcq2C,GADFznB,EAAMv8B,MAAQy1B,EAAa,EAAI8pB,EAAU9vC,MAAM,IAC7B,GAAK,GAAMu0C,GAASxlB,EAQlD5wB,QANC8yC,EAAWnkB,EAAM3nC,OAAU6gC,EAC5B,GAAK,GAAMirB,GAAYliB,EAO3B,CAgBA,QAAA+oB,CACElvB,EACA2uB,EACAljD,EACAm1C,EACAmN,EACAoB,EACAC,EACA5R,GAGA,IAAI6R,E3EhiBD,IAAsB77C,EAAYC,E2EiiBjChhB,KAAK05D,mBAAqB,GAAO1gD,EAAWhZ,KAAKy5D,oBACnDmD,EAAmB58D,KAAK05D,mBAEnB15D,KAAK05D,oBACR15D,KAAK05D,kBAAoB,IAE3BkD,EAAmBl6C,GACjB1iB,KAAK4R,YACL,EACA5R,KAAK4R,YAAY9R,OACjB,EACAkZ,EACAhZ,KAAK05D,mB3E7iBgB34C,E2E+iBD/gB,KAAKy5D,mB3E/iBQz4C,E2E+iBYhI,E3E9iBnD+H,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,I2E2iBzB,IAAI3iB,EAAI,EACR,MAAMyT,EAAKq8C,EAAaruD,OACxB,IACIo0C,EACArxB,EACFC,EACA+5C,EACAC,EACAC,EACAC,EACA5pB,EACAnE,EACAymB,EACAD,EACAE,EAZEr3D,EAAI,EAaJ2+D,EAAc,EACdC,EAAgB,EAChBC,EAAsB,KACtBC,EAAwB,KAC5B,MAAMC,EAAkBr9D,KAAKw5D,iBACvB8D,EAAet9D,KAAK25D,cACpB4D,EACJ7+D,KAAK4X,MAAgD,KAA1C5X,KAAKsY,OAAOgC,EAAU,GAAIA,EAAU,KAAc,KAEzDmd,EAAuD,CAC3DoX,QAASA,EACT5C,WAAY3qC,KAAK2qC,WACjBj7B,WAAY1P,KAAK0P,WACjByE,SAAUmpD,GAKNE,EACJx9D,KAAKmuD,cAAgBA,GAAgBnuD,KAAKs5D,SAAW,EAAI,IAC3D,IAA0D7+C,EACtDtR,EAAGgH,EAAGstD,EACV,KAAOp/D,EAAIyT,GAAI,CACb,MAAMk+C,EAAc7B,EAAa9vD,GAIjC,OAFE2xD,EAAY,IAGZ,KAAK,GAAkB5E,eACrB3wC,EACEu1C,EAAY,GAEdyN,EAAkBzN,EAAY,GACzBv1C,EAAQuW,mBAGGjlB,IAAd4wD,GACC5nD,GAAW4nD,EAAWc,EAAgBvvD,eAIrC7P,EAFFA,EAA2B2xD,EAAY,GAAM,EAL7C3xD,EAA2B2xD,EAAY,GASzC,MACF,KAAK,GAAkB3E,WACjB4R,EAAcO,IAChBx9D,KAAKgyC,MAAMzE,GACX0vB,EAAc,GAEZC,EAAgBM,IAClBjwB,EAAQmF,SACRwqB,EAAgB,GAEbD,GAAgBC,IACnB3vB,EAAQytB,YACR6B,EAAQr+D,IACRs+D,EAAQt+D,OAERH,EACF,MACF,KAAK,GAAkBitD,OACrBhtD,EAA2B0xD,EAAY,GACvC,MAAMl6C,EAAK8mD,EAAiBt+D,GACtByX,EAAK6mD,EAAiBt+D,EAAI,GAG1B4T,EAFK0qD,EAAiBt+D,EAAI,GAEhBwX,EACV3D,EAFKyqD,EAAiBt+D,EAAI,GAEhByX,EACVrN,EAAIhK,KAAKuK,KAAKiJ,EAAKA,EAAKC,EAAKA,GACnCo7B,EAAQ0tB,OAAOnlD,EAAKpN,EAAGqN,GACvBw3B,EAAQ8H,IAAIv/B,EAAIC,EAAIrN,EAAG,EAAG,EAAIhK,KAAKkO,IAAI,KACrCvO,EACF,MACF,KAAK,GAAkBktD,WACrBhe,EAAQoI,cACNt3C,EACF,MACF,KAAK,GAAkBmtD,OACrBltD,EAA2B0xD,EAAY,GACvC9b,EAAK8b,EAAY,GACjB,MAAMn1C,EAEFm1C,EAAY,GAEV/Y,EAAW+Y,EAAY,GACvBpoD,EAA2B,GAAtBooD,EAAYlwD,OAAckwD,EAAY,QAAKjkD,EACtDoqB,EAAMtb,SAAWA,EACjBsb,EAAM1b,QAAUA,EACVpc,KAAKg/D,IACTA,EAAgBh/D,GAAK,IAEvB,MAAMmmC,EAAS64B,EAAgBh/D,GAC3BuJ,EACFA,EAAGg1D,EAAkBt+D,EAAG41C,EAAI,EAAG1P,IAE/BA,EAAO,GAAKo4B,EAAiBt+D,GAC7BkmC,EAAO,GAAKo4B,EAAiBt+D,EAAI,GACjCkmC,EAAO1kC,OAAS,GAElBm3C,EAASzS,EAAQrO,KACf93B,EACF,MACF,KAAK,GAAkBqtD,WACrBptD,EAA2B0xD,EAAY,GACvC9b,EAA4B8b,EAAY,GACxC5c,EAEI4c,EAAY,GAIhBntC,EAAiCmtC,EAAY,GAC7CltC,EAAiCktC,EAAY,GAC7C,IAAIlmD,EAAgCkmD,EAAY,GAChD,MAAMn5B,EAAiCm5B,EAAY,GAC7C5e,EAAiC4e,EAAY,GAC7C3e,EAAiC2e,EAAY,GAC7CpmB,EAAyComB,EAAY,IAC3D,IAAI77C,EAAkC67C,EAAY,IAClD,MAAMrrC,EACJqrC,EAAY,IAEd,IAAI96C,EAA+B86C,EAAY,IAC/C,MAAM7lB,EAEF6lB,EAAY,IAEVpC,EAEFoC,EAAY,IAGhB,IAAK5c,GAAS4c,EAAYlwD,QAAU,GAAI,CAEtCmvC,EAA8B+gB,EAAY,IAC1C0F,EAAiC1F,EAAY,IAC7CyF,EAAmCzF,EAAY,IAC/C2F,EAAiC3F,EAAY,IAC7C,MAAM0N,EAAkB19D,KAAKw8D,6BAC3BvtB,EACAymB,EACAD,EACAE,GAEFviB,EAAQsqB,EAAgBjsB,MACxBue,EAAY,GAAK5c,EACjB,MAAM4iB,EAAqChG,EAAY,IACvDntC,GAAW66C,EAAgB76C,QAAUmzC,GAAeh2D,KAAK2qC,WACzDqlB,EAAY,GAAKntC,EACjB,MAAMozC,EAAqCjG,EAAY,IACvDltC,GAAW46C,EAAgB56C,QAAUmzC,GAAej2D,KAAK2qC,WACzDqlB,EAAY,GAAKltC,EACjBhZ,EAASspC,EAAMtpC,OACfkmD,EAAY,GAAKlmD,EACjBoL,EAAQk+B,EAAMl+B,MACd86C,EAAY,IAAM96C,CACpB,CAEA,IAAIw/C,GAKAp2B,GAASif,GAAgBE,GAJzBuS,EAAYlwD,OAAS,KACvB40D,GAAwC1E,EAAY,KAIlDA,EAAYlwD,OAAS,IACvBw+B,GAAwC0xB,EAAY,IACpDzS,GAAyCyS,EAAY,IACrDvS,GAA2CuS,EAAY,MAEvD1xB,GAAUsQ,GACV2O,IAAiB,EACjBE,IAAmB,GAGjB7T,GAAkB2zB,EAEpBppD,GAAYmpD,EACF1zB,GAAmB2zB,IAE7BppD,GAAYmpD,GAEd,IAAIK,GAAa,EACjB,KAAOr/D,EAAI41C,EAAI51C,GAAK,EAAG,CACrB,GACEo2D,IACAA,GAAeiJ,MAAgBzoD,EAAQlV,KAAK2qC,WAE5C,SAEF,MAAMyxB,EAAap8D,KAAKm7D,iCACtB/nB,EAAMl+B,MACNk+B,EAAMtpC,OACN8yD,EAAiBt+D,GACjBs+D,EAAiBt+D,EAAI,GACrB4W,EACApL,EACA+Y,EACAC,EACAsuB,EACAC,EACAl9B,EACAwQ,EACA22C,EACAh9B,GACAif,IAAkBE,GAClBhjC,GAGInB,EAAO,CACXi0B,EACA2uB,EACA9oB,EACAgpB,EACAvlC,EACA0mB,GAC4B,EACxB,KACJE,GAC4B,EACxB,MAEN,GAAIsN,EAAe,CACjB,GAAsB,SAAlB5gB,EAEF,SACK,GAAsB,aAAlBA,EAA8B,CAEvC4gB,EAAcxgD,OAAO6xD,EAAWrD,cAChC,QACF,CAAO,CACL,IAAI6E,EACAC,EACJ,GAAIjQ,EAAwB,CAC1B,MAAMlwC,EAAQw2B,EAAK51C,EACnB,IAAKsvD,EAAuBlwC,GAAQ,CAElCkwC,EAAuBlwC,GAASpE,EAEhC,QACF,CAIA,GAHAskD,EAAYhQ,EAAuBlwC,UAC5BkwC,EAAuBlwC,GAC9BmgD,EAAoBhF,GAAgB+E,GAChC7S,EAAc1gD,SAASwzD,GACzB,QAEJ,CACA,GAAI9S,EAAc1gD,SAAS+xD,EAAWrD,cACpC,SAEE6E,IAEF7S,EAAcxgD,OAAOszD,GAErB79D,KAAKi8D,oBAAoBhxD,MAAMjL,KAAM49D,IAEvC7S,EAAcxgD,OAAO6xD,EAAWrD,aAClC,CACF,CACA/4D,KAAKi8D,oBAAoBhxD,MAAMjL,KAAMsZ,EACvC,GACEjb,EACF,MACF,KAAK,GAAkBotD,WACrB,MAAM9vC,GAA+Bq0C,EAAY,GAC3C9rD,GAA6B8rD,EAAY,GACzC4F,GAAkC5F,EAAY,GAC9C7S,GAAkC6S,EAAY,GACpD2F,EAAiC3F,EAAY,GAC7C,MAAMjT,GAAkCiT,EAAY,GAC9C8N,GAA2C9N,EAAY,GACvDpwB,GAAiCowB,EAAY,GACnDyF,EAAmCzF,EAAY,GAC/C,MAAMtc,GAAqCsc,EAAY,IACvD/gB,EAA8B+gB,EAAY,IAC1C0F,EAAiC1F,EAAY,IAC7C,MAAM+N,GAAkB,CACC/N,EAAY,IACZA,EAAY,KAG/ByE,GAAYz0D,KAAKm0D,WAAWuB,GAC5B5lB,GAAO2kB,GAAU3kB,KACjBimB,GAAY,CAChBtB,GAAU9vC,MAAM,GAAKm5C,GACrBrJ,GAAU9vC,MAAM,GAAKm5C,IAGvB,IAAIE,GACAluB,MAAQ9vC,KAAK45D,QACfoE,GAAeh+D,KAAK45D,QAAQ9pB,KAE5BkuB,GAAe,CAAC,EAChBh+D,KAAK45D,QAAQ9pB,IAAQkuB,IAGvB,MAAMC,GAAatzC,GAAiBiyC,EAAkBjhD,GAAOzX,GAAK,GAC5Dg6D,GACJx/D,KAAKM,IAAI+2D,GAAU,IACnBjlB,GAAyBhB,GAAMb,EAAM+uB,IACvC,GAAI7gB,IAAY+gB,IAAcD,GAAY,CACxC,MAGME,EAAQxG,GACZiF,EACAjhD,GACAzX,GACA,EACA+qC,GANCgvB,GAAaC,IAAcjF,GAAoBhqB,EAFhCjvC,KAAKm0D,WAAWuB,GAASnZ,WAUzCQ,GACAr+C,KAAKM,IAAI+2D,GAAU,IACnBjlB,GACAhB,GACAkuB,GACAT,EAA4B,EAAIv9D,KAAK25D,eAEvCyE,EAAW,GAAID,EAAO,CAEpB,MAAMrF,EAAyB,GAC/B,IAAIh6D,EAAGs2D,EAAIqD,EAAOhnB,EAAO4sB,EACzB,GAAI5I,EACF,IAAK32D,EAAI,EAAGs2D,EAAK+I,EAAMr+D,OAAQhB,EAAIs2D,IAAMt2D,EAAG,CAC1Cu/D,EAAOF,EAAMr/D,GACb25D,EAA+B4F,EAAK,GACpC5sB,EAAQzxC,KAAK65D,YAAYpB,EAAO/C,EAAS,GAAID,GAC7C5yC,EACyBw7C,EAAK,IAC3BtI,GAAU,GAAK,GAAKriB,GAAcA,IACrC5wB,EACE8yC,GAAWnkB,EAAM3nC,OACG,GAAlB,GAAM8rD,IAAgBliB,GAAcqiB,GAAU,GAC9CA,GAAU,GACZn2B,GACF,MAAMw8B,EAAap8D,KAAKm7D,iCACtB1pB,EAAMv8B,MACNu8B,EAAM3nC,OACNu0D,EAAK,GACLA,EAAK,GACL5sB,EAAMv8B,MACNu8B,EAAM3nC,OACN+Y,EACAC,EACA,EACA,EACAu7C,EAAK,GACLN,IACA,EACAnvB,IACA,EACAn0B,GAEF,GACEswC,GACAA,EAAc1gD,SAAS+xD,EAAWrD,cAElC,MAAMqF,EAERtF,EAAuB54D,KAAK,CAC1BqtC,EACA2uB,EACAzqB,EACA2qB,EACA,EACA,KACA,MAEJ,CAEF,GAAIzG,EACF,IAAK72D,EAAI,EAAGs2D,EAAK+I,EAAMr+D,OAAQhB,EAAIs2D,IAAMt2D,EAAG,CAC1Cu/D,EAAOF,EAAMr/D,GACb25D,EAA+B4F,EAAK,GACpC5sB,EAAQzxC,KAAK65D,YAAYpB,EAAO/C,EAASC,EAAS,IAClD9yC,EAAiCw7C,EAAK,GACtCv7C,EAAU8yC,GAAWnkB,EAAM3nC,OAAS81B,GACpC,MAAMw8B,EAAap8D,KAAKm7D,iCACtB1pB,EAAMv8B,MACNu8B,EAAM3nC,OACNu0D,EAAK,GACLA,EAAK,GACL5sB,EAAMv8B,MACNu8B,EAAM3nC,OACN+Y,EACAC,EACA,EACA,EACAu7C,EAAK,GACLN,IACA,EACAnvB,IACA,EACAn0B,GAEF,GACEswC,GACAA,EAAc1gD,SAAS+xD,EAAWrD,cAElC,MAAMqF,EAERtF,EAAuB54D,KAAK,CAC1BqtC,EACA2uB,EACAzqB,EACA2qB,EACA,EACA,KACA,MAEJ,CAEErR,GACFA,EAAczgD,KAAKwuD,EAAuBvxB,IAAIsxB,KAEhD,IAAK,IAAIx6D,EAAI,EAAGyT,EAAKgnD,EAAuBh5D,OAAQzB,EAAIyT,IAAMzT,EAC5D2B,KAAKi8D,oBAAoBhxD,MAAMjL,KAAM84D,EAAuBz6D,GAEhE,CACF,GACEA,EACF,MACF,KAAK,GAAkBstD,aACrB,QAAwB5/C,IAApB2wD,EAA+B,CACjCjiD,EACEu1C,EAAY,GAEd,MAAM/rD,EAASy4D,EAAgBjiD,EAASgjD,GACxC,GAAIx5D,EACF,OAAOA,CAEX,GACE5F,EACF,MACF,KAAK,GAAkButD,KACjB4R,EACFP,IAEAj9D,KAAKgyC,MAAMzE,KAEXlvC,EACF,MACF,KAAK,GAAkBwtD,gBAYrB,IAXAvtD,EAA2B0xD,EAAY,GACvC9b,EAA4B8b,EAAY,GACxC7mD,EAAIyzD,EAAiBt+D,GACrB6R,EAAIysD,EAAiBt+D,EAAI,GACzBy+D,EAAU5zD,EAAI,GAAO,EACrB6zD,EAAU7sD,EAAI,GAAO,EACjB4sD,IAAWF,GAASG,IAAWF,IACjCvvB,EAAQ0tB,OAAO9xD,EAAGgH,GAClB0sD,EAAQE,EACRD,EAAQE,GAEL1+D,GAAK,EAAGA,EAAI41C,EAAI51C,GAAK,EACxB6K,EAAIyzD,EAAiBt+D,GACrB6R,EAAIysD,EAAiBt+D,EAAI,GACzBy+D,EAAU5zD,EAAI,GAAO,EACrB6zD,EAAU7sD,EAAI,GAAO,EACjB7R,GAAK41C,EAAK,GAAK6oB,IAAWF,GAASG,IAAWF,IAChDvvB,EAAQmI,OAAOvsC,EAAGgH,GAClB0sD,EAAQE,EACRD,EAAQE,KAGV3+D,EACF,MACF,KAAK,GAAkBytD,eACrBqR,EAAsBnN,EACtBhwD,KAAKu5D,WAAavJ,EAAY,GAE1BiN,IACFj9D,KAAKgyC,MAAMzE,GACX0vB,EAAc,EACVC,IACF3vB,EAAQmF,SACRwqB,EAAgB,IAIpB3vB,EAAQ0H,UAEJ+a,EAAY,KAEd3xD,EACF,MACF,KAAK,GAAkB0tD,iBACrBqR,EAAwBpN,EACpBkN,IACF3vB,EAAQmF,SACRwqB,EAAgB,GAElBl9D,KAAKk7D,gBAAgB3tB,EAAiC,KACpDlvC,EACF,MACF,KAAK,GAAkB2tD,OACjBwR,EACFN,IAEA3vB,EAAQmF,WAERr0C,EACF,MACF,UACIA,EAGR,CACI4+D,GACFj9D,KAAKgyC,MAAMzE,GAET2vB,GACF3vB,EAAQmF,QAGZ,CAUA,OAAA4rB,CACE/wB,EACA2uB,EACAljD,EACAskD,EACAhC,EACAvQ,GAEA/qD,KAAK25D,cAAgB2D,EACrBt9D,KAAKy8D,SACHlvB,EACA2uB,EACAljD,EACAhZ,KAAKmuD,aACLmN,OACAvvD,OACAA,EACAg/C,EAEJ,CAYA,mBAAAwT,CACEhxB,EACAv0B,EACAskD,EACAZ,EACAC,GAGA,OADA38D,KAAK25D,cAAgB2D,EACdt9D,KAAKy8D,SACVlvB,EACA,EACAv0B,EACAhZ,KAAKquD,0BACL,EACAqO,EACAC,EAEJ,GCptCF,MAAM6B,GAAQ,CAAC,UAAW,SAAU,aAAc,QAAS,OAAQ,WAgWnE,MAAMC,GAA6B,CAAC,EAoDpC,OAlZA,MAaE,WAAA5xD,CACEmtB,EACAtqB,EACAi7B,EACA2uB,EACAoF,EACA7U,GAMA7pD,KAAK22D,WAAa38B,EAMlBh6B,KAAK2+D,UAAYrF,EAMjBt5D,KAAK42D,YAAcjsB,EAMnB3qC,KAAK62D,YAAcnnD,EAMnB1P,KAAKkqD,cAAgBL,EAMrB7pD,KAAK4+D,mBAAqB,CAAC,EAM3B5+D,KAAK6+D,qBAAuB,KAM5B7+D,KAAK8+D,uB5EpDA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G4EsDrB9+D,KAAK++D,iBAAiBL,EACxB,CAMA,IAAAM,CAAKzxB,EAASv0B,GACZ,MAAMimD,EAAiBj/D,KAAKk/D,cAAclmD,GAC1Cu0B,EAAQytB,YACRztB,EAAQ0tB,OAAOgE,EAAe,GAAIA,EAAe,IACjD1xB,EAAQmI,OAAOupB,EAAe,GAAIA,EAAe,IACjD1xB,EAAQmI,OAAOupB,EAAe,GAAIA,EAAe,IACjD1xB,EAAQmI,OAAOupB,EAAe,GAAIA,EAAe,IACjD1xB,EAAQyxB,MACV,CAOA,gBAAAD,CAAiBL,GACf,IAAK,MAAM3nC,KAAU2nC,EAAiB,CACpC,IAAIS,EAAYn/D,KAAK4+D,mBAAmB7nC,QACtBhrB,IAAdozD,IACFA,EAAY,CAAC,EACbn/D,KAAK4+D,mBAAmB7nC,GAAUooC,GAEpC,MAAMC,EAAsBV,EAAgB3nC,GAC5C,IAAK,MAAMsgC,KAAe+H,EAAqB,CAC7C,MAAMjR,EAAeiR,EAAoB/H,GACzC8H,EAAU9H,GAAe,IAAI,GAC3Br3D,KAAK62D,YACL72D,KAAK42D,YACL52D,KAAK2+D,UACLxQ,EAEJ,CACF,CACF,CAMA,YAAAkR,CAAaF,GACX,IAAK,MAAMpoC,KAAU/2B,KAAK4+D,mBAAoB,CAC5C,MAAMU,EAAat/D,KAAK4+D,mBAAmB7nC,GAC3C,IAAK,IAAI14B,EAAI,EAAGyT,EAAKqtD,EAAUr/D,OAAQzB,EAAIyT,IAAMzT,EAC/C,GAAI8gE,EAAU9gE,KAAMihE,EAClB,OAAO,CAGb,CACA,OAAO,CACT,CAYA,0BAAAC,CACEltD,EACA3C,EACAyE,EACAqrD,EACAjsD,EACAksD,GAGA,MAAMC,EAA6B,GADnCF,EAAe9gE,KAAK4X,MAAMkpD,IACa,EACjCxmD,EAAYyI,GAChBzhB,KAAK8+D,uBACLU,EAAe,GACfA,EAAe,GACf,EAAI9vD,GACH,EAAIA,GACJyE,GACA9B,EAAW,IACXA,EAAW,IAGRstD,GAAc3/D,KAAK6+D,qBACrBc,IACF3/D,KAAK6+D,qBAAuB7xB,GAC1B0yB,EACAA,OACA3zD,EACA,CAACkuC,oBAAoB,KAGzB,MAAM1M,EAAUvtC,KAAK6+D,qBAerB,IAAIlC,EAZFpvB,EAAQJ,OAAOj4B,QAAUwqD,GACzBnyB,EAAQJ,OAAOrjC,SAAW41D,GAE1BnyB,EAAQJ,OAAOj4B,MAAQwqD,EACvBnyB,EAAQJ,OAAOrjC,OAAS41D,GACdC,GACVpyB,EAAQC,UAAU,EAAG,EAAGkyB,EAAaA,QAOZ3zD,IAAvB/L,KAAKkqD,gBACPyS,E/FRG,CAACl+D,IAAUA,KAAU,KAAW,K+FSnCsT,EAAiB4qD,EAAWtqD,GAC5B3U,EACEi/D,EACAjtD,GAAc1P,KAAKkqD,cAAgBsV,GACnC7C,IAIJ,MAAMiD,EAsKH,SAA4BjpD,GACjC,QAA2C5K,IAAvC0yD,GAA2B9nD,GAC7B,OAAO8nD,GAA2B9nD,GAGpC,MAAMvC,EAAgB,EAATuC,EAAa,EACpBkpD,EAAgBlpD,EAASA,EACzBmpD,EAAY,IAAI5vD,MAAM2vD,EAAgB,GAC5C,IAAK,IAAIxhE,EAAI,EAAGA,GAAKsY,IAAUtY,EAC7B,IAAK,IAAIskB,EAAI,EAAGA,GAAKhM,IAAUgM,EAAG,CAChC,MAAMo9C,EAAa1hE,EAAIA,EAAIskB,EAAIA,EAC/B,GAAIo9C,EAAaF,EACf,MAEF,IAAIG,EAAWF,EAAUC,GACpBC,IACHA,EAAW,GACXF,EAAUC,GAAcC,GAE1BA,EAAS9/D,KAA4C,IAArCyW,EAAStY,GAAK+V,GAAQuC,EAASgM,IAAU,GACrDtkB,EAAI,GACN2hE,EAAS9/D,KAA4C,IAArCyW,EAAStY,GAAK+V,GAAQuC,EAASgM,IAAU,GAEvDA,EAAI,IACNq9C,EAAS9/D,KAA4C,IAArCyW,EAAStY,GAAK+V,GAAQuC,EAASgM,IAAU,GACrDtkB,EAAI,GACN2hE,EAAS9/D,KAA4C,IAArCyW,EAAStY,GAAK+V,GAAQuC,EAASgM,IAAU,GAG/D,CAGF,MAAMs9C,EAAa,GACnB,IAAK,IAAI5hE,EAAI,EAAGyT,EAAKguD,EAAUhgE,OAAQzB,EAAIyT,IAAMzT,EAC3CyhE,EAAUzhE,IACZ4hE,EAAW//D,QAAQ4/D,EAAUzhE,IAKjC,OADAogE,GAA2B9nD,GAAUspD,EAC9BA,CACT,CA/MoBC,CAAmBV,GAEnC,IAAInI,EAOJ,SAASqF,EAAgBjiD,EAASI,GAChC,MAAMslD,EAAY5yB,EAAQ2M,aACxB,EACA,EACAwlB,EACAA,GACAx1D,KACF,IAAK,IAAI7L,EAAI,EAAGyT,EAAK8tD,EAAQ9/D,OAAQzB,EAAIyT,EAAIzT,IAC3C,GAAI8hE,EAAUP,EAAQvhE,IAAM,EAAG,CAC7B,IACGohE,GACgB,UAAhBpI,GAA2C,SAAhBA,GAC5BoI,EAAoB7iD,SAASnC,GAC7B,CACA,MAAM2lD,GAAOR,EAAQvhE,GAAK,GAAK,EACzB8K,EAAIq2D,EAAgBY,EAAMV,EAC1BvvD,EAAIqvD,GAAiBY,EAAMV,EAAe,GAC1Cz7D,EAASsP,EAASkH,EAASI,EAAU1R,EAAIA,EAAIgH,EAAIA,GACvD,GAAIlM,EACF,OAAOA,CAEX,CACAspC,EAAQC,UAAU,EAAG,EAAGkyB,EAAaA,GACrC,KACF,CAGJ,CAGA,MAAMW,EAAKj0D,OAAO3M,KAAKO,KAAK4+D,oBAAoBr3B,IAAIoF,QAGpD,IAAItuC,EAAGskB,EAAGw8C,EAAWmB,EAAUr8D,EAC/B,IAHAo8D,EAAG30D,KAAK4P,IAGHjd,EAAIgiE,EAAGvgE,OAAS,EAAGzB,GAAK,IAAKA,EAAG,CACnC,MAAMi5D,EAAY+I,EAAGhiE,GAAGk5D,WAExB,IADA4H,EAAYn/D,KAAK4+D,mBAAmBtH,GAC/B30C,EAAI67C,GAAM1+D,OAAS,EAAG6iB,GAAK,IAAKA,EAGnC,GAFA00C,EAAcmH,GAAM77C,GACpB29C,EAAWnB,EAAU9H,QACJtrD,IAAbu0D,IACFr8D,EAASq8D,EAAS/B,oBAChBhxB,EACAv0B,EACA7E,EACAuoD,EACAC,GAEE14D,GACF,OAAOA,CAIf,CAEF,CAMA,aAAAi7D,CAAclmD,GACZ,MAAMghB,EAAYh6B,KAAK22D,WACvB,IAAK38B,EACH,OAAO,KAET,MAAMvwB,EAAOuwB,EAAU,GACjBtwB,EAAOswB,EAAU,GACjBrwB,EAAOqwB,EAAU,GACjBpwB,EAAOowB,EAAU,GACjBilC,EAAiB,CAACx1D,EAAMC,EAAMD,EAAMG,EAAMD,EAAMC,EAAMD,EAAMD,GAElE,OADAgZ,GAAYu8C,EAAgB,EAAG,EAAG,EAAGjmD,EAAWimD,GACzCA,CACT,CAKA,OAAAnqC,GACE,OAAO,GAAQ90B,KAAK4+D,mBACtB,CAYA,OAAAN,CACE/wB,EACA2uB,EACAljD,EACAskD,EACAhC,EACAiF,EACAxV,GAGA,MAAMsV,EAAKj0D,OAAO3M,KAAKO,KAAK4+D,oBAAoBr3B,IAAIoF,QAWpD,IAAItuC,EAAGyT,EAAI6Q,EAAGyE,EAAIowC,EAASC,EAI3B,IAdA4I,EAAG30D,KAAK4P,IAIJtb,KAAK22D,aACPppB,EAAQ+D,OACRtxC,KAAKg/D,KAAKzxB,EAASv0B,IAGrBunD,EAAeA,GAA8B/B,GAEzCzT,GACFsV,EAAGtQ,UAEA1xD,EAAI,EAAGyT,EAAKuuD,EAAGvgE,OAAQzB,EAAIyT,IAAMzT,EAAG,CACvC,MAAMi5D,EAAY+I,EAAGhiE,GAAGk5D,WAExB,IADAC,EAAUx3D,KAAK4+D,mBAAmBtH,GAC7B30C,EAAI,EAAGyE,EAAKm5C,EAAazgE,OAAQ6iB,EAAIyE,IAAMzE,EAAG,CAEjD80C,EAASD,EADW+I,EAAa59C,SAElB5W,IAAX0rD,GACFA,EAAO6G,QACL/wB,EACA2uB,EACAljD,EACAskD,EACAhC,EACAvQ,EAGN,CACF,CAEI/qD,KAAK22D,YACPppB,EAAQqE,SAEZ,GClKF,OA7LA,cAA4B,GAI1B,WAAA/kC,CAAYukB,GACV5hB,QAMAxP,KAAKwgE,OAAQ,EAGbxgE,KAAKygE,wBAA0BzgE,KAAK0gE,mBAAmB5iD,KAAK9d,MAM5DA,KAAK2gE,OAASvvC,EAKdpxB,KAAK4gE,uBAAyB,IAChC,CAQA,WAAA94B,CAAYC,GACV,OAAO,GACT,CAMA,OAAAG,CAAQH,GACN,OAAO,IACT,CAQA,YAAAiB,CAAaX,GACX,OAAO,GACT,CASA,WAAAY,CAAYZ,EAAYrtB,GACtB,OAAO,GACT,CAQA,kBAAA6lD,CAAmBC,EAAOzhC,EAAMnJ,GACzB4qC,EAAMzhC,KACTyhC,EAAMzhC,GAAQ,CAAC,GAEjByhC,EAAMzhC,GAAMnJ,EAAK6qC,UAAUxJ,YAAcrhC,CAE3C,CAWA,sBAAA8qC,CAAuBvwD,EAAQ+E,EAAYsrD,GACzC,MAAO,CAMJzhC,EAAM4hC,KACL,MAAM1tD,EAAWvT,KAAK6gE,mBAAmB/iD,KAAK9d,KAAM8gE,EAAOzhC,GAC3D,OAAO5uB,EAAOywD,kBAAkB1rD,EAAY6pB,EAAM4hC,EAAW1tD,EAEjE,CACF,CAWA,0BAAAgsD,CACEltD,EACAg2B,EACAm3B,EACAjsD,EACA4tD,GAGF,CAKA,QAAAC,GACE,OAAOphE,KAAK2gE,MACd,CAMA,kBAAAU,GAAsB,CAOtB,kBAAAX,CAAmB5jD,GACjB,MAAMs2B,EAAsDt2B,EAAY,OAEtEs2B,EAAMhd,aAAe,IACrBgd,EAAMhd,aAAe,IAErBp2B,KAAKshE,yBAET,CASA,SAAAC,CAAUnuB,GACR,IAAIoG,EAAapG,EAAMhd,WAQvB,OAPIojB,GAAc,IAAqBA,GAAc,IACnDpG,EAAM52B,iBAAiB,GAAkBxc,KAAKygE,yBAE5CjnB,GAAc,KAChBpG,EAAM9oC,OACNkvC,EAAapG,EAAMhd,YAEdojB,GAAc,EACvB,CAKA,uBAAA8nB,GACE,MAAMlwC,EAAQpxB,KAAKohE,WACfhwC,GAASA,EAAMyG,cAA2C,UAA3BzG,EAAMkH,kBACvClH,EAAM5S,SAEV,CAKA,eAAAnD,UACSrb,KAAK2gE,OACZnxD,MAAM6L,iBACR,GC1JF,OArCA,cAA0B4B,GAQxB,WAAApQ,CAAY5L,EAAMugE,EAAuBn5B,EAAYkF,GACnD/9B,MAAMvO,GAQNjB,KAAKwhE,sBAAwBA,EAO7BxhE,KAAKqoC,WAAaA,EASlBroC,KAAKutC,QAAUA,CACjB,GCXF,IAAIk0B,GAAe,KAySnB,OA5RA,cAAkC,GAIhC,WAAA50D,CAAYukB,GACV5hB,MAAM4hB,GAMNpxB,KAAK0hE,UAAY,KAMjB1hE,KAAK2hE,mBAQL3hE,KAAK4hE,c/E/BA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G+EuCrB5hE,KAAK6hE,e/EvCA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G+E+CrB7hE,KAAKwhE,sB/E/CA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G+EoDrBxhE,KAAKutC,QAAU,KAKfvtC,KAAK8hE,iBAAkB,EAMvB9hE,KAAK+hE,cAAgB,KAMrB/hE,KAAKqoC,WAAa,IACpB,CAQA,YAAA6R,CAAa9G,EAAO4uB,EAAKC,GAMvB,IAAI/3D,EALCu3D,KAnFPA,GAAez0B,GAAsB,EAAG,OAAGjhC,EAAW,CACpDkuC,oBAAoB,KAqFpBwnB,GAAaj0B,UAAU,EAAG,EAAG,EAAG,GAGhC,IACEi0B,GAAa9vB,UAAUyB,EAAO4uB,EAAKC,EAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GACvD/3D,EAAOu3D,GAAavnB,aAAa,EAAG,EAAG,EAAG,GAAGhwC,IAC/C,CAAE,MAAOg4D,GAEP,OADAT,GAAe,KACR,IACT,CACA,OAAOv3D,CACT,CAMA,aAAAqtB,CAAc8Q,GAEZ,IAAIzR,EADU52B,KAAKohE,WACI7pC,gBAIvB,MAH0B,mBAAfX,IACTA,EAAaA,EAAWyR,EAAWpE,UAAUv0B,aAExCknB,QAAc7qB,CACvB,CAQA,YAAAo2D,CAAannD,EAAQhC,EAAWopD,GAC9B,MAAMC,EAAiBriE,KAAKohE,WAAW5pC,eACvC,IAAIkqC,EAAWn0B,EACf,GACEvyB,GACAA,EAAOqc,YAAcgrC,KACnBD,GACCpnD,GACCA,EAAOyH,MAAM2/C,iBACb,GACEt1B,GAAQ9xB,EAAOyH,MAAM2/C,iBACrBt1B,GAAQs1B,KAEd,CACA,MAAMj1B,EAASnyB,EAAOsnD,kBAClBn1B,aAAkB2O,oBACpBvO,EAAUJ,EAAOE,WAAW,MAEhC,CAcA,GAbIE,GAAWA,EAAQJ,OAAO1qB,MAAMzJ,YAAcA,GAEhDhZ,KAAK0hE,UAAY1mD,EACjBhb,KAAKutC,QAAUA,EACfvtC,KAAK8hE,iBAAkB,GACd9hE,KAAK8hE,iBAEd9hE,KAAK0hE,UAAY,KACjB1hE,KAAKutC,QAAU,KACfvtC,KAAK8hE,iBAAkB,GACd9hE,KAAK0hE,YACd1hE,KAAK0hE,UAAUj/C,MAAM2/C,gBAAkB,OAEpCpiE,KAAK0hE,UAAW,CACnBA,EAAYn/C,SAASC,cAAc,OACnCk/C,EAAUrqC,UAAYgrC,EACtB,IAAI5/C,EAAQi/C,EAAUj/C,MACtBA,EAAM8Y,SAAW,WACjB9Y,EAAMvN,MAAQ,OACduN,EAAM3Y,OAAS,OACfyjC,EAAUP,KACV,MAAMG,EAASI,EAAQJ,OACvBu0B,EAAU51B,YAAYqB,GACtB1qB,EAAQ0qB,EAAO1qB,MACfA,EAAM8Y,SAAW,WACjB9Y,EAAMmuB,KAAO,IACbnuB,EAAM8/C,gBAAkB,WACxBviE,KAAK0hE,UAAYA,EACjB1hE,KAAKutC,QAAUA,CACjB,CAEGvtC,KAAK8hE,kBACNM,GACCpiE,KAAK0hE,UAAUj/C,MAAM2/C,kBAEtBpiE,KAAK0hE,UAAUj/C,MAAM2/C,gBAAkBA,EAE3C,CAQA,aAAAI,CAAcj1B,EAASlF,EAAYl7B,GACjC,MAAMs1D,EAAU,EAAWt1D,GACrBu1D,EAAWhvD,EAAYvG,GACvBw1D,EAAclvD,EAAetG,GAC7By1D,EAAapvD,EAAcrG,GAEjClC,GAAeo9B,EAAWw6B,2BAA4BJ,GACtDx3D,GAAeo9B,EAAWw6B,2BAA4BH,GACtDz3D,GAAeo9B,EAAWw6B,2BAA4BF,GACtD13D,GAAeo9B,EAAWw6B,2BAA4BD,GAEtD,MAAME,EAAW9iE,KAAKwhE,sBACtBv2D,GAAe63D,EAAUL,GACzBx3D,GAAe63D,EAAUJ,GACzBz3D,GAAe63D,EAAUH,GACzB13D,GAAe63D,EAAUF,GAEzBr1B,EAAQ+D,OACR/D,EAAQytB,YACRztB,EAAQ0tB,OAAOv8D,KAAK4X,MAAMmsD,EAAQ,IAAK/jE,KAAK4X,MAAMmsD,EAAQ,KAC1Dl1B,EAAQmI,OAAOh3C,KAAK4X,MAAMosD,EAAS,IAAKhkE,KAAK4X,MAAMosD,EAAS,KAC5Dn1B,EAAQmI,OAAOh3C,KAAK4X,MAAMqsD,EAAY,IAAKjkE,KAAK4X,MAAMqsD,EAAY,KAClEp1B,EAAQmI,OAAOh3C,KAAK4X,MAAMssD,EAAW,IAAKlkE,KAAK4X,MAAMssD,EAAW,KAChEr1B,EAAQyxB,MACV,CAQA,oBAAA+D,CAAqB9hE,EAAMssC,EAASlF,GAClC,MAAMjX,EAAQpxB,KAAKohE,WACnB,GAAIhwC,EAAM3T,YAAYxc,GAAO,CAC3B,MAAM6b,EAAQ,IAAI,GAChB7b,EACAjB,KAAKwhE,sBACLn5B,EACAkF,GAEFnc,EAAMvU,cAAcC,EACtB,CACF,CAOA,SAAAkmD,CAAUz1B,EAASlF,GACjBroC,KAAKqoC,WAAaA,EAClBroC,KAAK+iE,qBAAqB,GAA2Bx1B,EAASlF,EAChE,CAOA,UAAA46B,CAAW11B,EAASlF,GAClBroC,KAAK+iE,qBAAqB,GAA4Bx1B,EAASlF,EACjE,CAcA,kBAAA66B,CACEhvD,EACAxE,EACAyE,EACAw2B,EACAz1B,EACApL,EACA61B,GAEA,MAAMje,EAAMxM,EAAQ,EACdyM,EAAM7X,EAAS,EACf8X,EAAK+oB,EAAaj7B,EAClBmS,GAAMD,EACNG,GAAO7N,EAAO,GAAKyrB,EACnB3d,GAAO9N,EAAO,GACpB,OAAOuN,GACLzhB,KAAK4hE,cACLlgD,EACAC,EACAC,EACAC,GACC1N,EACD4N,EACAC,EAEJ,CAKA,eAAA3G,UACSrb,KAAKqoC,WACZ74B,MAAM6L,iBACR,GCFF,OArPA,cAAmB,GAMjB,WAAAxO,CAAYk0D,EAAW5qC,EAAOrpB,GAC5B0C,QAEA1C,EAAUA,GAAoB,CAAC,EAK/B9M,KAAK+gE,UAAYA,EAMjB/gE,KAAKm2B,MAAQA,EAQbn2B,KAAKmjE,YAAc,KAQnBnjE,KAAKN,IAAM,GAMXM,KAAKojE,iBACoBr3D,IAAvBe,EAAQu2D,WAA2B,IAAMv2D,EAAQu2D,WAOnDrjE,KAAKsjE,kBAAoB,CAAC,EAK1BtjE,KAAK2rB,cAAgB7e,EAAQ6e,WAC/B,CAKA,OAAAnN,GACExe,KAAK6c,cAAc,GACrB,CAKA,OAAA0mD,GACMvjE,KAAKm2B,QAAUE,IAEjBr2B,KAAKwjE,SAASntC,GAElB,CAKA,MAAAX,GACE,OAAO11B,KAAKN,IAAM,IAAMM,KAAK+gE,SAC/B,CAQA,cAAA0C,GACE,IAAKzjE,KAAKmjE,YAER,OAAOnjE,KAET,IAAIk2B,EAAOl2B,KAAKmjE,YAMhB,EAAG,CACD,GAAIjtC,EAAKE,YAAcC,GAIrB,OADAr2B,KAAKojE,YAAc,EACZltC,EAETA,EAAOA,EAAKitC,WACd,OAASjtC,GAGT,OAAOl2B,IACT,CAMA,mBAAA0jE,GACE,IAAK1jE,KAAKmjE,YACR,OAGF,IAAIjtC,EAAOl2B,KAAKmjE,YAKZnyB,EAAOhxC,KAEX,EAAG,CACD,GAAIk2B,EAAKE,YAAcC,GAAkB,CAIvCH,EAAKitC,YAAc,KACnB,KACF,CAAWjtC,EAAKE,YAAcC,GAG5B2a,EAAO9a,EACEA,EAAKE,YAAcC,GAG5B2a,EAAKmyB,YAAcjtC,EAAKitC,YAExBnyB,EAAO9a,EAETA,EAAO8a,EAAKmyB,WACd,OAASjtC,EACX,CAOA,YAAAytC,GACE,OAAO3jE,KAAK+gE,SACd,CAKA,QAAA3qC,GACE,OAAOp2B,KAAKm2B,KACd,CAUA,QAAAqtC,CAASrtC,GACP,GAAIn2B,KAAKm2B,QAAUE,IAAmBr2B,KAAKm2B,MAAQA,EACjD,MAAM,IAAInxB,MAAM,gCAElBhF,KAAKm2B,MAAQA,EACbn2B,KAAKwe,SACP,CASA,IAAAlU,GACE,GACF,CAQA,QAAAs5D,CAASrzC,EAAIszC,GACX,IAAK7jE,KAAKojE,YACR,OAAO,EAGT,IAAIp5C,EAAQhqB,KAAKsjE,kBAAkB/yC,GACnC,GAAKvG,GAGE,IAAe,IAAXA,EACT,OAAO,OAHPA,EAAQ65C,EACR7jE,KAAKsjE,kBAAkB/yC,GAAMvG,EAK/B,MAAMgX,EAAQ6iC,EAAO75C,EAAQ,IAAO,GACpC,OAAIgX,GAAShhC,KAAKojE,YACT,EAEF5oC,GAAOwG,EAAQhhC,KAAKojE,YAC7B,CASA,YAAAU,CAAavzC,GACX,QAAKvwB,KAAKojE,cAG6B,IAAhCpjE,KAAKsjE,kBAAkB/yC,EAChC,CAMA,aAAAwzC,CAAcxzC,GACRvwB,KAAKojE,cACPpjE,KAAKsjE,kBAAkB/yC,IAAO,EAElC,GCnIF,OAnLA,cAAwB,GAStB,WAAA1jB,CAAYk0D,EAAW5qC,EAAOoiB,EAAKC,EAAawrB,EAAkBl3D,GAChE0C,MAAMuxD,EAAW5qC,EAAOrpB,GAMxB9M,KAAK05C,aAAelB,EAQpBx4C,KAAK65C,KAAOtB,EAEZv4C,KAAKN,IAAM64C,EAMXv4C,KAAKg3C,OAAS,IAAIt2B,MACE,OAAhB83B,IACFx4C,KAAKg3C,OAAOwB,YAAcA,GAO5Bx4C,KAAK25C,UAAY,KAMjB35C,KAAKikE,kBAAoBD,CAC3B,CAOA,QAAAt5B,GACE,OAAO1qC,KAAKg3C,MACd,CAMA,QAAAW,CAASxjB,GACPn0B,KAAKg3C,OAAS7iB,EACdn0B,KAAKm2B,MAAQE,GACbr2B,KAAKq6C,iBACLr6C,KAAKwe,SACP,CAOA,iBAAA47B,GACEp6C,KAAKm2B,MAAQE,GACbr2B,KAAKq6C,iBACLr6C,KAAKg3C,OA8FT,WACE,MAAM0D,EAAM1N,GAAsB,EAAG,GAGrC,OAFA0N,EAAIzF,UAAY,gBAChByF,EAAIF,SAAS,EAAG,EAAG,EAAG,GACfE,EAAIvN,MACb,CAnGkB+2B,GACdlkE,KAAKwe,SACP,CAOA,gBAAA87B,GACE,MAAMlH,EAAyCpzC,KAAW,OACtDozC,EAAM+wB,cAAgB/wB,EAAMgxB,cAC9BpkE,KAAKm2B,MAAQE,GAEbr2B,KAAKm2B,MAAQE,GAEfr2B,KAAKq6C,iBACLr6C,KAAKwe,SACP,CAuCA,IAAAlU,GACMtK,KAAKm2B,OAASE,KAChBr2B,KAAKm2B,MAAQE,GACbr2B,KAAKg3C,OAAS,IAAIt2B,MACQ,OAAtB1gB,KAAK05C,eACP15C,KAAKg3C,OAAOwB,YAAcx4C,KAAK05C,eAG/B15C,KAAKm2B,OAASE,KAChBr2B,KAAKm2B,MAAQE,GACbr2B,KAAKwe,UACLxe,KAAKikE,kBAAkBjkE,KAAMA,KAAK65C,MAClC75C,KAAK25C,UAAYf,GACf54C,KAAKg3C,OACLh3C,KAAKs6C,iBAAiBx8B,KAAK9d,MAC3BA,KAAKo6C,kBAAkBt8B,KAAK9d,OAGlC,CAOA,cAAAq6C,GACMr6C,KAAK25C,YACP35C,KAAK25C,YACL35C,KAAK25C,UAAY,KAErB,GCwUF,OApcA,MASE,WAAA9sC,CACEmY,EACAq/C,EACAC,EACAC,EACAC,EACAC,GAMAzkE,KAAK0kE,YAAc1/C,EAMnBhlB,KAAK2kE,YAAcN,EAGnB,IAAIO,EAAoB,CAAC,EACzB,MAAMC,EAAe5rD,GAAajZ,KAAK2kE,YAAa3kE,KAAK0kE,aAOzD1kE,KAAK8kE,cAAgB,SAAUhmE,GAC7B,MAAMY,EAAMZ,EAAE,GAAK,IAAMA,EAAE,GAI3B,OAHK8lE,EAAkBllE,KACrBklE,EAAkBllE,GAAOmlE,EAAa/lE,IAEjC8lE,EAAkBllE,EAC3B,EAMAM,KAAK+kE,iBAAmBR,EAMxBvkE,KAAKglE,uBAAyBR,EAAiBA,EAM/CxkE,KAAKilE,WAAa,GAOlBjlE,KAAKklE,iBAAkB,EAMvBllE,KAAKmlE,kBACHnlE,KAAK0kE,YAAY12D,cACfu2D,KACAvkE,KAAK0kE,YAAYx2D,aACnB,GAASq2D,IAAoB,GAASvkE,KAAK0kE,YAAYx2D,aAMzDlO,KAAKolE,kBAAoBplE,KAAK0kE,YAAYx2D,YACtC,GAASlO,KAAK0kE,YAAYx2D,aAC1B,KAMJlO,KAAKqlE,kBAAoBrlE,KAAK2kE,YAAYz2D,YACtC,GAASlO,KAAK2kE,YAAYz2D,aAC1B,KAEJ,MAAMo3D,EAAqB,EAAWhB,GAChCiB,EAAsB7xD,EAAY4wD,GAClCkB,EAAyB/xD,EAAe6wD,GACxCmB,EAAwBjyD,EAAc8wD,GACtCoB,EAAgB1lE,KAAK8kE,cAAcQ,GACnCK,EAAiB3lE,KAAK8kE,cAAcS,GACpCK,EAAoB5lE,KAAK8kE,cAAcU,GACvCK,EAAmB7lE,KAAK8kE,cAAcW,GAYtCK,EArIc,IAuIjBrB,EACG/lE,KAAKwK,IACH,EACAxK,KAAK4K,KACH5K,KAAKqnE,KACHpyD,EAAQ2wD,IACLG,EAAwBA,EAAwB,IAAM,QAI/D,GAcN,GAZAzkE,KAAKgmE,SACHV,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGE9lE,KAAKklE,gBAAiB,CACxB,IAAIe,EAAYxnE,IAChBuB,KAAKilE,WAAW3sD,SAAQ,SAAU4tD,EAAU7nE,EAAGkE,GAC7C0jE,EAAYvnE,KAAKqI,IACfk/D,EACAC,EAASz1D,OAAO,GAAG,GACnBy1D,EAASz1D,OAAO,GAAG,GACnBy1D,EAASz1D,OAAO,GAAG,GAEvB,IAIAzQ,KAAKilE,WAAW3sD,SAAS4tD,IACvB,GACExnE,KAAKwK,IACHg9D,EAASz1D,OAAO,GAAG,GACnBy1D,EAASz1D,OAAO,GAAG,GACnBy1D,EAASz1D,OAAO,GAAG,IAEnBw1D,EACFjmE,KAAKolE,kBAAoB,EACzB,CACA,MAAMe,EAAc,CAClB,CAACD,EAASz1D,OAAO,GAAG,GAAIy1D,EAASz1D,OAAO,GAAG,IAC3C,CAACy1D,EAASz1D,OAAO,GAAG,GAAIy1D,EAASz1D,OAAO,GAAG,IAC3C,CAACy1D,EAASz1D,OAAO,GAAG,GAAIy1D,EAASz1D,OAAO,GAAG,KAEzC01D,EAAY,GAAG,GAAKF,EAAYjmE,KAAKolE,kBAAoB,IAC3De,EAAY,GAAG,IAAMnmE,KAAKolE,mBAExBe,EAAY,GAAG,GAAKF,EAAYjmE,KAAKolE,kBAAoB,IAC3De,EAAY,GAAG,IAAMnmE,KAAKolE,mBAExBe,EAAY,GAAG,GAAKF,EAAYjmE,KAAKolE,kBAAoB,IAC3De,EAAY,GAAG,IAAMnmE,KAAKolE,mBAM5B,MAAM37D,EAAO/K,KAAKqI,IAChBo/D,EAAY,GAAG,GACfA,EAAY,GAAG,GACfA,EAAY,GAAG,IAEJznE,KAAKwK,IAChBi9D,EAAY,GAAG,GACfA,EAAY,GAAG,GACfA,EAAY,GAAG,IAEN18D,EAAOzJ,KAAKolE,kBAAoB,IACzCc,EAASz1D,OAAS01D,EAEtB,IAEJ,CAEAvB,EAAoB,CAAC,CACvB,CAYA,YAAAwB,CAAaz9D,EAAG/D,EAAG9F,EAAGunE,EAAMC,EAAMC,GAChCvmE,KAAKilE,WAAW/kE,KAAK,CACnBuQ,OAAQ,CAAC41D,EAAMC,EAAMC,GACrBvrD,OAAQ,CAACrS,EAAG/D,EAAG9F,IAEnB,CAkBA,QAAAknE,CAASr9D,EAAG/D,EAAG9F,EAAGR,EAAG+nE,EAAMC,EAAMC,EAAMC,EAAMV,GAC3C,MAAMW,EAAmB90D,EAAe,CAAC00D,EAAMC,EAAMC,EAAMC,IACrDE,EAAkB1mE,KAAKolE,kBACzB,GAASqB,GAAoBzmE,KAAKolE,kBAClC,KACEuB,EAA0C3mE,KAAsB,kBAIhE4mE,EACJ5mE,KAAK0kE,YAAY12D,YACjB04D,EAAkB,IAClBA,EAAkB,EAEpB,IAAIG,GAAmB,EAEvB,GAAIf,EAAiB,EAAG,CACtB,GAAI9lE,KAAK2kE,YAAYp2D,YAAcvO,KAAKqlE,kBAAmB,CAIzDwB,EADE,GAFuBl1D,EAAe,CAAChJ,EAAG/D,EAAG9F,EAAGR,KAEnB0B,KAAKqlE,kBAvQjB,KAyQuBwB,CAC5C,EACKD,GAAU5mE,KAAK0kE,YAAYn2D,YAAcm4D,IAC5CG,EACEH,EA7QiB,KA6QuBG,EAE9C,CAEA,IAAKA,GAAoB7mE,KAAK+kE,kBAE1B+B,SAASL,EAAiB,KAC1BK,SAASL,EAAiB,KAC1BK,SAASL,EAAiB,KAC1BK,SAASL,EAAiB,MAErB1xD,GAAW0xD,EAAkBzmE,KAAK+kE,kBAErC,OAKN,IAAIgC,EAAc,EAElB,KAAKF,GAEAC,SAAST,EAAK,KACdS,SAAST,EAAK,KACdS,SAASR,EAAK,KACdQ,SAASR,EAAK,KACdQ,SAASP,EAAK,KACdO,SAASP,EAAK,KACdO,SAASN,EAAK,KACdM,SAASN,EAAK,KAEf,GAAIV,EAAiB,EACnBe,GAAmB,OASnB,GALAE,GACID,SAAST,EAAK,KAAQS,SAAST,EAAK,IAAU,EAAJ,IAC1CS,SAASR,EAAK,KAAQQ,SAASR,EAAK,IAAU,EAAJ,IAC1CQ,SAASP,EAAK,KAAQO,SAASP,EAAK,IAAU,EAAJ,IAC1CO,SAASN,EAAK,KAAQM,SAASN,EAAK,IAAU,EAAJ,GAE7B,GAAfO,GACe,GAAfA,GACe,GAAfA,GACe,GAAfA,EAEA,OAMR,GAAIjB,EAAiB,EAAG,CACtB,IAAKe,EAAkB,CACrB,MAAM3yD,EAAS,EAAEvL,EAAE,GAAK7J,EAAE,IAAM,GAAI6J,EAAE,GAAK7J,EAAE,IAAM,GAC7CkoE,EAAYhnE,KAAK8kE,cAAc5wD,GAErC,IAAIhC,EACJ,GAAI00D,EAAQ,CAKV10D,GAHG,GAAOm0D,EAAK,GAAIM,GACf,GAAOJ,EAAK,GAAII,IAClB,EACqB,GAAOK,EAAU,GAAIL,EAC9C,MACEz0D,GAAMm0D,EAAK,GAAKE,EAAK,IAAM,EAAIS,EAAU,GAE3C,MAAM70D,GAAMk0D,EAAK,GAAKE,EAAK,IAAM,EAAIS,EAAU,GAE/CH,EAD8B30D,EAAKA,EAAKC,EAAKA,EACFnS,KAAKglE,sBAClD,CACA,GAAI6B,EAAkB,CACpB,GAAInoE,KAAKM,IAAI2J,EAAE,GAAK7J,EAAE,KAAOJ,KAAKM,IAAI2J,EAAE,GAAK7J,EAAE,IAAK,CAElD,MAAMmoE,EAAK,EAAEriE,EAAE,GAAK9F,EAAE,IAAM,GAAI8F,EAAE,GAAK9F,EAAE,IAAM,GACzCooE,EAAQlnE,KAAK8kE,cAAcmC,GAC3BE,EAAK,EAAE7oE,EAAE,GAAKqK,EAAE,IAAM,GAAIrK,EAAE,GAAKqK,EAAE,IAAM,GACzCy+D,EAAQpnE,KAAK8kE,cAAcqC,GAEjCnnE,KAAKgmE,SACHr9D,EACA/D,EACAqiE,EACAE,EACAd,EACAC,EACAY,EACAE,EACAtB,EAAiB,GAEnB9lE,KAAKgmE,SACHmB,EACAF,EACAnoE,EACAR,EACA8oE,EACAF,EACAX,EACAC,EACAV,EAAiB,EAErB,KAAO,CAEL,MAAMuB,EAAK,EAAE1+D,EAAE,GAAK/D,EAAE,IAAM,GAAI+D,EAAE,GAAK/D,EAAE,IAAM,GACzC0iE,EAAQtnE,KAAK8kE,cAAcuC,GAC3BE,EAAK,EAAEzoE,EAAE,GAAKR,EAAE,IAAM,GAAIQ,EAAE,GAAKR,EAAE,IAAM,GACzCkpE,EAAQxnE,KAAK8kE,cAAcyC,GAEjCvnE,KAAKgmE,SACHr9D,EACA0+D,EACAE,EACAjpE,EACA+nE,EACAiB,EACAE,EACAhB,EACAV,EAAiB,GAEnB9lE,KAAKgmE,SACHqB,EACAziE,EACA9F,EACAyoE,EACAD,EACAhB,EACAC,EACAiB,EACA1B,EAAiB,EAErB,CACA,MACF,CACF,CAEA,GAAIc,EAAQ,CACV,IAAK5mE,KAAKmlE,kBACR,OAEFnlE,KAAKklE,iBAAkB,CACzB,CAM2B,IAAR,GAAd6B,IACH/mE,KAAKomE,aAAaz9D,EAAG7J,EAAGR,EAAG+nE,EAAME,EAAMC,GAEd,IAAR,GAAdO,IACH/mE,KAAKomE,aAAaz9D,EAAG7J,EAAG8F,EAAGyhE,EAAME,EAAMD,GAErCS,IAEyB,IAAR,GAAdA,IACH/mE,KAAKomE,aAAaxhE,EAAGtG,EAAGqK,EAAG29D,EAAME,EAAMH,GAEd,IAAR,EAAdU,IACH/mE,KAAKomE,aAAaxhE,EAAGtG,EAAGQ,EAAGwnE,EAAME,EAAMD,GAG7C,CAOA,qBAAAkB,GACE,MAAMt6D,ErG5RD,CAAC1O,IAAUA,KAAU,KAAW,KqGqSrC,OAPAuB,KAAKilE,WAAW3sD,SAAQ,SAAU4tD,EAAU7nE,EAAGkE,GAC7C,MAAMg2C,EAAM2tB,EAASz1D,OACrBsB,EAAiB5E,EAAQorC,EAAI,IAC7BxmC,EAAiB5E,EAAQorC,EAAI,IAC7BxmC,EAAiB5E,EAAQorC,EAAI,GAC/B,IAEOprC,CACT,CAKA,YAAAu6D,GACE,OAAO1nE,KAAKilE,UACd,GCjeF,IAAI0C,GAKG,MAAM,GAAa,GAY1B,SAASC,GAAiBltB,EAAKmtB,EAAIC,EAAIC,EAAIC,GACzCttB,EAAIsgB,YACJtgB,EAAIugB,OAAO,EAAG,GACdvgB,EAAIhF,OAAOmyB,EAAIC,GACfptB,EAAIhF,OAAOqyB,EAAIC,GACfttB,EAAI/E,YACJ+E,EAAIpJ,OACJoJ,EAAIskB,OACJtkB,EAAIF,SAAS,EAAG,EAAG97C,KAAKwK,IAAI2+D,EAAIE,GAAM,EAAGrpE,KAAKwK,IAAI4+D,EAAIE,IACtDttB,EAAI9I,SACN,CAUA,SAASq2B,GAA8B/9D,EAAMvM,GAE3C,OACEe,KAAKM,IAAIkL,EAAc,EAATvM,GAAc,KAAO,GACnCe,KAAKM,IAAIkL,EAAc,EAATvM,EAAa,GAAK,QAAc,CAElD,CA2CO,SAASuqE,GACdljD,EACAq/C,EACAppC,EACAE,GAEA,MAAMH,EAAehiB,GAAUiiB,EAAcopC,EAAYr/C,GAGzD,IAAIkW,EAAmBttB,GACrBy2D,EACAlpC,EACAF,GAGF,MAAMktC,EAAsB9D,EAAWj2D,wBACXrC,IAAxBo8D,IACFjtC,GAAoBitC,GAEtB,MAAMC,EAAsBpjD,EAAW5W,wBACXrC,IAAxBq8D,IACFltC,GAAoBktC,GAOtB,MAAMC,EAAerjD,EAAW9W,YAChC,IAAKm6D,GAAgBj2D,EAAmBi2D,EAAcrtC,GAAe,CACnE,MAAMstC,EACJ16D,GAAmBoX,EAAYkW,EAAkBF,GACjDE,EACE4rC,SAASwB,IAAuBA,EAAqB,IACvDptC,GAAoBotC,EAExB,CAEA,OAAOptC,CACT,CAkEO,SAASoM,GACdpyB,EACApL,EACA6gC,EACAzP,EACAmtC,EACAltC,EACAmpC,EACAiE,EACAC,EACAC,EACAC,EACA/8C,GAEA,MAAM4hB,EAAUP,GACdtuC,KAAK4X,MAAMq0B,EAAaz1B,GACxBxW,KAAK4X,MAAMq0B,EAAa7gC,GACxB,IAOF,GAJK6hB,IACH4hB,EAAQo7B,uBAAwB,GAGX,IAAnBH,EAAQ1oE,OACV,OAAOytC,EAAQJ,OAKjB,SAASy7B,EAAW/pE,GAClB,OAAOH,KAAK4X,MAAMzX,EAAQ8rC,GAAcA,CAC1C,CAJA4C,EAAQ5oB,MAAMgmB,EAAYA,GAM1B4C,EAAQoN,yBAA2B,UAEnC,MAAMkuB,EtG/CC,CAACpqE,IAAUA,KAAU,KAAW,KsGgDvC+pE,EAAQlwD,SAAQ,SAAUigC,EAAKl6C,EAAGkE,GtGyE7B,IAAgBiQ,EAASC,EAATD,EsGxEZq2D,GtGwEqBp2D,EsGxEH8lC,EAAIprC,QtGyEnB,GAAKqF,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,GsGlFvB,IAEA,MAAMq2D,EAAqB,GAASD,GAC9BE,EAAsBl1D,EAAUg1D,GAChCG,EAAgBh8B,GACpBtuC,KAAK4X,MAAOq0B,EAAam+B,EAAsB5tC,GAC/Cx8B,KAAK4X,MAAOq0B,EAAao+B,EAAuB7tC,GAChD,IAGGvP,IACHq9C,EAAcL,uBAAwB,GAGxC,MAAMM,EAAct+B,EAAazP,EAEjCstC,EAAQlwD,SAAQ,SAAUigC,EAAKl6C,EAAGkE,GAChC,MAAM2mE,EAAO3wB,EAAIprC,OAAO,GAAK07D,EAAiB,GACxCM,IAAS5wB,EAAIprC,OAAO,GAAK07D,EAAiB,IAC1CO,EAAW,GAAS7wB,EAAIprC,QACxBk8D,EAAYx1D,EAAU0kC,EAAIprC,QAG5BorC,EAAInF,MAAMl+B,MAAQ,GAAKqjC,EAAInF,MAAMtpC,OAAS,GAC5Ck/D,EAAcr3B,UACZ4G,EAAInF,MACJq1B,EACAA,EACAlwB,EAAInF,MAAMl+B,MAAQ,EAAIuzD,EACtBlwB,EAAInF,MAAMtpC,OAAS,EAAI2+D,EACvBS,EAAOD,EACPE,EAAOF,EACPG,EAAWH,EACXI,EAAYJ,EAGlB,IAEA,MAAMK,EAAgB,EAAWhF,GA0JjC,OAxJAiE,EAAcb,eAAepvD,SAAQ,SAAU4tD,EAAU7nE,EAAGkE,GAqB1D,MAAMkO,EAASy1D,EAASz1D,OAClBuK,EAASkrD,EAASlrD,OACxB,IAAI2mB,EAAKlxB,EAAO,GAAG,GACjBmxB,EAAKnxB,EAAO,GAAG,GACbqF,EAAKrF,EAAO,GAAG,GACjBsF,EAAKtF,EAAO,GAAG,GACbuF,EAAKvF,EAAO,GAAG,GACjBwF,EAAKxF,EAAO,GAAG,GAEjB,MAAM84D,EAAKX,GAAY5tD,EAAO,GAAG,GAAKsuD,EAAc,IAAMnuC,GACpDquC,EAAKZ,IACP5tD,EAAO,GAAG,GAAKsuD,EAAc,IAAMnuC,GAEjC0sC,EAAKe,GAAY5tD,EAAO,GAAG,GAAKsuD,EAAc,IAAMnuC,GACpD2sC,EAAKc,IACP5tD,EAAO,GAAG,GAAKsuD,EAAc,IAAMnuC,GAEjC4sC,EAAKa,GAAY5tD,EAAO,GAAG,GAAKsuD,EAAc,IAAMnuC,GACpD6sC,EAAKY,IACP5tD,EAAO,GAAG,GAAKsuD,EAAc,IAAMnuC,GAMjCsuC,EAAwB9nC,EACxB+nC,EAAwB9nC,EAC9BD,EAAK,EACLC,EAAK,EACL9rB,GAAM2zD,EACN1zD,GAAM2zD,EACN1zD,GAAMyzD,EACNxzD,GAAMyzD,EAEN,MAMMC,EpG5RH,SAA2BxnD,GAChC,MAAMvZ,EAAIuZ,EAAIriB,OAEd,IAAK,IAAIzB,EAAI,EAAGA,EAAIuK,EAAGvK,IAAK,CAE1B,IAAIurE,EAASvrE,EACTwrE,EAAQnrE,KAAKM,IAAImjB,EAAI9jB,GAAGA,IAC5B,IAAK,IAAIqK,EAAIrK,EAAI,EAAGqK,EAAIE,EAAGF,IAAK,CAC9B,MAAMohE,EAAWprE,KAAKM,IAAImjB,EAAIzZ,GAAGrK,IAC7ByrE,EAAWD,IACbA,EAAQC,EACRF,EAASlhE,EAEb,CAEA,GAAc,IAAVmhE,EACF,OAAO,KAIT,MAAMjuD,EAAMuG,EAAIynD,GAChBznD,EAAIynD,GAAUznD,EAAI9jB,GAClB8jB,EAAI9jB,GAAKud,EAGT,IAAK,IAAI+G,EAAItkB,EAAI,EAAGskB,EAAI/Z,EAAG+Z,IAAK,CAC9B,MAAMonD,GAAQ5nD,EAAIQ,GAAGtkB,GAAK8jB,EAAI9jB,GAAGA,GACjC,IAAK,IAAI4kB,EAAI5kB,EAAG4kB,EAAIra,EAAI,EAAGqa,IACrB5kB,GAAK4kB,EACPd,EAAIQ,GAAGM,GAAK,EAEZd,EAAIQ,GAAGM,IAAM8mD,EAAO5nD,EAAI9jB,GAAG4kB,EAGjC,CACF,CAGA,MAAM9Z,EAAI,IAAI+G,MAAMtH,GACpB,IAAK,IAAI/D,EAAI+D,EAAI,EAAG/D,GAAK,EAAGA,IAAK,CAC/BsE,EAAEtE,GAAKsd,EAAItd,GAAG+D,GAAKuZ,EAAItd,GAAGA,GAC1B,IAAK,IAAI7G,EAAI6G,EAAI,EAAG7G,GAAK,EAAGA,IAC1BmkB,EAAInkB,GAAG4K,IAAMuZ,EAAInkB,GAAG6G,GAAKsE,EAAEtE,EAE/B,CACA,OAAOsE,CACT,CoG8OwB6gE,CANI,CACtB,CAACl0D,EAAIC,EAAI,EAAG,EAAG8xD,EAAK0B,GACpB,CAACvzD,EAAIC,EAAI,EAAG,EAAG8xD,EAAKwB,GACpB,CAAC,EAAG,EAAGzzD,EAAIC,EAAI+xD,EAAK0B,GACpB,CAAC,EAAG,EAAGxzD,EAAIC,EAAI+xD,EAAKwB,KAGtB,GAAKG,EAAL,CAOA,GAHAp8B,EAAQ+D,OACR/D,EAAQytB,YA1RZ,WACE,QAAiCjvD,IAA7B47D,GAAwC,CAC1C,MAAMjtB,EAAM1N,GAAsB,EAAG,EAAG,IACxC0N,EAAIC,yBAA2B,UAC/BD,EAAIzF,UAAY,wBAChB2yB,GAAiBltB,EAAK,EAAG,EAAG,EAAG,GAC/BktB,GAAiBltB,EAAK,EAAG,EAAG,EAAG,GAC/B,MAAMxwC,EAAOwwC,EAAIR,aAAa,EAAG,EAAG,EAAG,GAAGhwC,KAC1Cy9D,GACEM,GAA8B/9D,EAAM,IACpC+9D,GAA8B/9D,EAAM,IACpC+9D,GAA8B/9D,EAAM,GACtCojC,GAAcoN,GACd,GAAWx6C,KAAKw6C,EAAIvN,OACtB,CAEA,OAAOw6B,EACT,CA2QQsC,KAAgCt+C,EAAa,CAE/C4hB,EAAQ0tB,OAAO4M,EAAIC,GAEnB,MAAMoC,EAAQ,EACRC,EAAKZ,EAAK1B,EACVuC,EAAKZ,EAAK1B,EAChB,IAAK,IAAIvyB,EAAO,EAAGA,EAAO20B,EAAO30B,IAE/BhI,EAAQmI,OACNmyB,EAAKe,GAAarzB,EAAO,GAAK40B,EAAMD,GACpCpC,EAAKc,EAAYrzB,EAAO60B,GAAOF,EAAQ,KAGrC30B,GAAQ20B,EAAQ,GAClB38B,EAAQmI,OACNmyB,EAAKe,GAAarzB,EAAO,GAAK40B,EAAMD,GACpCpC,EAAKc,GAAarzB,EAAO,GAAK60B,GAAOF,EAAQ,KAKnD38B,EAAQmI,OAAOqyB,EAAIC,EACrB,MACEz6B,EAAQ0tB,OAAO4M,EAAIC,GACnBv6B,EAAQmI,OAAO6zB,EAAIC,GACnBj8B,EAAQmI,OAAOqyB,EAAIC,GAGrBz6B,EAAQyxB,OAERzxB,EAAQv0B,UACN2wD,EAAY,GACZA,EAAY,GACZA,EAAY,GACZA,EAAY,GACZJ,EACAC,GAGFj8B,EAAQxoB,UACN8jD,EAAiB,GAAKY,EACtBZ,EAAiB,GAAKa,GAGxBn8B,EAAQ5oB,MACNuW,EAAmByP,GAClBzP,EAAmByP,GAGtB4C,EAAQoE,UAAUq3B,EAAc77B,OAAQ,EAAG,GAC3CI,EAAQqE,SAxDR,CAyDF,IAEAtE,GAAc07B,GACd,GAAW9oE,KAAK8oE,EAAc77B,QAE1Bu7B,IACFn7B,EAAQ+D,OAER/D,EAAQoN,yBAA2B,cACnCpN,EAAQ+G,YAAc,QACtB/G,EAAQ2H,UAAY,EAEpBqzB,EAAcb,eAAepvD,SAAQ,SAAU4tD,EAAU7nE,EAAGkE,GAC1D,MAAMyY,EAASkrD,EAASlrD,OAClBuuD,GAAMvuD,EAAO,GAAG,GAAKsuD,EAAc,IAAMnuC,EACzCquC,IAAOxuD,EAAO,GAAG,GAAKsuD,EAAc,IAAMnuC,EAC1C0sC,GAAM7sD,EAAO,GAAG,GAAKsuD,EAAc,IAAMnuC,EACzC2sC,IAAO9sD,EAAO,GAAG,GAAKsuD,EAAc,IAAMnuC,EAC1C4sC,GAAM/sD,EAAO,GAAG,GAAKsuD,EAAc,IAAMnuC,EACzC6sC,IAAOhtD,EAAO,GAAG,GAAKsuD,EAAc,IAAMnuC,EAEhDoS,EAAQytB,YACRztB,EAAQ0tB,OAAO4M,EAAIC,GACnBv6B,EAAQmI,OAAO6zB,EAAIC,GACnBj8B,EAAQmI,OAAOqyB,EAAIC,GACnBz6B,EAAQoI,YACRpI,EAAQmF,QACV,IAEAnF,EAAQqE,WAEHrE,EAAQJ,MACjB,CC7EA,OA9UA,cAAyB,GAgBvB,WAAAtgC,CACEmY,EACAqlD,EACAhG,EACAiG,EACAvJ,EACAwJ,EACA5/B,EACA89B,EACA+B,EACAhG,EACAkE,EACA/8C,GAEAnc,MAAMuxD,EAAW1qC,GAAgB,CAAC1K,cAAeA,IAMjD3rB,KAAKyqE,kBAA+B1+D,IAAhB28D,GAA4BA,EAMhD1oE,KAAK42D,YAAcjsB,EAMnB3qC,KAAK0qE,QAAUjC,EAMfzoE,KAAK8xC,QAAU,KAMf9xC,KAAK2qE,gBAAkBN,EAMvBrqE,KAAK4qE,gBAAkBN,EAMvBtqE,KAAK6qE,kBAAoBN,GAAsCxJ,EAM/D/gE,KAAK8qE,aAAe,GAMpB9qE,KAAK+qE,qBAAuB,KAM5B/qE,KAAKgrE,SAAW,EAEhB,MAAM1G,EAAegG,EAAeW,mBAClCjrE,KAAK6qE,mBAEDK,EAAkBlrE,KAAK4qE,gBAAgB18D,YAC7C,IAAIq2D,EAAkBvkE,KAAK2qE,gBAAgBz8D,YAE3C,MAAMi9D,EAAsBD,EACxBr2D,EAAgByvD,EAAc4G,GAC9B5G,EAEJ,GAAqC,IAAjC3wD,EAAQw3D,GAIV,YADAnrE,KAAKm2B,MAAQE,IAIf,MAAM+0C,EAAmBpmD,EAAW9W,YAChCk9D,IAIA7G,EAHGA,EAGe1vD,EAAgB0vD,EAAiB6G,GAFjCA,GAMtB,MAAMjwC,EAAmBmvC,EAAe5qC,cACtC1/B,KAAK6qE,kBAAkB,IAGnB3vC,EDKH,SACLlW,EACAq/C,EACAC,EACAnpC,GAEA,MAAMF,EAAennB,EAAUwwD,GAC/B,IAAIppC,EAAmBgtC,GACrBljD,EACAq/C,EACAppC,EACAE,GAeF,QAZK2rC,SAAS5rC,IAAqBA,GAAoB,IACrD5nB,EAAcgxD,GAAc,SAAUtwD,GAOpC,OANAknB,EAAmBgtC,GACjBljD,EACAq/C,EACArwD,EACAmnB,GAEK2rC,SAAS5rC,IAAqBA,EAAmB,CAC1D,IAGKA,CACT,CChC6BmwC,CACvBrmD,EACAq/C,EACA8G,EACAhwC,GAGF,IAAK2rC,SAAS5rC,IAAqBA,GAAoB,EAIrD,YADAl7B,KAAKm2B,MAAQE,IAIf,MAAMi1C,OACev/D,IAAnBy4D,EAA+BA,EC7JN,GD4K3B,GATAxkE,KAAKurE,eAAiB,IAAI,GACxBvmD,EACAq/C,EACA8G,EACA5G,EACArpC,EAAmBowC,EACnBnwC,GAGgD,IAA9Cn7B,KAAKurE,eAAe7D,eAAe5nE,OAGrC,YADAE,KAAKm2B,MAAQE,IAIfr2B,KAAKgrE,SAAWX,EAAemB,kBAAkBtwC,GACjD,IAAImtC,EAAeroE,KAAKurE,eAAe9D,wBAmBvC,GAjBIlD,IACEv/C,EAAWhX,YACbq6D,EAAa,GAAK,GAChBA,EAAa,GACb9D,EAAgB,GAChBA,EAAgB,IAElB8D,EAAa,GAAK,GAChBA,EAAa,GACb9D,EAAgB,GAChBA,EAAgB,KAGlB8D,EAAexzD,EAAgBwzD,EAAc9D,IAI5C5wD,EAAQ00D,GAEN,CACL,MAAMoD,EAAcpB,EAAeqB,0BACjCrD,EACAroE,KAAKgrE,UAGP,IAAK,IAAIW,EAAOF,EAAYhiE,KAAMkiE,GAAQF,EAAY9hE,KAAMgiE,IAC1D,IAAK,IAAIC,EAAOH,EAAY/hE,KAAMkiE,GAAQH,EAAY7hE,KAAMgiE,IAAQ,CAClE,MAAM11C,EAAOs0C,EAAgBxqE,KAAKgrE,SAAUW,EAAMC,EAAMjhC,GACpDzU,GACFl2B,KAAK8qE,aAAa5qE,KAAKg2B,EAE3B,CAG+B,IAA7Bl2B,KAAK8qE,aAAahrE,SACpBE,KAAKm2B,MAAQE,GAEjB,MAnBEr2B,KAAKm2B,MAAQE,EAoBjB,CAMA,QAAAqU,GACE,OAAO1qC,KAAK8xC,OACd,CAKA,UAAA+5B,GACE,MAAMrD,EAAU,GAWhB,GAVAxoE,KAAK8qE,aAAaxyD,SAAS4d,IACrBA,GAAQA,EAAKE,YAAcC,IAC7BmyC,EAAQtoE,KAAK,CACXiN,OAAQnN,KAAK2qE,gBAAgBM,mBAAmB/0C,EAAK6qC,WACrD3tB,MAAOld,EAAKwU,YAEhB,IAEF1qC,KAAK8qE,aAAahrE,OAAS,EAEJ,IAAnB0oE,EAAQ1oE,OACVE,KAAKm2B,MAAQE,OACR,CACL,MAAMiH,EAAIt9B,KAAK6qE,kBAAkB,GAC3Bz2D,EAAOpU,KAAK4qE,gBAAgBkB,YAAYxuC,GACxCpoB,EAAwB,iBAATd,EAAoBA,EAAOA,EAAK,GAC/CtK,EAAyB,iBAATsK,EAAoBA,EAAOA,EAAK,GAChD+mB,EAAmBn7B,KAAK4qE,gBAAgBlrC,cAAcpC,GACtDpC,EAAmBl7B,KAAK2qE,gBAAgBjrC,cAC5C1/B,KAAKgrE,UAGD1G,EAAetkE,KAAK4qE,gBAAgBK,mBACxCjrE,KAAK6qE,mBAGP7qE,KAAK8xC,QAAUxK,GACbpyB,EACApL,EACA9J,KAAK42D,YACL17B,EACAl7B,KAAK2qE,gBAAgBz8D,YACrBitB,EACAmpC,EACAtkE,KAAKurE,eACL/C,EACAxoE,KAAK0qE,QACL1qE,KAAKyqE,aACLzqE,KAAK2rB,aAGP3rB,KAAKm2B,MAAQE,EACf,CACAr2B,KAAKwe,SACP,CAKA,IAAAlU,GACE,GAAItK,KAAKm2B,OAASE,GAAgB,CAChCr2B,KAAKm2B,MAAQE,GACbr2B,KAAKwe,UAEL,IAAIutD,EAAa,EAEjB/rE,KAAK+qE,qBAAuB,GAC5B/qE,KAAK8qE,aAAaxyD,SAAS4d,IACzB,MAAMC,EAAQD,EAAKE,WACnB,GAAID,GAASE,IAAkBF,GAASE,GAAmB,CACzD01C,IAEA,MAAMC,EAAkBruD,GACtBuY,EACA,IACA,SAAUn4B,GACR,MAAMo4B,EAAQD,EAAKE,WAEjBD,GAASE,IACTF,GAASE,IACTF,GAASE,KAETlY,GAAc6tD,GACdD,IACmB,IAAfA,IACF/rE,KAAKisE,mBACLjsE,KAAK6rE,cAGX,GACA7rE,MAEFA,KAAK+qE,qBAAqB7qE,KAAK8rE,EACjC,KAGiB,IAAfD,EACFlxC,WAAW76B,KAAK6rE,WAAW/tD,KAAK9d,MAAO,GAEvCA,KAAK8qE,aAAaxyD,SAAQ,SAAU4d,EAAM73B,EAAGkE,GAC7B2zB,EAAKE,YACNC,IACXH,EAAK5rB,MAET,GAEJ,CACF,CAKA,gBAAA2hE,GACEjsE,KAAK+qE,qBAAqBzyD,QAAQ6F,IAClCne,KAAK+qE,qBAAuB,IAC9B,CAKA,OAAAxH,GACMvjE,KAAK8xC,UACPxE,GAActtC,KAAK8xC,QAAQzE,WAAW,OACtC,GAAWntC,KAAKF,KAAK8xC,SACrB9xC,KAAK8xC,QAAU,MAEjBtiC,MAAM+zD,SACR,GEhWF,MAAM2I,GAOJ,WAAAr/D,CAAYpD,EAAME,EAAMD,EAAME,GAI5B5J,KAAKyJ,KAAOA,EAKZzJ,KAAK2J,KAAOA,EAKZ3J,KAAK0J,KAAOA,EAKZ1J,KAAK4J,KAAOA,CACd,CAMA,QAAAuiE,CAASpL,GACP,OAAO/gE,KAAKsS,WAAWyuD,EAAU,GAAIA,EAAU,GACjD,CAMA,iBAAAqL,CAAkBnL,GAChB,OACEjhE,KAAKyJ,MAAQw3D,EAAUx3D,MACvBw3D,EAAUt3D,MAAQ3J,KAAK2J,MACvB3J,KAAK0J,MAAQu3D,EAAUv3D,MACvBu3D,EAAUr3D,MAAQ5J,KAAK4J,IAE3B,CAOA,UAAA0I,CAAWnJ,EAAGgH,GACZ,OAAOnQ,KAAKyJ,MAAQN,GAAKA,GAAKnJ,KAAK2J,MAAQ3J,KAAK0J,MAAQyG,GAAKA,GAAKnQ,KAAK4J,IACzE,CAMA,MAAAwJ,CAAO6tD,GACL,OACEjhE,KAAKyJ,MAAQw3D,EAAUx3D,MACvBzJ,KAAK0J,MAAQu3D,EAAUv3D,MACvB1J,KAAK2J,MAAQs3D,EAAUt3D,MACvB3J,KAAK4J,MAAQq3D,EAAUr3D,IAE3B,CAKA,MAAAyiE,CAAOpL,GACDA,EAAUx3D,KAAOzJ,KAAKyJ,OACxBzJ,KAAKyJ,KAAOw3D,EAAUx3D,MAEpBw3D,EAAUt3D,KAAO3J,KAAK2J,OACxB3J,KAAK2J,KAAOs3D,EAAUt3D,MAEpBs3D,EAAUv3D,KAAO1J,KAAK0J,OACxB1J,KAAK0J,KAAOu3D,EAAUv3D,MAEpBu3D,EAAUr3D,KAAO5J,KAAK4J,OACxB5J,KAAK4J,KAAOq3D,EAAUr3D,KAE1B,CAKA,SAAAiK,GACE,OAAO7T,KAAK4J,KAAO5J,KAAK0J,KAAO,CACjC,CAKA,OAAAuhC,GACE,MAAO,CAACjrC,KAAK00C,WAAY10C,KAAK6T,YAChC,CAKA,QAAA6gC,GACE,OAAO10C,KAAK2J,KAAO3J,KAAKyJ,KAAO,CACjC,CAMA,UAAAsL,CAAWksD,GACT,OACEjhE,KAAKyJ,MAAQw3D,EAAUt3D,MACvB3J,KAAK2J,MAAQs3D,EAAUx3D,MACvBzJ,KAAK0J,MAAQu3D,EAAUr3D,MACvB5J,KAAK4J,MAAQq3D,EAAUv3D,IAE3B,EAWK,SAAS,GAAeD,EAAME,EAAMD,EAAME,EAAMq3D,GACrD,YAAkBl1D,IAAdk1D,GACFA,EAAUx3D,KAAOA,EACjBw3D,EAAUt3D,KAAOA,EACjBs3D,EAAUv3D,KAAOA,EACjBu3D,EAAUr3D,KAAOA,EACVq3D,GAEF,IAAIiL,GAAUziE,EAAME,EAAMD,EAAME,EACzC,CAEA,UCymBA,OA5tBA,cAAsC,GAIpC,WAAAiD,CAAYy/D,GACV98D,MAAM88D,GAMNtsE,KAAKusE,eAAgB,EAMrBvsE,KAAKwsE,gBAAkB,KAMvBxsE,KAAKysE,mBAMLzsE,KAAK0sE,mBAAqB,KAM1B1sE,KAAK2sE,iBAML3sE,KAAK4sE,cAAgB,GAMrB5sE,KAAK6sE,WAAY,EAMjB7sE,KAAK24D,U1G2GA,CAACl6D,IAAUA,KAAU,KAAW,K0GrGrCuB,KAAK8sE,cAAgB,IAAI,GAAU,EAAG,EAAG,EAAG,EAC9C,CAOA,cAAAC,CAAe72C,GACb,MAAMo2C,EAAYtsE,KAAKohE,WACjB4L,EAAY92C,EAAKE,WACjB62C,EAAyBX,EAAUY,4BACzC,OACEF,GAAa32C,IACb22C,GAAa32C,IACZ22C,GAAa32C,KAAoB42C,CAEtC,CASA,OAAAE,CAAQ7vC,EAAGn0B,EAAGgH,EAAGk4B,GACf,MAAMsC,EAAatC,EAAWsC,WACxBn1B,EAAa6yB,EAAWpE,UAAUzuB,WAClC82D,EAAYtsE,KAAKohE,WAEvB,IAAIlrC,EADeo2C,EAAU3kC,YACPwlC,QAAQ7vC,EAAGn0B,EAAGgH,EAAGw6B,EAAYn1B,GAUnD,OATI0gB,EAAKE,YAAcC,IACjBi2C,EAAUY,6BAA+BZ,EAAUc,aAAe,IAEpEptE,KAAK6sE,WAAY,GAGhB7sE,KAAK+sE,eAAe72C,KACvBA,EAAOA,EAAKutC,kBAEPvtC,CACT,CAMA,OAAAgS,CAAQH,GACN,MAAMM,EAAaroC,KAAKqoC,WACxB,IAAKA,EACH,OAAO,KAGT,MAAMjX,EAAQpxB,KAAKohE,WACb/uD,EAAapH,GACjBo9B,EAAWglC,2BACXtlC,EAAMpoC,SAGFgpC,EAAcvX,EAAMljB,YAC1B,GAAIy6B,IACGv2B,EAAmBu2B,EAAat2B,GACnC,OAAO,KAIX,MAAMs4B,EAAatC,EAAWsC,WACxBn1B,EAAa6yB,EAAWpE,UAAUzuB,WAClCyuB,EAAYoE,EAAWpE,UACvBxzB,EAAS2gB,EAAMwW,kBACfj5B,EAAW8B,EAAO68D,yBAAyBrpC,EAAUzuB,YACrD+3D,EAAiB98D,EAAO+8D,kBAAkBnlC,EAAWsC,YAE3D,IACE,IAAIrN,EAAI3uB,EAAS68D,kBAAkBvnC,EAAUv0B,YAC7C4tB,GAAK3uB,EAASqpB,eACZsF,EACF,CACA,MAAMyjC,EAAYpyD,EAAS8+D,yBAAyBp7D,EAAYirB,GAC1DpH,EAAOzlB,EAAO08D,QAClB7vC,EACAyjC,EAAU,GACVA,EAAU,GACVp2B,EACAn1B,GAEF,KACI0gB,aAAgB,IAAaA,aAAgB,KAC9CA,aAAgB,IAAcA,EAAKE,aAAeC,GAEnD,OAAO,KAGT,GAAIH,EAAKE,aAAeC,GACtB,SAGF,MAAMq3C,EAAa/+D,EAASq8B,UAAU1N,GAChCqwC,EAAWnkC,GAAO76B,EAASm9D,YAAYxuC,IACvCswC,EAAiBj/D,EAAS+wB,cAAcpC,GAExC0kC,EAAMtjE,KAAKQ,MACfquE,IACIl7D,EAAW,GAAKq7D,EAAW,IAAME,EACjC7M,EAAU,GAAK4M,EAAS,KAGxB1L,EAAMvjE,KAAKQ,MACfquE,IACIG,EAAW,GAAKr7D,EAAW,IAAMu7D,EACjC7M,EAAU,GAAK4M,EAAS,KAGxBlF,EAAS/pE,KAAK4X,MAClBi3D,EAAiB98D,EAAOo9D,uBAAuB5pC,EAAUzuB,aAG3D,OAAOxV,KAAKk6C,aAAahkB,EAAKwU,WAAYs3B,EAAMyG,EAAQxG,EAAMwG,EAChE,CAEA,OAAO,IACT,CAQA,kBAAA5H,CAAmBC,EAAOzhC,EAAMnJ,GAC9B,QAAIl2B,KAAK+sE,eAAe72C,IACf1mB,MAAMqxD,mBAAmBC,EAAOzhC,EAAMnJ,EAGjD,CAOA,YAAA8S,CAAaX,GACX,QAASroC,KAAKohE,WAAWz5B,WAC3B,CAQA,WAAAsB,CAAYZ,EAAYrtB,GACtB,MAAM6rB,EAAawB,EAAWG,iBAAiBH,EAAWylC,YACpD7pC,EAAYoE,EAAWpE,UACvBzuB,EAAayuB,EAAUzuB,WACvBu4D,EAAiB9pC,EAAUv0B,WAC3Bs+D,EAAa/pC,EAAU/vB,OACvBC,EAAW8vB,EAAU9vB,SACrBw2B,EAAatC,EAAWsC,WAExB2hC,EAAYtsE,KAAKohE,WACjB6M,EAAa3B,EAAU3kC,YACvBumC,EAAiBD,EAAWxvD,cAC5B9P,EAAWs/D,EAAWX,yBAAyB93D,GAC/C8nB,EAAI3uB,EAAS68D,kBAAkBuC,EAAgBE,EAAWE,YAC1DP,EAAiBj/D,EAAS+wB,cAAcpC,GAE9C,IAAInwB,EAASk7B,EAAWl7B,OACxB,MAAMuC,EAAa24B,EAAWpE,UAAUv0B,WAClC69D,EAAiBU,EAAWT,kBAAkB7iC,GAE9Cz1B,EAAQxW,KAAK4X,MAAO,GAASnJ,GAAUuC,EAAci7B,GACrD7gC,EAASpL,KAAK4X,MAAOzC,EAAU1G,GAAUuC,EAAci7B,GAEvDhC,EACJ9B,EAAW15B,QAAUqM,GAAeqtB,EAAW15B,OAAQqI,GACrDmzB,IACFx7B,EAAS0H,EACP1H,EACAqM,GAAeqtB,EAAW15B,OAAQqI,KAItC,MAAMtD,EAAM07D,EAAiB14D,EAAS,EAAIq4D,EACpCp7D,EAAMy7D,EAAiB9jE,EAAU,EAAIyjE,EACrCa,EAAe,CACnBJ,EAAW,GAAK97D,EAChB87D,EAAW,GAAK77D,EAChB67D,EAAW,GAAK97D,EAChB87D,EAAW,GAAK77D,GAGZ8uD,EAAYtyD,EAAS+8D,0BAA0Bv+D,EAAQmwB,GAKvD+wC,EAAiB,CAAC,EACxBA,EAAe/wC,GAAK,CAAC,EAErB,MAAMgxC,EAAkBtuE,KAAKghE,uBAC3BiN,EACAz4D,EACA64D,GAGI1V,EAAY34D,KAAK24D,UACjB4V,EAAevuE,KAAK8sE,cAC1B9sE,KAAK6sE,WAAY,EACjB,MAAM2B,EAAWr6D,EACbF,EACEgwB,EAAU/vB,OACVxE,EACAyE,EACAk0B,EAAWj0B,WAEbrI,EACJ,IAAK,IAAI5C,EAAI83D,EAAUx3D,KAAMN,GAAK83D,EAAUt3D,OAAQR,EAClD,IAAK,IAAIgH,EAAI8wD,EAAUv3D,KAAMyG,GAAK8wD,EAAUr3D,OAAQuG,EAAG,CACrD,GACEgE,IACCxF,EAAS8/D,4BAA4B,CAACnxC,EAAGn0B,EAAGgH,GAAIq+D,GAEjD,SAEF,MAAMt4C,EAAOl2B,KAAKmtE,QAAQ7vC,EAAGn0B,EAAGgH,EAAGk4B,GACnC,GAAIroC,KAAK+sE,eAAe72C,GAAO,CAC7B,MAAMw4C,EAAM,EAAO1uE,MACnB,GAAIk2B,EAAKE,YAAcC,GAAkB,CACvCg4C,EAAe/wC,GAAGpH,EAAK6qC,UAAUxJ,YAAcrhC,EAC/C,IAAI4tC,EAAe5tC,EAAK4tC,aAAa4K,GACjC5K,GAAuC,IAAvBj9B,EAAWhQ,UAE7BX,EAAK6tC,cAAc2K,GACnB5K,GAAe,GAGd9jE,KAAK6sE,YACL/I,GAAiB9jE,KAAK4sE,cAAchwD,SAASsZ,KAE9Cl2B,KAAK6sE,WAAY,EAErB,CACA,GAA4C,IAAxC32C,EAAK0tC,SAAS8K,EAAKrmC,EAAWw7B,MAEhC,QAEJ,CAEA,MAAM8K,EAAiBhgE,EAASigE,2BAC9B14C,EAAK6qC,UACLwN,EACA5V,GAGF,IAAIkW,GAAU,EACVF,IACFE,EAAUP,EAAgBhxC,EAAI,EAAGqxC,IAE9BE,GACHlgE,EAASmgE,gCACP54C,EAAK6qC,UACLuN,EACAC,EACA5V,EAGN,CAGF,MAAMoW,EACFnB,EAAiBG,EAAkBpjC,EAAc4iC,EAGrD9rD,GACEzhB,KAAK6hE,eACLx5B,EAAWj0B,KAAK,GAAK,EACrBi0B,EAAWj0B,KAAK,GAAK,EACrB,EAAIu2B,EACJ,EAAIA,EACJx2B,GACCe,EAAQ,GACRpL,EAAS,GAGZ,MAAMkyD,EAAkB,GAAkBh8D,KAAK6hE,gBAE/C7hE,KAAKmiE,aAAannD,EAAQghD,EAAiBh8D,KAAKu3B,cAAc8Q,IAC9D,MAAMkF,EAAUvtC,KAAKutC,QACfJ,EAASI,EAAQJ,OAEvBlrB,GAAYjiB,KAAKwhE,sBAAuBxhE,KAAK6hE,gBAG7CpgD,GACEzhB,KAAK4hE,cACL1sD,EAAQ,EACRpL,EAAS,EACTilE,EACAA,EACA,GACC75D,EAAQ,GACRpL,EAAS,GAGRqjC,EAAOj4B,OAASA,GAASi4B,EAAOrjC,QAAUA,GAC5CqjC,EAAOj4B,MAAQA,EACfi4B,EAAOrjC,OAASA,GACN9J,KAAK8hE,iBACfv0B,EAAQC,UAAU,EAAG,EAAGt4B,EAAOpL,GAG7B6+B,GACF3oC,KAAKwiE,cAAcj1B,EAASlF,EAAYM,GAGrCslC,EAAWe,mBACdzhC,EAAQo7B,uBAAwB,GAGlC3oE,KAAKgjE,UAAUz1B,EAASlF,GAExBroC,KAAK4sE,cAAc9sE,OAAS,EAE5B,IAGImvE,EAAOC,EAAQC,EAHf9O,EAAKj0D,OAAO3M,KAAK4uE,GAAgB9mC,IAAIoF,QACzC0zB,EAAG30D,KAAK4P,IAIiB,IAAvBurB,EAAWhQ,SACT72B,KAAK8hE,kBACLmM,EAAWmB,UAAU/mC,EAAWpE,UAAUzuB,aAI5Cy5D,EAAQ,GACRC,EAAS,IAHT7O,EAAKA,EAAGtQ,UAKV,IAAK,IAAI1xD,EAAIgiE,EAAGvgE,OAAS,EAAGzB,GAAK,IAAKA,EAAG,CACvC,MAAMgxE,EAAWhP,EAAGhiE,GACdixE,EAAuBrB,EAAWsB,iBACtCF,EACA1kC,EACAn1B,GAGIg6D,EADoB7gE,EAAS+wB,cAAc2vC,GACRzB,EACnC17D,EAAKo9D,EAAqB,GAAKE,EAAeT,EAC9C58D,EAAKm9D,EAAqB,GAAKE,EAAeT,EAC9CU,EAAkB9gE,EAAS8+D,yBAC/B,EAAWW,GACXiB,GAEIK,EAAmB/gE,EAASs8D,mBAAmBwE,GAC/Czd,EAAS/mD,GAAejL,KAAK4hE,cAAe,CAC/C2L,GAAkBmC,EAAiB,GAAKtB,EAAa,IACpDR,EACDL,GAAkBa,EAAa,GAAKsB,EAAiB,IACpD9B,IAEE+B,EACJpC,EAAiBU,EAAWJ,uBAAuBr4D,GAC/Co6D,EAAcvB,EAAegB,GACnC,IAAK,MAAMQ,KAAgBD,EAAa,CACtC,MAAM15C,EACJ05C,EAAYC,GAER9O,EAAY7qC,EAAK6qC,UAGjB+O,EAASL,EAAgB,GAAK1O,EAAU,GACxCgP,EAAQrxE,KAAK4X,MAAM07C,EAAO,IAAM8d,EAAS,GAAK59D,GAC9C89D,EAASP,EAAgB,GAAK1O,EAAU,GACxCkP,EAAQvxE,KAAK4X,MAAM07C,EAAO,IAAMge,EAAS,GAAK79D,GAC9ChJ,EAAIzK,KAAK4X,MAAM07C,EAAO,GAAK8d,EAAS59D,GACpC/B,EAAIzR,KAAK4X,MAAM07C,EAAO,GAAKge,EAAS79D,GACpCowB,EAAIwtC,EAAQ5mE,EACZpE,EAAIkrE,EAAQ9/D,EACZkzD,EAAa/lC,IAAM+xC,EAEnBvL,EACJT,GAA+D,IAAjDntC,EAAK0tC,SAAS,EAAO5jE,MAAOqoC,EAAWw7B,MACvD,IAAIqM,GAAe,EACnB,IAAKpM,EACH,GAAImL,EAAO,CAETE,EAAc,CAAChmE,EAAGgH,EAAGhH,EAAIo5B,EAAGpyB,EAAGhH,EAAIo5B,EAAGpyB,EAAIpL,EAAGoE,EAAGgH,EAAIpL,GACpD,IAAK,IAAI1G,EAAI,EAAGyT,EAAKm9D,EAAMnvE,OAAQzB,EAAIyT,IAAMzT,EAC3C,GAAIi/B,IAAM+xC,GAAYA,EAAWH,EAAO7wE,GAAI,CAC1C,MAAM2gE,EAAOiQ,EAAM5wE,GAEjB0W,GACE,CAAC5L,EAAGgH,EAAGhH,EAAIo5B,EAAGpyB,EAAIpL,GAClB,CAACi6D,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,OAG9BkR,IACH3iC,EAAQ+D,OACR4+B,GAAe,GAEjB3iC,EAAQytB,YAERztB,EAAQ0tB,OAAOkU,EAAY,GAAIA,EAAY,IAC3C5hC,EAAQmI,OAAOy5B,EAAY,GAAIA,EAAY,IAC3C5hC,EAAQmI,OAAOy5B,EAAY,GAAIA,EAAY,IAC3C5hC,EAAQmI,OAAOy5B,EAAY,GAAIA,EAAY,IAE3C5hC,EAAQ0tB,OAAO+D,EAAK,GAAIA,EAAK,IAC7BzxB,EAAQmI,OAAOspB,EAAK,GAAIA,EAAK,IAC7BzxB,EAAQmI,OAAOspB,EAAK,GAAIA,EAAK,IAC7BzxB,EAAQmI,OAAOspB,EAAK,GAAIA,EAAK,IAC7BzxB,EAAQyxB,OAEZ,CAEFiQ,EAAM/uE,KAAKivE,GACXD,EAAOhvE,KAAKmvE,EACd,MACE9hC,EAAQC,UAAUrkC,EAAGgH,EAAGoyB,EAAGx9B,GAG/B/E,KAAKmwE,cACHj6C,EACAmS,EACAl/B,EACAgH,EACAoyB,EACAx9B,EACA4qE,EACAtM,GAEE4L,IAAUnL,GACRoM,GACF3iC,EAAQqE,UAEV5xC,KAAK4sE,cAAcwD,QAAQl6C,IAE3Bl2B,KAAK4sE,cAAc1sE,KAAKg2B,GAE1Bl2B,KAAKqwE,gBAAgBhoC,EAAWioC,UAAWrC,EAAY/3C,EACzD,CACF,CAiCA,OA/BAl2B,KAAK2sE,iBAAmBuB,EACxBluE,KAAK2hE,mBAAqBiM,EAC1B5tE,KAAKusE,eACFvsE,KAAKwsE,kBAAoBp5D,EAAOpT,KAAKwsE,gBAAiB4B,GACzDpuE,KAAKwsE,gBAAkB4B,EACvBpuE,KAAKysE,mBAAqB9hC,EAC1B3qC,KAAK0sE,mBAAqBl3D,EAE1BxV,KAAKuwE,kBACHloC,EACA4lC,EACAt/D,EACAg8B,EACAn1B,EACArI,EACAmwB,EACAgvC,EAAUc,cAEZptE,KAAKwwE,oBAAoBnoC,EAAY4lC,GAErCjuE,KAAKijE,WAAW11B,EAASlF,GAErBxB,EAAW15B,QACbogC,EAAQqE,UAEVrE,EAAQo7B,uBAAwB,EAE5B3M,IAAoB7uB,EAAO1qB,MAAMzJ,YACnCm0B,EAAO1qB,MAAMzJ,UAAYgjD,GAGpBh8D,KAAK0hE,SACd,CAYA,aAAAyO,CAAcj6C,EAAMmS,EAAYl/B,EAAGgH,EAAGoyB,EAAGx9B,EAAG0jE,EAAQpF,GAClD,MAAMjwB,EAAQpzC,KAAKywE,aAAav6C,GAChC,IAAKkd,EACH,OAEF,MAAMs7B,EAAM,EAAO1uE,MACb6mC,EAAawB,EAAWG,iBAAiBH,EAAWylC,YACpDh6B,EACJjN,EAAWhQ,SACVwsC,EAAantC,EAAK0tC,SAAS8K,EAAKrmC,EAAWw7B,MAAQ,GAChD6M,EAAe58B,IAAU9zC,KAAKutC,QAAQgE,YACxCm/B,IACF1wE,KAAKutC,QAAQ+D,OACbtxC,KAAKutC,QAAQgE,YAAcuC,GAE7B9zC,KAAKutC,QAAQoE,UACXyB,EACAq1B,EACAA,EACAr1B,EAAMl+B,MAAQ,EAAIuzD,EAClBr1B,EAAMtpC,OAAS,EAAI2+D,EACnBt/D,EACAgH,EACAoyB,EACAx9B,GAGE2rE,GACF1wE,KAAKutC,QAAQqE,UAEXkC,IAAUjN,EAAWhQ,QACvBwR,EAAWpI,SAAU,EACZojC,GACTntC,EAAK6tC,cAAc2K,EAEvB,CAKA,QAAAhkC,GACE,MAAM6C,EAAUvtC,KAAKutC,QACrB,OAAOA,EAAUA,EAAQJ,OAAS,IACpC,CAQA,YAAAsjC,CAAav6C,GACX,OAAOA,EAAKwU,UACd,CAOA,mBAAA8lC,CAAoBnoC,EAAY4lC,GAC9B,GAAIA,EAAW71B,iBAAkB,CAM/B,MAAMu4B,EAAqB,SAAU1C,EAAY1mC,EAAKc,GACpD,MAAMuoC,EAAgB,EAAO3C,GACzB2C,KAAiBvoC,EAAWioC,WAC9BrC,EAAW4C,YACTxoC,EAAWpE,UAAUzuB,WACrB6yB,EAAWioC,UAAUM,GAG3B,EAAE9yD,KAAK,KAAMmwD,GAEb5lC,EAAWyoC,oBAAoB5wE,KAC4B,EAI7D,CACF,CAQA,eAAAmwE,CAAgBC,EAAWrC,EAAY/3C,GAErC,MAAM06C,EAAgB,EAAO3C,GACvB2C,KAAiBN,IACrBA,EAAUM,GAAiB,CAAC,GAE9BN,EAAUM,GAAe16C,EAAKR,WAAY,CAC5C,CAoBA,iBAAA66C,CACEloC,EACA4lC,EACAt/D,EACAg8B,EACAn1B,EACArI,EACAkiE,EACA0B,EACAC,GAEA,MAAMJ,EAAgB,EAAO3C,GACvB2C,KAAiBvoC,EAAW4oC,cAChC5oC,EAAW4oC,YAAYL,GAAiB,CAAC,GAE3C,MAAMK,EAAc5oC,EAAW4oC,YAAYL,GACrCM,EAAY7oC,EAAW6oC,UACvBh6C,EAAUvoB,EAASqpB,aACnB7jB,EAAWk0B,EAAWpE,UAAU9vB,SAChCq6D,EAAWr6D,EACbF,EACEo0B,EAAWpE,UAAU/vB,OACrBm0B,EAAWpE,UAAUv0B,WACrByE,EACAk0B,EAAWj0B,WAEbrI,EACJ,IACImqB,EAAM+qC,EAAW2M,EAAgBzkE,EAAGgH,EAAGmtB,EADvC6zC,EAAY,EAEhB,IAAK7zC,EAAIpG,EAASoG,GAAK+xC,IAAY/xC,EAGjC,IAFA2jC,EAAYtyD,EAAS+8D,0BAA0Bv+D,EAAQmwB,EAAG2jC,GAC1D2M,EAAiBj/D,EAAS+wB,cAAcpC,GACnCn0B,EAAI83D,EAAUx3D,KAAMN,GAAK83D,EAAUt3D,OAAQR,EAC9C,IAAKgH,EAAI8wD,EAAUv3D,KAAMyG,GAAK8wD,EAAUr3D,OAAQuG,EAE5CgE,IACCxF,EAAS8/D,4BAA4B,CAACnxC,EAAGn0B,EAAGgH,GAAIq+D,KAI/Ca,EAAW/xC,GAAKyzC,KAChBI,EACFj7C,EAAO+3C,EAAWd,QAAQ7vC,EAAGn0B,EAAGgH,EAAGw6B,EAAYn1B,GAC3C0gB,EAAKE,YAAcC,KACrB46C,EAAY/6C,EAAKR,WAAY,EACxBw7C,EAAUn8C,YAAYmB,EAAKR,WAC9Bw7C,EAAU58C,QAAQ,CAChB4B,EACA06C,EACAjiE,EAASyiE,mBAAmBl7C,EAAK6qC,WACjC6M,UAIe7hE,IAAjBilE,GACFA,EAAa96C,IAGf+3C,EAAWoD,QAAQ/zC,EAAGn0B,EAAGgH,EAAGqF,IAKpCy4D,EAAWqD,gBAAgBH,EAAW37D,EACxC,GC6ZF,OAlnCA,cAAsC,GAUpC,WAAA3I,CACE0gC,EACA5C,EACAx9B,EACA6L,EACAskD,EACAx5C,EACAytD,GAEA/hE,QAMAxP,KAAKwxE,SAAWjkC,EAMhBvtC,KAAK42D,YAAcjsB,EAMnB3qC,KAAKkN,QAAUC,EAMfnN,KAAKyxE,WAAaz4D,EAMlBhZ,KAAK0xE,mBAAqB14D,EACtB,GAAQta,KAAKsY,MAAMgC,EAAU,GAAIA,EAAU,IAAK,IAChD,EAMJhZ,KAAK25D,cAAgB2D,EAMrBt9D,KAAK2xE,kBAAoB7tD,EAMzB9jB,KAAK4xE,eAAiBL,EAMtBvxE,KAAK6xE,kBAAoB,KAMzB7xE,KAAK8xE,oBAAsB,KAM3B9xE,KAAK+xE,kBAAoB,KAMzB/xE,KAAKgyE,WAAa,KAMlBhyE,KAAKiyE,aAAe,KAMpBjyE,KAAKg3C,OAAS,KAMdh3C,KAAKkyE,cAAgB,EAMrBlyE,KAAKmyE,cAAgB,EAMrBnyE,KAAKoyE,aAAe,EAMpBpyE,KAAKqyE,cAAgB,EAMrBryE,KAAKsyE,cAAgB,EAMrBtyE,KAAKuyE,cAAgB,EAMrBvyE,KAAKwyE,sBAAuB,EAM5BxyE,KAAKyyE,eAAiB,EAMtBzyE,KAAK0yE,YAAc,CAAC,EAAG,GAMvB1yE,KAAK2yE,YAAc,EAMnB3yE,KAAKo3C,MAAQ,GAMbp3C,KAAK0zD,aAAe,EAMpB1zD,KAAK2zD,aAAe,EAMpB3zD,KAAK4zD,qBAAsB,EAM3B5zD,KAAK6zD,cAAgB,EAMrB7zD,KAAK4yE,WAAa,CAAC,EAAG,GAMtB5yE,KAAK8zD,eAAiB,KAMtB9zD,KAAKg0D,iBAAmB,KAMxBh0D,KAAKk0D,WAAa,KAMlBl0D,KAAK05D,kBAAoB,GAMzB15D,KAAK6yE,mBxF5OA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EwF6OvB,CASA,WAAAC,CAAY7/D,EAAiBtV,EAAQuG,EAAKgP,GACxC,IAAKlT,KAAKg3C,OACR,OAEF,MAAM4lB,EAAmBl6C,GACvBzP,EACAtV,EACAuG,EACAgP,EACAlT,KAAKyxE,WACLzxE,KAAK05D,mBAEDnsB,EAAUvtC,KAAKwxE,SACfuB,EAAiB/yE,KAAK6yE,mBACtB/+B,EAAQvG,EAAQgE,YACI,GAAtBvxC,KAAKqyE,gBACP9kC,EAAQgE,YAAcuC,EAAQ9zC,KAAKqyE,eAErC,IAAIl+D,EAAWnU,KAAKyyE,eACY,IAA5BzyE,KAAK0xE,qBACPv9D,GAAYnU,KAAK25D,eAEf35D,KAAKwyE,uBACPr+D,GAAYnU,KAAK25D,eAEnB,IAAK,IAAIt7D,EAAI,EAAGyT,EAAK8qD,EAAiB98D,OAAQzB,EAAIyT,EAAIzT,GAAK,EAAG,CAC5D,MAAM8K,EAAIyzD,EAAiBv+D,GAAK2B,KAAKkyE,cAC/B/hE,EAAIysD,EAAiBv+D,EAAI,GAAK2B,KAAKmyE,cACzC,GACe,IAAbh+D,GACuB,GAAvBnU,KAAK0yE,YAAY,IACM,GAAvB1yE,KAAK0yE,YAAY,GACjB,CACA,MAAM3tC,EAAU57B,EAAInJ,KAAKkyE,cACnBltC,EAAU70B,EAAInQ,KAAKmyE,cACzB1wD,GACEsxD,EACAhuC,EACAC,EACA,EACA,EACA7wB,GACC4wB,GACAC,GAEHuI,EAAQ+D,OACR/D,EAAQv0B,UAAU/N,MAAMsiC,EAASwlC,GACjCxlC,EAAQxoB,UAAUggB,EAASC,GAC3BuI,EAAQ5oB,MAAM3kB,KAAK0yE,YAAY,GAAI1yE,KAAK0yE,YAAY,IACpDnlC,EAAQoE,UACN3xC,KAAKg3C,OACLh3C,KAAKsyE,cACLtyE,KAAKuyE,cACLvyE,KAAK2yE,YACL3yE,KAAKoyE,cACJpyE,KAAKkyE,eACLlyE,KAAKmyE,cACNnyE,KAAK2yE,YACL3yE,KAAKoyE,cAEP7kC,EAAQqE,SACV,MACErE,EAAQoE,UACN3xC,KAAKg3C,OACLh3C,KAAKsyE,cACLtyE,KAAKuyE,cACLvyE,KAAK2yE,YACL3yE,KAAKoyE,aACLjpE,EACAgH,EACAnQ,KAAK2yE,YACL3yE,KAAKoyE,aAGX,CAC0B,GAAtBpyE,KAAKqyE,gBACP9kC,EAAQgE,YAAcuC,EAE1B,CASA,SAAAk/B,CAAU//D,EAAiBtV,EAAQuG,EAAKgP,GACtC,IAAKlT,KAAKk0D,YAA6B,KAAfl0D,KAAKo3C,MAC3B,OAEEp3C,KAAK8zD,gBACP9zD,KAAKizE,qBAAqBjzE,KAAK8zD,gBAE7B9zD,KAAKg0D,kBACPh0D,KAAKkzE,uBAAuBlzE,KAAKg0D,kBAEnCh0D,KAAKmzE,qBAAqBnzE,KAAKk0D,YAC/B,MAAM0I,EAAmBl6C,GACvBzP,EACAtV,EACAuG,EACAgP,EACAlT,KAAKyxE,WACLzxE,KAAK05D,mBAEDnsB,EAAUvtC,KAAKwxE,SACrB,IAAIr9D,EAAWnU,KAAK6zD,cAOpB,IANgC,IAA5B7zD,KAAK0xE,qBACPv9D,GAAYnU,KAAK25D,eAEf35D,KAAK4zD,sBACPz/C,GAAYnU,KAAK25D,eAEZh8D,EAASuG,EAAKvG,GAAUuV,EAAQ,CACrC,MAAM/J,EAAIyzD,EAAiBj/D,GAAUqC,KAAK0zD,aACpCvjD,EAAIysD,EAAiBj/D,EAAS,GAAKqC,KAAK2zD,aAE/B,IAAbx/C,GACsB,GAAtBnU,KAAK4yE,WAAW,IACM,GAAtB5yE,KAAK4yE,WAAW,IAEhBrlC,EAAQ+D,OACR/D,EAAQxoB,UAAU5b,EAAInJ,KAAK0zD,aAAcvjD,EAAInQ,KAAK2zD,cAClDpmB,EAAQ7oB,OAAOvQ,GACfo5B,EAAQxoB,UAAU/kB,KAAK0zD,aAAc1zD,KAAK2zD,cAC1CpmB,EAAQ5oB,MAAM3kB,KAAK4yE,WAAW,GAAI5yE,KAAK4yE,WAAW,IAC9C5yE,KAAKg0D,kBACPzmB,EAAQ6lC,WAAWpzE,KAAKo3C,MAAO,EAAG,GAEhCp3C,KAAK8zD,gBACPvmB,EAAQ8lC,SAASrzE,KAAKo3C,MAAO,EAAG,GAElC7J,EAAQqE,YAEJ5xC,KAAKg0D,kBACPzmB,EAAQ6lC,WAAWpzE,KAAKo3C,MAAOjuC,EAAGgH,GAEhCnQ,KAAK8zD,gBACPvmB,EAAQ8lC,SAASrzE,KAAKo3C,MAAOjuC,EAAGgH,GAGtC,CACF,CAWA,aAAAmjE,CAAcrgE,EAAiBtV,EAAQuG,EAAKgP,EAAQqgE,GAClD,MAAMhmC,EAAUvtC,KAAKwxE,SACf5U,EAAmBl6C,GACvBzP,EACAtV,EACAuG,EACAgP,EACAlT,KAAKyxE,WACLzxE,KAAK05D,mBAEPnsB,EAAQ0tB,OAAO2B,EAAiB,GAAIA,EAAiB,IACrD,IAAI98D,EAAS88D,EAAiB98D,OAC1ByzE,IACFzzE,GAAU,GAEZ,IAAK,IAAIzB,EAAI,EAAGA,EAAIyB,EAAQzB,GAAK,EAC/BkvC,EAAQmI,OAAOknB,EAAiBv+D,GAAIu+D,EAAiBv+D,EAAI,IAK3D,OAHIk1E,GACFhmC,EAAQoI,YAEHzxC,CACT,CAUA,UAAAsvE,CAAWvgE,EAAiBtV,EAAQ+oB,EAAMxT,GACxC,IAAK,IAAI7U,EAAI,EAAGyT,EAAK4U,EAAK5mB,OAAQzB,EAAIyT,IAAMzT,EAC1CV,EAASqC,KAAKszE,cACZrgE,EACAtV,EACA+oB,EAAKroB,GACL6U,GACA,GAGJ,OAAOvV,CACT,CASA,UAAA4uD,CAAW1xC,GAST,GARI7a,KAAK2xE,oBACP92D,EACEA,EAASoJ,oBACPjkB,KAAK2xE,kBACL3xE,KAAK4xE,iBAIN78D,GAAW/U,KAAKkN,QAAS2N,EAAS3M,aAAvC,CAGA,GAAIlO,KAAKgyE,YAAchyE,KAAKiyE,aAAc,CACpCjyE,KAAKgyE,YACPhyE,KAAKizE,qBAAqBjzE,KAAKgyE,YAE7BhyE,KAAKiyE,cACPjyE,KAAKkzE,uBAAuBlzE,KAAKiyE,cAEnC,MAAMrV,ErF/KL,SAAyB6W,EAAgBz6D,EAAWhH,GACzD,MAAMiB,EAAkBwgE,EAAehuD,qBACvC,IAAKxS,EACH,OAAO,KAET,MAAMC,EAASugE,EAAe3tD,YAC9B,OAAOpD,GACLzP,EACA,EACAA,EAAgBnT,OAChBoT,EACA8F,EACAhH,EAEJ,CqFiK+B0hE,CACvB74D,EACA7a,KAAKyxE,WACLzxE,KAAK05D,mBAEDxnD,EAAK0qD,EAAiB,GAAKA,EAAiB,GAC5CzqD,EAAKyqD,EAAiB,GAAKA,EAAiB,GAC5CjmD,EAASjY,KAAKuK,KAAKiJ,EAAKA,EAAKC,EAAKA,GAClCo7B,EAAUvtC,KAAKwxE,SACrBjkC,EAAQytB,YACRztB,EAAQ8H,IACNunB,EAAiB,GACjBA,EAAiB,GACjBjmD,EACA,EACA,EAAIjY,KAAKkO,IAEP5M,KAAKgyE,YACPzkC,EAAQ0E,OAENjyC,KAAKiyE,cACP1kC,EAAQmF,QAEZ,CACmB,KAAf1yC,KAAKo3C,OACPp3C,KAAKgzE,UAAUn4D,EAAS/G,YAAa,EAAG,EAAG,EAjC7C,CAmCF,CASA,QAAAu2C,CAAS5nC,GACPziB,KAAKytD,mBAAmBhrC,EAAMowB,UAAWpwB,EAAMwwB,aAC/CjzC,KAAK0tD,cAAcjrC,EAAMioB,YACzB1qC,KAAK6tD,aAAaprC,EAAM60B,UAC1B,CAKA,YAAAq8B,CAAa36D,GACXhZ,KAAKyxE,WAAaz4D,CACpB,CASA,YAAAszC,CAAazxC,GAEX,OADaA,EAAST,WAEpB,IAAK,QACHpa,KAAKotD,UACkD,GAEvD,MACF,IAAK,aACHptD,KAAK4sD,eACuD,GAE5D,MACF,IAAK,UACH5sD,KAAKstD,YACoD,GAEzD,MACF,IAAK,aACHttD,KAAKgtD,eACuD,GAE5D,MACF,IAAK,kBACHhtD,KAAK8sD,oBAC4D,GAIjE,MACF,IAAK,eACH9sD,KAAKktD,iBACyD,GAE9D,MACF,IAAK,qBACHltD,KAAK0sD,uBAC+D,GAIpE,MACF,IAAK,SACH1sD,KAAKusD,WACmD,GAK9D,CAYA,WAAAE,CAAYhyC,EAASgI,GACnB,MAAM5H,EAAW4H,EAAMi1B,qBAANj1B,CAA4BhI,GACxCI,IAGL7a,KAAKqqD,SAAS5nC,GACdziB,KAAKssD,aAAazxC,GACpB,CAQA,sBAAA6xC,CAAuB7xC,GACrB,MAAM+4D,EAAa/4D,EAASg5D,qBAC5B,IAAK,IAAIx1E,EAAI,EAAGyT,EAAK8hE,EAAW9zE,OAAQzB,EAAIyT,IAAMzT,EAChD2B,KAAKssD,aAAasnB,EAAWv1E,GAEjC,CAQA,SAAA+uD,CAAUvyC,GACJ7a,KAAK2xE,oBACP92D,EACEA,EAASoJ,oBACPjkB,KAAK2xE,kBACL3xE,KAAK4xE,iBAIX,MAAM3+D,EAAkB4H,EAAS4K,qBAC3BvS,EAAS2H,EAASiL,YACpB9lB,KAAKg3C,QACPh3C,KAAK8yE,YAAY7/D,EAAiB,EAAGA,EAAgBnT,OAAQoT,GAE5C,KAAflT,KAAKo3C,OACPp3C,KAAKgzE,UAAU//D,EAAiB,EAAGA,EAAgBnT,OAAQoT,EAE/D,CAQA,cAAA85C,CAAenyC,GACT7a,KAAK2xE,oBACP92D,EACEA,EAASoJ,oBACPjkB,KAAK2xE,kBACL3xE,KAAK4xE,iBAIX,MAAM3+D,EAAkB4H,EAAS4K,qBAC3BvS,EAAS2H,EAASiL,YACpB9lB,KAAKg3C,QACPh3C,KAAK8yE,YAAY7/D,EAAiB,EAAGA,EAAgBnT,OAAQoT,GAE5C,KAAflT,KAAKo3C,OACPp3C,KAAKgzE,UAAU//D,EAAiB,EAAGA,EAAgBnT,OAAQoT,EAE/D,CAQA,cAAA05C,CAAe/xC,GASb,GARI7a,KAAK2xE,oBACP92D,EACEA,EAASoJ,oBACPjkB,KAAK2xE,kBACL3xE,KAAK4xE,iBAIN78D,GAAW/U,KAAKkN,QAAS2N,EAAS3M,aAAvC,CAGA,GAAIlO,KAAKiyE,aAAc,CACrBjyE,KAAKkzE,uBAAuBlzE,KAAKiyE,cACjC,MAAM1kC,EAAUvtC,KAAKwxE,SACfv+D,EAAkB4H,EAAS4K,qBACjC8nB,EAAQytB,YACRh7D,KAAKszE,cACHrgE,EACA,EACAA,EAAgBnT,OAChB+a,EAASiL,aACT,GAEFynB,EAAQmF,QACV,CACA,GAAmB,KAAf1yC,KAAKo3C,MAAc,CACrB,MAAM08B,EAAej5D,EAASyQ,kBAC9BtrB,KAAKgzE,UAAUc,EAAc,EAAG,EAAG,EACrC,CAlBA,CAmBF,CAQA,mBAAAhnB,CAAoBjyC,GACd7a,KAAK2xE,oBACP92D,EAEIA,EAASoJ,oBACPjkB,KAAK2xE,kBACL3xE,KAAK4xE,iBAIb,MAAMmC,EAAiBl5D,EAAS3M,YAChC,GAAK6G,GAAW/U,KAAKkN,QAAS6mE,GAA9B,CAGA,GAAI/zE,KAAKiyE,aAAc,CACrBjyE,KAAKkzE,uBAAuBlzE,KAAKiyE,cACjC,MAAM1kC,EAAUvtC,KAAKwxE,SACfv+D,EAAkB4H,EAAS4K,qBACjC,IAAI9nB,EAAS,EACb,MAAM+oB,EAAqC7L,EAASgR,UAC9C3Y,EAAS2H,EAASiL,YACxBynB,EAAQytB,YACR,IAAK,IAAI38D,EAAI,EAAGyT,EAAK4U,EAAK5mB,OAAQzB,EAAIyT,IAAMzT,EAC1CV,EAASqC,KAAKszE,cACZrgE,EACAtV,EACA+oB,EAAKroB,GACL6U,GACA,GAGJq6B,EAAQmF,QACV,CACA,GAAmB,KAAf1yC,KAAKo3C,MAAc,CACrB,MAAM48B,EAAgBn5D,EAASmR,mBAC/BhsB,KAAKgzE,UAAUgB,EAAe,EAAGA,EAAcl0E,OAAQ,EACzD,CAvBA,CAwBF,CAQA,WAAAwtD,CAAYzyC,GASV,GARI7a,KAAK2xE,oBACP92D,EACEA,EAASoJ,oBACPjkB,KAAK2xE,kBACL3xE,KAAK4xE,iBAIN78D,GAAW/U,KAAKkN,QAAS2N,EAAS3M,aAAvC,CAGA,GAAIlO,KAAKiyE,cAAgBjyE,KAAKgyE,WAAY,CACpChyE,KAAKgyE,YACPhyE,KAAKizE,qBAAqBjzE,KAAKgyE,YAE7BhyE,KAAKiyE,cACPjyE,KAAKkzE,uBAAuBlzE,KAAKiyE,cAEnC,MAAM1kC,EAAUvtC,KAAKwxE,SACrBjkC,EAAQytB,YACRh7D,KAAKwzE,WACH34D,EAASuT,6BACT,EAC8BvT,EAASgR,UACvChR,EAASiL,aAEP9lB,KAAKgyE,YACPzkC,EAAQ0E,OAENjyC,KAAKiyE,cACP1kC,EAAQmF,QAEZ,CACA,GAAmB,KAAf1yC,KAAKo3C,MAAc,CACrB,MAAM68B,EAAoBp5D,EAASwT,uBACnCruB,KAAKgzE,UAAUiB,EAAmB,EAAG,EAAG,EAC1C,CA1BA,CA2BF,CAOA,gBAAA/mB,CAAiBryC,GASf,GARI7a,KAAK2xE,oBACP92D,EACEA,EAASoJ,oBACPjkB,KAAK2xE,kBACL3xE,KAAK4xE,iBAIN78D,GAAW/U,KAAKkN,QAAS2N,EAAS3M,aAAvC,CAGA,GAAIlO,KAAKiyE,cAAgBjyE,KAAKgyE,WAAY,CACpChyE,KAAKgyE,YACPhyE,KAAKizE,qBAAqBjzE,KAAKgyE,YAE7BhyE,KAAKiyE,cACPjyE,KAAKkzE,uBAAuBlzE,KAAKiyE,cAEnC,MAAM1kC,EAAUvtC,KAAKwxE,SACfv+D,EAAkB4H,EAASuT,6BACjC,IAAIzwB,EAAS,EACb,MAAM4qB,EAAQ1N,EAAS4U,WACjBvc,EAAS2H,EAASiL,YACxBynB,EAAQytB,YACR,IAAK,IAAI38D,EAAI,EAAGyT,EAAKyW,EAAMzoB,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC9C,MAAMqoB,EAAO6B,EAAMlqB,GACnBV,EAASqC,KAAKwzE,WAAWvgE,EAAiBtV,EAAQ+oB,EAAMxT,EAC1D,CACIlT,KAAKgyE,YACPzkC,EAAQ0E,OAENjyC,KAAKiyE,cACP1kC,EAAQmF,QAEZ,CACA,GAAmB,KAAf1yC,KAAKo3C,MAAc,CACrB,MAAM88B,EAAqBr5D,EAAS6U,wBACpC1vB,KAAKgzE,UAAUkB,EAAoB,EAAGA,EAAmBp0E,OAAQ,EACnE,CA5BA,CA6BF,CAMA,oBAAAmzE,CAAqB1e,GACnB,MAAMhnB,EAAUvtC,KAAKwxE,SACf2C,EAAmBn0E,KAAK6xE,kBACzBsC,EAMCA,EAAiBl/B,WAAasf,EAAUtf,YAC1Ck/B,EAAiBl/B,UAAYsf,EAAUtf,UACvC1H,EAAQ0H,UAAYsf,EAAUtf,YAPhC1H,EAAQ0H,UAAYsf,EAAUtf,UAC9Bj1C,KAAK6xE,kBAAoB,CACvB58B,UAAWsf,EAAUtf,WAQ3B,CAMA,sBAAAi+B,CAAuB1e,GACrB,MAAMjnB,EAAUvtC,KAAKwxE,SACf4C,EAAqBp0E,KAAK8xE,oBAC3BsC,GAkBCA,EAAmBp+B,SAAWwe,EAAYxe,UAC5Co+B,EAAmBp+B,QAAUwe,EAAYxe,QACzCzI,EAAQyI,QAAUwe,EAAYxe,SAE3B,GAAOo+B,EAAmB7/B,SAAUigB,EAAYjgB,WACnDhH,EAAQ4H,YACLi/B,EAAmB7/B,SAAWigB,EAAYjgB,UAG3C6/B,EAAmB5/B,gBAAkBggB,EAAYhgB,iBACnD4/B,EAAmB5/B,eAAiBggB,EAAYhgB,eAChDjH,EAAQiH,eAAiBggB,EAAYhgB,gBAEnC4/B,EAAmB3gC,UAAY+gB,EAAY/gB,WAC7C2gC,EAAmB3gC,SAAW+gB,EAAY/gB,SAC1ClG,EAAQkG,SAAW+gB,EAAY/gB,UAE7B2gC,EAAmBl/B,WAAasf,EAAYtf,YAC9Ck/B,EAAmBl/B,UAAYsf,EAAYtf,UAC3C3H,EAAQ2H,UAAYsf,EAAYtf,WAE9Bk/B,EAAmBzgC,YAAc6gB,EAAY7gB,aAC/CygC,EAAmBzgC,WAAa6gB,EAAY7gB,WAC5CpG,EAAQoG,WAAa6gB,EAAY7gB,YAE/BygC,EAAmB9/B,aAAekgB,EAAYlgB,cAChD8/B,EAAmB9/B,YAAckgB,EAAYlgB,YAC7C/G,EAAQ+G,YAAckgB,EAAYlgB,eA5CpC/G,EAAQyI,QAAUwe,EAAYxe,QAC9BzI,EAAQ4H,YAAYqf,EAAYjgB,UAChChH,EAAQiH,eAAiBggB,EAAYhgB,eACrCjH,EAAQkG,SAAW+gB,EAAY/gB,SAC/BlG,EAAQ2H,UAAYsf,EAAYtf,UAChC3H,EAAQoG,WAAa6gB,EAAY7gB,WACjCpG,EAAQ+G,YAAckgB,EAAYlgB,YAClCt0C,KAAK8xE,oBAAsB,CACzB97B,QAASwe,EAAYxe,QACrBzB,SAAUigB,EAAYjgB,SACtBC,eAAgBggB,EAAYhgB,eAC5Bf,SAAU+gB,EAAY/gB,SACtByB,UAAWsf,EAAYtf,UACvBvB,WAAY6gB,EAAY7gB,WACxBW,YAAakgB,EAAYlgB,aAiC/B,CAMA,oBAAA6+B,CAAqB1e,GACnB,MAAMlnB,EAAUvtC,KAAKwxE,SACf6C,EAAmBr0E,KAAK+xE,kBACxBx1B,EAAYkY,EAAUlY,UACxBkY,EAAUlY,UACV7N,GACC2lC,GAUCA,EAAiBvkC,MAAQ2kB,EAAU3kB,OACrCukC,EAAiBvkC,KAAO2kB,EAAU3kB,KAClCvC,EAAQuC,KAAO2kB,EAAU3kB,MAEvBukC,EAAiB93B,WAAaA,IAChC83B,EAAiB93B,UAAYA,EAC7BhP,EAAQgP,UAAYA,GAElB83B,EAAiBx3B,cAAgB4X,EAAU5X,eAC7Cw3B,EAAiBx3B,aAAe4X,EAAU5X,aAC1CtP,EAAQsP,aAAe4X,EAAU5X,gBAnBnCtP,EAAQuC,KAAO2kB,EAAU3kB,KACzBvC,EAAQgP,UAAYA,EACpBhP,EAAQsP,aAAe4X,EAAU5X,aACjC78C,KAAK+xE,kBAAoB,CACvBjiC,KAAM2kB,EAAU3kB,KAChByM,UAAWA,EACXM,aAAc4X,EAAU5X,cAgB9B,CASA,kBAAA4Q,CAAmBxY,EAAWX,GAC5B,GAAKW,EAEE,CACL,MAAMgb,EAAiBhb,EAAUR,WACjCz0C,KAAKgyE,WAAa,CAChB/8B,UAAWlI,GACTkjB,GAAkC5hB,IAGxC,MAREruC,KAAKgyE,WAAa,KASpB,GAAK19B,EAEE,CACL,MAAM4b,EAAmB5b,EAAYG,WAC/B0b,EAAqB7b,EAAYgC,aACjC8Z,EAAsB9b,EAAYK,cAClC0b,EAA4B/b,EAAYM,oBACxC0b,EAAsBhc,EAAYO,cAClC0b,EAAmBjc,EAAYI,WAC/B8b,EAAwBlc,EAAYQ,gBACpCP,EAAW6b,GAEb7hB,GACJvuC,KAAKiyE,aAAe,CAClBj8B,aACyBjqC,IAAvBokD,EACIA,EACA7hB,GACNiG,SACuB,IAArBv0C,KAAK42D,YACDriB,EACAA,EAAShN,KAAK3+B,GAAMA,EAAI5I,KAAK42D,cACnCpiB,gBACG6b,GvC94B0B,GuCg5BErwD,KAAK42D,YACpCnjB,cAC0B1nC,IAAxBukD,EACIA,EACA9hB,GACN0G,gBACwBnpC,IAArBwkD,EACGA,EvC72BkB,GuC82BEvwD,KAAK42D,YAC/BjjB,gBAC4B5nC,IAA1BykD,EACIA,EvC/4BmB,GuCi5BzBlc,YAAavH,GACXmjB,GAAsCzhB,IAG5C,MAzCEzuC,KAAKiyE,aAAe,IA0CxB,CAQA,aAAAvkB,CAAcC,GACZ,IAAI1R,EACJ,IAAK0R,KAAgB1R,EAAY0R,EAAW1iB,WAE1C,YADAjrC,KAAKg3C,OAAS,MAGhB,MAAMs9B,EAAkB3mB,EAAW9iB,cAAc7qC,KAAK42D,aAChD2d,EAAc5mB,EAAWljB,YACzB+pC,EAAc7mB,EAAW3iB,YAC/BhrC,KAAKg3C,OAAS2W,EAAWjjB,SAAS1qC,KAAK42D,aACvC52D,KAAKkyE,cAAgBqC,EAAY,GAAKD,EACtCt0E,KAAKmyE,cAAgBoC,EAAY,GAAKD,EACtCt0E,KAAKoyE,aAAen2B,EAAU,GAAKq4B,EACnCt0E,KAAKqyE,cAAgB1kB,EAAW/1B,aAChC53B,KAAKsyE,cAAgBkC,EAAY,GACjCx0E,KAAKuyE,cAAgBiC,EAAY,GACjCx0E,KAAKwyE,qBAAuB7kB,EAAWtjB,oBACvCrqC,KAAKyyE,eAAiB9kB,EAAW3tB,cACjC,MAAMy0C,EAAa9mB,EAAWnjB,gBAC9BxqC,KAAK0yE,YAAc,CAChB+B,EAAW,GAAKz0E,KAAK42D,YAAe0d,EACpCG,EAAW,GAAKz0E,KAAK42D,YAAe0d,GAEvCt0E,KAAK2yE,YAAc12B,EAAU,GAAKq4B,CACpC,CAQA,YAAAzmB,CAAaC,GACX,GAAKA,EAEE,CACL,MAAM+H,EAAgB/H,EAAUjb,UAChC,GAAKgjB,EAEE,CACL,MAAM6e,EAAqB7e,EAAcphB,WACzCz0C,KAAK8zD,eAAiB,CACpB7e,UAAWlI,GACT2nC,GAA0CrmC,IAGhD,MAREruC,KAAK8zD,eAAiB,KASxB,MAAMgC,EAAkBhI,EAAU7a,YAClC,GAAK6iB,EAEE,CACL,MAAM6e,EAAuB7e,EAAgBrhB,WACvCmgC,EAAyB9e,EAAgBxf,aACzCu+B,EAA0B/e,EAAgBnhB,cAC1CmgC,EACJhf,EAAgBlhB,oBACZmgC,EAA0Bjf,EAAgBjhB,cAC1CmgC,EAAuBlf,EAAgBphB,WACvCugC,EAA4Bnf,EAAgBhhB,gBAClD90C,KAAKg0D,iBAAmB,CACtBhe,aAC6BjqC,IAA3B6oE,EACIA,EACAtmC,GACNiG,SAAUsgC,GAENtmC,GACJiG,eAAgBsgC,GvC7+BW,EuCg/B3BrhC,cAC8B1nC,IAA5BgpE,EACIA,EACAvmC,GACN0G,eAC2BnpC,IAAzBipE,EACIA,EvC58BgB,EuC88BtBrhC,gBACgC5nC,IAA9BkpE,EACIA,EvC9+BiB,GuCg/BvB3gC,YAAavH,GACX4nC,GAA8ClmC,IAGpD,MArCEzuC,KAAKg0D,iBAAmB,KAsC1B,MAAMkhB,EAAWpnB,EAAUpQ,UACrBsY,EAAclI,EAAU5P,aACxB+X,EAAcnI,EAAU3P,aACxB+X,EAAqBpI,EAAUzjB,oBAC/B8rB,EAAerI,EAAU9tB,cACzB+1B,EAAYjI,EAAUtjB,gBACtB2qC,EAAWrnB,EAAUxW,UACrB89B,EAAgBtnB,EAAU/P,eAC1Bs3B,EAAmBvnB,EAAU7P,kBACnCj+C,KAAKk0D,WAAa,CAChBpkB,UAAmB/jC,IAAbmpE,EAAyBA,EAAW9mC,GAC1CmO,eACoBxwC,IAAlBqpE,EAA8BA,EAAgB1mC,GAChDmO,kBACuB9wC,IAArBspE,EACIA,EACA1mC,IAER3uC,KAAKo3C,WACUrrC,IAAbopE,EACIjlE,MAAM4L,QAAQq5D,GACZA,EAASpkC,QAAO,CAACqoB,EAAK3wD,EAAGpK,IAAO+6D,GAAO/6D,EAAI,EAAI,IAAMoK,IAAI,IACzD0sE,EACF,GACNn1E,KAAK0zD,kBACa3nD,IAAhBiqD,EAA4Bh2D,KAAK42D,YAAcZ,EAAc,EAC/Dh2D,KAAK2zD,kBACa5nD,IAAhBkqD,EAA4Bj2D,KAAK42D,YAAcX,EAAc,EAC/Dj2D,KAAK4zD,yBACoB7nD,IAAvBmqD,GAAmCA,EACrCl2D,KAAK6zD,mBAAiC9nD,IAAjBoqD,EAA6BA,EAAe,EACjEn2D,KAAK4yE,WAAa,CAChB5yE,KAAK42D,YAAcb,EAAU,GAC7B/1D,KAAK42D,YAAcb,EAAU,GAEjC,MAxFE/1D,KAAKo3C,MAAQ,EAyFjB,GC7oCK,MAAMk+B,GAAwB,GCSrC,MAAMC,GAAqB,GAQrBC,GAAqB,CACzB,MA2TF,SACEC,EACA56D,EACA4H,EACAhI,EACAi7D,GAEA,MAAM/nB,EAAalrC,EAAMioB,WACnBojB,EAAYrrC,EAAM60B,UAExB,IAAIsW,EACJ,GAAID,EAAY,CACd,GAAIA,EAAW7iB,iBAAmB,GAChC,OAEF,IAAI6qC,EAAoBF,EACxB,GAAIC,EAAuB,CACzB,MAAMvrC,EAAgBwjB,EAAWpjB,mBACjC,GAAsB,SAAlBJ,EAEF,GADAwrC,EAAoBD,EACE,aAAlBvrC,EAA8B,CAEhC,MAAMyrC,EAAcH,EAAare,WAC/B30C,EAAMkV,YACN,SAEFi+C,EAAYloB,cAAcC,EAAYC,GACtCgoB,EAAYxoB,UAAUvyC,EAAUJ,EAClC,MAAWqzC,GAAaA,EAAUxW,YAChCsW,EAAyB,CAAC,EAGhC,CACA,MAAMgoB,EAAcD,EAAkBve,WACpC30C,EAAMkV,YACN,SAEFi+C,EAAYloB,cAAcC,EAAYC,GACtCgoB,EAAYxoB,UAAUvyC,EAAUJ,EAClC,CACA,GAAIqzC,GAAaA,EAAUxW,UAAW,CACpC,IAAIu+B,EAAmBJ,EACnBC,IACFG,EAAmBH,GAErB,MAAMI,EAAaD,EAAiBze,WAAW30C,EAAMkV,YAAa,QAClEm+C,EAAWjoB,aAAaC,EAAWF,GACnCkoB,EAAWtoB,SAAS3yC,EAAUJ,EAChC,CACF,EA3WE,WAsNF,SACEg7D,EACA56D,EACA4H,EACAhI,EACAi7D,GAEA,MAAMphC,EAAc7xB,EAAMwwB,YAC1B,GAAIqB,EAAa,CACf,MAAMyhC,EAAmBN,EAAare,WACpC30C,EAAMkV,YACN,cAEFo+C,EAAiBtoB,mBAAmB,KAAMnZ,GAC1CyhC,EAAiBnpB,eAAe/xC,EAAUJ,EAC5C,CACA,MAAMqzC,EAAYrrC,EAAM60B,UACxB,GAAIwW,GAAaA,EAAUxW,UAAW,CACpC,MAAMw+B,GAAcJ,GAAyBD,GAAcre,WACzD30C,EAAMkV,YACN,QAEFm+C,EAAWjoB,aAAaC,GACxBgoB,EAAWtoB,SAAS3yC,EAAUJ,EAChC,CACF,EA9OE,QA6aF,SACEg7D,EACA56D,EACA4H,EACAhI,EACAi7D,GAEA,MAAMzgC,EAAYxyB,EAAMowB,UAClByB,EAAc7xB,EAAMwwB,YAC1B,GAAIgC,GAAaX,EAAa,CAC5B,MAAM0hC,EAAgBP,EAAare,WAAW30C,EAAMkV,YAAa,WACjEq+C,EAAcvoB,mBAAmBxY,EAAWX,GAC5C0hC,EAAc1oB,YAAYzyC,EAAUJ,EACtC,CACA,MAAMqzC,EAAYrrC,EAAM60B,UACxB,GAAIwW,GAAaA,EAAUxW,UAAW,CACpC,MAAMw+B,GAAcJ,GAAyBD,GAAcre,WACzD30C,EAAMkV,YACN,QAEFm+C,EAAWjoB,aAAaC,GACxBgoB,EAAWtoB,SAAS3yC,EAAUJ,EAChC,CACF,EAncE,WAkXF,SACEg7D,EACA56D,EACA4H,EACAhI,EACAi7D,GAEA,MAAM/nB,EAAalrC,EAAMioB,WACnBojB,EAAYrrC,EAAM60B,UAExB,IAAIsW,EACJ,GAAID,EAAY,CACd,GAAIA,EAAW7iB,iBAAmB,GAChC,OAEF,IAAI6qC,EAAoBF,EACxB,GAAIC,EAAuB,CACzB,MAAMvrC,EAAgBwjB,EAAWpjB,mBACjC,GAAsB,SAAlBJ,EAEF,GADAwrC,EAAoBD,EACE,aAAlBvrC,EAA8B,CAEhC,MAAMyrC,EAAcH,EAAare,WAC/B30C,EAAMkV,YACN,SAEFi+C,EAAYloB,cAAcC,EAAYC,GACtCgoB,EAAY5oB,eAAenyC,EAAUJ,EACvC,MAAWqzC,GAAaA,EAAUxW,YAChCsW,EAAyB,CAAC,EAGhC,CACA,MAAMgoB,EAAcD,EAAkBve,WACpC30C,EAAMkV,YACN,SAEFi+C,EAAYloB,cAAcC,EAAYC,GACtCgoB,EAAY5oB,eAAenyC,EAAUJ,EACvC,CACA,GAAIqzC,GAAaA,EAAUxW,UAAW,CACpC,IAAIu+B,EAAmBJ,EACnBC,IACFG,EAAmBH,GAErB,MAAMI,EAAaD,EAAiBze,WAAW30C,EAAMkV,YAAa,QAClEm+C,EAAWjoB,aAAaC,EAAWF,GACnCkoB,EAAWtoB,SAAS3yC,EAAUJ,EAChC,CACF,EAlaE,gBAqPF,SACEg7D,EACA56D,EACA4H,EACAhI,EACAi7D,GAEA,MAAMphC,EAAc7xB,EAAMwwB,YAC1B,GAAIqB,EAAa,CACf,MAAMyhC,EAAmBN,EAAare,WACpC30C,EAAMkV,YACN,cAEFo+C,EAAiBtoB,mBAAmB,KAAMnZ,GAC1CyhC,EAAiBjpB,oBAAoBjyC,EAAUJ,EACjD,CACA,MAAMqzC,EAAYrrC,EAAM60B,UACxB,GAAIwW,GAAaA,EAAUxW,UAAW,CACpC,MAAMw+B,GAAcJ,GAAyBD,GAAcre,WACzD30C,EAAMkV,YACN,QAEFm+C,EAAWjoB,aAAaC,GACxBgoB,EAAWtoB,SAAS3yC,EAAUJ,EAChC,CACF,EA7QE,aAsRF,SACEg7D,EACA56D,EACA4H,EACAhI,EACAi7D,GAEA,MAAMzgC,EAAYxyB,EAAMowB,UAClByB,EAAc7xB,EAAMwwB,YAC1B,GAAIqB,GAAeW,EAAW,CAC5B,MAAM+gC,EAAgBP,EAAare,WAAW30C,EAAMkV,YAAa,WACjEq+C,EAAcvoB,mBAAmBxY,EAAWX,GAC5C0hC,EAAc9oB,iBAAiBryC,EAAUJ,EAC3C,CACA,MAAMqzC,EAAYrrC,EAAM60B,UACxB,GAAIwW,GAAaA,EAAUxW,UAAW,CACpC,MAAMw+B,GAAcJ,GAAyBD,GAAcre,WACzD30C,EAAMkV,YACN,QAEFm+C,EAAWjoB,aAAaC,GACxBgoB,EAAWtoB,SAAS3yC,EAAUJ,EAChC,CACF,EA5SE,mBAqLF,SACEw7D,EACAp7D,EACA4H,EACAhI,EACAi7D,GAEA,MAAM9B,EAAa/4D,EAASg5D,qBAC5B,IAAIx1E,EAAGyT,EACP,IAAKzT,EAAI,EAAGyT,EAAK8hE,EAAW9zE,OAAQzB,EAAIyT,IAAMzT,EAAG,EAE/C63E,EADyBV,GAAmB5B,EAAWv1E,GAAG+b,YAExD67D,EACArC,EAAWv1E,GACXokB,EACAhI,EACAi7D,EAEJ,CACF,EAvME,OAsCF,SACED,EACA56D,EACA4H,EACAhI,EACAi7D,GAEA,MAAMzgC,EAAYxyB,EAAMowB,UAClByB,EAAc7xB,EAAMwwB,YAC1B,GAAIgC,GAAaX,EAAa,CAC5B,MAAM6hC,EAAeV,EAAare,WAAW30C,EAAMkV,YAAa,UAChEw+C,EAAa1oB,mBAAmBxY,EAAWX,GAC3C6hC,EAAa5pB,WAAW1xC,EAAUJ,EACpC,CACA,MAAMqzC,EAAYrrC,EAAM60B,UACxB,GAAIwW,GAAaA,EAAUxW,UAAW,CACpC,MAAMw+B,GAAcJ,GAAyBD,GAAcre,WACzD30C,EAAMkV,YACN,QAEFm+C,EAAWjoB,aAAaC,GACxBgoB,EAAWtoB,SAAS3yC,EAAUJ,EAChC,CACF,GA5CO,SAAS27D,GAAoB1mE,EAAYi7B,GAC9C,MAAM9lB,EASD,SAAsBnV,EAAYi7B,GACvC,OAAQ4qC,GAAqB7lE,EAAci7B,CAC7C,CAXoB0rC,CAAa3mE,EAAYi7B,GAC3C,OAAO9lB,EAAYA,CACrB,CAqDO,SAASyxD,GACdL,EACAx7D,EACAgI,EACAqB,EACArH,EACAzD,EACA08D,GAEA,IAAIa,GAAU,EACd,MAAM5oB,EAAalrC,EAAMioB,WACzB,GAAIijB,EAAY,CACd,MAAMnU,EAAamU,EAAW7iB,gBAC1B0O,GAAc,IAAqBA,GAAc,GACnDmU,EAAWriB,oBAAoB7uB,IAE3B+8B,GAAc,IAChBmU,EAAWrjD,OAEbqjD,EAAWtiB,kBAAkB5uB,GAC7B85D,GAAU,EAEd,CAUA,OAWF,SACEN,EACAx7D,EACAgI,EACAqB,EACA9K,EACA08D,GAEA,MAAM76D,EAAW4H,EAAMi1B,qBAANj1B,CAA4BhI,GAC7C,IAAKI,EACH,OAEF,MAAM+K,EAAqB/K,EAASoJ,oBAClCH,EACA9K,GAEIi+B,EAAWx0B,EAAMsmB,cACvB,GAAIkO,EACFu/B,GAAeP,EAAarwD,EAAoBnD,EAAOhI,OAClD,EAELy7D,EADyBV,GAAmB5vD,EAAmBxL,YAE7D67D,EACArwD,EACAnD,EACAhI,EACAi7D,EAEJ,CACF,CAjDEe,CACER,EACAx7D,EACAgI,EACAqB,EACA9K,EACA08D,GAGKa,CACT,CA+CA,SAASC,GAAeP,EAAap7D,EAAU4H,EAAOhI,GACpD,GAA0B,sBAAtBI,EAAST,UAAmC,CAC9C,MAAMw5D,EAC2D,EAE7D8C,gBACJ,IAAK,IAAIr4E,EAAI,EAAGyT,EAAK8hE,EAAW9zE,OAAQzB,EAAIyT,IAAMzT,EAChDm4E,GAAeP,EAAarC,EAAWv1E,GAAIokB,EAAOhI,GAEpD,MACF,CACew7D,EAAY7e,WAAW30C,EAAMkV,YAAa,WAClD00B,WACsD,EAC3D5xC,EACAgI,EAAMsmB,cACNtmB,EAAMg1B,0BAEV,CCrKA,MAAMk/B,GAAgB,CACpB,MAAS,CAAC,UAAW,SAAU,aAAc,QAAS,QACtD,OAAU,CAAC,UAAW,cACtB,OAAU,IAMNC,GAAiB,CACrB,OAAU,CAAC,QAAS,OAAQ,WAC5B,OAAU,CAAC,UAAW,SAAU,aAAc,QAAS,OAAQ,YAiyBjE,OAxxBA,cAA4C,GAI1C,WAAA/pE,CAAYukB,GACV5hB,MAAM4hB,GAGNpxB,KAAK62E,6BAA+B72E,KAAK82E,wBAAwBh5D,KAAK9d,MAMtEA,KAAK+2E,uBAML/2E,KAAKg3E,oCAAsC,KAM3Ch3E,KAAKi3E,kBAMLj3E,KAAKk3E,c3F1DA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,E2F2DvB,CAQA,WAAAC,CAAYjhD,EAAMyU,EAAYn1B,GAC5B,IAAI8xB,EACJ,MAAMnR,EAAQD,EAAKE,WAOnB,OANID,IAAUE,IAAoBF,IAAUE,KAC1Cr2B,KAAKo3E,qBAAqBlhD,EAAMyU,EAAYn1B,GACxCxV,KAAKq3E,sBAAsBnhD,KAC7BoR,GAAS,IAGNA,CACT,CASA,OAAA6lC,CAAQ7vC,EAAGn0B,EAAGgH,EAAGk4B,GACf,MAAMsC,EAAatC,EAAWsC,WACxB1G,EAAYoE,EAAWpE,UACvBv0B,EAAau0B,EAAUv0B,WACvB8F,EAAayuB,EAAUzuB,WACvB4b,EAAQpxB,KAAKohE,WACblrC,EAAO9E,EAAMuW,YAAYwlC,QAAQ7vC,EAAGn0B,EAAGgH,EAAGw6B,EAAYn1B,GACtD8hE,EAAYjvC,EAAWivC,UACvBC,IACJD,EAAUp2C,KAAuBo2C,EAAUp2C,MAEzCq2C,GAASrhD,EAAKshD,mBAChBthD,EAAKshD,iBAAmB9nE,GAU1B,OARe1P,KAAKm3E,YAAYjhD,EAAMyU,EAAYn1B,KAG/C+hE,GAAQ92C,KAAKC,MAAQ2H,EAAWw7B,KAAO,IACd,WAA1BzyC,EAAMqmD,iBAENz3E,KAAK03E,iBAAiBxhD,EAAMmS,GAEvB74B,MAAM29D,QAAQ7vC,EAAGn0B,EAAGgH,EAAGk4B,EAChC,CAMA,cAAA0kC,CAAe72C,GACb,MAAM9E,EAAQpxB,KAAKohE,WACnB,OACE5xD,MAAMu9D,eAAe72C,KACM,WAA1B9E,EAAMqmD,gBACH,EAAOrmD,KAAU8E,EAAKyhD,eACtBzhD,EAAK0hD,WAAWxmD,GAExB,CAKA,YAAAq/C,CAAav6C,GACX,OAAOA,EAAKwU,SAAS1qC,KAAKohE,WAC5B,CAOA,YAAAp4B,CAAaX,GACX,MAAMwvC,EAAgB73E,KAAKohE,WAAW3iD,cAKtC,OAJIze,KAAK+2E,yBAA2Bc,IAClC73E,KAAK+2E,uBAAyBc,EAC9B73E,KAAK4sE,cAAc9sE,OAAS,GAEvB0P,MAAMw5B,aAAaX,EAC5B,CAQA,oBAAA+uC,CAAqBlhD,EAAMyU,EAAYn1B,GACrC,MAAM4b,EACJpxB,KAAKohE,WAEDv9C,EAAWuN,EAAM3S,cACjBwsC,EAAc75B,EAAMs5B,kBAAoB,KAExCh7C,EAAawmB,EAAKshD,iBAClBM,EAAe5hD,EAAK6hD,eAAe3mD,GACzC,IACG0mD,EAAaE,OACdF,EAAanW,qBAAuBjyD,GACpCooE,EAAanL,kBAAoB9oD,GACjCi0D,EAAaG,qBAAuBhtB,EAEpC,OAGF,MAAMx6C,EAAS2gB,EAAMuW,YACfsiB,EAAY74B,EAAMo5B,eAClB6f,EAAiB55D,EAAOynE,cAExBC,EADW1nE,EAAO68D,yBAAyB93D,GACrBy1D,mBAAmB/0C,EAAKq0C,kBAE9C6N,EAAc3nE,EAAO4nE,eAAe1tC,EAAYn1B,EAAY0gB,GAC5DoiD,EAAW,EAAOlnD,UACjB8E,EAAKqiD,sBAAsBD,GAClCpiD,EAAKyhD,eAAeW,GAAY,GAC5BruB,IACF/zB,EAAKsiD,wBAAwBF,GAAY,IAE3CR,EAAaE,OAAQ,EACrB,IAAK,IAAIvvE,EAAI,EAAGgwE,EAAKL,EAAYt4E,OAAQ2I,EAAIgwE,IAAMhwE,EAAG,CACpD,MAAMiwE,EAAaN,EAAY3vE,GAC/B,GAAIiwE,EAAWtiD,YAAcC,GAC3B,SAEF,MAAMsiD,EAAkBD,EAAW3X,UAC7B6X,EACJvO,EAAeY,mBAAmB0N,GAC9BE,EAAehkE,EAAgBsjE,EAAYS,GAC3CE,EAAgBp7E,EACpBm7E,EACAznD,EAAMq5B,kBAAoB/6C,EAC1B1P,KAAK24D,WAEDogB,EAAiB3lE,EAAOwlE,EAAkBC,GAC5C,KACAC,EACErD,EAAe,IAAI,GACvB,EACAqD,EACAppE,EACAi7B,GAEI+qC,EAAwBzrB,EAC1B,IAAI,GAAmB,EAAG4uB,EAAcnpE,EAAYi7B,QACpD5+B,EACE+X,EAAmB,GACvBpU,EACAi7B,GAOIrD,EAAS,SAAU7sB,GACvB,IAAImqC,EACJ,MAAMp0B,EACJ/V,EAAQwW,oBAAsBG,EAAMH,mBAItC,GAHIT,IACFo0B,EAASp0B,EAAc/V,EAAS/K,IAE9Bk1C,EAAQ,CACV,MAAMozB,EAAQh4E,KAAKs2E,cACjB77D,EACAqJ,EACA8gC,EACA6wB,EACAC,GAEFoC,EAAaE,MAAQF,EAAaE,OAASA,CAC7C,CACF,EAEMr9D,EAAW+9D,EAAW5wC,cACxBmjB,GAAeA,IAAgB6sB,EAAaG,qBAC9Ct9D,EAASjP,KAAKu/C,GAEhB,IAAK,IAAI5sD,EAAI,EAAGyT,EAAK6I,EAAS7a,OAAQzB,EAAIyT,IAAMzT,EAAG,CACjD,MAAMoc,EAAUE,EAAStc,GAEtB06E,IACDhkE,GAAWgkE,EAAgBt+D,EAAQuW,cAAc9iB,cAEjDo5B,EAAOnnC,KAAKH,KAAMya,EAEtB,CACA,MAAMu+D,EAA4BvD,EAAaxuE,SAEzCgyE,EACsB,WAA1B7nD,EAAMqmD,iBACNxtB,GACuB,IAAvBmuB,EAAYt4E,OACR,KACA+4E,EACAK,EAAuB,IAAI,GAC/BD,EACAvpE,EACAi7B,EACAl6B,EAAO0oE,cACPH,EACA5nD,EAAMq5B,mBAGR,GADAv0B,EAAKyhD,eAAeW,GAAUp4E,KAAKg5E,GAC/BxD,EAAuB,CACzB,MAAM9U,EAAyB,IAAI,GACjC,KACAlxD,EACAi7B,EACAl6B,EAAO0oE,cACPzD,EAAsBzuE,SACtBmqB,EAAMq5B,mBAERv0B,EAAKsiD,wBAAwBF,GAAUp4E,KAAK0gE,EAC9C,CACF,CACAkX,EAAanL,iBAAmB9oD,EAChCi0D,EAAaG,oBAAsBhtB,EACnC6sB,EAAanW,mBAAqBjyD,CACpC,CAWA,0BAAA6vD,CACEltD,EACAg2B,EACAm3B,EACAjsD,EACA4tD,GAEA,MAAMzxD,EAAa24B,EAAWpE,UAAUv0B,WAClCyE,EAAWk0B,EAAWpE,UAAU9vB,SACtCqrD,EAA+BzzD,MAAhByzD,EAA4B,EAAIA,EAC/C,MAAMpuC,EAAQpxB,KAAKohE,WAEbzyD,EADSyiB,EAAMuW,YACG2lC,yBACtBjlC,EAAWpE,UAAUzuB,YAGjBmnD,EAAYhrD,EAAe,CAACU,IAClC3U,EAAOi/D,EAAWjtD,EAAa8vD,EAAc7C,GAG7C,MAAMhiD,EAAW,CAAC,EAQZ+hD,EAAkB,SAAUjiD,EAASI,EAAUklD,GACnD,IAAIrgE,EAAM+a,EAAQsW,aACNhlB,IAARrM,IACFA,EAAM,EAAO+a,IAEf,MAAMqzB,EAAQnzB,EAASjb,GACvB,GAAKouC,GAcE,IAAc,IAAVA,GAAkBiyB,EAAajyB,EAAMiyB,WAAY,CAC1D,GAAmB,IAAfA,EAGF,OAFAplD,EAASjb,IAAO,EAChByhE,EAAQlhE,OAAOkhE,EAAQiY,YAAYtrC,GAAQ,GACpCv6B,EAASkH,EAAS2W,EAAOvW,GAElCizB,EAAMjzB,SAAWA,EACjBizB,EAAMiyB,WAAaA,CACrB,MAtBY,CACV,GAAmB,IAAfA,EAEF,OADAplD,EAASjb,IAAO,EACT6T,EAASkH,EAAS2W,EAAOvW,GAElCsmD,EAAQjhE,KACLya,EAASjb,GAAO,CACf+a,QAASA,EACT2W,MAAOA,EACPvW,SAAUA,EACVklD,WAAYA,EACZxsD,SAAUA,GAGhB,CAUF,EAEMq5D,EAEF5sE,KACF,cAEF,IAAIipB,EACJ,IAAK,IAAI5qB,EAAI,EAAGyT,EAAK86D,EAAc9sE,QAASmpB,GAAS5qB,EAAIyT,IAAMzT,EAAG,CAChE,MAAM63B,EAAO02C,EAAcvuE,GAE3B,IAAK0W,GADcpG,EAASs8D,mBAAmB/0C,EAAKq0C,kBACxB5N,GAC1B,SAGF,MAAM2b,EAAW,EAAOlnD,GAClBumD,EAAiB,CAACzhD,EAAKyhD,eAAeW,IACtCE,EAA0BtiD,EAAKsiD,wBAAwBF,GACzDE,GACFb,EAAez3E,KAAKs4E,GAEtBb,EAAevuC,MAAMuuC,IACnB,MAAMlY,EACJkY,IAAmBa,EACfnwC,EAAW0iB,cAAc/gD,MAAMu9B,KAAKwZ,GAASA,EAAKliD,QAClD,KACN,IAAK,IAAI4J,EAAI,EAAGgwE,EAAKd,EAAe73E,OAAQ2I,EAAIgwE,IAAMhwE,EAAG,CACvD,MAAM4wE,EAAgB1B,EAAelvE,GASrC,GARAwgB,EAAQowD,EAAc9Z,2BACpBltD,EACA3C,EACAyE,EACAqrD,EACA9C,EACA+C,GAEEx2C,EACF,OAAO,CAEX,IAEJ,CACA,OAAOA,CACT,CAOA,WAAA6e,CAAYC,GACV,OAAO,IAAIC,SAAQ,CAACC,EAASqxC,KAC3B,MAAMloD,EAAQpxB,KAAKohE,WACbkX,EAAW,EAAOlnD,GAClB3gB,EAAS2gB,EAAMuW,YACfnyB,EAAaxV,KAAK0sE,mBAClB92D,EAAmBJ,EAAWtH,YAC9BwB,EAAa1P,KAAK2hE,mBAClBhzD,EAAW8B,EAAO68D,yBAAyB93D,GAC3CnD,EAAapH,GACjBjL,KAAKg3E,oCACLjvC,EAAMpoC,SAEFohE,EAAYpyD,EAAS4qE,kCACzBlnE,EACA3C,GAGF,IAAIwmB,EACJ,IAAK,IAAI73B,EAAI,EAAGyT,EAAK9R,KAAK4sE,cAAc9sE,OAAQzB,EAAIyT,IAAMzT,EACxD,GACE0iE,EAAUxJ,aAAev3D,KAAK4sE,cAAcvuE,GAAG0iE,UAAUxJ,WACzD,CAIA,GAHArhC,EACEl2B,KAAK4sE,cAAcvuE,GAEjB63B,EAAKE,aAAeC,GAAkB,CACxC,MAAMlpB,EAASwB,EAASs8D,mBAAmB/0C,EAAK6qC,WAE9CtwD,EAAO+oE,YACPhkE,EAAWxH,aACVuE,EAAeqD,EAAkBzI,IAElC,GAAMkF,EAAYmD,GAEpB,KACF,CACA0gB,OAAOnqB,CACT,CAEF,IAAKmqB,GAAQA,EAAKujD,mBAAqB,EAErC,YADAxxC,EAAQ,IAGV,MACMj0B,EAAS,EADArF,EAASs8D,mBAAmB/0C,EAAKq0C,mBAE1CmP,EAAY,EACfrnE,EAAW,GAAK2B,EAAO,IAAMtE,GAC7BsE,EAAO,GAAK3B,EAAW,IAAM3C,GAG1BiL,EAAWub,EACdmiD,iBACAtnC,QAAO,SAAU4oC,EAAajB,GAC7B,OAAOiB,EAAYC,OAAOlB,EAAW5wC,cACvC,GAAG,IAEL,IAAIywC,EAAwBriD,EAAKqiD,sBAAsBD,GACvD,IAAKC,EAAuB,CAC1B,MAAM5K,EAAWnkC,GACf76B,EAASm9D,YACPn9D,EAAS68D,kBAAkB97D,EAAYe,EAAO09D,cAG5Ch6D,EAAWnU,KAAKi3E,kBAYtBsB,EFveD,SACLnkE,EACA5D,EACAmK,EACA6V,EACArjB,EACAuC,EACAyE,GAEA,MAEMo5B,EAAUP,GAFF54B,EAAK,GAAKkhE,GACTlhE,EAAK,GAAKkhE,IAEzB/nC,EAAQo7B,uBAAwB,EAChC,MAAMx7B,EAASI,EAAQJ,OACjB8J,EAAW,IAAI,GACnB1J,EACA+nC,GACAnoE,EACA,KACAgH,GAEI0lE,EAAel/D,EAAS7a,OAExBg6E,EAAcp7E,KAAKQ,MAAM,SAAwB26E,GACjDE,EAAmB,CAAC,EAC1B,IAAK,IAAI17E,EAAI,EAAGA,GAAKw7E,IAAgBx7E,EAAG,CACtC,MAAMoc,EAAUE,EAAStc,EAAI,GACvB27E,EAAuBv/D,EAAQwW,oBAAsBT,EAC3D,IAAKwpD,EACH,SAEF,IAAIp1B,EAASo1B,EAAqBv/D,EAAS/K,GAC3C,IAAKk1C,EACH,SAEG10C,MAAM4L,QAAQ8oC,KACjBA,EAAS,CAACA,IAEZ,MACMlZ,GADQrtC,EAAIy7E,GACEviB,SAAS,IAAI0iB,SAAS,EAAG,UAC7C,IAAK,IAAIt3D,EAAI,EAAGyE,EAAKw9B,EAAO9kD,OAAQ6iB,EAAIyE,IAAMzE,EAAG,CAC/C,MAAMu3D,EAAgBt1B,EAAOjiC,GACvB9H,EAAWq/D,EAAcxiC,qBAAdwiC,CAAoCz/D,GACrD,IAAKI,IAAa9F,GAAW5H,EAAQ0N,EAAS3M,aAC5C,SAEF,MAAMuU,EAAQy3D,EAAcl2D,QACtBiuB,EAAOxvB,EAAMowB,UACfZ,GACFA,EAAK6D,SAASpK,GAEhB,MAAMgH,EAASjwB,EAAMwwB,YACjBP,IACFA,EAAOoD,SAASpK,GAChBgH,EAAOyC,YAAY,OAErB1yB,EAAMm1B,aAAQ7rC,GACd,MAAMqnC,EAAQ8mC,EAAcxvC,WAC5B,GAAI0I,EAAO,CACT,MAAMqI,EAAUrI,EAAMrI,eACtB,IAAK0Q,EACH,SAGF,MAAM0+B,EAAantC,GACjByO,EAAQ,GACRA,EAAQ,QACR1vC,EACA,CAAC+nC,OAAO,IAEJiF,EAAMohC,EAAWhtC,OACvBgtC,EAAWllC,UAAYvJ,EACvByuC,EAAW3/B,SAAS,EAAG,EAAGzB,EAAI7jC,MAAO6jC,EAAIjvC,QACzC2Y,EAAMk1B,SACJ,IAAI,GAAK,CACPoB,IAAKA,EACL0C,QAASA,EACT74B,OAAQwwB,EAAM3I,YACd4Q,aAAc,SACdE,aAAc,SACd59C,OAAQy1C,EAAMpI,YACdnU,QAAS,EACTziB,KAAMg/B,EAAMnI,UACZtmB,MAAOyuB,EAAMhJ,WACbj2B,SAAUi/B,EAAMpT,cAChB4J,eAAgBwJ,EAAM/I,sBAG5B,CACA,MAAMtT,EAAStU,EAAMkV,aAAe,EACpC,IAAIyiD,EAAiBL,EAAiBhjD,GACjCqjD,IACHA,EAAiB,CAAC,EAClBL,EAAiBhjD,GAAUqjD,EAC3BA,EAAwB,QAAI,GAC5BA,EAAuB,OAAI,GAC3BA,EAA2B,WAAI,GAC/BA,EAAsB,MAAI,IAE5B,MAAMn5E,EAAO4Z,EAAST,UACtB,GAAa,uBAATnZ,EAA+B,CACjC,MAAM2yE,EAC8D,EAEhEyG,8BACJ,IAAK,IAAIh8E,EAAI,EAAGyT,EAAK8hE,EAAW9zE,OAAQzB,EAAIyT,IAAMzT,EAAG,CACnD,MAAMwc,EAAW+4D,EAAWv1E,GAC5B+7E,EAAev/D,EAAST,UAAUrC,QAAQ,QAAS,KAAK7X,KACtD2a,EACA4H,EAEJ,CACF,MACE23D,EAAen5E,EAAK8W,QAAQ,QAAS,KAAK7X,KAAK2a,EAAU4H,EAE7D,CACF,CAEA,MAAM63D,EAAaluE,OAAO3M,KAAKs6E,GAAkBxyC,IAAIoF,QAAQjhC,KAAK4P,IAClE,IAAK,IAAIjd,EAAI,EAAGyT,EAAKwoE,EAAWx6E,OAAQzB,EAAIyT,IAAMzT,EAAG,CACnD,MAAM+7E,EAAiBL,EAAiBO,EAAWj8E,IACnD,IAAK,MAAM4C,KAAQm5E,EAAgB,CACjC,MAAMG,EAAeH,EAAen5E,GACpC,IAAK,IAAI0hB,EAAI,EAAGyE,EAAKmzD,EAAaz6E,OAAQ6iB,EAAIyE,EAAIzE,GAAK,EAAG,CACxDs0B,EAASoT,SAASkwB,EAAa53D,EAAI,IACnC,IAAK,IAAIM,EAAI,EAAGu3D,EAAKhqE,EAAW1Q,OAAQmjB,EAAIu3D,IAAMv3D,EAChDg0B,EAAS08B,aAAanjE,EAAWyS,IACjCg0B,EAASqV,aAAaiuB,EAAa53D,GAEvC,CACF,CACF,CACA,OAAO4qB,EAAQ2M,aAAa,EAAG,EAAG/M,EAAOj4B,MAAOi4B,EAAOrjC,OACzD,CEkWgC2wE,CACtB9M,EAZiB,CACjB3tE,KAAKkjE,mBACHv0D,EAASyiE,mBAAmBl7C,EAAKq0C,kBACjC76D,EACA,EACA4lE,GACA3H,EAAS,GAAK2H,GACd3H,EAAS,GAAK2H,GACd,IAMF36D,EACAyW,EAAMH,mBACNtiB,EAASs8D,mBAAmB/0C,EAAKq0C,kBACjCr0C,EAAK6hD,eAAe3mD,GAAOuwC,mBAC3BxtD,GAEF+hB,EAAKqiD,sBAAsBD,GAAYC,CACzC,CACAtwC,EFjWC,SAAmBF,EAAOptB,EAAUwlD,GACzC,MAAMua,EAAiB,GACvB,GAAIva,EAAW,CACb,MAAMh3D,EAAIzK,KAAKQ,MAAMR,KAAK4X,MAAMyxB,EAAM,IAAMutC,IACtCnlE,EAAIzR,KAAKQ,MAAMR,KAAK4X,MAAMyxB,EAAM,IAAMutC,IAItC53D,EAGJ,GAFC,GAAMvU,EAAG,EAAGg3D,EAAUjrD,MAAQ,GAC7B,GAAM/E,EAAG,EAAGgwD,EAAUr2D,OAAS,GAAKq2D,EAAUjrD,OAE5CxM,EAAIy3D,EAAUj2D,KAAKwT,GACnB0uB,EAAI+zB,EAAUj2D,KAAKwT,EAAQ,GAE3Brf,EADI8hE,EAAUj2D,KAAKwT,EAAQ,GACnB,KAAO0uB,EAAI,IAAM1jC,GACzBoxE,EAAcp7E,KAAKQ,MAAM,SAAwByb,EAAS7a,QAC5DzB,GAAKA,EAAIy7E,GAAgB,GAC3BY,EAAex6E,KAAKya,EAAStc,EAAIy7E,EAAc,GAEnD,CAEA,OAAOY,CACT,CE0UcC,CAAUjB,EAAW/+D,EAAU49D,GAAuB,GAElE,CAKA,kBAAAlX,GACE,MAAMjwC,EAAQpxB,KAAKohE,WACfhwC,EAAMyG,mBAAgD9rB,IAAhC/L,KAAK+2E,wBAC7B3lD,EAAM5S,SAEV,CAOA,uBAAAs4D,CAAwBh6D,GACtB9c,KAAKshE,yBACP,CAMA,eAAAxW,CAAgBziB,GACd,MAAMkF,EAAUvtC,KAAKutC,QACfuG,EAAQvG,EAAQgE,YACtBhE,EAAQgE,YAAcvxC,KAAKohE,WAAWxpC,aACtC,MAAM0/C,EAAYjvC,EAAWivC,UACvBC,IACJD,EAAUp2C,KAAuBo2C,EAAUp2C,KAEvC4/B,EAEF9gE,KACF,cACF,IAAK,IAAI3B,EAAI,EAAGyT,EAAKgvD,EAAMhhE,OAAQzB,EAAIyT,IAAMzT,EAAG,CAC9C,MAAM63B,EAAO4qC,EAAMziE,GACbm6E,EACJtiD,EAAKsiD,wBAAwB,EAAOx4E,KAAKohE,aAC3C,GAAIoX,EACF,IAAK,IAAI71D,EAAI61D,EAAwB14E,OAAS,EAAG6iB,GAAK,IAAKA,EACzD61D,EAAwB71D,GAAG27C,QACzBt+D,KAAKutC,QACL,EACAvtC,KAAK46E,uBAAuB1kD,EAAMmS,GAClCA,EAAWpE,UAAU9vB,SACrBojE,OACAxrE,EACAs8B,EAAW0iB,cAInB,CACAxd,EAAQgE,YAAcuC,CACxB,CAEA,sBAAA8mC,CAAuB1kD,EAAMmS,GAC3B,MAAMsC,EAAatC,EAAWsC,WACxB1G,EAAYoE,EAAWpE,UACvB/vB,EAAS+vB,EAAU/vB,OACnBxE,EAAau0B,EAAUv0B,WACvByE,EAAW8vB,EAAU9vB,SACrBC,EAAOi0B,EAAWj0B,KAClBc,EAAQxW,KAAK4X,MAAMlC,EAAK,GAAKu2B,GAC7B7gC,EAASpL,KAAK4X,MAAMlC,EAAK,GAAKu2B,GAG9Bh8B,EADS3O,KAAKohE,WAAWz5B,YACP2lC,yBACtBjlC,EAAWpE,UAAUzuB,YAEjBurD,EAAY7qC,EAAK6qC,UACjBoX,EAAaxpE,EAASs8D,mBAAmB/0C,EAAKq0C,kBAC9CsQ,EACJlsE,EAASs8D,mBAAmBlK,EAAW/gE,KAAK24D,WAAW,GAAKwf,EAAW,GAazE,OAZkBr3D,GAChB,GAAM9gB,KAAKwhE,sBAAsB7hE,QAAS,EAAIgrC,EAAY,EAAIA,GAC9D3qC,KAAKkjE,mBACHhvD,EACAxE,EACAyE,EACAw2B,EACAz1B,EACApL,EACA+wE,GAIN,CAOA,UAAA5X,CAAW11B,EAASlF,GAClB,MAAMivC,EAAYjvC,EAAWivC,UACvBC,IACJD,EAAUp2C,KAAuBo2C,EAAUp2C,KAG7ClhC,KAAKg3E,oCACH3uC,EAAWglC,2BAA2B1tE,QACxCK,KAAKi3E,kBAAoB5uC,EAAWpE,UAAU9vB,SAE9C,MAAMid,EACJpxB,KAAKohE,WAED0Z,EAAa1pD,EAAMqmD,gBACnB3jC,EAAQvG,EAAQgE,YACtBhE,EAAQgE,YAAcngB,EAAMwG,aAC5B,MAAMmjD,EAAcnE,GAAekE,GAC7B72C,EAAYoE,EAAWpE,UACvB9vB,EAAW8vB,EAAU9vB,SACrB85D,EAAa78C,EAAMuW,YAEnBrK,EADW2wC,EAAWX,yBAAyBrpC,EAAUzuB,YAC5Cg2D,kBACjBvnC,EAAUv0B,WACVu+D,EAAWE,YAGPrN,EAAQ9gE,KAAK4sE,cACbqC,EAAQ,GACRC,EAAS,GACf,IAAI1O,GAAQ,EACZ,IAAK,IAAIniE,EAAIyiE,EAAMhhE,OAAS,EAAGzB,GAAK,IAAKA,EAAG,CAC1C,MAAM63B,EACJ4qC,EAAMziE,GAERmiE,EAAQA,IAAUtqC,EAAK6hD,eAAe3mD,GAAO4mD,MAC7C,MAAML,EAAiBzhD,EAAKyhD,eAAe,EAAOvmD,IAAQ+Q,QACvD64C,GAAUA,EAAM3b,aAAa0b,KAEhC,GAA8B,IAA1BpD,EAAe73E,OACjB,SAEF,MAAMkZ,EAAYhZ,KAAK46E,uBAAuB1kD,EAAMmS,GAC9CgnC,EAAWn5C,EAAK6qC,UAAU,GAChC,IAAImP,GAAe,EAEnB,MAAMf,EAAcwI,EAAe,GAAGzY,cAAclmD,GACpD,GAAIm2D,EAAa,CACf,IAAK,IAAIxsD,EAAI,EAAGyE,EAAK6nD,EAAMnvE,OAAQ6iB,EAAIyE,IAAMzE,EAC3C,GAAI2a,IAAM+xC,GAAYA,EAAWH,EAAOvsD,GAAI,CAC1C,MAAMq8C,EAAOiQ,EAAMtsD,GAEjB5N,GACE,CACEo6D,EAAY,GACZA,EAAY,GACZA,EAAY,GACZA,EAAY,IAEd,CAACnQ,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,OAG9BkR,IACH3iC,EAAQ+D,OACR4+B,GAAe,GAEjB3iC,EAAQytB,YAERztB,EAAQ0tB,OAAOkU,EAAY,GAAIA,EAAY,IAC3C5hC,EAAQmI,OAAOy5B,EAAY,GAAIA,EAAY,IAC3C5hC,EAAQmI,OAAOy5B,EAAY,GAAIA,EAAY,IAC3C5hC,EAAQmI,OAAOy5B,EAAY,GAAIA,EAAY,IAE3C5hC,EAAQ0tB,OAAO+D,EAAK,GAAIA,EAAK,IAC7BzxB,EAAQmI,OAAOspB,EAAK,GAAIA,EAAK,IAC7BzxB,EAAQmI,OAAOspB,EAAK,GAAIA,EAAK,IAC7BzxB,EAAQmI,OAAOspB,EAAK,GAAIA,EAAK,IAC7BzxB,EAAQyxB,OAEZ,CAEFiQ,EAAM/uE,KAAKivE,GACXD,EAAOhvE,KAAKmvE,EACd,CACA,IAAK,IAAI5mE,EAAI,EAAGgwE,EAAKd,EAAe73E,OAAQ2I,EAAIgwE,IAAMhwE,EAAG,CACjCkvE,EAAelvE,GACvB61D,QACZ/wB,EACA,EACAv0B,EACA7E,EACAojE,EACAwD,EAEJ,CACI7K,GACF3iC,EAAQqE,SAEZ,CACArE,EAAQgE,YAAcuC,EACtB9zC,KAAKwgE,MAAQA,EAEbhxD,MAAMyzD,WAAW11B,EAASlF,EAC5B,CAUA,aAAAiuC,CACE77D,EACAqJ,EACA8gC,EACA6wB,EACAC,GAEA,IAAK9wB,EACH,OAAO,EAET,IAAI2xB,GAAU,EACd,GAAIrmE,MAAM4L,QAAQ8oC,GAChB,IAAK,IAAIvmD,EAAI,EAAGyT,EAAK8yC,EAAO9kD,OAAQzB,EAAIyT,IAAMzT,EAC5Ck4E,EACED,GACEb,EACAh7D,EACAmqC,EAAOvmD,GACPylB,EACA9jB,KAAK62E,kCACL9qE,EACA2pE,IACGa,OAGTA,EAAUD,GACRb,EACAh7D,EACAmqC,EACA9gC,EACA9jB,KAAK62E,kCACL9qE,EACA2pE,GAGJ,OAAOa,CACT,CAOA,qBAAAc,CAAsBnhD,GACpB,MAAM9E,EACJpxB,KAAKohE,WAEP,GAA8B,WAA1BhwC,EAAMqmD,gBACR,OAAO,EAET,MAAMwD,EAAc/kD,EAAK6hD,eAAe3mD,GAClCvN,EAAWuN,EAAM3S,cACjB/O,EAAawmB,EAAKshD,iBACxB,OACEyD,EAAYC,yBAA2BxrE,GACvCurE,EAAYE,uBAAyBt3D,CAEzC,CAOA,gBAAA6zD,CAAiBxhD,EAAMmS,GACrB,MAAMjX,EACJpxB,KAAKohE,WAED6Z,EAAc/kD,EAAK6hD,eAAe3mD,GAClCvN,EAAWuN,EAAM3S,cACjBk5D,EAAiBzhD,EAAKyhD,eAAe,EAAOvmD,IAClD6pD,EAAYE,qBAAuBt3D,EAEnC,MAAMk9C,EAAY7qC,EAAKq0C,iBACjBjtC,EAAIyjC,EAAU,GACdtwD,EAAS2gB,EAAMuW,YACrB,IAAIgD,EAAatC,EAAWsC,WAC5B,MACMn1B,EADY6yB,EAAWpE,UACAzuB,WACvB7G,EAAW8B,EAAO68D,yBAAyB93D,GAC3Co4D,EAAiBj/D,EAAS+wB,cAAcxJ,EAAK6qC,UAAU,IACvDqa,EACH/yC,EAAWsC,WAAazU,EAAKshD,iBAAoB5J,EAC9Cl+D,EAAaf,EAAS+wB,cAAcpC,GACpCiQ,EAAUrX,EAAKmX,WAAWjc,GAGhCuZ,EAAajsC,KAAK4X,MAChB5X,KAAKwK,IAAIyhC,EAAYywC,EAAmBzwC,IAE1C,MAAMv2B,EAAO3D,EAAO8+D,iBAAiBjyC,EAAGqN,EAAYn1B,GACpD+3B,EAAQJ,OAAOj4B,MAAQd,EAAK,GAC5Bm5B,EAAQJ,OAAOrjC,OAASsK,EAAK,GAC7B,MAAMinE,EAAc1wC,EAAaywC,EACjC,GAAoB,IAAhBC,EAAmB,CACrB,MAAMrf,EAAkB,GAAeh8D,KAAKk3E,eAC5C,GAAelb,EAAiBqf,EAAaA,GAC7C9tC,EAAQomC,aAAa1oE,MAAMsiC,EAASyuB,EACtC,CACA,MAAMmc,EAAaxpE,EAASs8D,mBAAmBlK,EAAW/gE,KAAK24D,WACzD2iB,EAAaF,EAAmB1rE,EAChCsJ,EAAY,GAAehZ,KAAKk3E,eACtC,GAAel+D,EAAWsiE,GAAaA,G3FvpBpC,SAAmBtiE,EAAW9G,EAAIC,GAChC2O,GAAS9H,EAAWhS,GAAI2Z,GAAM,EAAG,EAAG,EAAG,EAAGzO,EAAIC,GACvD,C2FspBI4S,CAAmB/L,GAAYm/D,EAAW,IAAKA,EAAW,IAC1D,IAAK,IAAI95E,EAAI,EAAGyT,EAAK6lE,EAAe73E,OAAQzB,EAAIyT,IAAMzT,EAAG,CACjCs5E,EAAet5E,GACvBigE,QACZ/wB,EACA8tC,EACAriE,EACA,GACA,EACA29D,GAAcvlD,EAAMqmD,iBAExB,CACAwD,EAAYC,uBAAyBhlD,EAAKshD,gBAC5C,GC50BF,GACW,UADX,GAE8B,yBCkO9B,OAxIA,cAA8B+D,GAI5B,WAAA1uE,CAAYC,GACVA,EAAUA,GAAoB,CAAC,EAE/B,MAAMi6B,EAAqC36B,OAAO+N,OAAO,CAAC,EAAGrN,UACtDi6B,EAAYgqC,eACZhqC,EAAYkmC,uBAEnBz9D,MAC8F,GAQ9FxP,KAAKqe,GAKLre,KAAK6d,KAKL7d,KAAKse,GAEL,MAAMw8D,EAAahuE,EAAQguE,YAAc,SAEzCtpE,EAAqB,UAAdspE,GAAwC,UAAdA,EAAwB,IAMzD96E,KAAKw7E,YAAcV,EAEnB96E,KAAKy7E,WAAW3uE,EAAQikE,QAAUjkE,EAAQikE,QAAU,GACpD/wE,KAAK07E,+BACgC3vE,IAAnCe,EAAQmgE,wBACJngE,EAAQmgE,wBASdjtE,KAAKu3B,cAOLv3B,KAAKu4B,aACP,CAEA,cAAA+Q,GACE,OAAO,IAAI,GAA8BtpC,KAC3C,CAgBA,WAAA8nC,CAAYC,GACV,OAAOv4B,MAAMs4B,YAAYC,EAC3B,CAKA,aAAA0vC,GACE,OAAOz3E,KAAKw7E,WACd,CAQA,UAAApO,GACE,OAA8BptE,KAAKuM,IAAIovE,GACzC,CAQA,yBAAAzO,GACE,OACEltE,KAAKuM,IAAIovE,GAEb,CAQA,UAAAF,CAAW1K,GACT/wE,KAAKgH,IAAI20E,GAAsB5K,EACjC,CAQA,yBAAA2K,CAA0BzO,GACxBjtE,KAAKgH,IAAI20E,GAAyC1O,EACpD,GC/FF,OAnIA,cAAyB,GASvB,WAAApgE,CAAYk0D,EAAW5qC,EAAOoiB,EAAKqjC,EAAQ5X,EAAkBl3D,GAC3D0C,MAAMuxD,EAAW5qC,EAAOrpB,GAMxB9M,KAAKmN,OAAS,KAMdnN,KAAK67E,QAAUD,EAMf57E,KAAK87E,UAAY,KAMjB97E,KAAK+7E,QAML/7E,KAAKwV,WAAa,KAMlBxV,KAAK0P,WAML1P,KAAKikE,kBAAoBD,EAMzBhkE,KAAKg8E,KAAOzjC,EAEZv4C,KAAKN,IAAM64C,CACb,CAOA,SAAA0jC,GACE,OAAOj8E,KAAK67E,OACd,CAOA,WAAA/zC,GACE,OAAO9nC,KAAK87E,SACd,CAKA,IAAAxxE,GACMtK,KAAKm2B,OAASE,KAChBr2B,KAAKwjE,SAASntC,IACdr2B,KAAKikE,kBAAkBjkE,KAAMA,KAAKg8E,MAC9Bh8E,KAAK+7E,SACP/7E,KAAK+7E,QAAQ/7E,KAAKmN,OAAQnN,KAAK0P,WAAY1P,KAAKwV,YAGtD,CAOA,MAAA0mE,CAAOvhE,EAAUf,GACf5Z,KAAKm8E,YAAYxhE,EACnB,CAKA,OAAAyhE,GACEp8E,KAAKwjE,SAASntC,GAChB,CAQA,WAAA8lD,CAAYxhE,GACV3a,KAAK87E,UAAYnhE,EACjB3a,KAAKwjE,SAASntC,GAChB,CAOA,SAAAgmD,CAAUC,GACRt8E,KAAK+7E,QAAUO,CACjB,GCwJF,OAvQA,MAIE,WAAAzvE,CAAY0vE,GAMVv8E,KAAKu8E,mBAAkCxwE,IAAlBwwE,EAA8BA,EAAgB,KAMnEv8E,KAAKw8E,OAAS,EAMdx8E,KAAKy8E,SAAW,CAAC,EAMjBz8E,KAAK08E,QAAU,KAMf18E,KAAK28E,QAAU,IACjB,CAKA,cAAAvkC,GACE,OAAOp4C,KAAKu8E,cAAgB,GAAKv8E,KAAKy0B,WAAaz0B,KAAKu8E,aAC1D,CAMA,WAAA1L,CAAYjc,GACV,KAAO50D,KAAKo4C,kBACVp4C,KAAK+J,KAET,CAKA,KAAAR,GACEvJ,KAAKw8E,OAAS,EACdx8E,KAAKy8E,SAAW,CAAC,EACjBz8E,KAAK08E,QAAU,KACf18E,KAAK28E,QAAU,IACjB,CAMA,WAAAC,CAAYl9E,GACV,OAAOM,KAAKy8E,SAAShwE,eAAe/M,EACtC,CAQA,OAAA4Y,CAAQxP,GACN,IAAI+zE,EAAQ78E,KAAK08E,QACjB,KAAOG,GACL/zE,EAAE+zE,EAAMC,OAAQD,EAAME,KAAM/8E,MAC5B68E,EAAQA,EAAMG,KAElB,CAOA,GAAAzwE,CAAI7M,EAAKoN,GACP,MAAM+vE,EAAQ78E,KAAKy8E,SAAS/8E,GAE5B,OADA8R,OAAiBzF,IAAV8wE,EAAqB,IACxBA,IAAU78E,KAAK28E,UAGfE,IAAU78E,KAAK08E,SACjB18E,KAAK08E,QAAgC18E,KAAK08E,QAAa,MACvD18E,KAAK08E,QAAQO,MAAQ,OAErBJ,EAAMG,MAAMC,MAAQJ,EAAMI,MAC1BJ,EAAMI,MAAMD,MAAQH,EAAMG,OAE5BH,EAAMG,MAAQ,KACdH,EAAMI,MAAQj9E,KAAK28E,QACnB38E,KAAK28E,QAAQK,MAAQH,EACrB78E,KAAK28E,QAAUE,GAZNA,EAAMC,MAcjB,CAOA,MAAAnyE,CAAOjL,GACL,MAAMm9E,EAAQ78E,KAAKy8E,SAAS/8E,GAkB5B,OAjBA8R,OAAiBzF,IAAV8wE,EAAqB,IACxBA,IAAU78E,KAAK28E,SACjB38E,KAAK28E,QAAgCE,EAAW,MAC5C78E,KAAK28E,UACP38E,KAAK28E,QAAQK,MAAQ,OAEdH,IAAU78E,KAAK08E,SACxB18E,KAAK08E,QAAgCG,EAAW,MAC5C78E,KAAK08E,UACP18E,KAAK08E,QAAQO,MAAQ,QAGvBJ,EAAMG,MAAMC,MAAQJ,EAAMI,MAC1BJ,EAAMI,MAAMD,MAAQH,EAAMG,cAErBh9E,KAAKy8E,SAAS/8E,KACnBM,KAAKw8E,OACAK,EAAMC,MACf,CAKA,QAAAroD,GACE,OAAOz0B,KAAKw8E,MACd,CAKA,OAAAp9D,GACE,MAAM3f,EAAO,IAAIyQ,MAAMlQ,KAAKw8E,QAC5B,IACIK,EADAx+E,EAAI,EAER,IAAKw+E,EAAQ78E,KAAK28E,QAASE,EAAOA,EAAQA,EAAMI,MAC9Cx9E,EAAKpB,KAAOw+E,EAAME,KAEpB,OAAOt9E,CACT,CAKA,SAAAy9E,GACE,MAAMj+D,EAAS,IAAI/O,MAAMlQ,KAAKw8E,QAC9B,IACIK,EADAx+E,EAAI,EAER,IAAKw+E,EAAQ78E,KAAK28E,QAASE,EAAOA,EAAQA,EAAMI,MAC9Ch+D,EAAO5gB,KAAOw+E,EAAMC,OAEtB,OAAO79D,CACT,CAKA,QAAAk+D,GACE,OAAOn9E,KAAK08E,QAAQI,MACtB,CAKA,WAAAM,GACE,OAAOp9E,KAAK08E,QAAQK,IACtB,CAMA,YAAAM,GACE,OAAOr9E,KAAK28E,QAAQI,IACtB,CAOA,IAAAO,CAAK59E,GACH,GAAKM,KAAK48E,YAAYl9E,GAGtB,OAAOM,KAAKy8E,SAAS/8E,GAAKo9E,MAC5B,CAKA,GAAA/yE,GACE,MAAM8yE,EAAQ78E,KAAK08E,QAUnB,cATO18E,KAAKy8E,SAASI,EAAME,MACvBF,EAAMG,QACRH,EAAMG,MAAMC,MAAQ,MAEtBj9E,KAAK08E,QAAgCG,EAAW,MAC3C78E,KAAK08E,UACR18E,KAAK28E,QAAU,QAEf38E,KAAKw8E,OACAK,EAAMC,MACf,CAMA,OAAA/kE,CAAQrY,EAAKb,GACXmB,KAAKuM,IAAI7M,GACTM,KAAKy8E,SAAS/8E,GAAKo9E,OAASj+E,CAC9B,CAMA,GAAAmI,CAAItH,EAAKb,GACP2S,IAAS9R,KAAOM,KAAKy8E,UAAW,IAChC,MAAMI,EAAQ,CACZE,KAAMr9E,EACNs9E,MAAO,KACPC,MAAOj9E,KAAK28E,QACZG,OAAQj+E,GAELmB,KAAK28E,QAGR38E,KAAK28E,QAAQK,MAAQH,EAFrB78E,KAAK08E,QAAUG,EAIjB78E,KAAK28E,QAAUE,EACf78E,KAAKy8E,SAAS/8E,GAAOm9E,IACnB78E,KAAKw8E,MACT,CAOA,OAAA/jC,CAAQrkC,GACNpU,KAAKu8E,cAAgBnoE,CACvB,GCzQK,SAAS,GAAekpB,EAAGn0B,EAAGgH,EAAG4wD,GACtC,YAAkBh1D,IAAdg1D,GACFA,EAAU,GAAKzjC,EACfyjC,EAAU,GAAK53D,EACf43D,EAAU,GAAK5wD,EACR4wD,GAEF,CAACzjC,EAAGn0B,EAAGgH,EAChB,CAQO,SAASotE,GAAUjgD,EAAGn0B,EAAGgH,GAC9B,OAAOmtB,EAAI,IAAMn0B,EAAI,IAAMgH,CAC7B,CA6BO,SAASqtE,GAAQ99E,GACtB,OAAOA,EAAIgtC,MAAM,KAAKnF,IAAIoF,OAC5B,CCpBA,OAzCA,cAAwB,GACtB,KAAApjC,GACE,KAAOvJ,KAAKy0B,WAAa,GACvBz0B,KAAK+J,MAAMw5D,UAEb/zD,MAAMjG,OACR,CAKA,WAAAsnE,CAAYP,GACV,KAAOtwE,KAAKo4C,kBAAkB,CAE5B,GADap4C,KAAKm9E,WACTznD,WAAY46C,EACnB,MAEAtwE,KAAK+J,MAAMw5D,SAEf,CACF,CAKA,kBAAAka,GACE,GAAwB,IAApBz9E,KAAKy0B,WACP,OAEF,MAEM6I,EADYkgD,GADNx9E,KAAKq9E,gBAEG,GACpBr9E,KAAKsY,SAAS4d,IACRA,EAAK6qC,UAAU,KAAOzjC,IACxBt9B,KAAK2K,ODGN,SAAgBo2D,GACrB,OAAOwc,GAAUxc,EAAU,GAAIA,EAAU,GAAIA,EAAU,GACzD,CCLoB,CAAO7qC,EAAK6qC,YACxB7qC,EAAKqtC,UACP,GAEJ,GCzBF,MAAMma,GAAe,CAAC,EAAG,EAAG,GAooB5B,OAvlBA,MAIE,WAAA7wE,CAAYC,GAwBV,IAAIgwB,EACJ,GApBA98B,KAAKk3B,aAA8BnrB,IAApBe,EAAQoqB,QAAwBpqB,EAAQoqB,QAAU,EAMjEl3B,KAAKo+B,aAAetxB,EAAQqwB,YAC5B3rB,E3GwJG,SAAkBjP,EAAKwM,EAAM4uE,GAClC,MAAMC,EAAU7uE,GAAQuM,GACxB,OAAO/Y,EAAIs7E,OAAM,SAAUC,EAAYpgE,GACrC,GAAc,IAAVA,EACF,OAAO,EAET,MAAMqgE,EAAMH,EAAQr7E,EAAImb,EAAQ,GAAIogE,GACpC,QAASC,EAAM,GAAMJ,GAAkB,IAARI,EACjC,GACF,C2GhKMC,CACEh+E,KAAKo+B,cACL,SAAUz1B,EAAG/D,GACX,OAAOA,EAAI+D,CACb,IACA,GAEF,KAKGmE,EAAQmxE,QACX,IAAK,IAAI5/E,EAAI,EAAGyT,EAAK9R,KAAKo+B,aAAat+B,OAAS,EAAGzB,EAAIyT,IAAMzT,EAC3D,GAAKy+B,GAGH,GAAI98B,KAAKo+B,aAAa//B,GAAK2B,KAAKo+B,aAAa//B,EAAI,KAAOy+B,EAAY,CAClEA,OAAa/wB,EACb,KACF,OALA+wB,EAAa98B,KAAKo+B,aAAa//B,GAAK2B,KAAKo+B,aAAa//B,EAAI,GAchE2B,KAAKm+B,YAAcrB,EAMnB98B,KAAKm3B,QAAUn3B,KAAKo+B,aAAat+B,OAAS,EAM1CE,KAAKkyC,aAA6BnmC,IAAnBe,EAAQklD,OAAuBllD,EAAQklD,OAAS,KAM/DhyD,KAAKk+E,SAAW,UACQnyE,IAApBe,EAAQmxE,UACVj+E,KAAKk+E,SAAWpxE,EAAQmxE,QACxBzsE,EAAOxR,KAAKk+E,SAASp+E,QAAUE,KAAKo+B,aAAat+B,OAAQ,KAG3D,MAAMqN,EAASL,EAAQK,YAERpB,IAAXoB,GAAyBnN,KAAKkyC,SAAYlyC,KAAKk+E,WACjDl+E,KAAKkyC,QAAU,EAAW/kC,IAG5BqE,GACIxR,KAAKkyC,SAAWlyC,KAAKk+E,UAAcl+E,KAAKkyC,UAAYlyC,KAAKk+E,SAC3D,IAOFl+E,KAAKm+E,WAAa,UACQpyE,IAAtBe,EAAQsxE,YACVp+E,KAAKm+E,WAAarxE,EAAQsxE,UAC1B5sE,EAAOxR,KAAKm+E,WAAWr+E,QAAUE,KAAKo+B,aAAat+B,OAAQ,KAO7DE,KAAKq+E,eACkBtyE,IAArBe,EAAQ6gE,SACJ7gE,EAAQ6gE,SACP3tE,KAAKm+E,WAEN,KADA/kD,GAEN5nB,GACIxR,KAAKq+E,WAAar+E,KAAKm+E,YACtBn+E,KAAKq+E,YAAcr+E,KAAKm+E,WAC3B,IAOFn+E,KAAKkN,aAAqBnB,IAAXoB,EAAuBA,EAAS,KAM/CnN,KAAKs+E,gBAAkB,KAMvBt+E,KAAKu+E,SAAW,CAAC,EAAG,GAMpBv+E,KAAKw+E,WAAa,CAAC,EAAG,EAAG,EAAG,QAENzyE,IAAlBe,EAAQ2xE,MACVz+E,KAAKs+E,gBAAkBxxE,EAAQ2xE,MAAMl3C,KAAI,SAAUnzB,EAAMkpB,GACvD,MAAM2jC,EAAY,IAAI,GACpBviE,KAAKqI,IAAI,EAAGqN,EAAK,IACjB1V,KAAKwK,IAAIkL,EAAK,GAAK,GAAI,GACvB1V,KAAKqI,IAAI,EAAGqN,EAAK,IACjB1V,KAAKwK,IAAIkL,EAAK,GAAK,GAAI,IAEzB,GAAIjH,EAAQ,CACV,MAAMuxE,EAAsB1+E,KAAK0rE,0BAA0Bv+D,EAAQmwB,GACnE2jC,EAAUx3D,KAAO/K,KAAKwK,IAAIw1E,EAAoBj1E,KAAMw3D,EAAUx3D,MAC9Dw3D,EAAUt3D,KAAOjL,KAAKqI,IAAI23E,EAAoB/0E,KAAMs3D,EAAUt3D,MAC9Ds3D,EAAUv3D,KAAOhL,KAAKwK,IAAIw1E,EAAoBh1E,KAAMu3D,EAAUv3D,MAC9Du3D,EAAUr3D,KAAOlL,KAAKqI,IAAI23E,EAAoB90E,KAAMq3D,EAAUr3D,KAChE,CACA,OAAOq3D,CACT,GAAGjhE,MACMmN,GACTnN,KAAK2+E,qBAAqBxxE,EAE9B,CAUA,gBAAAyxE,CAAiBzxE,EAAQkyB,EAAM9rB,GAC7B,MAAM0tD,EAAYjhE,KAAK0rE,0BAA0Bv+D,EAAQkyB,GACzD,IAAK,IAAIhhC,EAAI4iE,EAAUx3D,KAAMqI,EAAKmvD,EAAUt3D,KAAMtL,GAAKyT,IAAMzT,EAC3D,IAAK,IAAIskB,EAAIs+C,EAAUv3D,KAAM0d,EAAK65C,EAAUr3D,KAAM+Y,GAAKyE,IAAMzE,EAC3DpP,EAAS,CAAC8rB,EAAMhhC,EAAGskB,GAGzB,CASA,+BAAAmsD,CACE/N,EACAxtD,EACAsrE,EACAC,GAEA,IAAI7d,EAAW93D,EAAGgH,EACd4uE,EAAkB,KAClBzhD,EAAIyjC,EAAU,GAAK,EAOvB,IANyB,IAArB/gE,KAAKm+B,aACPh1B,EAAI43D,EAAU,GACd5wD,EAAI4wD,EAAU,IAEdge,EAAkB/+E,KAAKirE,mBAAmBlK,EAAW+d,GAEhDxhD,GAAKt9B,KAAKk3B,SAAS,CAYxB,GAXyB,IAArBl3B,KAAKm+B,aACPh1B,EAAIzK,KAAKQ,MAAMiK,EAAI,GACnBgH,EAAIzR,KAAKQ,MAAMiR,EAAI,GACnB8wD,EAAY,GAAwB93D,EAAGA,EAAGgH,EAAGA,EAAG0uE,IAEhD5d,EAAYjhE,KAAK0rE,0BACfqT,EACAzhD,EACAuhD,GAGAtrE,EAAS+pB,EAAG2jC,GACd,OAAO,IAEP3jC,CACJ,CACA,OAAO,CACT,CAOA,SAAApvB,GACE,OAAOlO,KAAKkN,OACd,CAOA,UAAA+qB,GACE,OAAOj4B,KAAKm3B,OACd,CAOA,UAAAa,GACE,OAAOh4B,KAAKk3B,OACd,CAQA,SAAA8T,CAAU1N,GACR,OAAIt9B,KAAKkyC,QACAlyC,KAAKkyC,QAEPlyC,KAAKk+E,SAAS5gD,EACvB,CAQA,aAAAoC,CAAcpC,GACZ,OAAOt9B,KAAKo+B,aAAad,EAC3B,CAOA,cAAA+F,GACE,OAAOrjC,KAAKo+B,YACd,CAQA,0BAAAwwC,CAA2B7N,EAAW8d,EAAeC,GACnD,GAAI/d,EAAU,GAAK/gE,KAAKm3B,QAAS,CAC/B,GAAyB,IAArBn3B,KAAKm+B,YAAmB,CAC1B,MAAM10B,EAAsB,EAAfs3D,EAAU,GACjBr3D,EAAsB,EAAfq3D,EAAU,GACvB,OAAO,GACLt3D,EACAA,EAAO,EACPC,EACAA,EAAO,EACPm1E,EAEJ,CACA,MAAME,EAAkB/+E,KAAKirE,mBAC3BlK,EACA+d,GAAc9+E,KAAKw+E,YAErB,OAAOx+E,KAAK0rE,0BACVqT,EACAhe,EAAU,GAAK,EACf8d,EAEJ,CACA,OAAO,IACT,CAQA,4BAAAG,CAA6Bje,EAAWzjC,EAAGuhD,GACzC,GAAIvhD,EAAIt9B,KAAKm3B,SAAWmG,EAAIt9B,KAAKk3B,QAC/B,OAAO,KAGT,MAAM+nD,EAAale,EAAU,GACvBme,EAAane,EAAU,GACvBoe,EAAape,EAAU,GAE7B,GAAIzjC,IAAM2hD,EACR,OAAO,GACLC,EACAC,EACAD,EACAC,EACAN,GAIJ,GAAI7+E,KAAKm+B,YAAa,CACpB,MAAM9nB,EAAS3X,KAAKC,IAAIqB,KAAKm+B,YAAab,EAAI2hD,GACxCx1E,EAAO/K,KAAKQ,MAAMggF,EAAa7oE,GAC/B3M,EAAOhL,KAAKQ,MAAMigF,EAAa9oE,GACrC,GAAIinB,EAAI2hD,EACN,OAAO,GAAwBx1E,EAAMA,EAAMC,EAAMA,EAAMm1E,GAKzD,OAAO,GAAwBp1E,EAFlB/K,KAAKQ,MAAMmX,GAAU6oE,EAAa,IAAM,EAEVx1E,EAD9BhL,KAAKQ,MAAMmX,GAAU8oE,EAAa,IAAM,EACEN,EACzD,CAEA,MAAME,EAAkB/+E,KAAKirE,mBAAmBlK,EAAW/gE,KAAKw+E,YAChE,OAAOx+E,KAAK0rE,0BAA0BqT,EAAiBzhD,EAAGuhD,EAC5D,CASA,yBAAAnT,CAA0Bv+D,EAAQmwB,EAAGuhD,GACnC7+E,KAAKo/E,uBAAuBjyE,EAAO,GAAIA,EAAO,GAAImwB,GAAG,EAAOogD,IAC5D,MAAMj0E,EAAOi0E,GAAa,GACpBh0E,EAAOg0E,GAAa,GAC1B19E,KAAKo/E,uBAAuBjyE,EAAO,GAAIA,EAAO,GAAImwB,GAAG,EAAMogD,IAG3D,OAAO,GAAwBj0E,EAFlBi0E,GAAa,GAEiBh0E,EAD9Bg0E,GAAa,GAC6BmB,EACzD,CAMA,kBAAAzN,CAAmBrQ,GACjB,MAAM/O,EAAShyD,KAAKgrC,UAAU+1B,EAAU,IAClCrxD,EAAa1P,KAAK0/B,cAAcqhC,EAAU,IAC1C4M,EAAWnkC,GAAOxpC,KAAK8rE,YAAY/K,EAAU,IAAK/gE,KAAKu+E,UAC7D,MAAO,CACLvsB,EAAO,IAAM+O,EAAU,GAAK,IAAO4M,EAAS,GAAKj+D,EACjDsiD,EAAO,IAAM+O,EAAU,GAAK,IAAO4M,EAAS,GAAKj+D,EAErD,CAUA,kBAAAu7D,CAAmBlK,EAAW+d,GAC5B,MAAM9sB,EAAShyD,KAAKgrC,UAAU+1B,EAAU,IAClCrxD,EAAa1P,KAAK0/B,cAAcqhC,EAAU,IAC1C4M,EAAWnkC,GAAOxpC,KAAK8rE,YAAY/K,EAAU,IAAK/gE,KAAKu+E,UACvD90E,EAAOuoD,EAAO,GAAK+O,EAAU,GAAK4M,EAAS,GAAKj+D,EAChDhG,EAAOsoD,EAAO,IAAM+O,EAAU,GAAK,GAAK4M,EAAS,GAAKj+D,EAG5D,OAAOmD,EAAepJ,EAAMC,EAFfD,EAAOkkE,EAAS,GAAKj+D,EACrBhG,EAAOikE,EAAS,GAAKj+D,EACYovE,EAChD,CAaA,iCAAAvF,CAAkClnE,EAAY3C,EAAY2vE,GACxD,OAAOr/E,KAAKs/E,gCACVjtE,EAAW,GACXA,EAAW,GACX3C,GACA,EACA2vE,EAEJ,CAeA,+BAAAC,CACEn2E,EACAgH,EACAT,EACA6vE,EACAF,GAEA,MAAM/hD,EAAIt9B,KAAKwrE,kBAAkB97D,GAC3BiV,EAAQjV,EAAa1P,KAAK0/B,cAAcpC,GACxC00B,EAAShyD,KAAKgrC,UAAU1N,GACxBqwC,EAAWnkC,GAAOxpC,KAAK8rE,YAAYxuC,GAAIt9B,KAAKu+E,UAElD,IAAIW,EAAcv6D,GAASxb,EAAI6oD,EAAO,IAAOtiD,EAAai+D,EAAS,GAC/DwR,EAAcx6D,GAASqtC,EAAO,GAAK7hD,GAAMT,EAAai+D,EAAS,GAUnE,OARI4R,GACFL,EAAa51E,GAAK41E,EApeP,GAoe+B,EAC1CC,EAAa71E,GAAK61E,EAreP,GAqe+B,IAE1CD,EAAahgF,GAAMggF,EAveR,GAweXC,EAAajgF,GAAMigF,EAxeR,IA2eN,GAAwB7hD,EAAG4hD,EAAYC,EAAYE,EAC5D,CAiBA,sBAAAD,CAAuBj2E,EAAGgH,EAAGmtB,EAAGiiD,EAA2BF,GACzD,MAAMrtB,EAAShyD,KAAKgrC,UAAU1N,GACxB5tB,EAAa1P,KAAK0/B,cAAcpC,GAChCqwC,EAAWnkC,GAAOxpC,KAAK8rE,YAAYxuC,GAAIt9B,KAAKu+E,UAElD,IAAIW,GAAc/1E,EAAI6oD,EAAO,IAAMtiD,EAAai+D,EAAS,GACrDwR,GAAcntB,EAAO,GAAK7hD,GAAKT,EAAai+D,EAAS,GAUzD,OARI4R,GACFL,EAAa51E,GAAK41E,EAtgBP,GAsgB+B,EAC1CC,EAAa71E,GAAK61E,EAvgBP,GAugB+B,IAE1CD,EAAahgF,GAAMggF,EAzgBR,GA0gBXC,EAAajgF,GAAMigF,EA1gBR,IA6gBN,GAAwB7hD,EAAG4hD,EAAYC,EAAYE,EAC5D,CAUA,wBAAA5R,CAAyBp7D,EAAYirB,EAAG+hD,GACtC,OAAOr/E,KAAKo/E,uBACV/sE,EAAW,GACXA,EAAW,GACXirB,GACA,EACA+hD,EAEJ,CAMA,sBAAAG,CAAuBze,GACrB,OAAO/gE,KAAKo+B,aAAa2iC,EAAU,GACrC,CAUA,WAAA+K,CAAYxuC,GACV,OAAIt9B,KAAKq+E,UACAr+E,KAAKq+E,UAEPr+E,KAAKm+E,WAAW7gD,EACzB,CAMA,gBAAAmiD,CAAiBniD,GACf,OAAKt9B,KAAKs+E,gBAKHt+E,KAAKs+E,gBAAgBhhD,GAJnBt9B,KAAKkN,QACRlN,KAAK0rE,0BAA0B1rE,KAAKkN,QAASowB,GAC7C,IAGR,CAmBA,iBAAAkuC,CAAkB97D,EAAYgwE,GAM5B,OAAO,GALGnkE,GACRvb,KAAKo+B,aACL1uB,EACAgwE,GAAiB,GAEH1/E,KAAKk3B,QAASl3B,KAAKm3B,QACrC,CAQA,2BAAAs3C,CAA4B1N,EAAWyN,GACrC,OAAO/jD,GACL+jD,EACA,EACAA,EAAS1uE,OACT,EACAE,KAAKirE,mBAAmBlK,GAE5B,CAMA,oBAAA4d,CAAqBxxE,GACnB,MAAMrN,EAASE,KAAKo+B,aAAat+B,OAC3B6/E,EAAiB,IAAIzvE,MAAMpQ,GACjC,IAAK,IAAIw9B,EAAIt9B,KAAKk3B,QAASoG,EAAIx9B,IAAUw9B,EACvCqiD,EAAeriD,GAAKt9B,KAAK0rE,0BAA0Bv+D,EAAQmwB,GAE7Dt9B,KAAKs+E,gBAAkBqB,CACzB,GC7oBF,GAMiB,gBANjB,GAce,cAdf,GAuBiB,gBCmMjB,SAASC,GAAkBC,GACzB,OAAKA,EAGD3vE,MAAM4L,QAAQ+jE,GACT,SAAUx3C,GACf,OAAOw3C,CACT,EAG6B,mBAApBA,EACFA,EAGF,SAAUx3C,GACf,MAAO,CAACw3C,EACV,EAdS,IAeX,CAEA,OAlMA,cAAqB,GAInB,WAAAhzE,CAAYC,GACV0C,QAMAxP,KAAKwV,WAAa,GAAc1I,EAAQ0I,YAMxCxV,KAAK8/E,cAAgBF,GAAkB9yE,EAAQ+7B,cAM/C7oC,KAAK+/E,8BACiCh0E,IAApCe,EAAQkzE,yBACJlzE,EAAQkzE,wBAQdhgF,KAAKu2E,SAAU,EAMfv2E,KAAKs3B,YAA2BvrB,IAAlBe,EAAQqpB,MAAsBrpB,EAAQqpB,MAAQ,QAM5Dn2B,KAAKigF,YAA2Bl0E,IAAlBe,EAAQozE,OAAsBpzE,EAAQozE,MAMpDlgF,KAAKmgF,eAAiBrzE,EAAQ6e,YAM9B3rB,KAAKogF,aAAe,KAMpBpgF,KAAKqgF,aAAe,KAEpB,MAAM5/D,EAAOzgB,KAKbA,KAAKsgF,aAAe,IAAIt4C,SAAQ,SAAUC,EAASqxC,GACjD74D,EAAK2/D,aAAen4C,EACpBxnB,EAAK4/D,aAAe/G,CACtB,GACF,CAOA,eAAA1wC,GACE,OAAO5oC,KAAK8/E,aACd,CAMA,0BAAAS,GACE,OAAOvgF,KAAK+/E,wBACd,CAOA,aAAAz/C,GACE,OAAOtgC,KAAKwV,UACd,CAMA,cAAA6tB,CAAe7tB,GACb,OAAO,IACT,CAKA,OAAA+yB,GACE,OAAOvoC,KAAKsgF,YACd,CAOA,QAAAlqD,GACE,OAAOp2B,KAAKs3B,MACd,CAKA,QAAAkiD,GACE,OAAOx5E,KAAKigF,MACd,CAKA,cAAAjR,GACE,OAAOhvE,KAAKmgF,YACd,CAMA,OAAAK,GACExgF,KAAKwe,SACP,CASA,eAAAiiE,CAAgB53C,GACd7oC,KAAK8/E,cAAgBF,GAAkB/2C,GACvC7oC,KAAKwe,SACP,CAMA,QAAAglD,CAASrtC,GACPn2B,KAAKs3B,OAASnB,EACdn2B,KAAKwe,SACP,GCrMK,SAASkiE,GAAiBlrE,GAC/B,IAAI7G,EAAW6G,EAAW/G,qBAK1B,OAJKE,IACHA,EA6HG,SAA6B6G,EAAY2hB,EAASw2C,EAAU35D,GACjE,MAAM7G,EAASwzE,GAAqBnrE,GACpC,OA3FK,SAAyBrI,EAAQgqB,EAASw2C,EAAU35D,GACzDA,OAAoBjI,IAAXiI,EAAuBA,EAAS,WAEzC,MAAMmpB,EAAcyjD,GAAsBzzE,EAAQgqB,EAASw2C,GAE3D,OAAO,IAAI,GAAS,CAClBxgE,OAAQA,EACR6kD,OAAQj+C,EAAU5G,EAAQ6G,GAC1BmpB,YAAaA,EACbwwC,SAAUA,GAEd,CAgFSkT,CAAgB1zE,EAAQgqB,EAASw2C,EAAU35D,EACpD,CAhIe8sE,CAAoBtrE,GAC/BA,EAAW9G,mBAAmBC,IAEzBA,CACT,CA4FA,SAASiyE,GAAsBzzE,EAAQgqB,EAASw2C,EAAU32C,GACxDG,OAAsBprB,IAAZorB,EAAwBA,EAAUgC,GAC5Cw0C,EAAWnkC,QAAoBz9B,IAAb4hE,EAAyBA,EAAWv0C,IAEtD,MAAMtvB,EAAS+J,EAAU1G,GACnB+H,EAAQ,GAAS/H,GAEvB6pB,EACEA,EAAgB,EACZA,EACAt4B,KAAKwK,IAAIgM,EAAQy4D,EAAS,GAAI7jE,EAAS6jE,EAAS,IAEtD,MAAM7tE,EAASq3B,EAAU,EACnBgG,EAAc,IAAIjtB,MAAMpQ,GAC9B,IAAK,IAAIw9B,EAAI,EAAGA,EAAIx9B,IAAUw9B,EAC5BH,EAAYG,GAAKtG,EAAgBt4B,KAAKC,IAAI,EAAG2+B,GAE/C,OAAOH,CACT,CAsBO,SAASwjD,GAAqBnrE,GAEnC,IAAIrI,GADJqI,EAAa,GAAcA,IACHtH,YACxB,IAAKf,EAAQ,CACX,MAAM4zE,EACH,IAAM,EAAgBtjD,QAAWjoB,EAAWpH,mBAC/CjB,EAAS0F,GAAgBkuE,GAAOA,EAAMA,EAAMA,EAC9C,CACA,OAAO5zE,CACT,CCoNO,MAAM6zE,WAAwB/jE,GAKnC,WAAApQ,CAAY5L,EAAMi1B,GAChB1mB,MAAMvO,GAONjB,KAAKk2B,KAAOA,CACd,EAGF,OAzVA,cAAyB,GAIvB,WAAArpB,CAAYC,GACV0C,MAAM,CACJq5B,aAAc/7B,EAAQ+7B,aACtBm3C,wBAAyBlzE,EAAQkzE,wBACjCxqE,WAAY1I,EAAQ0I,WACpB2gB,MAAOrpB,EAAQqpB,MACf+pD,MAAOpzE,EAAQozE,MACfv0D,YAAa7e,EAAQ6e,cAMvB3rB,KAAKqe,GAKLre,KAAK6d,KAKL7d,KAAKse,GAMLte,KAAKihF,aAA6Bl1E,IAAnBe,EAAQo0E,QAAuBp0E,EAAQo0E,OAMtDlhF,KAAKmhF,qBACwBp1E,IAA3Be,EAAQygE,eAA+BzgE,EAAQygE,eAAiB,EAKlEvtE,KAAK2O,cAAgC5C,IAArBe,EAAQ6B,SAAyB7B,EAAQ6B,SAAW,KAEpE,MAAMg/D,EAAW,CAAC,IAAK,KACnB3tE,KAAK2O,UACP66B,GAAOxpC,KAAK2O,SAASm9D,YAAY9rE,KAAK2O,SAASqpB,cAAe21C,GAOhE3tE,KAAKohF,UAAY,IAAI,GAAUt0E,EAAQq/B,WAAa,GAMpDnsC,KAAKqhF,QAAU,CAAC,EAAG,GAMnBrhF,KAAK+8E,KAAOjwE,EAAQpN,KAAO,GAM3BM,KAAKshF,YAAc,CACjBje,WAAYv2D,EAAQu2D,WACpB13C,YAAa7e,EAAQ6e,aAUvB3rB,KAAKmuE,WAAarhE,EAAQqhE,WAAarhE,EAAQqhE,WAAa,CAC9D,CAKA,cAAA/1B,GACE,OAAOp4C,KAAKohF,UAAUhpC,gBACxB,CAMA,WAAAy4B,CAAYr7D,EAAY86D,GACtB,MAAM8Q,EAAYphF,KAAKuhF,0BAA0B/rE,GAC7C4rE,GACFA,EAAUvQ,YAAYP,EAE1B,CAWA,iBAAApP,CAAkB1rD,EAAY8nB,EAAG2jC,EAAW1tD,GAC1C,MAAM6tE,EAAYphF,KAAKuhF,0BAA0B/rE,GACjD,IAAK4rE,EACH,OAAO,EAGT,IACIlrD,EAAM25C,EAAc32B,EADpB21B,GAAU,EAEd,IAAK,IAAI1lE,EAAI83D,EAAUx3D,KAAMN,GAAK83D,EAAUt3D,OAAQR,EAClD,IAAK,IAAIgH,EAAI8wD,EAAUv3D,KAAMyG,GAAK8wD,EAAUr3D,OAAQuG,EAClD0/D,EAAe0N,GAAUjgD,EAAGn0B,EAAGgH,GAC/B+oC,GAAS,EACLkoC,EAAUxE,YAAY/M,KACxB35C,EACEkrD,EAAU70E,IAAIsjE,GAEhB32B,EAAShjB,EAAKE,aAAeC,GACzB6iB,IACFA,GAA4B,IAAnB3lC,EAAS2iB,KAGjBgjB,IACH21B,GAAU,GAIhB,OAAOA,CACT,CAMA,sBAAAhB,CAAuBr4D,GACrB,OAAO,CACT,CAMA,MAAAkgB,GACE,OAAO11B,KAAK+8E,IACd,CAOA,MAAAyE,CAAO9hF,GACDM,KAAK+8E,OAASr9E,IAChBM,KAAK+8E,KAAOr9E,EACZM,KAAKwe,UAET,CAMA,SAAA4wD,CAAU55D,GACR,OAAOxV,KAAKihF,OACd,CAMA,cAAA59C,CAAe7tB,GACb,MAAM7G,EAAW6G,EACbxV,KAAKstE,yBAAyB93D,GAC9BxV,KAAK2O,SACT,OAAKA,EAGEA,EAAS00B,iBAFP,IAGX,CAWA,OAAA8pC,CAAQ7vC,EAAGn0B,EAAGgH,EAAGw6B,EAAYn1B,GAC3B,OAAO,GACT,CAOA,WAAA0iE,GACE,OAAOl4E,KAAK2O,QACd,CAMA,wBAAA2+D,CAAyB93D,GACvB,OAAKxV,KAAK2O,SAGH3O,KAAK2O,SAFH,GAAyB6G,EAGpC,CAOA,yBAAA+rE,CAA0B/rE,GACxB,MAAMqD,EAAmB7Y,KAAKsgC,gBAK9B,OAJA9uB,EACuB,OAArBqH,GAA6B,GAAWA,EAAkBrD,GAC1D,IAEKxV,KAAKohF,SACd,CASA,iBAAA5T,CAAkB7iC,GAChB,OAAO3qC,KAAKmhF,eACd,CAQA,gBAAA5R,CAAiBjyC,EAAGqN,EAAYn1B,GAC9B,MAAM7G,EAAW3O,KAAKstE,yBAAyB93D,GACzC+3D,EAAiBvtE,KAAKwtE,kBAAkB7iC,GACxCgjC,EAAWnkC,GAAO76B,EAASm9D,YAAYxuC,GAAIt9B,KAAKqhF,SACtD,OAAsB,GAAlB9T,EACKI,G3DlRSv5D,E2DoRDu5D,E3DpRO7zC,E2DoRGyzC,O3DnRhBxhE,KADoBiG,E2DoRYhS,KAAKqhF,W3DlRhDrvE,EAAO,CAAC,EAAG,IAEbA,EAAK,GAAMoC,EAAK,GAAK0lB,EAAQ,GAAO,EACpC9nB,EAAK,GAAMoC,EAAK,GAAK0lB,EAAQ,GAAO,EAC7B9nB,GANF,IAAeoC,EAAM0lB,EAAO9nB,C2DqRjC,CAWA,8BAAAyvE,CAA+B1gB,EAAWvrD,GACxCA,OAA4BzJ,IAAfyJ,EAA2BA,EAAaxV,KAAKsgC,gBAC1D,MAAM3xB,EAAW3O,KAAKstE,yBAAyB93D,GAI/C,OAHIxV,KAAKw5E,YAAchkE,EAAWjH,aAChCwyD,ED3SC,SAAepyD,EAAUoyD,EAAWvrD,GACzC,MAAM8nB,EAAIyjC,EAAU,GACd7sD,EAASvF,EAASyiE,mBAAmBrQ,GACrCnrD,EAAmB+qE,GAAqBnrE,GAC9C,IAAKpD,EAAmBwD,EAAkB1B,GAAS,CACjD,MAAMuB,EAAa,GAASG,GACtBF,EAAahX,KAAK4K,MACrBsM,EAAiB,GAAK1B,EAAO,IAAMuB,GAGtC,OADAvB,EAAO,IAAMuB,EAAaC,EACnB/G,EAAS8+D,yBAAyBv5D,EAAQopB,EACnD,CACA,OAAOyjC,CACT,CC8RkB,CAAMpyD,EAAUoyD,EAAWvrD,IN5PtC,SAA0BurD,EAAWpyD,GAC1C,MAAM2uB,EAAIyjC,EAAU,GACd53D,EAAI43D,EAAU,GACd5wD,EAAI4wD,EAAU,GAEpB,GAAIpyD,EAASqpB,aAAesF,GAAKA,EAAI3uB,EAASspB,aAC5C,OAAO,EAET,MAAMgpC,EAAYtyD,EAAS8wE,iBAAiBniD,GAC5C,OAAK2jC,GAGEA,EAAU3uD,WAAWnJ,EAAGgH,EACjC,CMiPWuxE,CAAiB3gB,EAAWpyD,GAAYoyD,EAAY,IAC7D,CAMA,KAAAx3D,GACEvJ,KAAKohF,UAAU73E,OACjB,CAEA,OAAAi3E,GACExgF,KAAKuJ,QACLiG,MAAMgxE,SACR,CAOA,eAAAlP,CAAgBH,EAAW37D,GACzB,MAAM4rE,EAAYphF,KAAKuhF,0BAA0B/rE,GAC7C27D,EAAYiQ,EAAU7E,gBACxB6E,EAAU7E,cAAgBpL,EAE9B,CAUA,OAAAE,CAAQ/zC,EAAGn0B,EAAGgH,EAAGqF,GAAa,GCxWzB,SAASmsE,GAAmBC,EAAUjzE,GAC3C,MAAMkzE,EAAS,SACTC,EAAS,SACTC,EAAS,SACTC,EAAa,UACnB,OAAO,SAOKjhB,EAAWp2B,EAAYn1B,GAC/B,GAAKurD,EAGL,OAAO6gB,EACJ7pE,QAAQ8pE,EAAQ9gB,EAAU,GAAGxJ,YAC7Bx/C,QAAQ+pE,EAAQ/gB,EAAU,GAAGxJ,YAC7Bx/C,QAAQgqE,EAAQhhB,EAAU,GAAGxJ,YAC7Bx/C,QAAQiqE,GAAY,WACnB,MAAM1kD,EAAIyjC,EAAU,GACdxL,EAAQ5mD,EAAS8wE,iBAAiBniD,GACxC9rB,EAAO+jD,EAAO,IAEd,OADUA,EAAM1hD,YAAcktD,EAAU,GAAK,GACpCxJ,UACX,GAEN,CACF,CAOO,SAAS0qB,GAAoBC,EAAWvzE,GAC7C,MAAMxM,EAAM+/E,EAAUpiF,OAChBqiF,EAAmB,IAAIjyE,MAAM/N,GACnC,IAAK,IAAI9D,EAAI,EAAGA,EAAI8D,IAAO9D,EACzB8jF,EAAiB9jF,GAAKsjF,GAAmBO,EAAU7jF,GAAIsQ,GAEzD,OAOK,SAAoCwzE,GACzC,GAAgC,IAA5BA,EAAiBriF,OACnB,OAAOqiF,EAAiB,GAE1B,OAAO,SAOKphB,EAAWp2B,EAAYn1B,GAC/B,IAAKurD,EACH,OAEF,MAAMh8D,EPHL,SAAcg8D,GACnB,OAAQA,EAAU,IAAMA,EAAU,IAAMA,EAAU,EACpD,COCgB,CAAcA,GAClBrjD,EAAQ,GAAO3Y,EAAGo9E,EAAiBriF,QACzC,OAAOqiF,EAAiBzkE,GAAOqjD,EAAWp2B,EAAYn1B,EAE1D,CACF,CA3BS4sE,CAA2BD,EACpC,CCjBA,MAAME,WAAgB,GAIpB,WAAAx1E,CAAYC,GACV0C,MAAM,CACJq5B,aAAc/7B,EAAQ+7B,aACtBsD,UAAWr/B,EAAQq/B,UACnB+0C,OAAQp0E,EAAQo0E,OAChB1rE,WAAY1I,EAAQ0I,WACpB2gB,MAAOrpB,EAAQqpB,MACfxnB,SAAU7B,EAAQ6B,SAClB4+D,eAAgBzgE,EAAQygE,eACxB2S,MAAOpzE,EAAQozE,MACf7c,WAAYv2D,EAAQu2D,WACpB13C,YAAa7e,EAAQ6e,YACrBjsB,IAAKoN,EAAQpN,IACbsgF,wBAAyBlzE,EAAQkzE,wBACjC7R,WAAYrhE,EAAQqhE,aAOtBnuE,KAAKsiF,yBACHtiF,KAAKuiF,kBAAoBF,GAAQx+E,UAAU0+E,gBAM7CviF,KAAKgkE,iBAAmBl3D,EAAQk3D,iBAE5Bl3D,EAAQy1E,kBACVviF,KAAKuiF,gBAAkBz1E,EAAQy1E,iBAOjCviF,KAAKwiF,KAAO,KAER11E,EAAQ01E,KACVxiF,KAAKyiF,QAAQ31E,EAAQ01E,MACZ11E,EAAQ41E,KACjB1iF,KAAK2iF,OAAO71E,EAAQ41E,KAOtB1iF,KAAK4iF,iBAAmB,CAAC,CAC3B,CAOA,mBAAAC,GACE,OAAO7iF,KAAKgkE,gBACd,CAOA,kBAAA8e,GACE,OAAO12E,OAAO22E,eAAe/iF,MAAMuiF,kBAAoBviF,KAAKuiF,gBACxDviF,KAAKuiF,gBAAgBzkE,KAAK9d,MAC1BA,KAAKuiF,eACX,CASA,OAAAS,GACE,OAAOhjF,KAAKwiF,IACd,CAOA,gBAAA5sD,CAAiB9Y,GACf,MAAMoZ,EAAoDpZ,EAAY,OAChE4xD,EAAM,EAAOx4C,GACb82C,EAAY92C,EAAKE,WACvB,IAAIn1B,EACA+rE,GAAa32C,IACfr2B,KAAK4iF,iBAAiBlU,IAAO,EAC7BztE,EAAOgiF,IACEvU,KAAO1uE,KAAK4iF,0BACd5iF,KAAK4iF,iBAAiBlU,GAC7BztE,EACE+rE,GAAa32C,GACT4sD,GACAjW,GAAa32C,GACb4sD,QACAl3E,GAEIA,MAAR9K,GACFjB,KAAK6c,cAAc,IAAImkE,GAAgB//E,EAAMi1B,GAEjD,CAOA,mBAAAgtD,CAAoBlf,GAClBhkE,KAAKohF,UAAU73E,QACfvJ,KAAKgkE,iBAAmBA,EACxBhkE,KAAKwe,SACP,CAQA,kBAAA2kE,CAAmBZ,EAAiB7iF,GAClCM,KAAKuiF,gBAAkBA,EACvBviF,KAAKohF,UAAU3D,0BACI,IAAR/9E,EACTM,KAAKwhF,OAAO9hF,GAEZM,KAAKwe,SAET,CAOA,MAAAmkE,CAAOD,GACL,MAAMF,EDzFH,SAAmBE,GACxB,MAAMF,EAAO,GACb,IAAI10C,EAAQ,sBAAsBzB,KAAKq2C,GACvC,GAAI50C,EAAO,CAET,MAAMs1C,EAAgBt1C,EAAM,GAAGtmC,WAAW,GACpC67E,EAAev1C,EAAM,GAAGtmC,WAAW,GACzC,IAAI87E,EACJ,IAAKA,EAAWF,EAAeE,GAAYD,IAAgBC,EACzDd,EAAKtiF,KAAKwiF,EAAI3qE,QAAQ+1B,EAAM,GAAI7nC,OAAOC,aAAao9E,KAEtD,OAAOd,CACT,CAEA,GADA10C,EAAQ,kBAAkBzB,KAAKq2C,GAC3B50C,EAAO,CAET,MAAMy1C,EAAOh3C,SAASuB,EAAM,GAAI,IAChC,IAAK,IAAIzvC,EAAIkuC,SAASuB,EAAM,GAAI,IAAKzvC,GAAKklF,EAAMllF,IAC9CmkF,EAAKtiF,KAAKwiF,EAAI3qE,QAAQ+1B,EAAM,GAAIzvC,EAAEk5D,aAEpC,OAAOirB,CACT,CAEA,OADAA,EAAKtiF,KAAKwiF,GACHF,CACT,CCiEiB,CAAUE,GACvB1iF,KAAKwiF,KAAOA,EACZxiF,KAAKyiF,QAAQD,EACf,CAOA,OAAAC,CAAQD,GACNxiF,KAAKwiF,KAAOA,EACZ,MAAM9iF,EAAM8iF,EAAK3iF,KAAK,MAClBG,KAAKsiF,yBACPtiF,KAAKmjF,mBAAmBlB,GAAoBO,EAAMxiF,KAAK2O,UAAWjP,GAElEM,KAAKwhF,OAAO9hF,EAEhB,CAQA,eAAA6iF,CAAgBxhB,EAAWp2B,EAAYn1B,GAEvC,CAQA,OAAA67D,CAAQ/zC,EAAGn0B,EAAGgH,GACZ,MAAM0/D,EAAe0N,GAAUjgD,EAAGn0B,EAAGgH,GACjCnQ,KAAKohF,UAAUxE,YAAY/M,IAC7B7vE,KAAKohF,UAAU70E,IAAIsjE,EAEvB,EAGF,UCjNA,MAAM,GAAa,GAgJnB,OA9IA,cAA+B,GAQ7B,WAAAhjE,CAAYk0D,EAAW5qC,EAAOqtD,EAAcnL,GAC1C7oE,MAAMuxD,EAAW5qC,EAAO,CAACktC,WAAY,IAMrCrjE,KAAKwxE,SAAW,CAAC,EAMjBxxE,KAAK23E,eAAiB,CAAC,EAMvB33E,KAAKw4E,wBAA0B,CAAC,EAMhCx4E,KAAKy5E,mBAAqB,EAK1Bz5E,KAAKu4E,sBAAwB,CAAC,EAM9Bv4E,KAAKyjF,aAAe,CAAC,EAKrBzjF,KAAKo4E,YAAc,GAKnBp4E,KAAK0jF,cAAgB,CAAC,EAKtB1jF,KAAKw3E,iBAKLx3E,KAAKq4E,eAAiBA,EAAev6D,UAAK/R,EAAW/L,MAKrDA,KAAKuqE,iBAAmBiZ,CAC1B,CAMA,UAAAn2C,CAAWjc,GACT,MAAM1xB,EAAM,EAAO0xB,GAInB,OAHM1xB,KAAOM,KAAKwxE,WAChBxxE,KAAKwxE,SAAS9xE,GAAOstC,GAAsB,EAAG,EAAG,KAE5ChtC,KAAKwxE,SAAS9xE,EACvB,CAMA,UAAAk4E,CAAWxmD,GACT,OAAO,EAAOA,KAAUpxB,KAAKwxE,QAC/B,CAOA,QAAA9mC,CAAStZ,GACP,OAAOpxB,KAAK43E,WAAWxmD,GAASpxB,KAAKqtC,WAAWjc,GAAO+b,OAAS,IAClE,CAMA,cAAA4qC,CAAe3mD,GACb,MAAM1xB,EAAM,EAAO0xB,GAYnB,OAXM1xB,KAAOM,KAAKyjF,eAChBzjF,KAAKyjF,aAAa/jF,GAAO,CACvBs4E,OAAO,EACPC,oBAAqB,KACrBtW,mBAAoBnjE,IACpBmuE,kBAAmB,EACnBuO,uBAAwB18E,IACxB28E,sBAAuB,EACvBwI,eAAgB,IAGb3jF,KAAKyjF,aAAa/jF,EAC3B,CAKA,IAAA4K,GACEtK,KAAKq4E,gBACP,CAKA,OAAA9U,GACE,IAAK,MAAM7jE,KAAOM,KAAKwxE,SAAU,CAC/B,MAAMjkC,EAAUvtC,KAAKwxE,SAAS9xE,GAC9B4tC,GAAcC,GACd,GAAWrtC,KAAKqtC,EAAQJ,eACjBntC,KAAKwxE,SAAS9xE,EACvB,CACA8P,MAAM+zD,SACR,GCxJF,IAAIqgB,IAAkB,EAgDf,SAASC,GACdnB,EACA9G,EACAzuE,EACAuC,EACA8F,EACAsuE,EACAC,GAEA,MAAMC,EAAM,IAAIC,eAChBD,EAAIE,KACF,MACe,mBAARxB,EAAqBA,EAAIv1E,EAAQuC,EAAY8F,GAAcktE,GAClE,GAEsB,eAApB9G,EAAOxhE,YACT4pE,EAAIG,aAAe,eAErBH,EAAIJ,gBAAkBA,GAKtBI,EAAIhoC,OAAS,SAAUl/B,GAErB,IAAKknE,EAAII,QAAWJ,EAAII,QAAU,KAAOJ,EAAII,OAAS,IAAM,CAC1D,MAAMnjF,EAAO26E,EAAOxhE,UAEpB,IAAI3J,EACQ,QAARxP,GAA0B,QAARA,EACpBwP,EAASuzE,EAAIK,aACI,OAARpjF,GACTwP,EAASuzE,EAAIM,YACR7zE,IACHA,GAAS,IAAI8zE,WAAYC,gBACvBR,EAAIK,aACJ,qBAGa,eAARpjF,IACTwP,EAAqCuzE,EAAY,UAE/CvzE,EACFqzE,EAGIlI,EAAOthE,aAAa7J,EAAQ,CAC1BtD,OAAQA,EACR8M,kBAAmBzE,IAGvBomE,EAAO5hE,eAAevJ,IAGxBszE,GAEJ,MACEA,GAEJ,EAIAC,EAAIS,QAAUV,EACdC,EAAIU,MACN,CC4WA,OAlYA,cAAyB,GAIvB,WAAA73E,CAAYC,GACV,MAAM0I,EAAa1I,EAAQ0I,YAAc,YAEnCrI,EAASL,EAAQK,QAAUwzE,GAAqBnrE,GAEhD7G,EACJ7B,EAAQ6B,UNrBP,SAAmB7B,GACxB,MAAM63E,EAAa73E,GAAW,CAAC,EAEzBK,EAASw3E,EAAWx3E,QAAU,GAAc,aAAae,YAEzD02E,EAAc,CAClBz3E,OAAQA,EACR+pB,QAASytD,EAAWztD,QACpBy2C,SAAUgX,EAAWhX,SACrBxwC,YAAayjD,GACXzzE,EACAw3E,EAAWxtD,QACXwtD,EAAWhX,SACXgX,EAAW3tD,gBAGf,OAAO,IAAI,GAAS4tD,EACtB,CMKM,CAAU,CACRz3E,OAAQA,EACR6pB,cAAelqB,EAAQkqB,cACvBG,aAA6BprB,IAApBe,EAAQqqB,QAAwBrqB,EAAQqqB,QAAU,GAC3DD,QAASpqB,EAAQoqB,QACjBy2C,SAAU7gE,EAAQ6gE,UAAY,MAGlCn+D,MAAM,CACJq5B,aAAc/7B,EAAQ+7B,aACtBm3C,wBAAyBlzE,EAAQkzE,wBACjC7zC,UAAWr/B,EAAQq/B,UACnBxgB,aAAa,EACbu1D,QAAQ,EACR1rE,WAAYA,EACZ2gB,MAAOrpB,EAAQqpB,MACfxnB,SAAUA,EACVq1D,iBAAkBl3D,EAAQk3D,iBACtBl3D,EAAQk3D,iBACR,GACJue,gBAAiBz1E,EAAQy1E,gBACzBG,IAAK51E,EAAQ41E,IACbF,KAAM11E,EAAQ01E,KACdtC,WAAyBn0E,IAAlBe,EAAQozE,OAA6BpzE,EAAQozE,MACpD7c,WAAYv2D,EAAQu2D,WACpB8K,gBAAmCpiE,IAAvBe,EAAQqhE,WAA2B,EAAIrhE,EAAQqhE,aAO7DnuE,KAAK67E,QAAU/uE,EAAQ8uE,OAAS9uE,EAAQ8uE,OAAS,KAMjD57E,KAAK6kF,gBAAkB,IAAI,GAAU7kF,KAAKohF,UAAU7E,eAMpDv8E,KAAK2+D,UAAgC5yD,MAApBe,EAAQwsD,UAA+BxsD,EAAQwsD,SAMhEt5D,KAAK8kF,UAAYh4E,EAAQg4E,UAAYh4E,EAAQg4E,UAAY,GAMzD9kF,KAAK+kF,WAAa,CAAC,CACrB,CAcA,mBAAAC,CAAoB73E,GAClB,MAAMwN,EAAW,GACXymE,EAAYphF,KAAKohF,UACvB,GAA6B,IAAzBA,EAAU3sD,WACZ,OAAO9Z,EAET,MAAM2iB,EAAIkgD,GAAQ4D,EAAU/D,gBAAgB,GACtC1uE,EAAW3O,KAAK2O,SAuBtB,OAtBAyyE,EAAU9oE,SAAQ,SAAU4d,GAC1B,GAAIA,EAAK6qC,UAAU,KAAOzjC,GAAKpH,EAAKE,aAAeC,GACjD,OAEF,MAAM+hD,EAAcliD,EAAKmiD,iBACzB,IAAK,IAAIh6E,EAAI,EAAGyT,EAAKsmE,EAAYt4E,OAAQzB,EAAIyT,IAAMzT,EAAG,CACpD,MAAMq6E,EAAaN,EAAY/5E,GACzB0iE,EAAY2X,EAAW3X,UAC7B,GAAIhsD,GAAW5H,EAAQwB,EAASs8D,mBAAmBlK,IAAa,CAC9D,MAAMkkB,EAAevM,EAAW5wC,cAChC,GAAIm9C,EACF,IAAK,IAAItiE,EAAI,EAAGyE,EAAK69D,EAAanlF,OAAQ6iB,EAAIyE,IAAMzE,EAAG,CACrD,MAAMlH,EAAYwpE,EAAatiE,GACzB9H,EAAWY,EAAUuV,cACvBjc,GAAW5H,EAAQ0N,EAAS3M,cAC9ByM,EAASza,KAAKub,EAElB,CAEJ,CACF,CACF,IACOd,CACT,CAKA,WAAAw+D,GACE,OAAOn5E,KAAK2+D,SACd,CAMA,KAAAp1D,GACEvJ,KAAKohF,UAAU73E,QACfvJ,KAAK6kF,gBAAgBt7E,OACvB,CAMA,WAAAsnE,CAAYr7D,EAAY86D,GACtB,MAAM8Q,EAAYphF,KAAKuhF,0BAA0B/rE,GAC3C0vE,EAAkB94E,OAAO3M,KAAK6wE,GAAWv/B,QAAO,CAACqoB,EAAK15D,KAC1D,MAAMylF,EX3LL,SAA+B7uD,GACpC,MAAOgH,EAAGn0B,EAAGgH,GAAKmmB,EACfoiC,UAAUpiC,EAAQ8iD,YAAY,KAAO,EAAG9iD,EAAQx2B,QAChD4sC,MAAM,KACNnF,IAAIoF,QACP,OAAO4wC,GAAUjgD,EAAGn0B,EAAGgH,EACzB,CWqLuBi1E,CAAsB1lF,GACjCw2B,EAAOkrD,EAAU9D,KAAK6H,GAC5B,GAAIjvD,EAAM,CACR,MAAMkiD,EAAcliD,EAAKkiD,YACzB,IAAK,IAAI/5E,EAAI,EAAGyT,EAAKsmE,EAAYt4E,OAAQzB,EAAIyT,IAAMzT,EACjD+6D,EAAIgf,EAAY/5E,GAAGq3B,WAAY,CAEnC,CACA,OAAO0jC,CAAG,GACT,CAAC,GACJ5pD,MAAMqhE,YAAYr7D,EAAY86D,GAC9BtwE,KAAK6kF,gBAAgBhU,YAAYqU,EACnC,CAQA,cAAA7M,CAAe1tC,EAAYn1B,EAAY0gB,GACrC,GAAIA,EAAKE,aAAeC,GAAgB,CACtCH,EAAKstC,SAASntC,IACd,MAAMmtD,EAAettD,EAAKq0C,iBACpB57D,EAAW3O,KAAKstE,yBAAyB93D,GACzCrI,EAASwB,EAASs8D,mBAAmBuY,GACrClmD,EAAIkmD,EAAa,GACjB9zE,EAAaf,EAAS+wB,cAAcpC,GAE1C5/B,EAAayP,GAASuC,EAAYvC,GAClC,MAAMk9D,EAAiBrqE,KAAK2O,SACtB05D,EAAegC,EAAen8D,YAChCm6D,GACFxzD,EAAgB1H,EAAQk7D,EAAcl7D,GAExC,MAAMk4E,EAAUhb,EAAemB,kBAC7B97D,EACA1P,KAAKmuE,YAGP9D,EAAeuU,iBAAiBzxE,EAAQk4E,GAAU1M,IAChD,MAAM2M,EAAUtlF,KAAKuiF,gBACnB5J,EACAhuC,EACAn1B,GAEIkjE,EAAa14E,KAAK6kF,gBAAgBjI,YAAY0I,GAChDtlF,KAAK6kF,gBAAgBt4E,IAAI+4E,GACzB,IAAItlF,KAAK8kF,UACPnM,EACA2M,EAAUjvD,GAAiBA,GAC3BivD,EACAtlF,KAAK67E,QACL77E,KAAKgkE,kBAEX9tC,EAAKkiD,YAAYl4E,KAAKw4E,GACtB,MAAM6M,EAAkB7M,EAAWtiD,WACnC,GAAImvD,EAAkBlvD,GAAkB,CACtC,MAAMmvD,EAAgB1oE,IACpB9c,KAAK41B,iBAAiB9Y,GACtB,MAAMqZ,EAAQuiD,EAAWtiD,WACzB,GAAID,IAAUE,IAAoBF,IAAUE,GAAiB,CAC3D,MAAMovD,EAAgB/M,EAAWhjD,SAC7B+vD,KAAiBvvD,EAAKwtD,cACpBhL,EAAWtiD,aAAeC,WACrBH,EAAKwtD,cAAc+B,GAG5BvvD,EAAKujD,qBAEHtjD,IAAUE,GACZH,EAAKwtD,cAAc+B,IAAiB,EAEpC/M,EAAWn7D,oBAAoB,GAAkBioE,GAEnB,IAA5BtvD,EAAKujD,oBACPvjD,EAAKstC,SACH,GAAQttC,EAAKwtD,eACTrtD,GACAA,GAGV,GAEFqiD,EAAWl8D,iBAAiB,GAAkBgpE,GAC9CtvD,EAAKujD,oBACP,CACI8L,IAAoBlvD,KACtBqiD,EAAWvrE,OACTk9D,EAAeY,mBAAmB0N,GACpCD,EAAWljE,WAAaA,EACxBkjE,EAAWhpE,WAAa26D,EAAe3qC,cACrCi5C,EAAgB,IAElB34E,KAAK6kF,gBAAgB79E,IAAIs+E,EAAS5M,GAClCA,EAAWpuE,OACb,IAEG4rB,EAAKujD,oBACRvjD,EAAKstC,SACHttC,EAAKkiD,YAAYhvC,MACdsvC,GAAeA,EAAWtiD,aAAeC,KAExCA,GACAA,GAGV,CAEA,OAAOH,EAAKkiD,WACd,CAUA,OAAAjL,CAAQ7vC,EAAGn0B,EAAGgH,EAAGw6B,EAAYn1B,GAC3B,MAAMkwE,EAAWnI,GAAUjgD,EAAGn0B,EAAGgH,GAC3BzQ,EAAMM,KAAK01B,SACjB,IAAIQ,EACJ,GAAIl2B,KAAKohF,UAAUxE,YAAY8I,KAC7BxvD,EAAOl2B,KAAKohF,UAAU70E,IAAIm5E,GACtBxvD,EAAKx2B,MAAQA,GACf,OAAOw2B,EAGX,MAAM6qC,EAAY,CAACzjC,EAAGn0B,EAAGgH,GACzB,IAAIqzE,EAAexjF,KAAKyhF,+BACtB1gB,EACAvrD,GAEF,MAAM6yD,EAAeroE,KAAKk4E,cAAchqE,YAClCS,EAAW3O,KAAKstE,yBAAyB93D,GAC/C,GAAIguE,GAAgBnb,EAAc,CAChC,MAAM8P,EAAaxpE,EAASs8D,mBAAmBuY,GAE/C9lF,EAAay6E,GAAaxpE,EAAS+wB,cAAcpC,GAAI66C,GAChDpjE,GAAWszD,EAAc8P,KAC5BqL,EAAe,KAEnB,CACA,IAAIr6B,GAAQ,EACZ,GAAqB,OAAjBq6B,EAAuB,CACzB,MAAMnZ,EAAiBrqE,KAAK2O,SACtBe,EAAaf,EAAS+wB,cAAcpC,GACpC+nD,EAAUhb,EAAemB,kBAAkB97D,EAAY,GAEvDvC,EAASwB,EAASs8D,mBAAmBuY,GAC3C9lF,EAAayP,GAASuC,EAAYvC,GAClCk9D,EAAeuU,iBAAiBzxE,EAAQk4E,GAAU1M,IAChDxvB,EACEA,IACCnpD,KAAKuiF,gBAAgB5J,EAAiBhuC,EAAYn1B,EAAW,GAEpE,CACA,MAAMmwE,EAAU,IAAI,GAClB5kB,EACA5X,EAAQ9yB,GAAkBA,GAC1BmtD,EACAxjF,KAAKq4E,eAAev6D,KAAK9d,KAAM2qC,EAAYn1B,IAW7C,OARAmwE,EAAQjmF,IAAMA,EACVw2B,GACFyvD,EAAQxiB,YAAcjtC,EACtByvD,EAAQjiB,sBACR1jE,KAAKohF,UAAUrpE,QAAQ2tE,EAAUC,IAEjC3lF,KAAKohF,UAAUp6E,IAAI0+E,EAAUC,GAExBA,CACT,CAMA,wBAAArY,CAAyB93D,GACvB,MAAMxI,EAAOwI,EAAWvH,UACxB,IAAIU,EAAW3O,KAAK+kF,WAAW/3E,GAC/B,IAAK2B,EAAU,CAGb,MAAM07D,EAAiBrqE,KAAK2O,SACtBwuB,EAAcktC,EAAehnC,iBAAiB1jC,QAC9Cs+E,EAAU9gD,EAAYoK,KAAI,SAAU73B,EAAY4tB,GACpD,OAAO+sC,EAAer/B,UAAU1N,EAClC,IACM8gD,EAAYjhD,EAAYoK,KAAI,SAAU73B,EAAY4tB,GACtD,OAAO+sC,EAAeyB,YAAYxuC,EACpC,IACMx9B,EAASq5B,GAAmB,EAClC,IAAK,IAAImE,EAAIH,EAAYr9B,OAAQw9B,EAAIx9B,IAAUw9B,EAC7CH,EAAYj9B,KAAKi9B,EAAYG,EAAI,GAAK,GACtC2gD,EAAQ/9E,KAAK+9E,EAAQ3gD,EAAI,IACzB8gD,EAAUl+E,KAAKk+E,EAAU9gD,EAAI,IAE/B3uB,EAAW,IAAI,GAAS,CACtBxB,OAAQk9D,EAAen8D,YACvB+vE,QAASA,EACT9gD,YAAaA,EACbihD,UAAWA,IAEbp+E,KAAK+kF,WAAW/3E,GAAQ2B,CAC1B,CACA,OAAOA,CACT,CAOA,iBAAA6+D,CAAkB7iC,GAChB,OAAOA,CACT,CAQA,gBAAA4kC,CAAiBjyC,EAAGqN,EAAYn1B,GAC9B,MACMm4D,EAAWnkC,GADAxpC,KAAKstE,yBAAyB93D,GACds2D,YAAYxuC,GAAIt9B,KAAKqhF,SACtD,MAAO,CACL3iF,KAAK4X,MAAMq3D,EAAS,GAAKhjC,GACzBjsC,KAAK4X,MAAMq3D,EAAS,GAAKhjC,GAE7B,CAOA,eAAA2mC,CAAgBH,EAAW37D,GACzBhG,MAAM8hE,gBAA4B,EAAZH,EAAe37D,GACrCxV,KAAK6kF,gBAAgBtI,cACnBv8E,KAAKuhF,0BAA0B/rE,GAAY+mE,aAC/C,GAUK,SAAS,GAAoBrmD,EAAMwsD,GACxCxsD,EAAKmmD,WAMH,SAAUlvE,EAAQuC,EAAY8F,GAC5BquE,GACEnB,EACAxsD,EAAK+lD,YACL9uE,EACAuC,EACA8F,EACA0gB,EAAKgmD,OAAOp+D,KAAKoY,GACjBA,EAAKkmD,QAAQt+D,KAAKoY,GAEtB,GAEJ,C,yBCleA,SAAS0vD,GAAyBz8E,GACjC,OAAOA,GAAKA,EAAE+C,YAAcE,OAAOvI,UAAU4I,eAAetM,KAAKgJ,EAAG,WAAaA,EAAW,QAAIA,CACjG,CAEA,IAEI08E,GAuBAC,GAAiB,CACjB,YAAe,CACX,EACA,EACA,EACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,aAAgB,CACZ,IACA,IACA,IACA,GAEJ,KAAQ,CACJ,EACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,OAAU,CACN,IACA,IACA,IACA,GAEJ,MAAS,CACL,EACA,EACA,EACA,GAEJ,eAAkB,CACd,IACA,IACA,IACA,GAEJ,KAAQ,CACJ,EACA,EACA,IACA,GAEJ,WAAc,CACV,IACA,GACA,IACA,GAEJ,MAAS,CACL,IACA,GACA,GACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,UAAa,CACT,GACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,EACA,GAEJ,UAAa,CACT,IACA,IACA,GACA,GAEJ,MAAS,CACL,IACA,IACA,GACA,GAEJ,eAAkB,CACd,IACA,IACA,IACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,GACA,GACA,GAEJ,KAAQ,CACJ,EACA,IACA,IACA,GAEJ,SAAY,CACR,EACA,EACA,IACA,GAEJ,SAAY,CACR,EACA,IACA,IACA,GAEJ,cAAiB,CACb,IACA,IACA,GACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,UAAa,CACT,EACA,IACA,EACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,YAAe,CACX,IACA,EACA,IACA,GAEJ,eAAkB,CACd,GACA,IACA,GACA,GAEJ,WAAc,CACV,IACA,IACA,EACA,GAEJ,WAAc,CACV,IACA,GACA,IACA,GAEJ,QAAW,CACP,IACA,EACA,EACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,aAAgB,CACZ,IACA,IACA,IACA,GAEJ,cAAiB,CACb,GACA,GACA,IACA,GAEJ,cAAiB,CACb,GACA,GACA,GACA,GAEJ,cAAiB,CACb,GACA,GACA,GACA,GAEJ,cAAiB,CACb,EACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,EACA,IACA,GAEJ,SAAY,CACR,IACA,GACA,IACA,GAEJ,YAAe,CACX,EACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,IACA,IACA,GAEJ,WAAc,CACV,GACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,GACA,GACA,GAEJ,YAAe,CACX,IACA,IACA,IACA,GAEJ,YAAe,CACX,GACA,IACA,GACA,GAEJ,QAAW,CACP,IACA,EACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,KAAQ,CACJ,IACA,IACA,EACA,GAEJ,UAAa,CACT,IACA,IACA,GACA,GAEJ,KAAQ,CACJ,IACA,IACA,IACA,GAEJ,MAAS,CACL,EACA,IACA,EACA,GAEJ,YAAe,CACX,IACA,IACA,GACA,GAEJ,KAAQ,CACJ,IACA,IACA,IACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,GACA,GACA,GAEJ,OAAU,CACN,GACA,EACA,IACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,cAAiB,CACb,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,EACA,GAEJ,aAAgB,CACZ,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,qBAAwB,CACpB,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,YAAe,CACX,IACA,IACA,IACA,GAEJ,cAAiB,CACb,GACA,IACA,IACA,GAEJ,aAAgB,CACZ,IACA,IACA,IACA,GAEJ,eAAkB,CACd,IACA,IACA,IACA,GAEJ,eAAkB,CACd,IACA,IACA,IACA,GAEJ,eAAkB,CACd,IACA,IACA,IACA,GAEJ,YAAe,CACX,IACA,IACA,IACA,GAEJ,KAAQ,CACJ,EACA,IACA,EACA,GAEJ,UAAa,CACT,GACA,IACA,GACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,EACA,IACA,GAEJ,OAAU,CACN,IACA,EACA,EACA,GAEJ,iBAAoB,CAChB,IACA,IACA,IACA,GAEJ,WAAc,CACV,EACA,EACA,IACA,GAEJ,aAAgB,CACZ,IACA,GACA,IACA,GAEJ,aAAgB,CACZ,IACA,IACA,IACA,GAEJ,eAAkB,CACd,GACA,IACA,IACA,GAEJ,gBAAmB,CACf,IACA,IACA,IACA,GAEJ,kBAAqB,CACjB,EACA,IACA,IACA,GAEJ,gBAAmB,CACf,GACA,IACA,IACA,GAEJ,gBAAmB,CACf,IACA,GACA,IACA,GAEJ,aAAgB,CACZ,GACA,GACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,YAAe,CACX,IACA,IACA,IACA,GAEJ,KAAQ,CACJ,EACA,EACA,IACA,GAEJ,QAAW,CACP,IACA,IACA,IACA,GAEJ,MAAS,CACL,IACA,IACA,EACA,GAEJ,UAAa,CACT,IACA,IACA,GACA,GAEJ,OAAU,CACN,IACA,IACA,EACA,GAEJ,UAAa,CACT,IACA,GACA,EACA,GAEJ,OAAU,CACN,IACA,IACA,IACA,GAEJ,cAAiB,CACb,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,cAAiB,CACb,IACA,IACA,IACA,GAEJ,cAAiB,CACb,IACA,IACA,I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","sources":["webpack:///../node_modules/ieee754/index.js","webpack:///../node_modules/json-stringify-safe/stringify.js","webpack:///../node_modules/pbf/index.js","webpack:///../node_modules/rbush/rbush.min.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///../src/ol/util.js","webpack:///../src/ol/proj/Units.js","webpack:///../src/ol/proj/Projection.js","webpack:///../src/ol/proj/epsg3857.js","webpack:///../src/ol/proj/epsg4326.js","webpack:///../src/ol/proj/projections.js","webpack:///../src/ol/proj/transforms.js","webpack:///../src/ol/extent/Relationship.js","webpack:///../src/ol/AssertionError.js","webpack:///../src/ol/asserts.js","webpack:///../src/ol/extent.js","webpack:///../src/ol/coordinate.js","webpack:///../src/ol/math.js","webpack:///../src/ol/sphere.js","webpack:///../src/ol/console.js","webpack:///../src/ol/proj.js","webpack:///../src/ol/format/Feature.js","webpack:///../src/ol/events/Event.js","webpack:///../src/ol/ObjectEventType.js","webpack:///../src/ol/Disposable.js","webpack:///../src/ol/array.js","webpack:///../src/ol/functions.js","webpack:///../src/ol/obj.js","webpack:///../src/ol/events/Target.js","webpack:///../src/ol/events/EventType.js","webpack:///../src/ol/events.js","webpack:///../src/ol/Observable.js","webpack:///../src/ol/Object.js","webpack:///../src/ol/has.js","webpack:///../src/ol/transform.js","webpack:///../src/ol/geom/flat/transform.js","webpack:///../src/ol/geom/Geometry.js","webpack:///../src/ol/geom/SimpleGeometry.js","webpack:///../src/ol/geom/flat/closest.js","webpack:///../src/ol/geom/flat/deflate.js","webpack:///../src/ol/geom/flat/simplify.js","webpack:///../src/ol/geom/flat/segments.js","webpack:///../src/ol/geom/flat/inflate.js","webpack:///../src/ol/geom/flat/interpolate.js","webpack:///../src/ol/geom/flat/contains.js","webpack:///../src/ol/geom/flat/intersectsextent.js","webpack:///../src/ol/geom/flat/length.js","webpack:///../src/ol/geom/LineString.js","webpack:///../src/ol/geom/MultiLineString.js","webpack:///../src/ol/geom/Point.js","webpack:///../src/ol/geom/MultiPoint.js","webpack:///../src/ol/geom/flat/area.js","webpack:///../src/ol/geom/LinearRing.js","webpack:///../src/ol/geom/flat/interiorpoint.js","webpack:///../src/ol/geom/flat/reverse.js","webpack:///../src/ol/geom/flat/orient.js","webpack:///../src/ol/geom/Polygon.js","webpack:///../src/ol/geom/flat/center.js","webpack:///../src/ol/geom/MultiPolygon.js","webpack:///../src/ol/render/Feature.js","webpack:///../src/ol/format/MVT.js","webpack:///../src/ol/structs/PriorityQueue.js","webpack:///../src/ol/TileState.js","webpack:///../src/ol/TileQueue.js","webpack:///../src/ol/layer/Property.js","webpack:///../src/ol/layer/Base.js","webpack:///../src/ol/render/EventType.js","webpack:///../src/ol/ViewHint.js","webpack:///../src/ol/ViewProperty.js","webpack:///../src/ol/tilegrid/common.js","webpack:///../src/ol/centerconstraint.js","webpack:///../src/ol/resolutionconstraint.js","webpack:///../src/ol/rotationconstraint.js","webpack:///../src/ol/easing.js","webpack:///../src/ol/View.js","webpack:///../src/ol/layer/Layer.js","webpack:///../src/ol/ImageState.js","webpack:///../src/ol/size.js","webpack:///../src/ol/style/Image.js","webpack:///../src/ol/color.js","webpack:///../src/ol/colorlike.js","webpack:///../src/ol/dom.js","webpack:///../src/ol/css.js","webpack:///../src/ol/render/canvas.js","webpack:///../src/ol/style/RegularShape.js","webpack:///../src/ol/style/Circle.js","webpack:///../src/ol/style/Fill.js","webpack:///../src/ol/style/Stroke.js","webpack:///../src/ol/style/Style.js","webpack:///../src/ol/style/IconImageCache.js","webpack:///../src/ol/Image.js","webpack:///../src/ol/style/IconImage.js","webpack:///../src/ol/style/Icon.js","webpack:///../src/ol/style/Text.js","webpack:///../src/ol/expr/expression.js","webpack:///../src/ol/expr/cpu.js","webpack:///../src/ol/render/canvas/style.js","webpack:///../src/ol/layer/BaseVector.js","webpack:///../src/ol/render/canvas/Instruction.js","webpack:///../src/ol/render/VectorContext.js","webpack:///../src/ol/render/canvas/Builder.js","webpack:///../src/ol/render/canvas/ImageBuilder.js","webpack:///../src/ol/render/canvas/LineStringBuilder.js","webpack:///../src/ol/render/canvas/PolygonBuilder.js","webpack:///../src/ol/geom/flat/linechunk.js","webpack:///../src/ol/geom/flat/straightchunk.js","webpack:///../src/ol/render/canvas/TextBuilder.js","webpack:///../src/ol/render/canvas/BuilderGroup.js","webpack:///../src/ol/geom/flat/textpath.js","webpack:///../src/ol/render/canvas/Executor.js","webpack:///../src/ol/render/canvas/ExecutorGroup.js","webpack:///../src/ol/renderer/Layer.js","webpack:///../src/ol/render/Event.js","webpack:///../src/ol/renderer/canvas/Layer.js","webpack:///../src/ol/Tile.js","webpack:///../src/ol/ImageTile.js","webpack:///../src/ol/reproj/Triangulation.js","webpack:///../src/ol/reproj.js","webpack:///../src/ol/reproj/Tile.js","webpack:///../src/ol/reproj/common.js","webpack:///../src/ol/TileRange.js","webpack:///../src/ol/renderer/canvas/TileLayer.js","webpack:///../src/ol/render/canvas/Immediate.js","webpack:///../src/ol/render/canvas/hitdetect.js","webpack:///../src/ol/renderer/vector.js","webpack:///../src/ol/renderer/canvas/VectorTileLayer.js","webpack:///../src/ol/layer/TileProperty.js","webpack:///../src/ol/layer/VectorTile.js","webpack:///../src/ol/VectorTile.js","webpack:///../src/ol/structs/LRUCache.js","webpack:///../src/ol/tilecoord.js","webpack:///../src/ol/TileCache.js","webpack:///../src/ol/tilegrid/TileGrid.js","webpack:///../src/ol/source/TileEventType.js","webpack:///../src/ol/source/Source.js","webpack:///../src/ol/tilegrid.js","webpack:///../src/ol/source/Tile.js","webpack:///../src/ol/tileurlfunction.js","webpack:///../src/ol/source/UrlTile.js","webpack:///../src/ol/VectorRenderTile.js","webpack:///../src/ol/featureloader.js","webpack:///../src/ol/source/VectorTile.js","webpack:///../node_modules/ol-mapbox-style/dist/index.js","webpack:///./offscreen-canvas.worker.js"],"sourcesContent":["/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","exports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return \"[Circular ~]\"\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|Array<Array<number>>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return 2;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {import(\"../geom/Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n  /**\n   * @return {Array<number>|Array<Array<number>>} Ends or endss.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n}\n\nRenderFeature.prototype.getEndss = RenderFeature.prototype.getEnds;\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {assert} from '../asserts.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [options] Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1]\n          );\n          coordsLen += 2;\n        }\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        values,\n        id\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n            ? new LineString(flatCoordinates, 'XY')\n            : geometryType === 'MultiPoint'\n            ? new MultiPoint(flatCoordinates, 'XY')\n            : geometryType === 'MultiLineString'\n            ? new MultiLineString(flatCoordinates, 'XY', ends)\n            : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return features;\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n          ? pbf.readDouble()\n          : tag === 4\n          ? pbf.readVarint64()\n          : tag === 5\n          ? pbf.readVarint()\n          : tag === 6\n          ? pbf.readSVarint()\n          : tag === 7\n          ? pbf.readBoolean()\n          : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../geom/Geometry.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../geom/Geometry.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(this.getExtent(), requestResolution, this.getPixelRatio())\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image.decode().then(() => resolve(image), reject)\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the laoded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image.decode().then(() => createImageBitmap(image))\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (\n          image instanceof HTMLCanvasElement ||\n          (image.src && image.complete)\n        ) {\n          width = image.width;\n          height = image.height;\n        } else {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    const clone = new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    return clone;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\n\nimport {ascending} from '../array.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Number: 'number',\n  String: 'string',\n  Get: 'get',\n  Var: 'var',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Expression} Parser\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Number]: createParser(withArgs(1, Infinity, AnyType), NumberType),\n  [Ops.String]: createParser(withArgs(1, Infinity, AnyType), StringType),\n  [Ops.Get]: createParser(withGetArgs, AnyType),\n  [Ops.Var]: createParser(withVarArgs, AnyType),\n  [Ops.Resolution]: createParser(withNoArgs, NumberType),\n  [Ops.Any]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.All]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.Not]: createParser(withArgs(1, 1, BooleanType), BooleanType),\n  [Ops.Equal]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.NotEqual]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    withArgs(2, 2, AnyType),\n    BooleanType\n  ),\n  [Ops.LessThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.LessThanOrEqualTo]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.Multiply]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Divide]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Add]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Subtract]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Clamp]: createParser(withArgs(3, 3, NumberType), NumberType),\n  [Ops.Mod]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Pow]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Abs]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Floor]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Ceil]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Round]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Sin]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Cos]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Atan]: createParser(withArgs(1, 2, NumberType), NumberType),\n  [Ops.Sqrt]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Match]: createParser(\n    withArgs(4, Infinity, StringType | NumberType),\n    AnyType\n  ),\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Array<Expression>} ArgValidator\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for get operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for var operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for var operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.variables.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgs(minArgs, maxArgs, argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for operation ${operation}, got ${argCount}`\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      throw new Error(\n        `Expected ${minArgs} to ${maxArgs} arguments for operation ${operation}, got ${argCount}`\n      );\n    }\n\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            ` : got ${gotType} but expected ${expectedType}`\n        );\n      }\n      args[i] = expression;\n    }\n\n    return args;\n  };\n}\n\n/**\n * @param {ArgValidator} argValidator The argument validator.\n * @param {number} returnType The return type.\n * @return {Parser} The parser.\n */\nfunction createParser(argValidator, returnType) {\n  return function (encoded, context) {\n    const operator = encoded[0];\n    const args = argValidator(encoded, context);\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context);\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = expression.args[0];\n  if (!(nameExpression instanceof LiteralExpression)) {\n    throw new Error('Expected literal name');\n  }\n  const name = nameExpression.value;\n  if (typeof name !== 'string') {\n    throw new Error('Expected string name');\n  }\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    for (let i = 0; i < length; ++i) {\n      styles[i] = evaluators[i](evaluationContext);\n    }\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'fill-color',\n    context\n  );\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context\n  );\n\n  const text = new Text({});\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align'\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline'\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units'\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units'\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(flatStyle, prefix + 'declutter');\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const radius = optionalNumber(flatStyle, prefix + 'radius');\n  const radius1 = optionalNumber(flatStyle, prefix + 'radius1');\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius1,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== 'vector'\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === 'vector'\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    if (declutter) {\n      tile.declutterExecutorGroups[layerUid] = [];\n    }\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        builderExtent,\n        resolution,\n        pixelRatio\n      );\n      const declutterBuilderGroup = declutter\n        ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n        : undefined;\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutterBuilderGroup\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer()\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n      if (declutterBuilderGroup) {\n        const declutterExecutorGroup = new CanvasExecutorGroup(\n          null,\n          resolution,\n          pixelRatio,\n          source.getOverlaps(),\n          declutterBuilderGroup.finish(),\n          layer.getRenderBuffer()\n        );\n        tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n      }\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n      if (declutterExecutorGroups) {\n        executorGroups.push(declutterExecutorGroups);\n      }\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures =\n          executorGroups === declutterExecutorGroups\n            ? frameState.declutterTree.all().map((item) => item.value)\n            : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice()\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile\n        .getSourceTiles()\n        .reduce(function (accumulator, sourceTile) {\n          return accumulator.concat(sourceTile.getFeatures());\n        }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection)\n          )\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.getLayer().getOpacity();\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const declutterExecutorGroups =\n        tile.declutterExecutorGroups[getUid(this.getLayer())];\n      if (declutterExecutorGroups) {\n        for (let j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n          declutterExecutorGroups[j].execute(\n            this.context,\n            1,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            undefined,\n            frameState.declutterTree\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset\n      )\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layer.getOpacity();\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes)\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      if (currentClip) {\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]]\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          1,\n          transform,\n          rotation,\n          hifi,\n          replayTypes\n        );\n      }\n      if (contextSaved) {\n        context.restore();\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder group for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio)\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        renderScale,\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()]\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options} [options] Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Object} */ (Object.assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(\n      /** @type {import(\"./BaseVector.js\").Options<import(\"../source/VectorTile.js\").default>} */ (\n        baseOptions\n      )\n    );\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    // `renderMode` must be `'hybrid'` or `'vector'`.\n    assert(renderMode == 'hybrid' || renderMode == 'vector', 28);\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {fromKey, getCacheKeyForTileKey, getKeyZXY} from '../tilecoord.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache = new TileCache(this.tileCache.highWaterMark);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.tileCache;\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const z = fromKey(tileCache.peekFirstKey())[0];\n    const tileGrid = this.tileGrid;\n    tileCache.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n    this.sourceTileCache.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    const usedSourceTiles = Object.keys(usedTiles).reduce((acc, key) => {\n      const cacheKey = getCacheKeyForTileKey(key);\n      const tile = tileCache.peek(cacheKey);\n      if (tile) {\n        const sourceTiles = tile.sourceTiles;\n        for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n          acc[sourceTiles[i].getKey()] = true;\n        }\n      }\n      return acc;\n    }, {});\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache.expireCache(usedSourceTiles);\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection\n        );\n        const sourceTile = this.sourceTileCache.containsKey(tileUrl)\n          ? this.sourceTileCache.get(tileUrl)\n          : new this.tileClass(\n              sourceTileCoord,\n              tileUrl ? TileState.IDLE : TileState.EMPTY,\n              tileUrl,\n              this.format_,\n              this.tileLoadFunction\n            );\n        tile.sourceTiles.push(sourceTile);\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0]\n          );\n          this.sourceTileCache.set(tileUrl, sourceTile);\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR\n          )\n            ? TileState.ERROR\n            : TileState.LOADED\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const coordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    let tile;\n    if (this.tileCache.containsKey(coordKey)) {\n      tile = this.tileCache.get(coordKey);\n      if (tile.key === key) {\n        return tile;\n      }\n    }\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        empty =\n          empty &&\n          !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n      });\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection)\n    );\n\n    newTile.key = key;\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      this.tileCache.replace(coordKey, newTile);\n    } else {\n      this.tileCache.set(coordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    super.updateCacheSize(tileCount * 2, projection);\n    this.sourceTileCache.highWaterMark =\n      this.getTileCacheForProjection(projection).highWaterMark;\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile)\n      );\n    }\n  );\n}\n","import Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\nimport { registerFont, checkedFonts } from 'ol/render/canvas.js';\nimport { expandUrl } from 'ol/tileurlfunction.js';\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport Layer from 'ol/layer/Layer.js';\nimport LayerGroup from 'ol/layer/Group.js';\nimport MVT from 'ol/format/MVT.js';\nimport Map from 'ol/Map.js';\nimport Raster from 'ol/source/Raster.js';\nimport Source from 'ol/source/Source.js';\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource, { defaultLoadFunction } from 'ol/source/VectorTile.js';\nimport View from 'ol/View.js';\nimport { get as get$1, METERS_PER_UNIT, fromLonLat, equivalent, getUserProjection } from 'ol/proj.js';\nimport { bbox } from 'ol/loadingstrategy.js';\nimport { createXYZ } from 'ol/tilegrid.js';\nimport { getTopLeft } from 'ol/extent.js';\nimport { getUid } from 'ol/util.js';\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar csscolorparser = {};\n\nvar parseCSSColor_1;\n// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n    'transparent': [\n        0,\n        0,\n        0,\n        0\n    ],\n    'aliceblue': [\n        240,\n        248,\n        255,\n        1\n    ],\n    'antiquewhite': [\n        250,\n        235,\n        215,\n        1\n    ],\n    'aqua': [\n        0,\n        255,\n        255,\n        1\n    ],\n    'aquamarine': [\n        127,\n        255,\n        212,\n        1\n    ],\n    'azure': [\n        240,\n        255,\n        255,\n        1\n    ],\n    'beige': [\n        245,\n        245,\n        220,\n        1\n    ],\n    'bisque': [\n        255,\n        228,\n        196,\n        1\n    ],\n    'black': [\n        0,\n        0,\n        0,\n        1\n    ],\n    'blanchedalmond': [\n        255,\n        235,\n        205,\n        1\n    ],\n    'blue': [\n        0,\n        0,\n        255,\n        1\n    ],\n    'blueviolet': [\n        138,\n        43,\n        226,\n        1\n    ],\n    'brown': [\n        165,\n        42,\n        42,\n        1\n    ],\n    'burlywood': [\n        222,\n        184,\n        135,\n        1\n    ],\n    'cadetblue': [\n        95,\n        158,\n        160,\n        1\n    ],\n    'chartreuse': [\n        127,\n        255,\n        0,\n        1\n    ],\n    'chocolate': [\n        210,\n        105,\n        30,\n        1\n    ],\n    'coral': [\n        255,\n        127,\n        80,\n        1\n    ],\n    'cornflowerblue': [\n        100,\n        149,\n        237,\n        1\n    ],\n    'cornsilk': [\n        255,\n        248,\n        220,\n        1\n    ],\n    'crimson': [\n        220,\n        20,\n        60,\n        1\n    ],\n    'cyan': [\n        0,\n        255,\n        255,\n        1\n    ],\n    'darkblue': [\n        0,\n        0,\n        139,\n        1\n    ],\n    'darkcyan': [\n        0,\n        139,\n        139,\n        1\n    ],\n    'darkgoldenrod': [\n        184,\n        134,\n        11,\n        1\n    ],\n    'darkgray': [\n        169,\n        169,\n        169,\n        1\n    ],\n    'darkgreen': [\n        0,\n        100,\n        0,\n        1\n    ],\n    'darkgrey': [\n        169,\n        169,\n        169,\n        1\n    ],\n    'darkkhaki': [\n        189,\n        183,\n        107,\n        1\n    ],\n    'darkmagenta': [\n        139,\n        0,\n        139,\n        1\n    ],\n    'darkolivegreen': [\n        85,\n        107,\n        47,\n        1\n    ],\n    'darkorange': [\n        255,\n        140,\n        0,\n        1\n    ],\n    'darkorchid': [\n        153,\n        50,\n        204,\n        1\n    ],\n    'darkred': [\n        139,\n        0,\n        0,\n        1\n    ],\n    'darksalmon': [\n        233,\n        150,\n        122,\n        1\n    ],\n    'darkseagreen': [\n        143,\n        188,\n        143,\n        1\n    ],\n    'darkslateblue': [\n        72,\n        61,\n        139,\n        1\n    ],\n    'darkslategray': [\n        47,\n        79,\n        79,\n        1\n    ],\n    'darkslategrey': [\n        47,\n        79,\n        79,\n        1\n    ],\n    'darkturquoise': [\n        0,\n        206,\n        209,\n        1\n    ],\n    'darkviolet': [\n        148,\n        0,\n        211,\n        1\n    ],\n    'deeppink': [\n        255,\n        20,\n        147,\n        1\n    ],\n    'deepskyblue': [\n        0,\n        191,\n        255,\n        1\n    ],\n    'dimgray': [\n        105,\n        105,\n        105,\n        1\n    ],\n    'dimgrey': [\n        105,\n        105,\n        105,\n        1\n    ],\n    'dodgerblue': [\n        30,\n        144,\n        255,\n        1\n    ],\n    'firebrick': [\n        178,\n        34,\n        34,\n        1\n    ],\n    'floralwhite': [\n        255,\n        250,\n        240,\n        1\n    ],\n    'forestgreen': [\n        34,\n        139,\n        34,\n        1\n    ],\n    'fuchsia': [\n        255,\n        0,\n        255,\n        1\n    ],\n    'gainsboro': [\n        220,\n        220,\n        220,\n        1\n    ],\n    'ghostwhite': [\n        248,\n        248,\n        255,\n        1\n    ],\n    'gold': [\n        255,\n        215,\n        0,\n        1\n    ],\n    'goldenrod': [\n        218,\n        165,\n        32,\n        1\n    ],\n    'gray': [\n        128,\n        128,\n        128,\n        1\n    ],\n    'green': [\n        0,\n        128,\n        0,\n        1\n    ],\n    'greenyellow': [\n        173,\n        255,\n        47,\n        1\n    ],\n    'grey': [\n        128,\n        128,\n        128,\n        1\n    ],\n    'honeydew': [\n        240,\n        255,\n        240,\n        1\n    ],\n    'hotpink': [\n        255,\n        105,\n        180,\n        1\n    ],\n    'indianred': [\n        205,\n        92,\n        92,\n        1\n    ],\n    'indigo': [\n        75,\n        0,\n        130,\n        1\n    ],\n    'ivory': [\n        255,\n        255,\n        240,\n        1\n    ],\n    'khaki': [\n        240,\n        230,\n        140,\n        1\n    ],\n    'lavender': [\n        230,\n        230,\n        250,\n        1\n    ],\n    'lavenderblush': [\n        255,\n        240,\n        245,\n        1\n    ],\n    'lawngreen': [\n        124,\n        252,\n        0,\n        1\n    ],\n    'lemonchiffon': [\n        255,\n        250,\n        205,\n        1\n    ],\n    'lightblue': [\n        173,\n        216,\n        230,\n        1\n    ],\n    'lightcoral': [\n        240,\n        128,\n        128,\n        1\n    ],\n    'lightcyan': [\n        224,\n        255,\n        255,\n        1\n    ],\n    'lightgoldenrodyellow': [\n        250,\n        250,\n        210,\n        1\n    ],\n    'lightgray': [\n        211,\n        211,\n        211,\n        1\n    ],\n    'lightgreen': [\n        144,\n        238,\n        144,\n        1\n    ],\n    'lightgrey': [\n        211,\n        211,\n        211,\n        1\n    ],\n    'lightpink': [\n        255,\n        182,\n        193,\n        1\n    ],\n    'lightsalmon': [\n        255,\n        160,\n        122,\n        1\n    ],\n    'lightseagreen': [\n        32,\n        178,\n        170,\n        1\n    ],\n    'lightskyblue': [\n        135,\n        206,\n        250,\n        1\n    ],\n    'lightslategray': [\n        119,\n        136,\n        153,\n        1\n    ],\n    'lightslategrey': [\n        119,\n        136,\n        153,\n        1\n    ],\n    'lightsteelblue': [\n        176,\n        196,\n        222,\n        1\n    ],\n    'lightyellow': [\n        255,\n        255,\n        224,\n        1\n    ],\n    'lime': [\n        0,\n        255,\n        0,\n        1\n    ],\n    'limegreen': [\n        50,\n        205,\n        50,\n        1\n    ],\n    'linen': [\n        250,\n        240,\n        230,\n        1\n    ],\n    'magenta': [\n        255,\n        0,\n        255,\n        1\n    ],\n    'maroon': [\n        128,\n        0,\n        0,\n        1\n    ],\n    'mediumaquamarine': [\n        102,\n        205,\n        170,\n        1\n    ],\n    'mediumblue': [\n        0,\n        0,\n        205,\n        1\n    ],\n    'mediumorchid': [\n        186,\n        85,\n        211,\n        1\n    ],\n    'mediumpurple': [\n        147,\n        112,\n        219,\n        1\n    ],\n    'mediumseagreen': [\n        60,\n        179,\n        113,\n        1\n    ],\n    'mediumslateblue': [\n        123,\n        104,\n        238,\n        1\n    ],\n    'mediumspringgreen': [\n        0,\n        250,\n        154,\n        1\n    ],\n    'mediumturquoise': [\n        72,\n        209,\n        204,\n        1\n    ],\n    'mediumvioletred': [\n        199,\n        21,\n        133,\n        1\n    ],\n    'midnightblue': [\n        25,\n        25,\n        112,\n        1\n    ],\n    'mintcream': [\n        245,\n        255,\n        250,\n        1\n    ],\n    'mistyrose': [\n        255,\n        228,\n        225,\n        1\n    ],\n    'moccasin': [\n        255,\n        228,\n        181,\n        1\n    ],\n    'navajowhite': [\n        255,\n        222,\n        173,\n        1\n    ],\n    'navy': [\n        0,\n        0,\n        128,\n        1\n    ],\n    'oldlace': [\n        253,\n        245,\n        230,\n        1\n    ],\n    'olive': [\n        128,\n        128,\n        0,\n        1\n    ],\n    'olivedrab': [\n        107,\n        142,\n        35,\n        1\n    ],\n    'orange': [\n        255,\n        165,\n        0,\n        1\n    ],\n    'orangered': [\n        255,\n        69,\n        0,\n        1\n    ],\n    'orchid': [\n        218,\n        112,\n        214,\n        1\n    ],\n    'palegoldenrod': [\n        238,\n        232,\n        170,\n        1\n    ],\n    'palegreen': [\n        152,\n        251,\n        152,\n        1\n    ],\n    'paleturquoise': [\n        175,\n        238,\n        238,\n        1\n    ],\n    'palevioletred': [\n        219,\n        112,\n        147,\n        1\n    ],\n    'papayawhip': [\n        255,\n        239,\n        213,\n        1\n    ],\n    'peachpuff': [\n        255,\n        218,\n        185,\n        1\n    ],\n    'peru': [\n        205,\n        133,\n        63,\n        1\n    ],\n    'pink': [\n        255,\n        192,\n        203,\n        1\n    ],\n    'plum': [\n        221,\n        160,\n        221,\n        1\n    ],\n    'powderblue': [\n        176,\n        224,\n        230,\n        1\n    ],\n    'purple': [\n        128,\n        0,\n        128,\n        1\n    ],\n    'rebeccapurple': [\n        102,\n        51,\n        153,\n        1\n    ],\n    'red': [\n        255,\n        0,\n        0,\n        1\n    ],\n    'rosybrown': [\n        188,\n        143,\n        143,\n        1\n    ],\n    'royalblue': [\n        65,\n        105,\n        225,\n        1\n    ],\n    'saddlebrown': [\n        139,\n        69,\n        19,\n        1\n    ],\n    'salmon': [\n        250,\n        128,\n        114,\n        1\n    ],\n    'sandybrown': [\n        244,\n        164,\n        96,\n        1\n    ],\n    'seagreen': [\n        46,\n        139,\n        87,\n        1\n    ],\n    'seashell': [\n        255,\n        245,\n        238,\n        1\n    ],\n    'sienna': [\n        160,\n        82,\n        45,\n        1\n    ],\n    'silver': [\n        192,\n        192,\n        192,\n        1\n    ],\n    'skyblue': [\n        135,\n        206,\n        235,\n        1\n    ],\n    'slateblue': [\n        106,\n        90,\n        205,\n        1\n    ],\n    'slategray': [\n        112,\n        128,\n        144,\n        1\n    ],\n    'slategrey': [\n        112,\n        128,\n        144,\n        1\n    ],\n    'snow': [\n        255,\n        250,\n        250,\n        1\n    ],\n    'springgreen': [\n        0,\n        255,\n        127,\n        1\n    ],\n    'steelblue': [\n        70,\n        130,\n        180,\n        1\n    ],\n    'tan': [\n        210,\n        180,\n        140,\n        1\n    ],\n    'teal': [\n        0,\n        128,\n        128,\n        1\n    ],\n    'thistle': [\n        216,\n        191,\n        216,\n        1\n    ],\n    'tomato': [\n        255,\n        99,\n        71,\n        1\n    ],\n    'turquoise': [\n        64,\n        224,\n        208,\n        1\n    ],\n    'violet': [\n        238,\n        130,\n        238,\n        1\n    ],\n    'wheat': [\n        245,\n        222,\n        179,\n        1\n    ],\n    'white': [\n        255,\n        255,\n        255,\n        1\n    ],\n    'whitesmoke': [\n        245,\n        245,\n        245,\n        1\n    ],\n    'yellow': [\n        255,\n        255,\n        0,\n        1\n    ],\n    'yellowgreen': [\n        154,\n        205,\n        50,\n        1\n    ]\n};\nfunction clamp_css_byte(i) {\n    // Clamp to integer 0 .. 255.\n    i = Math.round(i);\n    // Seems to be what Chrome does (vs truncation).\n    return i < 0 ? 0 : i > 255 ? 255 : i;\n}\nfunction clamp_css_float(f) {\n    // Clamp to float 0.0 .. 1.0.\n    return f < 0 ? 0 : f > 1 ? 1 : f;\n}\nfunction parse_css_int(str) {\n    // int or percentage.\n    if (str[str.length - 1] === '%')\n        { return clamp_css_byte(parseFloat(str) / 100 * 255); }\n    return clamp_css_byte(parseInt(str));\n}\nfunction parse_css_float(str) {\n    // float or percentage.\n    if (str[str.length - 1] === '%')\n        { return clamp_css_float(parseFloat(str) / 100); }\n    return clamp_css_float(parseFloat(str));\n}\nfunction css_hue_to_rgb(m1, m2, h) {\n    if (h < 0)\n        { h += 1; }\n    else if (h > 1)\n        { h -= 1; }\n    if (h * 6 < 1)\n        { return m1 + (m2 - m1) * h * 6; }\n    if (h * 2 < 1)\n        { return m2; }\n    if (h * 3 < 2)\n        { return m1 + (m2 - m1) * (2 / 3 - h) * 6; }\n    return m1;\n}\nfunction parseCSSColor(css_str) {\n    // Remove all whitespace, not compliant, but should just be more accepting.\n    var str = css_str.replace(/ /g, '').toLowerCase();\n    // Color keywords (and transparent) lookup.\n    if (str in kCSSColorTable)\n        { return kCSSColorTable[str].slice(); }\n    // dup.\n    // #abc and #abc123 syntax.\n    if (str[0] === '#') {\n        if (str.length === 4) {\n            var iv = parseInt(str.substr(1), 16);\n            // TODO(deanm): Stricter parsing.\n            if (!(iv >= 0 && iv <= 4095))\n                { return null; }\n            // Covers NaN.\n            return [\n                (iv & 3840) >> 4 | (iv & 3840) >> 8,\n                iv & 240 | (iv & 240) >> 4,\n                iv & 15 | (iv & 15) << 4,\n                1\n            ];\n        } else if (str.length === 7) {\n            var iv = parseInt(str.substr(1), 16);\n            // TODO(deanm): Stricter parsing.\n            if (!(iv >= 0 && iv <= 16777215))\n                { return null; }\n            // Covers NaN.\n            return [\n                (iv & 16711680) >> 16,\n                (iv & 65280) >> 8,\n                iv & 255,\n                1\n            ];\n        }\n        return null;\n    }\n    var op = str.indexOf('('), ep = str.indexOf(')');\n    if (op !== -1 && ep + 1 === str.length) {\n        var fname = str.substr(0, op);\n        var params = str.substr(op + 1, ep - (op + 1)).split(',');\n        var alpha = 1;\n        // To allow case fallthrough.\n        switch (fname) {\n        case 'rgba':\n            if (params.length !== 4)\n                { return null; }\n            alpha = parse_css_float(params.pop());\n        // Fall through.\n        case 'rgb':\n            if (params.length !== 3)\n                { return null; }\n            return [\n                parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha\n            ];\n        case 'hsla':\n            if (params.length !== 4)\n                { return null; }\n            alpha = parse_css_float(params.pop());\n        // Fall through.\n        case 'hsl':\n            if (params.length !== 3)\n                { return null; }\n            var h = (parseFloat(params[0]) % 360 + 360) % 360 / 360;\n            // 0 .. 1\n            // NOTE(deanm): According to the CSS spec s/l should only be\n            // percentages, but we don't bother and let float or percentage.\n            var s = parse_css_float(params[1]);\n            var l = parse_css_float(params[2]);\n            var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n            var m1 = l * 2 - m2;\n            return [\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h + 1 / 3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h - 1 / 3) * 255),\n                alpha\n            ];\n        default:\n            return null;\n        }\n    }\n    return null;\n}\ntry {\n    parseCSSColor_1 = csscolorparser.parseCSSColor = parseCSSColor;\n} catch (e) {\n}\n\n//      \n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nvar Color = function Color(r, g, b, a) {\n    if ( a === void 0 ) a = 1;\n\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    this.a = a;\n};\n/**\n * Parses valid CSS color strings and returns a `Color` instance.\n * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n */\nColor.parse = function parse (input) {\n    if (!input) {\n        return undefined;\n    }\n    if (input instanceof Color) {\n        return input;\n    }\n    if (typeof input !== 'string') {\n        return undefined;\n    }\n    var rgba = parseCSSColor_1(input);\n    if (!rgba) {\n        return undefined;\n    }\n    return new Color(rgba[0] / 255 * rgba[3], rgba[1] / 255 * rgba[3], rgba[2] / 255 * rgba[3], rgba[3]);\n};\n/**\n * Returns an RGBA string representing the color value.\n *\n * @returns An RGBA string.\n * @example\n * var purple = new Color.parse('purple');\n * purple.toString; // = \"rgba(128,0,128,1)\"\n * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n */\nColor.prototype.toString = function toString () {\n    var ref = this.toArray();\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var a = ref[3];\n    return (\"rgba(\" + (Math.round(r)) + \",\" + (Math.round(g)) + \",\" + (Math.round(b)) + \",\" + a + \")\");\n};\n/**\n * Returns an RGBA array of values representing the color, unpremultiplied by A.\n *\n * @returns An array of RGBA color values in the range [0, 255].\n */\nColor.prototype.toArray = function toArray () {\n    var ref = this;\n        var r = ref.r;\n        var g = ref.g;\n        var b = ref.b;\n        var a = ref.a;\n    return a === 0 ? [\n        0,\n        0,\n        0,\n        0\n    ] : [\n        r * 255 / a,\n        g * 255 / a,\n        b * 255 / a,\n        a\n    ];\n};\n/**\n * Returns a RGBA array of float values representing the color, unpremultiplied by A.\n *\n * @returns An array of RGBA color values in the range [0, 1].\n */\nColor.prototype.toArray01 = function toArray01 () {\n    var ref = this;\n        var r = ref.r;\n        var g = ref.g;\n        var b = ref.b;\n        var a = ref.a;\n    return a === 0 ? [\n        0,\n        0,\n        0,\n        0\n    ] : [\n        r / a,\n        g / a,\n        b / a,\n        a\n    ];\n};\n/**\n * Returns an RGBA array of values representing the color, premultiplied by A.\n *\n * @returns An array of RGBA color values in the range [0, 1].\n */\nColor.prototype.toArray01PremultipliedAlpha = function toArray01PremultipliedAlpha () {\n    var ref = this;\n        var r = ref.r;\n        var g = ref.g;\n        var b = ref.b;\n        var a = ref.a;\n    return [\n        r,\n        g,\n        b,\n        a\n    ];\n};\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nColor.blue = new Color(0, 0, 1, 1);\nvar Color$1 = Color;\n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? [\n        'literal',\n        value\n    ] : value;\n}\nfunction convertFunction(parameters, propertySpec) {\n    var stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n    var zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    var featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    var zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    stops = stops.map(function (stop) {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [\n                stop[0],\n                convertTokenString(stop[1])\n            ];\n        }\n        return [\n            stop[0],\n            convertLiteral(stop[1])\n        ];\n    });\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\nfunction convertIdentityFunction(parameters, propertySpec) {\n    var get = [\n        'get',\n        parameters.property\n    ];\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? [\n            'string',\n            get\n        ] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        var expression = [\n            propertySpec.type === 'color' ? 'to-color' : propertySpec.type,\n            get,\n            convertLiteral(parameters.default)\n        ];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n    case 'hcl':\n        return 'interpolate-hcl';\n    case 'lab':\n        return 'interpolate-lab';\n    default:\n        return 'interpolate';\n    }\n}\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    var featureFunctionParameters = {};\n    var featureFunctionStops = {};\n    var zoomStops = [];\n    for (var s = 0; s < stops.length; s++) {\n        var stop = stops[s];\n        var zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom: zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([\n            stop[0].value,\n            stop[1]\n        ]);\n    }\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    var functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        var expression = [\n            getInterpolateOperator(parameters),\n            ['linear'],\n            ['zoom']\n        ];\n        for (var i = 0, list = zoomStops; i < list.length; i += 1) {\n            var z = list[i];\n\n            var output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n        return expression;\n    } else {\n        var expression$1 = [\n            'step',\n            ['zoom']\n        ];\n        for (var i$1 = 0, list$1 = zoomStops; i$1 < list$1.length; i$1 += 1) {\n            var z$1 = list$1[i$1];\n\n            var output$1 = convertPropertyFunction(featureFunctionParameters[z$1], propertySpec, featureFunctionStops[z$1]);\n            appendStopPair(expression$1, z$1, output$1, true);\n        }\n        fixupDegenerateStepCurve(expression$1);\n        return expression$1;\n    }\n}\nfunction coalesce(a, b) {\n    if (a !== undefined)\n        { return a; }\n    if (b !== undefined)\n        { return b; }\n}\nfunction getFallback(parameters, propertySpec) {\n    var defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    var type = getFunctionType(parameters, propertySpec);\n    var get = [\n        'get',\n        parameters.property\n    ];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        var expression = ['case'];\n        for (var i = 0, list = stops; i < list.length; i += 1) {\n            var stop = list[i];\n\n            expression.push([\n                '==',\n                get,\n                stop[0]\n            ], stop[1]);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'categorical') {\n        var expression$1 = [\n            'match',\n            get\n        ];\n        for (var i$1 = 0, list$1 = stops; i$1 < list$1.length; i$1 += 1) {\n            var stop$1 = list$1[i$1];\n\n            appendStopPair(expression$1, stop$1[0], stop$1[1], false);\n        }\n        expression$1.push(getFallback(parameters, propertySpec));\n        return expression$1;\n    } else if (type === 'interval') {\n        var expression$2 = [\n            'step',\n            [\n                'number',\n                get\n            ]\n        ];\n        for (var i$2 = 0, list$2 = stops; i$2 < list$2.length; i$2 += 1) {\n            var stop$2 = list$2[i$2];\n\n            appendStopPair(expression$2, stop$2[0], stop$2[1], true);\n        }\n        fixupDegenerateStepCurve(expression$2);\n        return parameters.default === undefined ? expression$2 : [\n            'case',\n            [\n                '==',\n                [\n                    'typeof',\n                    get\n                ],\n                'number'\n            ],\n            expression$2,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        var base = parameters.base !== undefined ? parameters.base : 1;\n        var expression$3 = [\n            getInterpolateOperator(parameters),\n            base === 1 ? ['linear'] : [\n                'exponential',\n                base\n            ],\n            [\n                'number',\n                get\n            ]\n        ];\n        for (var i$3 = 0, list$3 = stops; i$3 < list$3.length; i$3 += 1) {\n            var stop$3 = list$3[i$3];\n\n            appendStopPair(expression$3, stop$3[0], stop$3[1], false);\n        }\n        return parameters.default === undefined ? expression$3 : [\n            'case',\n            [\n                '==',\n                [\n                    'typeof',\n                    get\n                ],\n                'number'\n            ],\n            expression$3,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error((\"Unknown property function type \" + type));\n    }\n}\nfunction convertZoomFunction(parameters, propertySpec, stops, input) {\n    if ( input === void 0 ) input = ['zoom'];\n\n    var type = getFunctionType(parameters, propertySpec);\n    var expression;\n    var isStep = false;\n    if (type === 'interval') {\n        expression = [\n            'step',\n            input\n        ];\n        isStep = true;\n    } else if (type === 'exponential') {\n        var base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? ['linear'] : [\n                'exponential',\n                base\n            ],\n            input\n        ];\n    } else {\n        throw new Error((\"Unknown zoom function type \\\"\" + type + \"\\\"\"));\n    }\n    for (var i = 0, list = stops; i < list.length; i += 1) {\n        var stop = list[i];\n\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n    fixupDegenerateStepCurve(expression);\n    return expression;\n}\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        return propertySpec.expression.interpolated ? 'exponential' : 'interval';\n    }\n}\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nfunction convertTokenString(s) {\n    var result = ['concat'];\n    var re = /{([^{}]+)}/g;\n    var pos = 0;\n    for (var match = re.exec(s); match !== null; match = re.exec(s)) {\n        var literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0)\n            { result.push(literal); }\n        result.push([\n            'get',\n            match[1]\n        ]);\n    }\n    if (result.length === 1) {\n        return s;\n    }\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return [\n            'to-string',\n            result[1]\n        ];\n    }\n    return result;\n}\n\n//      \nvar ParsingError = /*@__PURE__*/(function (Error) {\n    function ParsingError(key, message) {\n        Error.call(this, message);\n        this.message = message;\n        this.key = key;\n    }\n\n    if ( Error ) ParsingError.__proto__ = Error;\n    ParsingError.prototype = Object.create( Error && Error.prototype );\n    ParsingError.prototype.constructor = ParsingError;\n\n    return ParsingError;\n}(Error));\nvar ParsingError$1 = ParsingError;\n\n//      \n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nvar Scope = function Scope(parent, bindings) {\n    if ( bindings === void 0 ) bindings = [];\n\n    this.parent = parent;\n    this.bindings = {};\n    for (var i = 0, list = bindings; i < list.length; i += 1) {\n        var ref = list[i];\n        var name = ref[0];\n        var expression = ref[1];\n\n        this.bindings[name] = expression;\n    }\n};\nScope.prototype.concat = function concat (bindings) {\n    return new Scope(this, bindings);\n};\nScope.prototype.get = function get (name) {\n    if (this.bindings[name]) {\n        return this.bindings[name];\n    }\n    if (this.parent) {\n        return this.parent.get(name);\n    }\n    throw new Error((name + \" not found in scope.\"));\n};\nScope.prototype.has = function has (name) {\n    if (this.bindings[name])\n        { return true; }\n    return this.parent ? this.parent.has(name) : false;\n};\nvar Scope$1 = Scope;\n\n//      \nvar NullType = { kind: 'null' };\nvar NumberType = { kind: 'number' };\nvar StringType = { kind: 'string' };\nvar BooleanType = { kind: 'boolean' };\nvar ColorType = { kind: 'color' };\nvar ObjectType = { kind: 'object' };\nvar ValueType = { kind: 'value' };\nvar ErrorType = { kind: 'error' };\nvar CollatorType = { kind: 'collator' };\nvar FormattedType = { kind: 'formatted' };\nvar ResolvedImageType = { kind: 'resolvedImage' };\nfunction array$1(itemType, N) {\n    return {\n        kind: 'array',\n        itemType: itemType,\n        N: N\n    };\n}\nfunction toString$1(type) {\n    if (type.kind === 'array') {\n        var itemType = toString$1(type.itemType);\n        return typeof type.N === 'number' ? (\"array<\" + itemType + \", \" + (type.N) + \">\") : type.itemType.kind === 'value' ? 'array' : (\"array<\" + itemType + \">\");\n    } else {\n        return type.kind;\n    }\n}\nvar valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array$1(ValueType),\n    ResolvedImageType\n];\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nfunction checkSubtype(expected, t) {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' && (t.N === 0 && t.itemType.kind === 'value' || !checkSubtype(expected.itemType, t.itemType)) && (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (var i = 0, list = valueMemberTypes; i < list.length; i += 1) {\n            var memberType = list[i];\n\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n    return (\"Expected \" + (toString$1(expected)) + \" but found \" + (toString$1(t)) + \" instead.\");\n}\nfunction isValidType(provided, allowedTypes) {\n    return allowedTypes.some(function (t) { return t.kind === provided.kind; });\n}\nfunction isValidNativeType(provided, allowedTypes) {\n    return allowedTypes.some(function (t) {\n        if (t === 'null') {\n            return provided === null;\n        } else if (t === 'array') {\n            return Array.isArray(provided);\n        } else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        } else {\n            return t === typeof provided;\n        }\n    });\n}\n\n//      \n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\nvar Collator = function Collator(caseSensitive, diacriticSensitive, locale) {\n    if (caseSensitive)\n        { this.sensitivity = diacriticSensitive ? 'variant' : 'case'; }\n    else\n        { this.sensitivity = diacriticSensitive ? 'accent' : 'base'; }\n    this.locale = locale;\n    this.collator = new Intl.Collator(this.locale ? this.locale : [], {\n        sensitivity: this.sensitivity,\n        usage: 'search'\n    });\n};\nCollator.prototype.compare = function compare (lhs, rhs) {\n    return this.collator.compare(lhs, rhs);\n};\nCollator.prototype.resolvedLocale = function resolvedLocale () {\n    // We create a Collator without \"usage: search\" because we don't want\n    // the search options encoded in our result (e.g. \"en-u-co-search\")\n    return new Intl.Collator(this.locale ? this.locale : []).resolvedOptions().locale;\n};\n\nvar Collator$1 = Collator;\n\n//      \nvar FormattedSection = function FormattedSection(text, image, scale, fontStack, textColor) {\n    // combine characters so that diacritic marks are not separate code points\n    this.text = text.normalize ? text.normalize() : text;\n    this.image = image;\n    this.scale = scale;\n    this.fontStack = fontStack;\n    this.textColor = textColor;\n};\nvar Formatted = function Formatted(sections) {\n    this.sections = sections;\n};\nFormatted.fromString = function fromString (unformatted) {\n    return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n};\nFormatted.prototype.isEmpty = function isEmpty () {\n    if (this.sections.length === 0)\n        { return true; }\n    return !this.sections.some(function (section) { return section.text.length !== 0 || section.image && section.image.name.length !== 0; });\n};\nFormatted.factory = function factory (text) {\n    if (text instanceof Formatted) {\n        return text;\n    } else {\n        return Formatted.fromString(text);\n    }\n};\nFormatted.prototype.toString = function toString () {\n    if (this.sections.length === 0)\n        { return ''; }\n    return this.sections.map(function (section) { return section.text; }).join('');\n};\nFormatted.prototype.serialize = function serialize () {\n    var serialized = ['format'];\n    for (var i = 0, list = this.sections; i < list.length; i += 1) {\n        var section = list[i];\n\n            if (section.image) {\n            serialized.push([\n                'image',\n                section.image.name\n            ]);\n            continue;\n        }\n        serialized.push(section.text);\n        var options = {};\n        if (section.fontStack) {\n            options['text-font'] = [\n                'literal',\n                section.fontStack.split(',')\n            ];\n        }\n        if (section.scale) {\n            options['font-scale'] = section.scale;\n        }\n        if (section.textColor) {\n            options['text-color'] = ['rgba'].concat(section.textColor.toArray());\n        }\n        serialized.push(options);\n    }\n    return serialized;\n};\n\nvar Formatted$1 = Formatted;\n\n//      \nvar ResolvedImage = function ResolvedImage(options) {\n    this.name = options.name;\n    this.available = options.available;\n};\nResolvedImage.prototype.toString = function toString () {\n    return this.name;\n};\nResolvedImage.fromString = function fromString (name) {\n    if (!name)\n        { return null; }\n    // treat empty values as no image\n    return new ResolvedImage({\n        name: name,\n        available: false\n    });\n};\nResolvedImage.prototype.serialize = function serialize () {\n    return [\n        'image',\n        this.name\n    ];\n};\n\nvar ResolvedImage$1 = ResolvedImage;\n\nfunction validateRGBA(r, g, b, a) {\n    if (!(typeof r === 'number' && r >= 0 && r <= 255 && typeof g === 'number' && g >= 0 && g <= 255 && typeof b === 'number' && b >= 0 && b <= 255)) {\n        var value = typeof a === 'number' ? [\n            r,\n            g,\n            b,\n            a\n        ] : [\n            r,\n            g,\n            b\n        ];\n        return (\"Invalid rgba value [\" + (value.join(', ')) + \"]: 'r', 'g', and 'b' must be between 0 and 255.\");\n    }\n    if (!(typeof a === 'undefined' || typeof a === 'number' && a >= 0 && a <= 1)) {\n        return (\"Invalid rgba value [\" + ([\n            r,\n            g,\n            b,\n            a\n        ].join(', ')) + \"]: 'a' must be between 0 and 1.\");\n    }\n    return null;\n}\nfunction isValue(mixed) {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color$1) {\n        return true;\n    } else if (mixed instanceof Collator$1) {\n        return true;\n    } else if (mixed instanceof Formatted$1) {\n        return true;\n    } else if (mixed instanceof ResolvedImage$1) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (var i = 0, list = mixed; i < list.length; i += 1) {\n            var item = list[i];\n\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (var key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\nfunction typeOf(value) {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color$1) {\n        return ColorType;\n    } else if (value instanceof Collator$1) {\n        return CollatorType;\n    } else if (value instanceof Formatted$1) {\n        return FormattedType;\n    } else if (value instanceof ResolvedImage$1) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        var length = value.length;\n        var itemType;\n        for (var i = 0, list = value; i < list.length; i += 1) {\n            var item = list[i];\n\n            var t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n        return array$1(itemType || ValueType, length);\n    } else {\n        return ObjectType;\n    }\n}\nfunction toString(value) {\n    var type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color$1 || value instanceof Formatted$1 || value instanceof ResolvedImage$1) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nvar Literal = function Literal(type, value) {\n    this.type = type;\n    this.value = value;\n};\nLiteral.parse = function parse (args, context) {\n    if (args.length !== 2)\n        { return context.error((\"'literal' expression requires exactly one argument, but found \" + (args.length - 1) + \" instead.\")); }\n    if (!isValue(args[1]))\n        { return context.error(\"invalid value\"); }\n    var value = args[1];\n    var type = typeOf(value);\n    // special case: infer the item type if possible for zero-length arrays\n    var expected = context.expectedType;\n    if (type.kind === 'array' && type.N === 0 && expected && expected.kind === 'array' && (typeof expected.N !== 'number' || expected.N === 0)) {\n        type = expected;\n    }\n    return new Literal(type, value);\n};\nLiteral.prototype.evaluate = function evaluate () {\n    return this.value;\n};\nLiteral.prototype.eachChild = function eachChild () {\n};\nLiteral.prototype.outputDefined = function outputDefined () {\n    return true;\n};\nLiteral.prototype.serialize = function serialize () {\n    if (this.type.kind === 'array' || this.type.kind === 'object') {\n        return [\n            'literal',\n            this.value\n        ];\n    } else if (this.value instanceof Color$1) {\n        // Constant-folding can generate Literal expressions that you\n        // couldn't actually generate with a \"literal\" expression,\n        // so we have to implement an equivalent serialization here\n        return ['rgba'].concat(this.value.toArray());\n    } else if (this.value instanceof Formatted$1) {\n        // Same as Color\n        return this.value.serialize();\n    } else {\n        return this.value;\n    }\n};\nvar Literal$1 = Literal;\n\n//      \nvar RuntimeError = function RuntimeError(message) {\n    this.name = 'ExpressionEvaluationError';\n    this.message = message;\n};\nRuntimeError.prototype.toJSON = function toJSON () {\n    return this.message;\n};\nvar RuntimeError$1 = RuntimeError;\n\nvar types$2 = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\nvar Assertion = function Assertion(type, args) {\n    this.type = type;\n    this.args = args;\n};\nAssertion.parse = function parse (args, context) {\n    if (args.length < 2)\n        { return context.error(\"Expected at least one argument.\"); }\n    var i = 1;\n    var type;\n    var name = args[0];\n    if (name === 'array') {\n        var itemType;\n        if (args.length > 2) {\n            var type$1 = args[1];\n            if (typeof type$1 !== 'string' || !(type$1 in types$2) || type$1 === 'object')\n                { return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1); }\n            itemType = types$2[type$1];\n            i++;\n        } else {\n            itemType = ValueType;\n        }\n        var N;\n        if (args.length > 3) {\n            if (args[2] !== null && (typeof args[2] !== 'number' || args[2] < 0 || args[2] !== Math.floor(args[2]))) {\n                return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n            }\n            N = args[2];\n            i++;\n        }\n        type = array$1(itemType, N);\n    } else {\n        type = types$2[name];\n    }\n    var parsed = [];\n    for (; i < args.length; i++) {\n        var input = context.parse(args[i], i, ValueType);\n        if (!input)\n            { return null; }\n        parsed.push(input);\n    }\n    return new Assertion(type, parsed);\n};\nAssertion.prototype.evaluate = function evaluate (ctx) {\n    for (var i = 0; i < this.args.length; i++) {\n        var value = this.args[i].evaluate(ctx);\n        var error = checkSubtype(this.type, typeOf(value));\n        if (!error) {\n            return value;\n        } else if (i === this.args.length - 1) {\n            throw new RuntimeError$1((\"Expected value to be of type \" + (toString$1(this.type)) + \", but found \" + (toString$1(typeOf(value))) + \" instead.\"));\n        }\n    }\n    return null;\n};\nAssertion.prototype.eachChild = function eachChild (fn) {\n    this.args.forEach(fn);\n};\nAssertion.prototype.outputDefined = function outputDefined () {\n    return this.args.every(function (arg) { return arg.outputDefined(); });\n};\nAssertion.prototype.serialize = function serialize () {\n    var type = this.type;\n    var serialized = [type.kind];\n    if (type.kind === 'array') {\n        var itemType = type.itemType;\n        if (itemType.kind === 'string' || itemType.kind === 'number' || itemType.kind === 'boolean') {\n            serialized.push(itemType.kind);\n            var N = type.N;\n            if (typeof N === 'number' || this.args.length > 1) {\n                serialized.push(N);\n            }\n        }\n    }\n    return serialized.concat(this.args.map(function (arg) { return arg.serialize(); }));\n};\nvar Assertion$1 = Assertion;\n\n//      \nvar FormatExpression = function FormatExpression(sections) {\n    this.type = FormattedType;\n    this.sections = sections;\n};\nFormatExpression.parse = function parse (args, context) {\n    if (args.length < 2) {\n        return context.error(\"Expected at least one argument.\");\n    }\n    var firstArg = args[1];\n    if (!Array.isArray(firstArg) && typeof firstArg === 'object') {\n        return context.error(\"First argument must be an image or text section.\");\n    }\n    var sections = [];\n    var nextTokenMayBeObject = false;\n    for (var i = 1; i <= args.length - 1; ++i) {\n        var arg = args[i];\n        if (nextTokenMayBeObject && typeof arg === 'object' && !Array.isArray(arg)) {\n            nextTokenMayBeObject = false;\n            var scale = null;\n            if (arg['font-scale']) {\n                scale = context.parse(arg['font-scale'], 1, NumberType);\n                if (!scale)\n                    { return null; }\n            }\n            var font = null;\n            if (arg['text-font']) {\n                font = context.parse(arg['text-font'], 1, array$1(StringType));\n                if (!font)\n                    { return null; }\n            }\n            var textColor = null;\n            if (arg['text-color']) {\n                textColor = context.parse(arg['text-color'], 1, ColorType);\n                if (!textColor)\n                    { return null; }\n            }\n            var lastExpression = sections[sections.length - 1];\n            lastExpression.scale = scale;\n            lastExpression.font = font;\n            lastExpression.textColor = textColor;\n        } else {\n            var content = context.parse(args[i], 1, ValueType);\n            if (!content)\n                { return null; }\n            var kind = content.type.kind;\n            if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                { return context.error(\"Formatted text type must be 'string', 'value', 'image' or 'null'.\"); }\n            nextTokenMayBeObject = true;\n            sections.push({\n                content: content,\n                scale: null,\n                font: null,\n                textColor: null\n            });\n        }\n    }\n    return new FormatExpression(sections);\n};\nFormatExpression.prototype.evaluate = function evaluate (ctx) {\n    var evaluateSection = function (section) {\n        var evaluatedContent = section.content.evaluate(ctx);\n        if (typeOf(evaluatedContent) === ResolvedImageType) {\n            return new FormattedSection('', evaluatedContent, null, null, null);\n        }\n        return new FormattedSection(toString(evaluatedContent), null, section.scale ? section.scale.evaluate(ctx) : null, section.font ? section.font.evaluate(ctx).join(',') : null, section.textColor ? section.textColor.evaluate(ctx) : null);\n    };\n    return new Formatted$1(this.sections.map(evaluateSection));\n};\nFormatExpression.prototype.eachChild = function eachChild (fn) {\n    for (var i = 0, list = this.sections; i < list.length; i += 1) {\n        var section = list[i];\n\n            fn(section.content);\n        if (section.scale) {\n            fn(section.scale);\n        }\n        if (section.font) {\n            fn(section.font);\n        }\n        if (section.textColor) {\n            fn(section.textColor);\n        }\n    }\n};\nFormatExpression.prototype.outputDefined = function outputDefined () {\n    // Technically the combinatoric set of all children\n    // Usually, this.text will be undefined anyway\n    return false;\n};\nFormatExpression.prototype.serialize = function serialize () {\n    var serialized = ['format'];\n    for (var i = 0, list = this.sections; i < list.length; i += 1) {\n        var section = list[i];\n\n            serialized.push(section.content.serialize());\n        var options = {};\n        if (section.scale) {\n            options['font-scale'] = section.scale.serialize();\n        }\n        if (section.font) {\n            options['text-font'] = section.font.serialize();\n        }\n        if (section.textColor) {\n            options['text-color'] = section.textColor.serialize();\n        }\n        serialized.push(options);\n    }\n    return serialized;\n};\n\nvar FormatExpression$1 = FormatExpression;\n\n//      \nvar ImageExpression = function ImageExpression(input) {\n    this.type = ResolvedImageType;\n    this.input = input;\n};\nImageExpression.parse = function parse (args, context) {\n    if (args.length !== 2) {\n        return context.error(\"Expected two arguments.\");\n    }\n    var name = context.parse(args[1], 1, StringType);\n    if (!name)\n        { return context.error(\"No image name provided.\"); }\n    return new ImageExpression(name);\n};\nImageExpression.prototype.evaluate = function evaluate (ctx) {\n    var evaluatedImageName = this.input.evaluate(ctx);\n    var value = ResolvedImage$1.fromString(evaluatedImageName);\n    if (value && ctx.availableImages)\n        { value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1; }\n    return value;\n};\nImageExpression.prototype.eachChild = function eachChild (fn) {\n    fn(this.input);\n};\nImageExpression.prototype.outputDefined = function outputDefined () {\n    // The output of image is determined by the list of available images in the evaluation context\n    return false;\n};\nImageExpression.prototype.serialize = function serialize () {\n    return [\n        'image',\n        this.input.serialize()\n    ];\n};\n\nvar ImageExpression$1 = ImageExpression;\n\nvar types$1 = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nvar Coercion = function Coercion(type, args) {\n    this.type = type;\n    this.args = args;\n};\nCoercion.parse = function parse (args, context) {\n    if (args.length < 2)\n        { return context.error(\"Expected at least one argument.\"); }\n    var name = args[0];\n    if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n        { return context.error(\"Expected one argument.\"); }\n    var type = types$1[name];\n    var parsed = [];\n    for (var i = 1; i < args.length; i++) {\n        var input = context.parse(args[i], i, ValueType);\n        if (!input)\n            { return null; }\n        parsed.push(input);\n    }\n    return new Coercion(type, parsed);\n};\nCoercion.prototype.evaluate = function evaluate (ctx) {\n    if (this.type.kind === 'boolean') {\n        return Boolean(this.args[0].evaluate(ctx));\n    } else if (this.type.kind === 'color') {\n        var input;\n        var error;\n        for (var i = 0, list = this.args; i < list.length; i += 1) {\n            var arg = list[i];\n\n                input = arg.evaluate(ctx);\n            error = null;\n            if (input instanceof Color$1) {\n                return input;\n            } else if (typeof input === 'string') {\n                var c = ctx.parseColor(input);\n                if (c)\n                    { return c; }\n            } else if (Array.isArray(input)) {\n                if (input.length < 3 || input.length > 4) {\n                    error = \"Invalid rbga value \" + (JSON.stringify(input)) + \": expected an array containing either three or four numeric values.\";\n                } else {\n                    error = validateRGBA(input[0], input[1], input[2], input[3]);\n                }\n                if (!error) {\n                    return new Color$1(input[0] / 255, input[1] / 255, input[2] / 255, input[3]);\n                }\n            }\n        }\n        throw new RuntimeError$1(error || (\"Could not parse color from value '\" + (typeof input === 'string' ? input : String(JSON.stringify(input))) + \"'\"));\n    } else if (this.type.kind === 'number') {\n        var value = null;\n        for (var i$1 = 0, list$1 = this.args; i$1 < list$1.length; i$1 += 1) {\n            var arg$1 = list$1[i$1];\n\n                value = arg$1.evaluate(ctx);\n            if (value === null)\n                { return 0; }\n            var num = Number(value);\n            if (isNaN(num))\n                { continue; }\n            return num;\n        }\n        throw new RuntimeError$1((\"Could not convert \" + (JSON.stringify(value)) + \" to number.\"));\n    } else if (this.type.kind === 'formatted') {\n        // There is no explicit 'to-formatted' but this coercion can be implicitly\n        // created by properties that expect the 'formatted' type.\n        return Formatted$1.fromString(toString(this.args[0].evaluate(ctx)));\n    } else if (this.type.kind === 'resolvedImage') {\n        return ResolvedImage$1.fromString(toString(this.args[0].evaluate(ctx)));\n    } else {\n        return toString(this.args[0].evaluate(ctx));\n    }\n};\nCoercion.prototype.eachChild = function eachChild (fn) {\n    this.args.forEach(fn);\n};\nCoercion.prototype.outputDefined = function outputDefined () {\n    return this.args.every(function (arg) { return arg.outputDefined(); });\n};\nCoercion.prototype.serialize = function serialize () {\n    if (this.type.kind === 'formatted') {\n        return new FormatExpression$1([{\n                content: this.args[0],\n                scale: null,\n                font: null,\n                textColor: null\n            }]).serialize();\n    }\n    if (this.type.kind === 'resolvedImage') {\n        return new ImageExpression$1(this.args[0]).serialize();\n    }\n    var serialized = [(\"to-\" + (this.type.kind))];\n    this.eachChild(function (child) {\n        serialized.push(child.serialize());\n    });\n    return serialized;\n};\nvar Coercion$1 = Coercion;\n\n//      \nvar geometryTypes = [\n    'Unknown',\n    'Point',\n    'LineString',\n    'Polygon'\n];\nvar EvaluationContext = function EvaluationContext() {\n    this.globals = null;\n    this.feature = null;\n    this.featureState = null;\n    this.formattedSection = null;\n    this._parseColorCache = {};\n    this.availableImages = null;\n    this.canonical = null;\n    this.featureTileCoord = null;\n    this.featureDistanceData = null;\n};\nEvaluationContext.prototype.id = function id () {\n    return this.feature && this.feature.id !== undefined ? this.feature.id : null;\n};\nEvaluationContext.prototype.geometryType = function geometryType () {\n    return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n};\nEvaluationContext.prototype.geometry = function geometry () {\n    return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n};\nEvaluationContext.prototype.canonicalID = function canonicalID () {\n    return this.canonical;\n};\nEvaluationContext.prototype.properties = function properties () {\n    return this.feature && this.feature.properties || {};\n};\nEvaluationContext.prototype.distanceFromCenter = function distanceFromCenter () {\n    if (this.featureTileCoord && this.featureDistanceData) {\n        var c = this.featureDistanceData.center;\n        var scale = this.featureDistanceData.scale;\n        var ref = this.featureTileCoord;\n            var x = ref.x;\n            var y = ref.y;\n        // Calculate the distance vector `d` (left handed)\n        var dX = x * scale - c[0];\n        var dY = y * scale - c[1];\n        // The bearing vector `b` (left handed)\n        var bX = this.featureDistanceData.bearing[0];\n        var bY = this.featureDistanceData.bearing[1];\n        // Distance is calculated as `dot(d, v)`\n        var dist = bX * dX + bY * dY;\n        return dist;\n    }\n    return 0;\n};\nEvaluationContext.prototype.parseColor = function parseColor (input) {\n    var cached = this._parseColorCache[input];\n    if (!cached) {\n        cached = this._parseColorCache[input] = Color$1.parse(input);\n    }\n    return cached;\n};\nvar EvaluationContext$1 = EvaluationContext;\n\n//      \nvar CompoundExpression = function CompoundExpression(name, type, evaluate, args) {\n    this.name = name;\n    this.type = type;\n    this._evaluate = evaluate;\n    this.args = args;\n};\nCompoundExpression.prototype.evaluate = function evaluate (ctx) {\n    return this._evaluate(ctx, this.args);\n};\nCompoundExpression.prototype.eachChild = function eachChild (fn) {\n    this.args.forEach(fn);\n};\nCompoundExpression.prototype.outputDefined = function outputDefined () {\n    return false;\n};\nCompoundExpression.prototype.serialize = function serialize () {\n    return [this.name].concat(this.args.map(function (arg) { return arg.serialize(); }));\n};\nCompoundExpression.parse = function parse (args, context) {\n        var ref$1;\n\n    var op = args[0];\n    var definition = CompoundExpression.definitions[op];\n    if (!definition) {\n        return context.error((\"Unknown expression \\\"\" + op + \"\\\". If you wanted a literal array, use [\\\"literal\\\", [...]].\"), 0);\n    }\n    // Now check argument types against each signature\n    var type = Array.isArray(definition) ? definition[0] : definition.type;\n    var availableOverloads = Array.isArray(definition) ? [[\n            definition[1],\n            definition[2]\n        ]] : definition.overloads;\n    var overloads = availableOverloads.filter(function (ref) {\n            var signature = ref[0];\n\n            return !Array.isArray(signature) || // varags\n    signature.length === args.length - 1;\n        }// correct param count\n);\n    var signatureContext = null;\n    for (var i$3 = 0, list = overloads; i$3 < list.length; i$3 += 1) {\n        // Use a fresh context for each attempted signature so that, if\n        // we eventually succeed, we haven't polluted `context.errors`.\n        var ref = list[i$3];\n            var params = ref[0];\n            var evaluate = ref[1];\n\n            signatureContext = new ParsingContext$1(context.registry, context.path, null, context.scope);\n        // First parse all the args, potentially coercing to the\n        // types expected by this overload.\n        var parsedArgs = [];\n        var argParseFailed = false;\n        for (var i = 1; i < args.length; i++) {\n            var arg = args[i];\n            var expectedType = Array.isArray(params) ? params[i - 1] : params.type;\n            var parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n            if (!parsed) {\n                argParseFailed = true;\n                break;\n            }\n            parsedArgs.push(parsed);\n        }\n        if (argParseFailed) {\n            // Couldn't coerce args of this overload to expected type, move\n            // on to next one.\n            continue;\n        }\n        if (Array.isArray(params)) {\n            if (params.length !== parsedArgs.length) {\n                signatureContext.error((\"Expected \" + (params.length) + \" arguments, but found \" + (parsedArgs.length) + \" instead.\"));\n                continue;\n            }\n        }\n        for (var i$1 = 0; i$1 < parsedArgs.length; i$1++) {\n            var expected = Array.isArray(params) ? params[i$1] : params.type;\n            var arg$1 = parsedArgs[i$1];\n            signatureContext.concat(i$1 + 1).checkSubtype(expected, arg$1.type);\n        }\n        if (signatureContext.errors.length === 0) {\n            return new CompoundExpression(op, type, evaluate, parsedArgs);\n        }\n    }\n    if (overloads.length === 1) {\n        (ref$1 = context.errors).push.apply(ref$1, signatureContext.errors);\n    } else {\n        var expected$1 = overloads.length ? overloads : availableOverloads;\n        var signatures = expected$1.map(function (ref) {\n                var params = ref[0];\n\n                return stringifySignature(params);\n            }).join(' | ');\n        var actualTypes = [];\n        // For error message, re-parse arguments without trying to\n        // apply any coercions\n        for (var i$2 = 1; i$2 < args.length; i$2++) {\n            var parsed$1 = context.parse(args[i$2], 1 + actualTypes.length);\n            if (!parsed$1)\n                { return null; }\n            actualTypes.push(toString$1(parsed$1.type));\n        }\n        context.error((\"Expected arguments of type \" + signatures + \", but found (\" + (actualTypes.join(', ')) + \") instead.\"));\n    }\n    return null;\n};\nCompoundExpression.register = function register (registry, definitions) {\n    CompoundExpression.definitions = definitions;\n    for (var name in definitions) {\n        registry[name] = CompoundExpression;\n    }\n};\nfunction stringifySignature(signature) {\n    if (Array.isArray(signature)) {\n        return (\"(\" + (signature.map(toString$1).join(', ')) + \")\");\n    } else {\n        return (\"(\" + (toString$1(signature.type)) + \"...)\");\n    }\n}\nvar CompoundExpression$1 = CompoundExpression;\n\n//      \nvar CollatorExpression = function CollatorExpression(caseSensitive, diacriticSensitive, locale) {\n    this.type = CollatorType;\n    this.locale = locale;\n    this.caseSensitive = caseSensitive;\n    this.diacriticSensitive = diacriticSensitive;\n};\nCollatorExpression.parse = function parse (args, context) {\n    if (args.length !== 2)\n        { return context.error(\"Expected one argument.\"); }\n    var options = args[1];\n    if (typeof options !== 'object' || Array.isArray(options))\n        { return context.error(\"Collator options argument must be an object.\"); }\n    var caseSensitive = context.parse(options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n    if (!caseSensitive)\n        { return null; }\n    var diacriticSensitive = context.parse(options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n    if (!diacriticSensitive)\n        { return null; }\n    var locale = null;\n    if (options['locale']) {\n        locale = context.parse(options['locale'], 1, StringType);\n        if (!locale)\n            { return null; }\n    }\n    return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n};\nCollatorExpression.prototype.evaluate = function evaluate (ctx) {\n    return new Collator$1(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n};\nCollatorExpression.prototype.eachChild = function eachChild (fn) {\n    fn(this.caseSensitive);\n    fn(this.diacriticSensitive);\n    if (this.locale) {\n        fn(this.locale);\n    }\n};\nCollatorExpression.prototype.outputDefined = function outputDefined () {\n    // Technically the set of possible outputs is the combinatoric set of Collators produced\n    // by all possible outputs of locale/caseSensitive/diacriticSensitive\n    // But for the primary use of Collators in comparison operators, we ignore the Collator's\n    // possible outputs anyway, so we can get away with leaving this false for now.\n    return false;\n};\nCollatorExpression.prototype.serialize = function serialize () {\n    var options = {};\n    options['case-sensitive'] = this.caseSensitive.serialize();\n    options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n    if (this.locale) {\n        options['locale'] = this.locale.serialize();\n    }\n    return [\n        'collator',\n        options\n    ];\n};\n\nvar CollatorExpression$1 = CollatorExpression;\n\n//      \n// minX, minY, maxX, maxY\nvar EXTENT = 8192;\nfunction updateBBox(bbox, coord) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\nfunction mercatorXfromLng(lng) {\n    return (180 + lng) / 360;\n}\nfunction mercatorYfromLat(lat) {\n    return (180 - 180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360))) / 360;\n}\nfunction boxWithinBox(bbox1, bbox2) {\n    if (bbox1[0] <= bbox2[0])\n        { return false; }\n    if (bbox1[2] >= bbox2[2])\n        { return false; }\n    if (bbox1[1] <= bbox2[1])\n        { return false; }\n    if (bbox1[3] >= bbox2[3])\n        { return false; }\n    return true;\n}\nfunction getTileCoordinates(p, canonical) {\n    var x = mercatorXfromLng(p[0]);\n    var y = mercatorYfromLat(p[1]);\n    var tilesAtZoom = Math.pow(2, canonical.z);\n    return [\n        Math.round(x * tilesAtZoom * EXTENT),\n        Math.round(y * tilesAtZoom * EXTENT)\n    ];\n}\nfunction onBoundary(p, p1, p2) {\n    var x1 = p[0] - p1[0];\n    var y1 = p[1] - p1[1];\n    var x2 = p[0] - p2[0];\n    var y2 = p[1] - p2[1];\n    return x1 * y2 - x2 * y1 === 0 && x1 * x2 <= 0 && y1 * y2 <= 0;\n}\nfunction rayIntersect(p, p1, p2) {\n    return p1[1] > p[1] !== p2[1] > p[1] && p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0];\n}\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings) {\n    var inside = false;\n    for (var i = 0, len = rings.length; i < len; i++) {\n        var ring = rings[i];\n        for (var j = 0, len2 = ring.length; j < len2 - 1; j++) {\n            if (onBoundary(point, ring[j], ring[j + 1]))\n                { return false; }\n            if (rayIntersect(point, ring[j], ring[j + 1]))\n                { inside = !inside; }\n        }\n    }\n    return inside;\n}\nfunction pointWithinPolygons(point, polygons) {\n    for (var i = 0; i < polygons.length; i++) {\n        if (pointWithinPolygon(point, polygons[i]))\n            { return true; }\n    }\n    return false;\n}\nfunction perp(v1, v2) {\n    return v1[0] * v2[1] - v1[1] * v2[0];\n}\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    var x1 = p1[0] - q1[0];\n    var y1 = p1[1] - q1[1];\n    var x2 = p2[0] - q1[0];\n    var y2 = p2[1] - q1[1];\n    var x3 = q2[0] - q1[0];\n    var y3 = q2[1] - q1[1];\n    var det1 = x1 * y3 - x3 * y1;\n    var det2 = x2 * y3 - x3 * y2;\n    if (det1 > 0 && det2 < 0 || det1 < 0 && det2 > 0)\n        { return true; }\n    return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction lineIntersectLine(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    var vectorP = [\n        b[0] - a[0],\n        b[1] - a[1]\n    ];\n    var vectorQ = [\n        d[0] - c[0],\n        d[1] - c[1]\n    ];\n    if (perp(vectorQ, vectorP) === 0)\n        { return false; }\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b))\n        { return true; }\n    return false;\n}\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (var i = 0, list = polygon; i < list.length; i += 1) {\n        // loop through every edge of the ring\n        var ring = list[i];\n\n        for (var j = 0; j < ring.length - 1; ++j) {\n            if (lineIntersectLine(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (var i = 0; i < line.length; ++i) {\n        if (!pointWithinPolygon(line[i], polygon)) {\n            return false;\n        }\n    }\n    // Second, check if there is line segment intersecting polygon edge\n    for (var i$1 = 0; i$1 < line.length - 1; ++i$1) {\n        if (lineIntersectPolygon(line[i$1], line[i$1 + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction lineStringWithinPolygons(line, polygons) {\n    for (var i = 0; i < polygons.length; i++) {\n        if (lineStringWithinPolygon(line, polygons[i]))\n            { return true; }\n    }\n    return false;\n}\nfunction getTilePolygon(coordinates, bbox, canonical) {\n    var polygon = [];\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = [];\n        for (var j = 0; j < coordinates[i].length; j++) {\n            var coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\nfunction getTilePolygons(coordinates, bbox, canonical) {\n    var polygons = [];\n    for (var i = 0; i < coordinates.length; i++) {\n        var polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        var halfWorldSize = worldSize * 0.5;\n        var shift = p[0] - polyBBox[0] > halfWorldSize ? -worldSize : polyBBox[0] - p[0] > halfWorldSize ? worldSize : 0;\n        if (shift === 0) {\n            shift = p[0] - polyBBox[2] > halfWorldSize ? -worldSize : polyBBox[2] - p[0] > halfWorldSize ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical) {\n    var worldSize = Math.pow(2, canonical.z) * EXTENT;\n    var shifts = [\n        canonical.x * EXTENT,\n        canonical.y * EXTENT\n    ];\n    var tilePoints = [];\n    if (!geometry)\n        { return tilePoints; }\n    for (var i$1 = 0, list$1 = geometry; i$1 < list$1.length; i$1 += 1) {\n        var points = list$1[i$1];\n\n        for (var i = 0, list = points; i < list.length; i += 1) {\n            var point = list[i];\n\n            var p = [\n                point.x + shifts[0],\n                point.y + shifts[1]\n            ];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical) {\n    var worldSize = Math.pow(2, canonical.z) * EXTENT;\n    var shifts = [\n        canonical.x * EXTENT,\n        canonical.y * EXTENT\n    ];\n    var tileLines = [];\n    if (!geometry)\n        { return tileLines; }\n    for (var i$1 = 0, list$1 = geometry; i$1 < list$1.length; i$1 += 1) {\n        var line = list$1[i$1];\n\n        var tileLine = [];\n        for (var i = 0, list = line; i < list.length; i += 1) {\n            var point = list[i];\n\n            var p = [\n                point.x + shifts[0],\n                point.y + shifts[1]\n            ];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (var i$3 = 0, list$3 = tileLines; i$3 < list$3.length; i$3 += 1) {\n            var line$1 = list$3[i$3];\n\n            for (var i$2 = 0, list$2 = line$1; i$2 < list$2.length; i$2 += 1) {\n                var p$1 = list$2[i$2];\n\n                updatePoint(p$1, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\nfunction pointsWithinPolygons(ctx, polygonGeometry) {\n    var pointBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    var polyBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    var canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n    if (polygonGeometry.type === 'Polygon') {\n        var tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        var tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            { return false; }\n        for (var i = 0, list = tilePoints; i < list.length; i += 1) {\n            var point = list[i];\n\n            if (!pointWithinPolygon(point, tilePolygon))\n                { return false; }\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        var tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        var tilePoints$1 = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            { return false; }\n        for (var i$1 = 0, list$1 = tilePoints$1; i$1 < list$1.length; i$1 += 1) {\n            var point$1 = list$1[i$1];\n\n            if (!pointWithinPolygons(point$1, tilePolygons))\n                { return false; }\n        }\n    }\n    return true;\n}\nfunction linesWithinPolygons(ctx, polygonGeometry) {\n    var lineBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    var polyBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    var canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n    if (polygonGeometry.type === 'Polygon') {\n        var tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        var tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            { return false; }\n        for (var i = 0, list = tileLines; i < list.length; i += 1) {\n            var line = list[i];\n\n            if (!lineStringWithinPolygon(line, tilePolygon))\n                { return false; }\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        var tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        var tileLines$1 = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            { return false; }\n        for (var i$1 = 0, list$1 = tileLines$1; i$1 < list$1.length; i$1 += 1) {\n            var line$1 = list$1[i$1];\n\n            if (!lineStringWithinPolygons(line$1, tilePolygons))\n                { return false; }\n        }\n    }\n    return true;\n}\nvar Within = function Within(geojson, geometries) {\n    this.type = BooleanType;\n    this.geojson = geojson;\n    this.geometries = geometries;\n};\nWithin.parse = function parse (args, context) {\n    if (args.length !== 2)\n        { return context.error((\"'within' expression requires exactly one argument, but found \" + (args.length - 1) + \" instead.\")); }\n    if (isValue(args[1])) {\n        var geojson = args[1];\n        if (geojson.type === 'FeatureCollection') {\n            for (var i = 0; i < geojson.features.length; ++i) {\n                var type = geojson.features[i].geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.features[i].geometry);\n                }\n            }\n        } else if (geojson.type === 'Feature') {\n            var type$1 = geojson.geometry.type;\n            if (type$1 === 'Polygon' || type$1 === 'MultiPolygon') {\n                return new Within(geojson, geojson.geometry);\n            }\n        } else if (geojson.type === 'Polygon' || geojson.type === 'MultiPolygon') {\n            return new Within(geojson, geojson);\n        }\n    }\n    return context.error(\"'within' expression requires valid geojson object that contains polygon geometry type.\");\n};\nWithin.prototype.evaluate = function evaluate (ctx) {\n    if (ctx.geometry() != null && ctx.canonicalID() != null) {\n        if (ctx.geometryType() === 'Point') {\n            return pointsWithinPolygons(ctx, this.geometries);\n        } else if (ctx.geometryType() === 'LineString') {\n            return linesWithinPolygons(ctx, this.geometries);\n        }\n    }\n    return false;\n};\nWithin.prototype.eachChild = function eachChild () {\n};\nWithin.prototype.outputDefined = function outputDefined () {\n    return true;\n};\nWithin.prototype.serialize = function serialize () {\n    return [\n        'within',\n        this.geojson\n    ];\n};\nvar Within$1 = Within;\n\n//      \nfunction isFeatureConstant(e) {\n    if (e instanceof CompoundExpression$1) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'properties' || e.name === 'geometry-type' || e.name === 'id') {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n    if (e instanceof Within$1) {\n        return false;\n    }\n    var result = true;\n    e.eachChild(function (arg) {\n        if (result && !isFeatureConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isStateConstant(e) {\n    if (e instanceof CompoundExpression$1) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    var result = true;\n    e.eachChild(function (arg) {\n        if (result && !isStateConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isGlobalPropertyConstant(e, properties) {\n    if (e instanceof CompoundExpression$1 && properties.indexOf(e.name) >= 0) {\n        return false;\n    }\n    var result = true;\n    e.eachChild(function (arg) {\n        if (result && !isGlobalPropertyConstant(arg, properties)) {\n            result = false;\n        }\n    });\n    return result;\n}\n\n//      \nvar Var = function Var(name, boundExpression) {\n    this.type = boundExpression.type;\n    this.name = name;\n    this.boundExpression = boundExpression;\n};\nVar.parse = function parse (args, context) {\n    if (args.length !== 2 || typeof args[1] !== 'string')\n        { return context.error(\"'var' expression requires exactly one string literal argument.\"); }\n    var name = args[1];\n    if (!context.scope.has(name)) {\n        return context.error((\"Unknown variable \\\"\" + name + \"\\\". Make sure \\\"\" + name + \"\\\" has been bound in an enclosing \\\"let\\\" expression before using it.\"), 1);\n    }\n    return new Var(name, context.scope.get(name));\n};\nVar.prototype.evaluate = function evaluate (ctx) {\n    return this.boundExpression.evaluate(ctx);\n};\nVar.prototype.eachChild = function eachChild () {\n};\nVar.prototype.outputDefined = function outputDefined () {\n    return false;\n};\nVar.prototype.serialize = function serialize () {\n    return [\n        'var',\n        this.name\n    ];\n};\nvar Var$1 = Var;\n\n//      \n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nvar ParsingContext = function ParsingContext(registry, path, expectedType, scope, errors) {\n    if ( path === void 0 ) path = [];\n    if ( scope === void 0 ) scope = new Scope$1();\n    if ( errors === void 0 ) errors = [];\n\n    this.registry = registry;\n    this.path = path;\n    this.key = path.map(function (part) { return (\"[\" + part + \"]\"); }).join('');\n    this.scope = scope;\n    this.errors = errors;\n    this.expectedType = expectedType;\n};\n/**\n * @param expr the JSON expression to parse\n * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n * @param options\n * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n * @private\n */\nParsingContext.prototype.parse = function parse (expr, index, expectedType, bindings, options) {\n        if ( options === void 0 ) options = {};\n\n    if (index) {\n        return this.concat(index, expectedType, bindings)._parse(expr, options);\n    }\n    return this._parse(expr, options);\n};\nParsingContext.prototype._parse = function _parse (expr, options) {\n    if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n        expr = [\n            'literal',\n            expr\n        ];\n    }\n    function annotate(parsed, type, typeAnnotation) {\n        if (typeAnnotation === 'assert') {\n            return new Assertion$1(type, [parsed]);\n        } else if (typeAnnotation === 'coerce') {\n            return new Coercion$1(type, [parsed]);\n        } else {\n            return parsed;\n        }\n    }\n    if (Array.isArray(expr)) {\n        if (expr.length === 0) {\n            return this.error(\"Expected an array with at least one element. If you wanted a literal array, use [\\\"literal\\\", []].\");\n        }\n        var op = expr[0];\n        if (typeof op !== 'string') {\n            this.error((\"Expression name must be a string, but found \" + (typeof op) + \" instead. If you wanted a literal array, use [\\\"literal\\\", [...]].\"), 0);\n            return null;\n        }\n        var Expr = this.registry[op];\n        if (Expr) {\n            var parsed = Expr.parse(expr, this);\n            if (!parsed)\n                { return null; }\n            if (this.expectedType) {\n                var expected = this.expectedType;\n                var actual = parsed.type;\n                // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                // Otherwise, we do static type-checking.\n                //\n                // These behaviors are overridable for:\n                //   * The \"coalesce\" operator, which needs to omit type annotations.\n                //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                //\n                if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                    parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                    parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                } else if (this.checkSubtype(expected, actual)) {\n                    return null;\n                }\n            }\n            // If an expression's arguments are all literals, we can evaluate\n            // it immediately and replace it with a literal value in the\n            // parsed/compiled result. Expressions that expect an image should\n            // not be resolved here so we can later get the available images.\n            if (!(parsed instanceof Literal$1) && parsed.type.kind !== 'resolvedImage' && isConstant(parsed)) {\n                var ec = new EvaluationContext$1();\n                try {\n                    parsed = new Literal$1(parsed.type, parsed.evaluate(ec));\n                } catch (e) {\n                    this.error(e.message);\n                    return null;\n                }\n            }\n            return parsed;\n        }\n        return this.error((\"Unknown expression \\\"\" + op + \"\\\". If you wanted a literal array, use [\\\"literal\\\", [...]].\"), 0);\n    } else if (typeof expr === 'undefined') {\n        return this.error(\"'undefined' value invalid. Use null instead.\");\n    } else if (typeof expr === 'object') {\n        return this.error(\"Bare objects invalid. Use [\\\"literal\\\", {...}] instead.\");\n    } else {\n        return this.error((\"Expected an array, but found \" + (typeof expr) + \" instead.\"));\n    }\n};\n/**\n * Returns a copy of this context suitable for parsing the subexpression at\n * index `index`, optionally appending to 'let' binding map.\n *\n * Note that `errors` property, intended for collecting errors while\n * parsing, is copied by reference rather than cloned.\n * @private\n */\nParsingContext.prototype.concat = function concat (index, expectedType, bindings) {\n    var path = typeof index === 'number' ? this.path.concat(index) : this.path;\n    var scope = bindings ? this.scope.concat(bindings) : this.scope;\n    return new ParsingContext(this.registry, path, expectedType || null, scope, this.errors);\n};\n/**\n * Push a parsing (or type checking) error into the `this.errors`\n * @param error The message\n * @param keys Optionally specify the source of the error at a child\n * of the current expression at `this.key`.\n * @private\n */\nParsingContext.prototype.error = function error (error$1) {\n        var keys = [], len = arguments.length - 1;\n        while ( len-- > 0 ) keys[ len ] = arguments[ len + 1 ];\n\n    var key = \"\" + (this.key) + (keys.map(function (k) { return (\"[\" + k + \"]\"); }).join(''));\n    this.errors.push(new ParsingError$1(key, error$1));\n};\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message and also pushes it to `this.errors`.\n */\nParsingContext.prototype.checkSubtype = function checkSubtype$1 (expected, t) {\n    var error = checkSubtype(expected, t);\n    if (error)\n        { this.error(error); }\n    return error;\n};\nvar ParsingContext$1 = ParsingContext;\nfunction isConstant(expression) {\n    if (expression instanceof Var$1) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression$1 && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression$1) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    } else if (expression instanceof Within$1) {\n        return false;\n    }\n    var isTypeAnnotation = expression instanceof Coercion$1 || expression instanceof Assertion$1;\n    var childrenConstant = true;\n    expression.eachChild(function (child) {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal$1;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n    return isFeatureConstant(expression) && isGlobalPropertyConstant(expression, [\n        'zoom',\n        'heatmap-density',\n        'line-progress',\n        'sky-radial-progress',\n        'accumulated',\n        'is-supported-script',\n        'pitch',\n        'distance-from-center'\n    ]);\n}\n\n//      \n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nfunction findStopLessThanOrEqualTo(stops, input) {\n    var lastIndex = stops.length - 1;\n    var lowerIndex = 0;\n    var upperIndex = lastIndex;\n    var currentIndex = 0;\n    var currentValue, nextValue;\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) {\n                // Search complete\n                return currentIndex;\n            }\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError$1('Input is not a number.');\n        }\n    }\n    return 0;\n}\n\n//      \nvar Step = function Step(type, input, stops) {\n    this.type = type;\n    this.input = input;\n    this.labels = [];\n    this.outputs = [];\n    for (var i = 0, list = stops; i < list.length; i += 1) {\n        var ref = list[i];\n        var label = ref[0];\n        var expression = ref[1];\n\n        this.labels.push(label);\n        this.outputs.push(expression);\n    }\n};\nStep.parse = function parse (args, context) {\n    if (args.length - 1 < 4) {\n        return context.error((\"Expected at least 4 arguments, but found only \" + (args.length - 1) + \".\"));\n    }\n    if ((args.length - 1) % 2 !== 0) {\n        return context.error(\"Expected an even number of arguments.\");\n    }\n    var input = context.parse(args[1], 1, NumberType);\n    if (!input)\n        { return null; }\n    var stops = [];\n    var outputType = null;\n    if (context.expectedType && context.expectedType.kind !== 'value') {\n        outputType = context.expectedType;\n    }\n    for (var i = 1; i < args.length; i += 2) {\n        var label = i === 1 ? -Infinity : args[i];\n        var value = args[i + 1];\n        var labelKey = i;\n        var valueKey = i + 1;\n        if (typeof label !== 'number') {\n            return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n        }\n        if (stops.length && stops[stops.length - 1][0] >= label) {\n            return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n        }\n        var parsed = context.parse(value, valueKey, outputType);\n        if (!parsed)\n            { return null; }\n        outputType = outputType || parsed.type;\n        stops.push([\n            label,\n            parsed\n        ]);\n    }\n    return new Step(outputType, input, stops);\n};\nStep.prototype.evaluate = function evaluate (ctx) {\n    var labels = this.labels;\n    var outputs = this.outputs;\n    if (labels.length === 1) {\n        return outputs[0].evaluate(ctx);\n    }\n    var value = this.input.evaluate(ctx);\n    if (value <= labels[0]) {\n        return outputs[0].evaluate(ctx);\n    }\n    var stopCount = labels.length;\n    if (value >= labels[stopCount - 1]) {\n        return outputs[stopCount - 1].evaluate(ctx);\n    }\n    var index = findStopLessThanOrEqualTo(labels, value);\n    return outputs[index].evaluate(ctx);\n};\nStep.prototype.eachChild = function eachChild (fn) {\n    fn(this.input);\n    for (var i = 0, list = this.outputs; i < list.length; i += 1) {\n        var expression = list[i];\n\n            fn(expression);\n    }\n};\nStep.prototype.outputDefined = function outputDefined () {\n    return this.outputs.every(function (out) { return out.outputDefined(); });\n};\nStep.prototype.serialize = function serialize () {\n    var serialized = [\n        'step',\n        this.input.serialize()\n    ];\n    for (var i = 0; i < this.labels.length; i++) {\n        if (i > 0) {\n            serialized.push(this.labels[i]);\n        }\n        serialized.push(this.outputs[i].serialize());\n    }\n    return serialized;\n};\nvar Step$1 = Step;\n\n/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nvar unitbezier = UnitBezier;\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3 * p1x;\n    this.bx = 3 * (p2x - p1x) - this.cx;\n    this.ax = 1 - this.cx - this.bx;\n    this.cy = 3 * p1y;\n    this.by = 3 * (p2y - p1y) - this.cy;\n    this.ay = 1 - this.cy - this.by;\n    this.p1x = p1x;\n    this.p1y = p2y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\nUnitBezier.prototype.sampleCurveX = function (t) {\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n    return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\nUnitBezier.prototype.sampleCurveY = function (t) {\n    return ((this.ay * t + this.by) * t + this.cy) * t;\n};\nUnitBezier.prototype.sampleCurveDerivativeX = function (t) {\n    return (3 * this.ax * t + 2 * this.bx) * t + this.cx;\n};\nUnitBezier.prototype.solveCurveX = function (x, epsilon) {\n    if (typeof epsilon === 'undefined')\n        { epsilon = 0.000001; }\n    var t0, t1, t2, x2, i;\n    // First try a few iterations of Newton's method -- normally very fast.\n    for (t2 = x, i = 0; i < 8; i++) {\n        x2 = this.sampleCurveX(t2) - x;\n        if (Math.abs(x2) < epsilon)\n            { return t2; }\n        var d2 = this.sampleCurveDerivativeX(t2);\n        if (Math.abs(d2) < 0.000001)\n            { break; }\n        t2 = t2 - x2 / d2;\n    }\n    // Fall back to the bisection method for reliability.\n    t0 = 0;\n    t1 = 1;\n    t2 = x;\n    if (t2 < t0)\n        { return t0; }\n    if (t2 > t1)\n        { return t1; }\n    while (t0 < t1) {\n        x2 = this.sampleCurveX(t2);\n        if (Math.abs(x2 - x) < epsilon)\n            { return t2; }\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n        t2 = (t1 - t0) * 0.5 + t0;\n    }\n    // Failure.\n    return t2;\n};\nUnitBezier.prototype.solve = function (x, epsilon) {\n    return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};\n\nvar UnitBezier$1 = /*@__PURE__*/getDefaultExportFromCjs(unitbezier);\n\n//      \nfunction number(a, b, t) {\n    return a * (1 - t) + b * t;\n}\nfunction color(from, to, t) {\n    return new Color$1(number(from.r, to.r, t), number(from.g, to.g, t), number(from.b, to.b, t), number(from.a, to.a, t));\n}\nfunction array(from, to, t) {\n    return from.map(function (d, i) {\n        return number(d, to[i], t);\n    });\n}\n\nvar interpolate = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tnumber: number,\n\tcolor: color,\n\tarray: array\n});\n\n//      \n// Constants\nvar Xn = 0.95047,\n    // D65 standard referent\n    Yn = 1, Zn = 1.08883, t0 = 4 / 29, t1 = 6 / 29, t2 = 3 * t1 * t1, t3 = t1 * t1 * t1, deg2rad$1 = Math.PI / 180, rad2deg = 180 / Math.PI;\n// Utilities\nfunction xyz2lab(t) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\nfunction lab2xyz(t) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\nfunction xyz2rgb(x) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\nfunction rgb2xyz(x) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n// LAB\nfunction rgbToLab(rgbColor) {\n    var b = rgb2xyz(rgbColor.r), a = rgb2xyz(rgbColor.g), l = rgb2xyz(rgbColor.b), x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn), y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.072175 * l) / Yn), z = xyz2lab((0.0193339 * b + 0.119192 * a + 0.9503041 * l) / Zn);\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\nfunction labToRgb(labColor) {\n    var y = (labColor.l + 16) / 116, x = isNaN(labColor.a) ? y : y + labColor.a / 500, z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color$1(xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n    xyz2rgb(-0.969266 * x + 1.8760108 * y + 0.041556 * z), xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z), labColor.alpha);\n}\nfunction interpolateLab(from, to, t) {\n    return {\n        l: number(from.l, to.l, t),\n        a: number(from.a, to.a, t),\n        b: number(from.b, to.b, t),\n        alpha: number(from.alpha, to.alpha, t)\n    };\n}\n// HCL\nfunction rgbToHcl(rgbColor) {\n    var ref = rgbToLab(rgbColor);\n    var l = ref.l;\n    var a = ref.a;\n    var b = ref.b;\n    var h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l: l,\n        alpha: rgbColor.a\n    };\n}\nfunction hclToRgb(hclColor) {\n    var h = hclColor.h * deg2rad$1, c = hclColor.c, l = hclColor.l;\n    return labToRgb({\n        l: l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\nfunction interpolateHue(a, b, t) {\n    var d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\nfunction interpolateHcl(from, to, t) {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: number(from.c, to.c, t),\n        l: number(from.l, to.l, t),\n        alpha: number(from.alpha, to.alpha, t)\n    };\n}\nvar lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\nvar hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n\n//      \nvar Interpolate = function Interpolate(type, operator, interpolation, input, stops) {\n    this.type = type;\n    this.operator = operator;\n    this.interpolation = interpolation;\n    this.input = input;\n    this.labels = [];\n    this.outputs = [];\n    for (var i = 0, list = stops; i < list.length; i += 1) {\n        var ref = list[i];\n        var label = ref[0];\n        var expression = ref[1];\n\n        this.labels.push(label);\n        this.outputs.push(expression);\n    }\n};\nInterpolate.interpolationFactor = function interpolationFactor (interpolation, input, lower, upper) {\n    var t = 0;\n    if (interpolation.name === 'exponential') {\n        t = exponentialInterpolation(input, interpolation.base, lower, upper);\n    } else if (interpolation.name === 'linear') {\n        t = exponentialInterpolation(input, 1, lower, upper);\n    } else if (interpolation.name === 'cubic-bezier') {\n        var c = interpolation.controlPoints;\n        var ub = new UnitBezier$1(c[0], c[1], c[2], c[3]);\n        t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n    }\n    return t;\n};\nInterpolate.parse = function parse (args, context) {\n    var operator = args[0];\n        var interpolation = args[1];\n        var input = args[2];\n        var rest = args.slice(3);\n    if (!Array.isArray(interpolation) || interpolation.length === 0) {\n        return context.error(\"Expected an interpolation type expression.\", 1);\n    }\n    if (interpolation[0] === 'linear') {\n        interpolation = { name: 'linear' };\n    } else if (interpolation[0] === 'exponential') {\n        var base = interpolation[1];\n        if (typeof base !== 'number')\n            { return context.error(\"Exponential interpolation requires a numeric base.\", 1, 1); }\n        interpolation = {\n            name: 'exponential',\n            base: base\n        };\n    } else if (interpolation[0] === 'cubic-bezier') {\n        var controlPoints = interpolation.slice(1);\n        if (controlPoints.length !== 4 || controlPoints.some(function (t) { return typeof t !== 'number' || t < 0 || t > 1; })) {\n            return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n        }\n        interpolation = {\n            name: 'cubic-bezier',\n            controlPoints: controlPoints\n        };\n    } else {\n        return context.error((\"Unknown interpolation type \" + (String(interpolation[0]))), 1, 0);\n    }\n    if (args.length - 1 < 4) {\n        return context.error((\"Expected at least 4 arguments, but found only \" + (args.length - 1) + \".\"));\n    }\n    if ((args.length - 1) % 2 !== 0) {\n        return context.error(\"Expected an even number of arguments.\");\n    }\n    input = context.parse(input, 2, NumberType);\n    if (!input)\n        { return null; }\n    var stops = [];\n    var outputType = null;\n    if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n        outputType = ColorType;\n    } else if (context.expectedType && context.expectedType.kind !== 'value') {\n        outputType = context.expectedType;\n    }\n    for (var i = 0; i < rest.length; i += 2) {\n        var label = rest[i];\n        var value = rest[i + 1];\n        var labelKey = i + 3;\n        var valueKey = i + 4;\n        if (typeof label !== 'number') {\n            return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n        }\n        if (stops.length && stops[stops.length - 1][0] >= label) {\n            return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n        }\n        var parsed = context.parse(value, valueKey, outputType);\n        if (!parsed)\n            { return null; }\n        outputType = outputType || parsed.type;\n        stops.push([\n            label,\n            parsed\n        ]);\n    }\n    if (outputType.kind !== 'number' && outputType.kind !== 'color' && !(outputType.kind === 'array' && outputType.itemType.kind === 'number' && typeof outputType.N === 'number')) {\n        return context.error((\"Type \" + (toString$1(outputType)) + \" is not interpolatable.\"));\n    }\n    return new Interpolate(outputType, operator, interpolation, input, stops);\n};\nInterpolate.prototype.evaluate = function evaluate (ctx) {\n    var labels = this.labels;\n    var outputs = this.outputs;\n    if (labels.length === 1) {\n        return outputs[0].evaluate(ctx);\n    }\n    var value = this.input.evaluate(ctx);\n    if (value <= labels[0]) {\n        return outputs[0].evaluate(ctx);\n    }\n    var stopCount = labels.length;\n    if (value >= labels[stopCount - 1]) {\n        return outputs[stopCount - 1].evaluate(ctx);\n    }\n    var index = findStopLessThanOrEqualTo(labels, value);\n    var lower = labels[index];\n    var upper = labels[index + 1];\n    var t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n    var outputLower = outputs[index].evaluate(ctx);\n    var outputUpper = outputs[index + 1].evaluate(ctx);\n    if (this.operator === 'interpolate') {\n        return interpolate[this.type.kind.toLowerCase()](outputLower, outputUpper, t);// eslint-disable-line import/namespace\n    } else if (this.operator === 'interpolate-hcl') {\n        return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n    } else {\n        return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n    }\n};\nInterpolate.prototype.eachChild = function eachChild (fn) {\n    fn(this.input);\n    for (var i = 0, list = this.outputs; i < list.length; i += 1) {\n        var expression = list[i];\n\n            fn(expression);\n    }\n};\nInterpolate.prototype.outputDefined = function outputDefined () {\n    return this.outputs.every(function (out) { return out.outputDefined(); });\n};\nInterpolate.prototype.serialize = function serialize () {\n    var interpolation;\n    if (this.interpolation.name === 'linear') {\n        interpolation = ['linear'];\n    } else if (this.interpolation.name === 'exponential') {\n        if (this.interpolation.base === 1) {\n            interpolation = ['linear'];\n        } else {\n            interpolation = [\n                'exponential',\n                this.interpolation.base\n            ];\n        }\n    } else {\n        interpolation = ['cubic-bezier'].concat(this.interpolation.controlPoints);\n    }\n    var serialized = [\n        this.operator,\n        interpolation,\n        this.input.serialize()\n    ];\n    for (var i = 0; i < this.labels.length; i++) {\n        serialized.push(this.labels[i], this.outputs[i].serialize());\n    }\n    return serialized;\n};\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    var difference = upperValue - lowerValue;\n    var progress = input - lowerValue;\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\nvar Interpolate$1 = Interpolate;\n\nvar Coalesce = function Coalesce(type, args) {\n    this.type = type;\n    this.args = args;\n};\nCoalesce.parse = function parse (args, context) {\n    if (args.length < 2) {\n        return context.error('Expectected at least one argument.');\n    }\n    var outputType = null;\n    var expectedType = context.expectedType;\n    if (expectedType && expectedType.kind !== 'value') {\n        outputType = expectedType;\n    }\n    var parsedArgs = [];\n    for (var i = 0, list = args.slice(1); i < list.length; i += 1) {\n        var arg = list[i];\n\n            var parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, { typeAnnotation: 'omit' });\n        if (!parsed)\n            { return null; }\n        outputType = outputType || parsed.type;\n        parsedArgs.push(parsed);\n    }\n    // Above, we parse arguments without inferred type annotation so that\n    // they don't produce a runtime error for `null` input, which would\n    // preempt the desired null-coalescing behavior.\n    // Thus, if any of our arguments would have needed an annotation, we\n    // need to wrap the enclosing coalesce expression with it instead.\n    var needsAnnotation = expectedType && parsedArgs.some(function (arg) { return checkSubtype(expectedType, arg.type); });\n    return needsAnnotation ? new Coalesce(ValueType, parsedArgs) : new Coalesce(outputType, parsedArgs);\n};\nCoalesce.prototype.evaluate = function evaluate (ctx) {\n    var result = null;\n    var argCount = 0;\n    var firstImage;\n    for (var i = 0, list = this.args; i < list.length; i += 1) {\n        var arg = list[i];\n\n            argCount++;\n        result = arg.evaluate(ctx);\n        // we need to keep track of the first requested image in a coalesce statement\n        // if coalesce can't find a valid image, we return the first image so styleimagemissing can fire\n        if (result && result instanceof ResolvedImage$1 && !result.available) {\n            // set to first image\n            if (!firstImage) {\n                firstImage = result;\n            }\n            result = null;\n            // if we reach the end, return the first image\n            if (argCount === this.args.length) {\n                return firstImage;\n            }\n        }\n        if (result !== null)\n            { break; }\n    }\n    return result;\n};\nCoalesce.prototype.eachChild = function eachChild (fn) {\n    this.args.forEach(fn);\n};\nCoalesce.prototype.outputDefined = function outputDefined () {\n    return this.args.every(function (arg) { return arg.outputDefined(); });\n};\nCoalesce.prototype.serialize = function serialize () {\n    var serialized = ['coalesce'];\n    this.eachChild(function (child) {\n        serialized.push(child.serialize());\n    });\n    return serialized;\n};\nvar Coalesce$1 = Coalesce;\n\n//      \nvar Let = function Let(bindings, result) {\n    this.type = result.type;\n    this.bindings = [].concat(bindings);\n    this.result = result;\n};\nLet.prototype.evaluate = function evaluate (ctx) {\n    return this.result.evaluate(ctx);\n};\nLet.prototype.eachChild = function eachChild (fn) {\n    for (var i = 0, list = this.bindings; i < list.length; i += 1) {\n        var binding = list[i];\n\n            fn(binding[1]);\n    }\n    fn(this.result);\n};\nLet.parse = function parse (args, context) {\n    if (args.length < 4)\n        { return context.error((\"Expected at least 3 arguments, but found \" + (args.length - 1) + \" instead.\")); }\n    var bindings = [];\n    for (var i = 1; i < args.length - 1; i += 2) {\n        var name = args[i];\n        if (typeof name !== 'string') {\n            return context.error((\"Expected string, but found \" + (typeof name) + \" instead.\"), i);\n        }\n        if (/[^a-zA-Z0-9_]/.test(name)) {\n            return context.error(\"Variable names must contain only alphanumeric characters or '_'.\", i);\n        }\n        var value = context.parse(args[i + 1], i + 1);\n        if (!value)\n            { return null; }\n        bindings.push([\n            name,\n            value\n        ]);\n    }\n    var result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n    if (!result)\n        { return null; }\n    return new Let(bindings, result);\n};\nLet.prototype.outputDefined = function outputDefined () {\n    return this.result.outputDefined();\n};\nLet.prototype.serialize = function serialize () {\n    var serialized = ['let'];\n    for (var i = 0, list = this.bindings; i < list.length; i += 1) {\n        var ref = list[i];\n            var name = ref[0];\n            var expr = ref[1];\n\n            serialized.push(name, expr.serialize());\n    }\n    serialized.push(this.result.serialize());\n    return serialized;\n};\nvar Let$1 = Let;\n\n//      \nvar At = function At(type, index, input) {\n    this.type = type;\n    this.index = index;\n    this.input = input;\n};\nAt.parse = function parse (args, context) {\n    if (args.length !== 3)\n        { return context.error((\"Expected 2 arguments, but found \" + (args.length - 1) + \" instead.\")); }\n    var index = context.parse(args[1], 1, NumberType);\n    var input = context.parse(args[2], 2, array$1(context.expectedType || ValueType));\n    if (!index || !input)\n        { return null; }\n    var t = input.type;\n    return new At(t.itemType, index, input);\n};\nAt.prototype.evaluate = function evaluate (ctx) {\n    var index = this.index.evaluate(ctx);\n    var array = this.input.evaluate(ctx);\n    if (index < 0) {\n        throw new RuntimeError$1((\"Array index out of bounds: \" + index + \" < 0.\"));\n    }\n    if (index >= array.length) {\n        throw new RuntimeError$1((\"Array index out of bounds: \" + index + \" > \" + (array.length - 1) + \".\"));\n    }\n    if (index !== Math.floor(index)) {\n        throw new RuntimeError$1((\"Array index must be an integer, but found \" + index + \" instead.\"));\n    }\n    return array[index];\n};\nAt.prototype.eachChild = function eachChild (fn) {\n    fn(this.index);\n    fn(this.input);\n};\nAt.prototype.outputDefined = function outputDefined () {\n    return false;\n};\nAt.prototype.serialize = function serialize () {\n    return [\n        'at',\n        this.index.serialize(),\n        this.input.serialize()\n    ];\n};\nvar At$1 = At;\n\n//      \nvar In = function In(needle, haystack) {\n    this.type = BooleanType;\n    this.needle = needle;\n    this.haystack = haystack;\n};\nIn.parse = function parse (args, context) {\n    if (args.length !== 3) {\n        return context.error((\"Expected 2 arguments, but found \" + (args.length - 1) + \" instead.\"));\n    }\n    var needle = context.parse(args[1], 1, ValueType);\n    var haystack = context.parse(args[2], 2, ValueType);\n    if (!needle || !haystack)\n        { return null; }\n    if (!isValidType(needle.type, [\n            BooleanType,\n            StringType,\n            NumberType,\n            NullType,\n            ValueType\n        ])) {\n        return context.error((\"Expected first argument to be of type boolean, string, number or null, but found \" + (toString$1(needle.type)) + \" instead\"));\n    }\n    return new In(needle, haystack);\n};\nIn.prototype.evaluate = function evaluate (ctx) {\n    var needle = this.needle.evaluate(ctx);\n    var haystack = this.haystack.evaluate(ctx);\n    if (haystack == null)\n        { return false; }\n    if (!isValidNativeType(needle, [\n            'boolean',\n            'string',\n            'number',\n            'null'\n        ])) {\n        throw new RuntimeError$1((\"Expected first argument to be of type boolean, string, number or null, but found \" + (toString$1(typeOf(needle))) + \" instead.\"));\n    }\n    if (!isValidNativeType(haystack, [\n            'string',\n            'array'\n        ])) {\n        throw new RuntimeError$1((\"Expected second argument to be of type array or string, but found \" + (toString$1(typeOf(haystack))) + \" instead.\"));\n    }\n    return haystack.indexOf(needle) >= 0;\n};\nIn.prototype.eachChild = function eachChild (fn) {\n    fn(this.needle);\n    fn(this.haystack);\n};\nIn.prototype.outputDefined = function outputDefined () {\n    return true;\n};\nIn.prototype.serialize = function serialize () {\n    return [\n        'in',\n        this.needle.serialize(),\n        this.haystack.serialize()\n    ];\n};\nvar In$1 = In;\n\n//      \nvar IndexOf = function IndexOf(needle, haystack, fromIndex) {\n    this.type = NumberType;\n    this.needle = needle;\n    this.haystack = haystack;\n    this.fromIndex = fromIndex;\n};\nIndexOf.parse = function parse (args, context) {\n    if (args.length <= 2 || args.length >= 5) {\n        return context.error((\"Expected 3 or 4 arguments, but found \" + (args.length - 1) + \" instead.\"));\n    }\n    var needle = context.parse(args[1], 1, ValueType);\n    var haystack = context.parse(args[2], 2, ValueType);\n    if (!needle || !haystack)\n        { return null; }\n    if (!isValidType(needle.type, [\n            BooleanType,\n            StringType,\n            NumberType,\n            NullType,\n            ValueType\n        ])) {\n        return context.error((\"Expected first argument to be of type boolean, string, number or null, but found \" + (toString$1(needle.type)) + \" instead\"));\n    }\n    if (args.length === 4) {\n        var fromIndex = context.parse(args[3], 3, NumberType);\n        if (!fromIndex)\n            { return null; }\n        return new IndexOf(needle, haystack, fromIndex);\n    } else {\n        return new IndexOf(needle, haystack);\n    }\n};\nIndexOf.prototype.evaluate = function evaluate (ctx) {\n    var needle = this.needle.evaluate(ctx);\n    var haystack = this.haystack.evaluate(ctx);\n    if (!isValidNativeType(needle, [\n            'boolean',\n            'string',\n            'number',\n            'null'\n        ])) {\n        throw new RuntimeError$1((\"Expected first argument to be of type boolean, string, number or null, but found \" + (toString$1(typeOf(needle))) + \" instead.\"));\n    }\n    if (!isValidNativeType(haystack, [\n            'string',\n            'array'\n        ])) {\n        throw new RuntimeError$1((\"Expected second argument to be of type array or string, but found \" + (toString$1(typeOf(haystack))) + \" instead.\"));\n    }\n    if (this.fromIndex) {\n        var fromIndex = this.fromIndex.evaluate(ctx);\n        return haystack.indexOf(needle, fromIndex);\n    }\n    return haystack.indexOf(needle);\n};\nIndexOf.prototype.eachChild = function eachChild (fn) {\n    fn(this.needle);\n    fn(this.haystack);\n    if (this.fromIndex) {\n        fn(this.fromIndex);\n    }\n};\nIndexOf.prototype.outputDefined = function outputDefined () {\n    return false;\n};\nIndexOf.prototype.serialize = function serialize () {\n    if (this.fromIndex != null && this.fromIndex !== undefined) {\n        var fromIndex = this.fromIndex.serialize();\n        return [\n            'index-of',\n            this.needle.serialize(),\n            this.haystack.serialize(),\n            fromIndex\n        ];\n    }\n    return [\n        'index-of',\n        this.needle.serialize(),\n        this.haystack.serialize()\n    ];\n};\nvar IndexOf$1 = IndexOf;\n\n// Map input label values to output expression index\nvar Match = function Match(inputType, outputType, input, cases, outputs, otherwise) {\n    this.inputType = inputType;\n    this.type = outputType;\n    this.input = input;\n    this.cases = cases;\n    this.outputs = outputs;\n    this.otherwise = otherwise;\n};\nMatch.parse = function parse (args, context) {\n    if (args.length < 5)\n        { return context.error((\"Expected at least 4 arguments, but found only \" + (args.length - 1) + \".\")); }\n    if (args.length % 2 !== 1)\n        { return context.error(\"Expected an even number of arguments.\"); }\n    var inputType;\n    var outputType;\n    if (context.expectedType && context.expectedType.kind !== 'value') {\n        outputType = context.expectedType;\n    }\n    var cases = {};\n    var outputs = [];\n    for (var i = 2; i < args.length - 1; i += 2) {\n        var labels = args[i];\n        var value = args[i + 1];\n        if (!Array.isArray(labels)) {\n            labels = [labels];\n        }\n        var labelContext = context.concat(i);\n        if (labels.length === 0) {\n            return labelContext.error('Expected at least one branch label.');\n        }\n        for (var i$1 = 0, list = labels; i$1 < list.length; i$1 += 1) {\n            var label = list[i$1];\n\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                return labelContext.error(\"Branch labels must be numbers or strings.\");\n            } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                return labelContext.error((\"Branch labels must be integers no larger than \" + (Number.MAX_SAFE_INTEGER) + \".\"));\n            } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                return labelContext.error(\"Numeric branch labels must be integer values.\");\n            } else if (!inputType) {\n                inputType = typeOf(label);\n            } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                return null;\n            }\n            if (typeof cases[String(label)] !== 'undefined') {\n                return labelContext.error('Branch labels must be unique.');\n            }\n            cases[String(label)] = outputs.length;\n        }\n        var result = context.parse(value, i, outputType);\n        if (!result)\n            { return null; }\n        outputType = outputType || result.type;\n        outputs.push(result);\n    }\n    var input = context.parse(args[1], 1, ValueType);\n    if (!input)\n        { return null; }\n    var otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n    if (!otherwise)\n        { return null; }\n    if (input.type.kind !== 'value' && context.concat(1).checkSubtype(inputType, input.type)) {\n        return null;\n    }\n    return new Match(inputType, outputType, input, cases, outputs, otherwise);\n};\nMatch.prototype.evaluate = function evaluate (ctx) {\n    var input = this.input.evaluate(ctx);\n    var output = typeOf(input) === this.inputType && this.outputs[this.cases[input]] || this.otherwise;\n    return output.evaluate(ctx);\n};\nMatch.prototype.eachChild = function eachChild (fn) {\n    fn(this.input);\n    this.outputs.forEach(fn);\n    fn(this.otherwise);\n};\nMatch.prototype.outputDefined = function outputDefined () {\n    return this.outputs.every(function (out) { return out.outputDefined(); }) && this.otherwise.outputDefined();\n};\nMatch.prototype.serialize = function serialize () {\n        var this$1$1 = this;\n\n    var serialized = [\n        'match',\n        this.input.serialize()\n    ];\n    // Sort so serialization has an arbitrary defined order, even though\n    // branch order doesn't affect evaluation\n    var sortedLabels = Object.keys(this.cases).sort();\n    // Group branches by unique match expression to support condensed\n    // serializations of the form [case1, case2, ...] -> matchExpression\n    var groupedByOutput = [];\n    var outputLookup = {};\n    // lookup index into groupedByOutput for a given output expression\n    for (var i = 0, list = sortedLabels; i < list.length; i += 1) {\n        var label = list[i];\n\n            var outputIndex = outputLookup[this.cases[label]];\n        if (outputIndex === undefined) {\n            // First time seeing this output, add it to the end of the grouped list\n            outputLookup[this.cases[label]] = groupedByOutput.length;\n            groupedByOutput.push([\n                this.cases[label],\n                [label]\n            ]);\n        } else {\n            // We've seen this expression before, add the label to that output's group\n            groupedByOutput[outputIndex][1].push(label);\n        }\n    }\n    var coerceLabel = function (label) { return this$1$1.inputType.kind === 'number' ? Number(label) : label; };\n    for (var i$1 = 0, list$1 = groupedByOutput; i$1 < list$1.length; i$1 += 1) {\n        var ref = list$1[i$1];\n            var outputIndex = ref[0];\n            var labels = ref[1];\n\n            if (labels.length === 1) {\n            // Only a single label matches this output expression\n            serialized.push(coerceLabel(labels[0]));\n        } else {\n            // Array of literal labels pointing to this output expression\n            serialized.push(labels.map(coerceLabel));\n        }\n        serialized.push(this.outputs[outputIndex$1].serialize());\n    }\n    serialized.push(this.otherwise.serialize());\n    return serialized;\n};\nvar Match$1 = Match;\n\nvar Case = function Case(type, branches, otherwise) {\n    this.type = type;\n    this.branches = branches;\n    this.otherwise = otherwise;\n};\nCase.parse = function parse (args, context) {\n    if (args.length < 4)\n        { return context.error((\"Expected at least 3 arguments, but found only \" + (args.length - 1) + \".\")); }\n    if (args.length % 2 !== 0)\n        { return context.error(\"Expected an odd number of arguments.\"); }\n    var outputType;\n    if (context.expectedType && context.expectedType.kind !== 'value') {\n        outputType = context.expectedType;\n    }\n    var branches = [];\n    for (var i = 1; i < args.length - 1; i += 2) {\n        var test = context.parse(args[i], i, BooleanType);\n        if (!test)\n            { return null; }\n        var result = context.parse(args[i + 1], i + 1, outputType);\n        if (!result)\n            { return null; }\n        branches.push([\n            test,\n            result\n        ]);\n        outputType = outputType || result.type;\n    }\n    var otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n    if (!otherwise)\n        { return null; }\n    return new Case(outputType, branches, otherwise);\n};\nCase.prototype.evaluate = function evaluate (ctx) {\n    for (var i = 0, list = this.branches; i < list.length; i += 1) {\n        var ref = list[i];\n            var test = ref[0];\n            var expression = ref[1];\n\n            if (test.evaluate(ctx)) {\n            return expression.evaluate(ctx);\n        }\n    }\n    return this.otherwise.evaluate(ctx);\n};\nCase.prototype.eachChild = function eachChild (fn) {\n    for (var i = 0, list = this.branches; i < list.length; i += 1) {\n        var ref = list[i];\n            var test = ref[0];\n            var expression = ref[1];\n\n            fn(test);\n        fn(expression);\n    }\n    fn(this.otherwise);\n};\nCase.prototype.outputDefined = function outputDefined () {\n    return this.branches.every(function (ref) {\n            ref[0];\n            var out = ref[1];\n\n            return out.outputDefined();\n        }) && this.otherwise.outputDefined();\n};\nCase.prototype.serialize = function serialize () {\n    var serialized = ['case'];\n    this.eachChild(function (child) {\n        serialized.push(child.serialize());\n    });\n    return serialized;\n};\nvar Case$1 = Case;\n\n//      \nvar Slice = function Slice(type, input, beginIndex, endIndex) {\n    this.type = type;\n    this.input = input;\n    this.beginIndex = beginIndex;\n    this.endIndex = endIndex;\n};\nSlice.parse = function parse (args, context) {\n    if (args.length <= 2 || args.length >= 5) {\n        return context.error((\"Expected 3 or 4 arguments, but found \" + (args.length - 1) + \" instead.\"));\n    }\n    var input = context.parse(args[1], 1, ValueType);\n    var beginIndex = context.parse(args[2], 2, NumberType);\n    if (!input || !beginIndex)\n        { return null; }\n    if (!isValidType(input.type, [\n            array$1(ValueType),\n            StringType,\n            ValueType\n        ])) {\n        return context.error((\"Expected first argument to be of type array or string, but found \" + (toString$1(input.type)) + \" instead\"));\n    }\n    if (args.length === 4) {\n        var endIndex = context.parse(args[3], 3, NumberType);\n        if (!endIndex)\n            { return null; }\n        return new Slice(input.type, input, beginIndex, endIndex);\n    } else {\n        return new Slice(input.type, input, beginIndex);\n    }\n};\nSlice.prototype.evaluate = function evaluate (ctx) {\n    var input = this.input.evaluate(ctx);\n    var beginIndex = this.beginIndex.evaluate(ctx);\n    if (!isValidNativeType(input, [\n            'string',\n            'array'\n        ])) {\n        throw new RuntimeError$1((\"Expected first argument to be of type array or string, but found \" + (toString$1(typeOf(input))) + \" instead.\"));\n    }\n    if (this.endIndex) {\n        var endIndex = this.endIndex.evaluate(ctx);\n        return input.slice(beginIndex, endIndex);\n    }\n    return input.slice(beginIndex);\n};\nSlice.prototype.eachChild = function eachChild (fn) {\n    fn(this.input);\n    fn(this.beginIndex);\n    if (this.endIndex) {\n        fn(this.endIndex);\n    }\n};\nSlice.prototype.outputDefined = function outputDefined () {\n    return false;\n};\nSlice.prototype.serialize = function serialize () {\n    if (this.endIndex != null && this.endIndex !== undefined) {\n        var endIndex = this.endIndex.serialize();\n        return [\n            'slice',\n            this.input.serialize(),\n            this.beginIndex.serialize(),\n            endIndex\n        ];\n    }\n    return [\n        'slice',\n        this.input.serialize(),\n        this.beginIndex.serialize()\n    ];\n};\nvar Slice$1 = Slice;\n\n//      \nfunction isComparableType(op, type) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' || type.kind === 'string' || type.kind === 'number' || type.kind === 'null' || type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' || type.kind === 'number' || type.kind === 'value';\n    }\n}\nfunction eq(ctx, a, b) {\n    return a === b;\n}\nfunction neq(ctx, a, b) {\n    return a !== b;\n}\nfunction lt(ctx, a, b) {\n    return a < b;\n}\nfunction gt(ctx, a, b) {\n    return a > b;\n}\nfunction lteq(ctx, a, b) {\n    return a <= b;\n}\nfunction gteq(ctx, a, b) {\n    return a >= b;\n}\nfunction eqCollate(ctx, a, b, c) {\n    return c.compare(a, b) === 0;\n}\nfunction neqCollate(ctx, a, b, c) {\n    return !eqCollate(ctx, a, b, c);\n}\nfunction ltCollate(ctx, a, b, c) {\n    return c.compare(a, b) < 0;\n}\nfunction gtCollate(ctx, a, b, c) {\n    return c.compare(a, b) > 0;\n}\nfunction lteqCollate(ctx, a, b, c) {\n    return c.compare(a, b) <= 0;\n}\nfunction gteqCollate(ctx, a, b, c) {\n    return c.compare(a, b) >= 0;\n}\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op, compareBasic, compareWithCollator) {\n    var isOrderComparison = op !== '==' && op !== '!=';\n    return /*@__PURE__*/(function () {\n        function Comparison(lhs, rhs, collator) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n        Comparison.parse = function parse (args, context) {\n            if (args.length !== 3 && args.length !== 4)\n                { return context.error(\"Expected two or three arguments.\"); }\n            var op = args[0];\n            var lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs)\n                { return null; }\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error((\"\\\"\" + op + \"\\\" comparisons are not supported for type '\" + (toString$1(lhs.type)) + \"'.\"));\n            }\n            var rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs)\n                { return null; }\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error((\"\\\"\" + op + \"\\\" comparisons are not supported for type '\" + (toString$1(rhs.type)) + \"'.\"));\n            }\n            if (lhs.type.kind !== rhs.type.kind && lhs.type.kind !== 'value' && rhs.type.kind !== 'value') {\n                return context.error((\"Cannot compare types '\" + (toString$1(lhs.type)) + \"' and '\" + (toString$1(rhs.type)) + \"'.\"));\n            }\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion$1(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion$1(lhs.type, [rhs]);\n                }\n            }\n            var collator = null;\n            if (args.length === 4) {\n                if (lhs.type.kind !== 'string' && rhs.type.kind !== 'string' && lhs.type.kind !== 'value' && rhs.type.kind !== 'value') {\n                    return context.error(\"Cannot use collator to compare non-string types.\");\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator)\n                    { return null; }\n            }\n            return new Comparison(lhs, rhs, collator);\n        };\n        Comparison.prototype.evaluate = function evaluate (ctx) {\n            var lhs = this.lhs.evaluate(ctx);\n            var rhs = this.rhs.evaluate(ctx);\n            if (isOrderComparison && this.hasUntypedArgument) {\n                var lt = typeOf(lhs);\n                var rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError$1((\"Expected arguments for \\\"\" + op + \"\\\" to be (string, string) or (number, number), but found (\" + (lt.kind) + \", \" + (rt.kind) + \") instead.\"));\n                }\n            }\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                var lt$1 = typeOf(lhs);\n                var rt$1 = typeOf(rhs);\n                if (lt$1.kind !== 'string' || rt$1.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n            return this.collator ? compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) : compareBasic(ctx, lhs, rhs);\n        };\n        Comparison.prototype.eachChild = function eachChild (fn) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        };\n        Comparison.prototype.outputDefined = function outputDefined () {\n            return true;\n        };\n        Comparison.prototype.serialize = function serialize () {\n            var serialized = [op];\n            this.eachChild(function (child) {\n                serialized.push(child.serialize());\n            });\n            return serialized;\n        };\n\n        return Comparison;\n    }());\n}\nvar Equals = makeComparison('==', eq, eqCollate);\nvar NotEquals = makeComparison('!=', neq, neqCollate);\nvar LessThan = makeComparison('<', lt, ltCollate);\nvar GreaterThan = makeComparison('>', gt, gtCollate);\nvar LessThanOrEqual = makeComparison('<=', lteq, lteqCollate);\nvar GreaterThanOrEqual = makeComparison('>=', gteq, gteqCollate);\n\n//      \nvar NumberFormat = function NumberFormat(number, locale, currency, unit, minFractionDigits, maxFractionDigits) {\n    this.type = StringType;\n    this.number = number;\n    this.locale = locale;\n    this.currency = currency;\n    this.unit = unit;\n    this.minFractionDigits = minFractionDigits;\n    this.maxFractionDigits = maxFractionDigits;\n};\nNumberFormat.parse = function parse (args, context) {\n    if (args.length !== 3)\n        { return context.error(\"Expected two arguments.\"); }\n    var number = context.parse(args[1], 1, NumberType);\n    if (!number)\n        { return null; }\n    var options = args[2];\n    if (typeof options !== 'object' || Array.isArray(options))\n        { return context.error(\"NumberFormat options argument must be an object.\"); }\n    var locale = null;\n    if (options['locale']) {\n        locale = context.parse(options['locale'], 1, StringType);\n        if (!locale)\n            { return null; }\n    }\n    var currency = null;\n    if (options['currency']) {\n        currency = context.parse(options['currency'], 1, StringType);\n        if (!currency)\n            { return null; }\n    }\n    var unit = null;\n    if (options['unit']) {\n        unit = context.parse(options['unit'], 1, StringType);\n        if (!unit)\n            { return null; }\n    }\n    var minFractionDigits = null;\n    if (options['min-fraction-digits']) {\n        minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n        if (!minFractionDigits)\n            { return null; }\n    }\n    var maxFractionDigits = null;\n    if (options['max-fraction-digits']) {\n        maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n        if (!maxFractionDigits)\n            { return null; }\n    }\n    return new NumberFormat(number, locale, currency, unit, minFractionDigits, maxFractionDigits);\n};\nNumberFormat.prototype.evaluate = function evaluate (ctx) {\n    return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [], {\n        style: this.currency && 'currency' || this.unit && 'unit' || 'decimal',\n        currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n        unit: this.unit ? this.unit.evaluate(ctx) : undefined,\n        minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n        maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined\n    }).format(this.number.evaluate(ctx));\n};\nNumberFormat.prototype.eachChild = function eachChild (fn) {\n    fn(this.number);\n    if (this.locale) {\n        fn(this.locale);\n    }\n    if (this.currency) {\n        fn(this.currency);\n    }\n    if (this.unit) {\n        fn(this.unit);\n    }\n    if (this.minFractionDigits) {\n        fn(this.minFractionDigits);\n    }\n    if (this.maxFractionDigits) {\n        fn(this.maxFractionDigits);\n    }\n};\nNumberFormat.prototype.outputDefined = function outputDefined () {\n    return false;\n};\nNumberFormat.prototype.serialize = function serialize () {\n    var options = {};\n    if (this.locale) {\n        options['locale'] = this.locale.serialize();\n    }\n    if (this.currency) {\n        options['currency'] = this.currency.serialize();\n    }\n    if (this.unit) {\n        options['unit'] = this.unit.serialize();\n    }\n    if (this.minFractionDigits) {\n        options['min-fraction-digits'] = this.minFractionDigits.serialize();\n    }\n    if (this.maxFractionDigits) {\n        options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n    }\n    return [\n        'number-format',\n        this.number.serialize(),\n        options\n    ];\n};\n\nvar NumberFormat$1 = NumberFormat;\n\n//      \nvar Length = function Length(input) {\n    this.type = NumberType;\n    this.input = input;\n};\nLength.parse = function parse (args, context) {\n    if (args.length !== 2)\n        { return context.error((\"Expected 1 argument, but found \" + (args.length - 1) + \" instead.\")); }\n    var input = context.parse(args[1], 1);\n    if (!input)\n        { return null; }\n    if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n        { return context.error((\"Expected argument of type string or array, but found \" + (toString$1(input.type)) + \" instead.\")); }\n    return new Length(input);\n};\nLength.prototype.evaluate = function evaluate (ctx) {\n    var input = this.input.evaluate(ctx);\n    if (typeof input === 'string') {\n        return input.length;\n    } else if (Array.isArray(input)) {\n        return input.length;\n    } else {\n        throw new RuntimeError$1((\"Expected value to be of type string or array, but found \" + (toString$1(typeOf(input))) + \" instead.\"));\n    }\n};\nLength.prototype.eachChild = function eachChild (fn) {\n    fn(this.input);\n};\nLength.prototype.outputDefined = function outputDefined () {\n    return false;\n};\nLength.prototype.serialize = function serialize () {\n    var serialized = ['length'];\n    this.eachChild(function (child) {\n        serialized.push(child.serialize());\n    });\n    return serialized;\n};\nvar Length$1 = Length;\n\n//      \nvar expressions = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion$1,\n    'at': At$1,\n    'boolean': Assertion$1,\n    'case': Case$1,\n    'coalesce': Coalesce$1,\n    'collator': CollatorExpression$1,\n    'format': FormatExpression$1,\n    'image': ImageExpression$1,\n    'in': In$1,\n    'index-of': IndexOf$1,\n    'interpolate': Interpolate$1,\n    'interpolate-hcl': Interpolate$1,\n    'interpolate-lab': Interpolate$1,\n    'length': Length$1,\n    'let': Let$1,\n    'literal': Literal$1,\n    'match': Match$1,\n    'number': Assertion$1,\n    'number-format': NumberFormat$1,\n    'object': Assertion$1,\n    'slice': Slice$1,\n    'step': Step$1,\n    'string': Assertion$1,\n    'to-boolean': Coercion$1,\n    'to-color': Coercion$1,\n    'to-number': Coercion$1,\n    'to-string': Coercion$1,\n    'var': Var$1,\n    'within': Within$1\n};\nfunction rgba(ctx, ref) {\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var a = ref[3];\n\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    var alpha = a ? a.evaluate(ctx) : 1;\n    var error = validateRGBA(r, g, b, alpha);\n    if (error)\n        { throw new RuntimeError$1(error); }\n    return new Color$1(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\nfunction has(key, obj) {\n    return key in obj;\n}\nfunction get(key, obj) {\n    var v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        var m = i + j >> 1;\n        if (a[m] === v)\n            { return true; }\n        if (a[m] > v)\n            { j = m - 1; }\n        else\n            { i = m + 1; }\n    }\n    return false;\n}\nfunction varargs(type) {\n    return { type: type };\n}\nCompoundExpression$1.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        function (ctx, ref) {\n            var v = ref[0];\n\n            throw new RuntimeError$1(v.evaluate(ctx));\n        }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        function (ctx, ref) {\n            var v = ref[0];\n\n            return toString$1(typeOf(v.evaluate(ctx)));\n}\n    ],\n    'to-rgba': [\n        array$1(NumberType, 4),\n        [ColorType],\n        function (ctx, ref) {\n            var v = ref[0];\n\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [\n            NumberType,\n            NumberType,\n            NumberType\n        ],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [\n            NumberType,\n            NumberType,\n            NumberType,\n            NumberType\n        ],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                function (ctx, ref) {\n                    var key = ref[0];\n\n                    return has(key.evaluate(ctx), ctx.properties());\n}\n            ],\n            [\n                [\n                    StringType,\n                    ObjectType\n                ],\n                function (ctx, ref) {\n                    var key = ref[0];\n                    var obj = ref[1];\n\n                    return has(key.evaluate(ctx), obj.evaluate(ctx));\n}\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                function (ctx, ref) {\n                    var key = ref[0];\n\n                    return get(key.evaluate(ctx), ctx.properties());\n}\n            ],\n            [\n                [\n                    StringType,\n                    ObjectType\n                ],\n                function (ctx, ref) {\n                    var key = ref[0];\n                    var obj = ref[1];\n\n                    return get(key.evaluate(ctx), obj.evaluate(ctx));\n}\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        function (ctx, ref) {\n            var key = ref[0];\n\n            return get(key.evaluate(ctx), ctx.featureState || {});\n}\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        function (ctx) { return ctx.properties(); }\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        function (ctx) { return ctx.geometryType(); }\n    ],\n    'id': [\n        ValueType,\n        [],\n        function (ctx) { return ctx.id(); }\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        function (ctx) { return ctx.globals.zoom; }\n    ],\n    'pitch': [\n        NumberType,\n        [],\n        function (ctx) { return ctx.globals.pitch || 0; }\n    ],\n    'distance-from-center': [\n        NumberType,\n        [],\n        function (ctx) { return ctx.distanceFromCenter(); }\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        function (ctx) { return ctx.globals.heatmapDensity || 0; }\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        function (ctx) { return ctx.globals.lineProgress || 0; }\n    ],\n    'sky-radial-progress': [\n        NumberType,\n        [],\n        function (ctx) { return ctx.globals.skyRadialProgress || 0; }\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        function (ctx) { return ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated; }\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        function (ctx, args) {\n            var result = 0;\n            for (var i = 0, list = args; i < list.length; i += 1) {\n                var arg = list[i];\n\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        function (ctx, args) {\n            var result = 1;\n            for (var i = 0, list = args; i < list.length; i += 1) {\n                var arg = list[i];\n\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [\n                    NumberType,\n                    NumberType\n                ],\n                function (ctx, ref) {\n                    var a = ref[0];\n                    var b = ref[1];\n\n                    return a.evaluate(ctx) - b.evaluate(ctx);\n}\n            ],\n            [\n                [NumberType],\n                function (ctx, ref) {\n                    var a = ref[0];\n\n                    return -a.evaluate(ctx);\n}\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [\n            NumberType,\n            NumberType\n        ],\n        function (ctx, ref) {\n            var a = ref[0];\n            var b = ref[1];\n\n            return a.evaluate(ctx) / b.evaluate(ctx);\n}\n    ],\n    '%': [\n        NumberType,\n        [\n            NumberType,\n            NumberType\n        ],\n        function (ctx, ref) {\n            var a = ref[0];\n            var b = ref[1];\n\n            return a.evaluate(ctx) % b.evaluate(ctx);\n}\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        function () { return Math.LN2; }\n    ],\n    'pi': [\n        NumberType,\n        [],\n        function () { return Math.PI; }\n    ],\n    'e': [\n        NumberType,\n        [],\n        function () { return Math.E; }\n    ],\n    '^': [\n        NumberType,\n        [\n            NumberType,\n            NumberType\n        ],\n        function (ctx, ref) {\n            var b = ref[0];\n            var e = ref[1];\n\n            return Math.pow(b.evaluate(ctx), e.evaluate(ctx));\n}\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var x = ref[0];\n\n            return Math.sqrt(x.evaluate(ctx));\n}\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var n = ref[0];\n\n            return Math.log(n.evaluate(ctx)) / Math.LN10;\n}\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var n = ref[0];\n\n            return Math.log(n.evaluate(ctx));\n}\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var n = ref[0];\n\n            return Math.log(n.evaluate(ctx)) / Math.LN2;\n}\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var n = ref[0];\n\n            return Math.sin(n.evaluate(ctx));\n}\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var n = ref[0];\n\n            return Math.cos(n.evaluate(ctx));\n}\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var n = ref[0];\n\n            return Math.tan(n.evaluate(ctx));\n}\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var n = ref[0];\n\n            return Math.asin(n.evaluate(ctx));\n}\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var n = ref[0];\n\n            return Math.acos(n.evaluate(ctx));\n}\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var n = ref[0];\n\n            return Math.atan(n.evaluate(ctx));\n}\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        function (ctx, args) { return Math.min.apply(Math, args.map(function (arg) { return arg.evaluate(ctx); })); }\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        function (ctx, args) { return Math.max.apply(Math, args.map(function (arg) { return arg.evaluate(ctx); })); }\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var n = ref[0];\n\n            return Math.abs(n.evaluate(ctx));\n}\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var n = ref[0];\n\n            var v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var n = ref[0];\n\n            return Math.floor(n.evaluate(ctx));\n}\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var n = ref[0];\n\n            return Math.ceil(n.evaluate(ctx));\n}\n    ],\n    'filter-==': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        function (ctx, ref) {\n            var k = ref[0];\n            var v = ref[1];\n\n            return ctx.properties()[k.value] === v.value;\n}\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        function (ctx, ref) {\n            var v = ref[0];\n\n            return ctx.id() === v.value;\n}\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        function (ctx, ref) {\n            var v = ref[0];\n\n            return ctx.geometryType() === v.value;\n}\n    ],\n    'filter-<': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        function (ctx, ref) {\n            var k = ref[0];\n            var v = ref[1];\n\n            var a = ctx.properties()[k.value];\n            var b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        function (ctx, ref) {\n            var v = ref[0];\n\n            var a = ctx.id();\n            var b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        function (ctx, ref) {\n            var k = ref[0];\n            var v = ref[1];\n\n            var a = ctx.properties()[k.value];\n            var b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        function (ctx, ref) {\n            var v = ref[0];\n\n            var a = ctx.id();\n            var b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        function (ctx, ref) {\n            var k = ref[0];\n            var v = ref[1];\n\n            var a = ctx.properties()[k.value];\n            var b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        function (ctx, ref) {\n            var v = ref[0];\n\n            var a = ctx.id();\n            var b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        function (ctx, ref) {\n            var k = ref[0];\n            var v = ref[1];\n\n            var a = ctx.properties()[k.value];\n            var b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        function (ctx, ref) {\n            var v = ref[0];\n\n            var a = ctx.id();\n            var b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        function (ctx, ref) {\n            var k = ref[0];\n\n            return k.value in ctx.properties();\n}\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        function (ctx) { return ctx.id() !== null && ctx.id() !== undefined; }\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array$1(StringType)],\n        function (ctx, ref) {\n            var v = ref[0];\n\n            return v.value.indexOf(ctx.geometryType()) >= 0;\n}\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array$1(ValueType)],\n        function (ctx, ref) {\n            var v = ref[0];\n\n            return v.value.indexOf(ctx.id()) >= 0;\n}\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [\n            StringType,\n            array$1(ValueType)\n        ],\n        // assumes v is an array literal\n        function (ctx, ref) {\n            var k = ref[0];\n            var v = ref[1];\n\n            return v.value.indexOf(ctx.properties()[k.value]) >= 0;\n}\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [\n            StringType,\n            array$1(ValueType)\n        ],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        function (ctx, ref) {\n            var k = ref[0];\n            var v = ref[1];\n\n            return binarySearch(ctx.properties()[k.value], v.value, 0, v.value.length - 1);\n}\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [\n                    BooleanType,\n                    BooleanType\n                ],\n                function (ctx, ref) {\n                    var a = ref[0];\n                    var b = ref[1];\n\n                    return a.evaluate(ctx) && b.evaluate(ctx);\n}\n            ],\n            [\n                varargs(BooleanType),\n                function (ctx, args) {\n                    for (var i = 0, list = args; i < list.length; i += 1) {\n                        var arg = list[i];\n\n                        if (!arg.evaluate(ctx))\n                            { return false; }\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [\n                    BooleanType,\n                    BooleanType\n                ],\n                function (ctx, ref) {\n                    var a = ref[0];\n                    var b = ref[1];\n\n                    return a.evaluate(ctx) || b.evaluate(ctx);\n}\n            ],\n            [\n                varargs(BooleanType),\n                function (ctx, args) {\n                    for (var i = 0, list = args; i < list.length; i += 1) {\n                        var arg = list[i];\n\n                        if (arg.evaluate(ctx))\n                            { return true; }\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        function (ctx, ref) {\n            var b = ref[0];\n\n            return !b.evaluate(ctx);\n}\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        function (ctx, ref) {\n            var s = ref[0];\n\n            var isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        function (ctx, ref) {\n            var s = ref[0];\n\n            return s.evaluate(ctx).toUpperCase();\n}\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        function (ctx, ref) {\n            var s = ref[0];\n\n            return s.evaluate(ctx).toLowerCase();\n}\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        function (ctx, args) { return args.map(function (arg) { return toString(arg.evaluate(ctx)); }).join(''); }\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        function (ctx, ref) {\n            var collator = ref[0];\n\n            return collator.evaluate(ctx).resolvedLocale();\n}\n    ]\n});\nvar definitions = expressions;\n\n//      \n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\nfunction success(value) {\n    return {\n        result: 'success',\n        value: value\n    };\n}\nfunction error(value) {\n    return {\n        result: 'error',\n        value: value\n    };\n}\n\n//      \nfunction supportsPropertyExpression(spec) {\n    return spec['property-type'] === 'data-driven';\n}\nfunction supportsZoomExpression(spec) {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\nfunction supportsInterpolation(spec) {\n    return !!spec.expression && spec.expression.interpolated;\n}\n\nfunction isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nvar StyleExpression = function StyleExpression(expression, propertySpec) {\n    this.expression = expression;\n    this._warningHistory = {};\n    this._evaluator = new EvaluationContext$1();\n    this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n    this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n};\nStyleExpression.prototype.evaluateWithoutErrorHandling = function evaluateWithoutErrorHandling (globals, feature, featureState, canonical, availableImages, formattedSection, featureTileCoord, featureDistanceData) {\n    this._evaluator.globals = globals;\n    this._evaluator.feature = feature;\n    this._evaluator.featureState = featureState;\n    this._evaluator.canonical = canonical || null;\n    this._evaluator.availableImages = availableImages || null;\n    this._evaluator.formattedSection = formattedSection;\n    this._evaluator.featureTileCoord = featureTileCoord || null;\n    this._evaluator.featureDistanceData = featureDistanceData || null;\n    return this.expression.evaluate(this._evaluator);\n};\nStyleExpression.prototype.evaluate = function evaluate (globals, feature, featureState, canonical, availableImages, formattedSection, featureTileCoord, featureDistanceData) {\n    this._evaluator.globals = globals;\n    this._evaluator.feature = feature || null;\n    this._evaluator.featureState = featureState || null;\n    this._evaluator.canonical = canonical || null;\n    this._evaluator.availableImages = availableImages || null;\n    this._evaluator.formattedSection = formattedSection || null;\n    this._evaluator.featureTileCoord = featureTileCoord || null;\n    this._evaluator.featureDistanceData = featureDistanceData || null;\n    try {\n        var val = this.expression.evaluate(this._evaluator);\n        // eslint-disable-next-line no-self-compare\n        if (val === null || val === undefined || typeof val === 'number' && val !== val) {\n            return this._defaultValue;\n        }\n        if (this._enumValues && !(val in this._enumValues)) {\n            throw new RuntimeError$1((\"Expected value to be one of \" + (Object.keys(this._enumValues).map(function (v) { return JSON.stringify(v); }).join(', ')) + \", but found \" + (JSON.stringify(val)) + \" instead.\"));\n        }\n        return val;\n    } catch (e) {\n        if (!this._warningHistory[e.message]) {\n            this._warningHistory[e.message] = true;\n            if (typeof console !== 'undefined') {\n                console.warn(e.message);\n            }\n        }\n        return this._defaultValue;\n    }\n};\nfunction isExpression(expression) {\n    return Array.isArray(expression) && expression.length > 0 && typeof expression[0] === 'string' && expression[0] in definitions;\n}\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nfunction createExpression(expression, propertySpec) {\n    var parser = new ParsingContext$1(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    var parsed = parser.parse(expression, undefined, undefined, undefined, propertySpec && propertySpec.type === 'string' ? { typeAnnotation: 'coerce' } : undefined);\n    if (!parsed) {\n        return error(parser.errors);\n    }\n    return success(new StyleExpression(parsed, propertySpec));\n}\nvar ZoomConstantExpression = function ZoomConstantExpression(kind, expression) {\n    this.kind = kind;\n    this._styleExpression = expression;\n    this.isStateDependent = kind !== 'constant' && !isStateConstant(expression.expression);\n};\nZoomConstantExpression.prototype.evaluateWithoutErrorHandling = function evaluateWithoutErrorHandling (globals, feature, featureState, canonical, availableImages, formattedSection) {\n    return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n};\nZoomConstantExpression.prototype.evaluate = function evaluate (globals, feature, featureState, canonical, availableImages, formattedSection) {\n    return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n};\nvar ZoomDependentExpression = function ZoomDependentExpression(kind, expression, zoomStops, interpolationType) {\n    this.kind = kind;\n    this.zoomStops = zoomStops;\n    this._styleExpression = expression;\n    this.isStateDependent = kind !== 'camera' && !isStateConstant(expression.expression);\n    this.interpolationType = interpolationType;\n};\nZoomDependentExpression.prototype.evaluateWithoutErrorHandling = function evaluateWithoutErrorHandling (globals, feature, featureState, canonical, availableImages, formattedSection) {\n    return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n};\nZoomDependentExpression.prototype.evaluate = function evaluate (globals, feature, featureState, canonical, availableImages, formattedSection) {\n    return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n};\nZoomDependentExpression.prototype.interpolationFactor = function interpolationFactor (input, lower, upper) {\n    if (this.interpolationType) {\n        return Interpolate$1.interpolationFactor(this.interpolationType, input, lower, upper);\n    } else {\n        return 0;\n    }\n};\nfunction createPropertyExpression(expression, propertySpec) {\n    expression = createExpression(expression, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n    var parsed = expression.value.expression;\n    var isFeatureConstant$1 = isFeatureConstant(parsed);\n    if (!isFeatureConstant$1 && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError$1('', 'data expressions not supported')]);\n    }\n    var isZoomConstant = isGlobalPropertyConstant(parsed, [\n        'zoom',\n        'pitch',\n        'distance-from-center'\n    ]);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError$1('', 'zoom expressions not supported')]);\n    }\n    var zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ParsingError$1('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    } else if (zoomCurve instanceof ParsingError$1) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate$1 && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError$1('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n    if (!zoomCurve) {\n        return success(isFeatureConstant$1 ? new ZoomConstantExpression('constant', expression.value) : new ZoomConstantExpression('source', expression.value));\n    }\n    var interpolationType = zoomCurve instanceof Interpolate$1 ? zoomCurve.interpolation : undefined;\n    return success(isFeatureConstant$1 ? new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType) : new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType));\n}\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression) {\n    var result = null;\n    if (expression instanceof Let$1) {\n        result = findZoomCurve(expression.result);\n    } else if (expression instanceof Coalesce$1) {\n        for (var i = 0, list = expression.args; i < list.length; i += 1) {\n            var arg = list[i];\n\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n    } else if ((expression instanceof Step$1 || expression instanceof Interpolate$1) && expression.input instanceof CompoundExpression$1 && expression.input.name === 'zoom') {\n        result = expression;\n    }\n    if (result instanceof ParsingError$1) {\n        return result;\n    }\n    expression.eachChild(function (child) {\n        var childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError$1) {\n            result = childResult;\n        } else if (!result && childResult) {\n            result = new ParsingError$1('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError$1('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n    return result;\n}\nfunction getExpectedType(spec) {\n    var types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n    if (spec.type === 'array') {\n        return array$1(types[spec.value] || ValueType, spec.length);\n    }\n    return types[spec.type];\n}\nfunction getDefaultValue(spec) {\n    if (spec.type === 'color' && (isFunction(spec.default) || Array.isArray(spec.default))) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color$1(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color$1.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n\n//      \n// Turn jsonlint-lines-primitives objects into primitive objects\nfunction unbundle(value) {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\nfunction deepUnbundle(value) {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        var unbundledValue = {};\n        for (var key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n    return unbundle(value);\n}\n\nvar spec = {\"$version\":8,\"$root\":{\"version\":{\"required\":true,\"type\":\"enum\",\"values\":[8]},\"name\":{\"type\":\"string\"},\"metadata\":{\"type\":\"*\"},\"center\":{\"type\":\"array\",\"value\":\"number\"},\"zoom\":{\"type\":\"number\"},\"bearing\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\"},\"pitch\":{\"type\":\"number\",\"default\":0,\"units\":\"degrees\"},\"light\":{\"type\":\"light\"},\"terrain\":{\"type\":\"terrain\"},\"fog\":{\"type\":\"fog\"},\"sources\":{\"required\":true,\"type\":\"sources\"},\"sprite\":{\"type\":\"string\"},\"glyphs\":{\"type\":\"string\"},\"transition\":{\"type\":\"transition\"},\"projection\":{\"type\":\"projection\"},\"layers\":{\"required\":true,\"type\":\"array\",\"value\":\"layer\"}},\"sources\":{\"*\":{\"type\":\"source\"}},\"source\":[\"source_vector\",\"source_raster\",\"source_raster_dem\",\"source_geojson\",\"source_video\",\"source_image\"],\"source_vector\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"vector\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"scheme\":{\"type\":\"enum\",\"values\":{\"xyz\":{},\"tms\":{}},\"default\":\"xyz\"},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"attribution\":{\"type\":\"string\"},\"promoteId\":{\"type\":\"promoteId\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_raster\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"raster\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"tileSize\":{\"type\":\"number\",\"default\":512,\"units\":\"pixels\"},\"scheme\":{\"type\":\"enum\",\"values\":{\"xyz\":{},\"tms\":{}},\"default\":\"xyz\"},\"attribution\":{\"type\":\"string\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_raster_dem\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"raster-dem\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"tileSize\":{\"type\":\"number\",\"default\":512,\"units\":\"pixels\"},\"attribution\":{\"type\":\"string\"},\"encoding\":{\"type\":\"enum\",\"values\":{\"terrarium\":{},\"mapbox\":{}},\"default\":\"mapbox\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_geojson\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"geojson\":{}}},\"data\":{\"type\":\"*\"},\"maxzoom\":{\"type\":\"number\",\"default\":18},\"attribution\":{\"type\":\"string\"},\"buffer\":{\"type\":\"number\",\"default\":128,\"maximum\":512,\"minimum\":0},\"filter\":{\"type\":\"*\"},\"tolerance\":{\"type\":\"number\",\"default\":0.375},\"cluster\":{\"type\":\"boolean\",\"default\":false},\"clusterRadius\":{\"type\":\"number\",\"default\":50,\"minimum\":0},\"clusterMaxZoom\":{\"type\":\"number\"},\"clusterMinPoints\":{\"type\":\"number\"},\"clusterProperties\":{\"type\":\"*\"},\"lineMetrics\":{\"type\":\"boolean\",\"default\":false},\"generateId\":{\"type\":\"boolean\",\"default\":false},\"promoteId\":{\"type\":\"promoteId\"}},\"source_video\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"video\":{}}},\"urls\":{\"required\":true,\"type\":\"array\",\"value\":\"string\"},\"coordinates\":{\"required\":true,\"type\":\"array\",\"length\":4,\"value\":{\"type\":\"array\",\"length\":2,\"value\":\"number\"}}},\"source_image\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"image\":{}}},\"url\":{\"required\":true,\"type\":\"string\"},\"coordinates\":{\"required\":true,\"type\":\"array\",\"length\":4,\"value\":{\"type\":\"array\",\"length\":2,\"value\":\"number\"}}},\"layer\":{\"id\":{\"type\":\"string\",\"required\":true},\"type\":{\"type\":\"enum\",\"values\":{\"fill\":{},\"line\":{},\"symbol\":{},\"circle\":{},\"heatmap\":{},\"fill-extrusion\":{},\"raster\":{},\"hillshade\":{},\"background\":{},\"sky\":{}},\"required\":true},\"metadata\":{\"type\":\"*\"},\"source\":{\"type\":\"string\"},\"source-layer\":{\"type\":\"string\"},\"minzoom\":{\"type\":\"number\",\"minimum\":0,\"maximum\":24},\"maxzoom\":{\"type\":\"number\",\"minimum\":0,\"maximum\":24},\"filter\":{\"type\":\"filter\"},\"layout\":{\"type\":\"layout\"},\"paint\":{\"type\":\"paint\"}},\"layout\":[\"layout_fill\",\"layout_line\",\"layout_circle\",\"layout_heatmap\",\"layout_fill-extrusion\",\"layout_symbol\",\"layout_raster\",\"layout_hillshade\",\"layout_background\",\"layout_sky\"],\"layout_background\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_sky\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_fill\":{\"fill-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_circle\":{\"circle-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_heatmap\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_fill-extrusion\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"},\"fill-extrusion-edge-radius\":{\"type\":\"number\",\"private\":true,\"default\":0,\"minimum\":0,\"maximum\":1,\"property-type\":\"constant\"}},\"layout_line\":{\"line-cap\":{\"type\":\"enum\",\"values\":{\"butt\":{},\"round\":{},\"square\":{}},\"default\":\"butt\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-join\":{\"type\":\"enum\",\"values\":{\"bevel\":{},\"round\":{},\"miter\":{}},\"default\":\"miter\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-miter-limit\":{\"type\":\"number\",\"default\":2,\"requires\":[{\"line-join\":\"miter\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-round-limit\":{\"type\":\"number\",\"default\":1.05,\"requires\":[{\"line-join\":\"round\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_symbol\":{\"symbol-placement\":{\"type\":\"enum\",\"values\":{\"point\":{},\"line\":{},\"line-center\":{}},\"default\":\"point\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-spacing\":{\"type\":\"number\",\"default\":250,\"minimum\":1,\"units\":\"pixels\",\"requires\":[{\"symbol-placement\":\"line\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-avoid-edges\":{\"type\":\"boolean\",\"default\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"symbol-z-order\":{\"type\":\"enum\",\"values\":{\"auto\":{},\"viewport-y\":{},\"source\":{}},\"default\":\"auto\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-allow-overlap\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-ignore-placement\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-optional\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\",\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-rotation-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-size\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"units\":\"factor of the original icon size\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-text-fit\":{\"type\":\"enum\",\"values\":{\"none\":{},\"width\":{},\"height\":{},\"both\":{}},\"default\":\"none\",\"requires\":[\"icon-image\",\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-text-fit-padding\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[0,0,0,0],\"units\":\"pixels\",\"requires\":[\"icon-image\",\"text-field\",{\"icon-text-fit\":[\"both\",\"width\",\"height\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-image\":{\"type\":\"resolvedImage\",\"tokens\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-padding\":{\"type\":\"number\",\"default\":2,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-keep-upright\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\",{\"icon-rotation-alignment\":\"map\"},{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-offset\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-anchor\":{\"type\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"default\":\"center\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-rotation-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-field\":{\"type\":\"formatted\",\"default\":\"\",\"tokens\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-font\":{\"type\":\"array\",\"value\":\"string\",\"default\":[\"Open Sans Regular\",\"Arial Unicode MS Regular\"],\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-size\":{\"type\":\"number\",\"default\":16,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-max-width\":{\"type\":\"number\",\"default\":10,\"minimum\":0,\"units\":\"ems\",\"requires\":[\"text-field\",{\"symbol-placement\":[\"point\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-line-height\":{\"type\":\"number\",\"default\":1.2,\"units\":\"ems\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-letter-spacing\":{\"type\":\"number\",\"default\":0,\"units\":\"ems\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-justify\":{\"type\":\"enum\",\"values\":{\"auto\":{},\"left\":{},\"center\":{},\"right\":{}},\"default\":\"center\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-radial-offset\":{\"type\":\"number\",\"units\":\"ems\",\"default\":0,\"requires\":[\"text-field\"],\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]}},\"text-variable-anchor\":{\"type\":\"array\",\"value\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"requires\":[\"text-field\",{\"symbol-placement\":[\"point\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-anchor\":{\"type\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"default\":\"center\",\"requires\":[\"text-field\",{\"!\":\"text-variable-anchor\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-max-angle\":{\"type\":\"number\",\"default\":45,\"units\":\"degrees\",\"requires\":[\"text-field\",{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-writing-mode\":{\"type\":\"array\",\"value\":\"enum\",\"values\":{\"horizontal\":{},\"vertical\":{}},\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-padding\":{\"type\":\"number\",\"default\":2,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-keep-upright\":{\"type\":\"boolean\",\"default\":true,\"requires\":[\"text-field\",{\"text-rotation-alignment\":\"map\"},{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-transform\":{\"type\":\"enum\",\"values\":{\"none\":{},\"uppercase\":{},\"lowercase\":{}},\"default\":\"none\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-offset\":{\"type\":\"array\",\"value\":\"number\",\"units\":\"ems\",\"length\":2,\"default\":[0,0],\"requires\":[\"text-field\",{\"!\":\"text-radial-offset\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-allow-overlap\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-ignore-placement\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-optional\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\",\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_raster\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_hillshade\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"filter\":{\"type\":\"array\",\"value\":\"*\"},\"filter_symbol\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\",\"pitch\",\"distance-from-center\"]}},\"filter_fill\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_line\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_circle\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_fill-extrusion\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_heatmap\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_operator\":{\"type\":\"enum\",\"values\":{\"==\":{},\"!=\":{},\">\":{},\">=\":{},\"<\":{},\"<=\":{},\"in\":{},\"!in\":{},\"all\":{},\"any\":{},\"none\":{},\"has\":{},\"!has\":{},\"within\":{}}},\"geometry_type\":{\"type\":\"enum\",\"values\":{\"Point\":{},\"LineString\":{},\"Polygon\":{}}},\"function\":{\"expression\":{\"type\":\"expression\"},\"stops\":{\"type\":\"array\",\"value\":\"function_stop\"},\"base\":{\"type\":\"number\",\"default\":1,\"minimum\":0},\"property\":{\"type\":\"string\",\"default\":\"$zoom\"},\"type\":{\"type\":\"enum\",\"values\":{\"identity\":{},\"exponential\":{},\"interval\":{},\"categorical\":{}},\"default\":\"exponential\"},\"colorSpace\":{\"type\":\"enum\",\"values\":{\"rgb\":{},\"lab\":{},\"hcl\":{}},\"default\":\"rgb\"},\"default\":{\"type\":\"*\",\"required\":false}},\"function_stop\":{\"type\":\"array\",\"minimum\":0,\"maximum\":24,\"value\":[\"number\",\"color\"],\"length\":2},\"expression\":{\"type\":\"array\",\"value\":\"*\",\"minimum\":1},\"expression_name\":{\"type\":\"enum\",\"values\":{\"let\":{\"group\":\"Variable binding\"},\"var\":{\"group\":\"Variable binding\"},\"literal\":{\"group\":\"Types\"},\"array\":{\"group\":\"Types\"},\"at\":{\"group\":\"Lookup\"},\"in\":{\"group\":\"Lookup\"},\"index-of\":{\"group\":\"Lookup\"},\"slice\":{\"group\":\"Lookup\"},\"case\":{\"group\":\"Decision\"},\"match\":{\"group\":\"Decision\"},\"coalesce\":{\"group\":\"Decision\"},\"step\":{\"group\":\"Ramps, scales, curves\"},\"interpolate\":{\"group\":\"Ramps, scales, curves\"},\"interpolate-hcl\":{\"group\":\"Ramps, scales, curves\"},\"interpolate-lab\":{\"group\":\"Ramps, scales, curves\"},\"ln2\":{\"group\":\"Math\"},\"pi\":{\"group\":\"Math\"},\"e\":{\"group\":\"Math\"},\"typeof\":{\"group\":\"Types\"},\"string\":{\"group\":\"Types\"},\"number\":{\"group\":\"Types\"},\"boolean\":{\"group\":\"Types\"},\"object\":{\"group\":\"Types\"},\"collator\":{\"group\":\"Types\"},\"format\":{\"group\":\"Types\"},\"image\":{\"group\":\"Types\"},\"number-format\":{\"group\":\"Types\"},\"to-string\":{\"group\":\"Types\"},\"to-number\":{\"group\":\"Types\"},\"to-boolean\":{\"group\":\"Types\"},\"to-rgba\":{\"group\":\"Color\"},\"to-color\":{\"group\":\"Types\"},\"rgb\":{\"group\":\"Color\"},\"rgba\":{\"group\":\"Color\"},\"get\":{\"group\":\"Lookup\"},\"has\":{\"group\":\"Lookup\"},\"length\":{\"group\":\"Lookup\"},\"properties\":{\"group\":\"Feature data\"},\"feature-state\":{\"group\":\"Feature data\"},\"geometry-type\":{\"group\":\"Feature data\"},\"id\":{\"group\":\"Feature data\"},\"zoom\":{\"group\":\"Camera\"},\"pitch\":{\"group\":\"Camera\"},\"distance-from-center\":{\"group\":\"Camera\"},\"heatmap-density\":{\"group\":\"Heatmap\"},\"line-progress\":{\"group\":\"Feature data\"},\"sky-radial-progress\":{\"group\":\"sky\"},\"accumulated\":{\"group\":\"Feature data\"},\"+\":{\"group\":\"Math\"},\"*\":{\"group\":\"Math\"},\"-\":{\"group\":\"Math\"},\"/\":{\"group\":\"Math\"},\"%\":{\"group\":\"Math\"},\"^\":{\"group\":\"Math\"},\"sqrt\":{\"group\":\"Math\"},\"log10\":{\"group\":\"Math\"},\"ln\":{\"group\":\"Math\"},\"log2\":{\"group\":\"Math\"},\"sin\":{\"group\":\"Math\"},\"cos\":{\"group\":\"Math\"},\"tan\":{\"group\":\"Math\"},\"asin\":{\"group\":\"Math\"},\"acos\":{\"group\":\"Math\"},\"atan\":{\"group\":\"Math\"},\"min\":{\"group\":\"Math\"},\"max\":{\"group\":\"Math\"},\"round\":{\"group\":\"Math\"},\"abs\":{\"group\":\"Math\"},\"ceil\":{\"group\":\"Math\"},\"floor\":{\"group\":\"Math\"},\"distance\":{\"group\":\"Math\"},\"==\":{\"group\":\"Decision\"},\"!=\":{\"group\":\"Decision\"},\">\":{\"group\":\"Decision\"},\"<\":{\"group\":\"Decision\"},\">=\":{\"group\":\"Decision\"},\"<=\":{\"group\":\"Decision\"},\"all\":{\"group\":\"Decision\"},\"any\":{\"group\":\"Decision\"},\"!\":{\"group\":\"Decision\"},\"within\":{\"group\":\"Decision\"},\"is-supported-script\":{\"group\":\"String\"},\"upcase\":{\"group\":\"String\"},\"downcase\":{\"group\":\"String\"},\"concat\":{\"group\":\"String\"},\"resolved-locale\":{\"group\":\"String\"}}},\"fog\":{\"range\":{\"type\":\"array\",\"default\":[0.5,10],\"minimum\":-20,\"maximum\":20,\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]}},\"color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#ffffff\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"high-color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#245cdf\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"space-color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],4,\"#010b19\",7,\"#367ab9\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"horizon-blend\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],4,0.2,7,0.1],\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"star-intensity\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],5,0.35,6,0],\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true}},\"light\":{\"anchor\":{\"type\":\"enum\",\"default\":\"viewport\",\"values\":{\"map\":{},\"viewport\":{}},\"property-type\":\"data-constant\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]}},\"position\":{\"type\":\"array\",\"default\":[1.15,210,30],\"length\":3,\"value\":\"number\",\"property-type\":\"data-constant\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]}},\"color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#ffffff\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"intensity\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":0.5,\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true}},\"projection\":{\"name\":{\"type\":\"enum\",\"values\":{\"albers\":{},\"equalEarth\":{},\"equirectangular\":{},\"lambertConformalConic\":{},\"mercator\":{},\"naturalEarth\":{},\"winkelTripel\":{},\"globe\":{}},\"default\":\"mercator\",\"required\":true},\"center\":{\"type\":\"array\",\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"minimum\":[-180,-90],\"maximum\":[180,90],\"transition\":false,\"requires\":[{\"name\":[\"albers\",\"lambertConformalConic\"]}]},\"parallels\":{\"type\":\"array\",\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"minimum\":[-90,-90],\"maximum\":[90,90],\"transition\":false,\"requires\":[{\"name\":[\"albers\",\"lambertConformalConic\"]}]}},\"terrain\":{\"source\":{\"type\":\"string\",\"required\":true},\"exaggeration\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":1,\"minimum\":0,\"maximum\":1000,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true,\"requires\":[\"source\"]}},\"paint\":[\"paint_fill\",\"paint_line\",\"paint_circle\",\"paint_heatmap\",\"paint_fill-extrusion\",\"paint_symbol\",\"paint_raster\",\"paint_hillshade\",\"paint_background\",\"paint_sky\"],\"paint_fill\":{\"fill-antialias\":{\"type\":\"boolean\",\"default\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"fill-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-outline-color\":{\"type\":\"color\",\"transition\":true,\"requires\":[{\"!\":\"fill-pattern\"},{\"fill-antialias\":true}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"fill-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"}},\"paint_fill-extrusion\":{\"fill-extrusion-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"fill-extrusion-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"fill-extrusion-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-height\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"meters\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-base\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"meters\",\"transition\":true,\"requires\":[\"fill-extrusion-height\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-vertical-gradient\":{\"type\":\"boolean\",\"default\":true,\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-ambient-occlusion-intensity\":{\"property-type\":\"data-constant\",\"type\":\"number\",\"private\":true,\"default\":0,\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"fill-extrusion-ambient-occlusion-radius\":{\"property-type\":\"data-constant\",\"type\":\"number\",\"private\":true,\"default\":3,\"minimum\":0,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true,\"requires\":[\"fill-extrusion-edge-radius\"]}},\"paint_line\":{\"line-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"line-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"line-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-width\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-gap-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-offset\":{\"type\":\"number\",\"default\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-dasharray\":{\"type\":\"array\",\"value\":\"number\",\"minimum\":0,\"transition\":false,\"units\":\"line widths\",\"requires\":[{\"!\":\"line-pattern\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-gradient\":{\"type\":\"color\",\"transition\":false,\"requires\":[{\"!\":\"line-pattern\"},{\"source\":\"geojson\",\"has\":{\"lineMetrics\":true}}],\"expression\":{\"interpolated\":true,\"parameters\":[\"line-progress\"]},\"property-type\":\"color-ramp\"},\"line-trim-offset\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"minimum\":[0,0],\"maximum\":[1,1],\"transition\":false,\"requires\":[{\"source\":\"geojson\",\"has\":{\"lineMetrics\":true}}],\"property-type\":\"constant\"}},\"paint_circle\":{\"circle-radius\":{\"type\":\"number\",\"default\":5,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-blur\":{\"type\":\"number\",\"default\":0,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"circle-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-pitch-scale\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"viewport\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-stroke-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-stroke-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-stroke-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"}},\"paint_heatmap\":{\"heatmap-radius\":{\"type\":\"number\",\"default\":30,\"minimum\":1,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"heatmap-weight\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"heatmap-intensity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"heatmap-color\":{\"type\":\"color\",\"default\":[\"interpolate\",[\"linear\"],[\"heatmap-density\"],0,\"rgba(0, 0, 255, 0)\",0.1,\"royalblue\",0.3,\"cyan\",0.5,\"lime\",0.7,\"yellow\",1,\"red\"],\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"heatmap-density\"]},\"property-type\":\"color-ramp\"},\"heatmap-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_symbol\":{\"icon-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-color\":{\"type\":\"color\",\"default\":\"rgba(0, 0, 0, 0)\",\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"icon-image\",\"icon-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"overridable\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-color\":{\"type\":\"color\",\"default\":\"rgba(0, 0, 0, 0)\",\"transition\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"text-field\",\"text-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_raster\":{\"raster-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-hue-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"transition\":true,\"units\":\"degrees\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-brightness-min\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-brightness-max\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-saturation\":{\"type\":\"number\",\"default\":0,\"minimum\":-1,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-contrast\":{\"type\":\"number\",\"default\":0,\"minimum\":-1,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-resampling\":{\"type\":\"enum\",\"values\":{\"linear\":{},\"nearest\":{}},\"default\":\"linear\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-fade-duration\":{\"type\":\"number\",\"default\":300,\"minimum\":0,\"transition\":false,\"units\":\"milliseconds\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_hillshade\":{\"hillshade-illumination-direction\":{\"type\":\"number\",\"default\":335,\"minimum\":0,\"maximum\":359,\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-illumination-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"viewport\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-exaggeration\":{\"type\":\"number\",\"default\":0.5,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-shadow-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-highlight-color\":{\"type\":\"color\",\"default\":\"#FFFFFF\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-accent-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_background\":{\"background-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"background-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"background-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"background-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_sky\":{\"sky-type\":{\"type\":\"enum\",\"values\":{\"gradient\":{},\"atmosphere\":{}},\"default\":\"atmosphere\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-atmosphere-sun\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"units\":\"degrees\",\"minimum\":[0,0],\"maximum\":[360,180],\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-atmosphere-sun-intensity\":{\"type\":\"number\",\"requires\":[{\"sky-type\":\"atmosphere\"}],\"default\":10,\"minimum\":0,\"maximum\":100,\"transition\":false,\"property-type\":\"data-constant\"},\"sky-gradient-center\":{\"type\":\"array\",\"requires\":[{\"sky-type\":\"gradient\"}],\"value\":\"number\",\"default\":[0,0],\"length\":2,\"units\":\"degrees\",\"minimum\":[0,0],\"maximum\":[360,180],\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-gradient-radius\":{\"type\":\"number\",\"requires\":[{\"sky-type\":\"gradient\"}],\"default\":90,\"minimum\":0,\"maximum\":180,\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-gradient\":{\"type\":\"color\",\"default\":[\"interpolate\",[\"linear\"],[\"sky-radial-progress\"],0.8,\"#87ceeb\",1,\"white\"],\"transition\":false,\"requires\":[{\"sky-type\":\"gradient\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"sky-radial-progress\"]},\"property-type\":\"color-ramp\"},\"sky-atmosphere-halo-color\":{\"type\":\"color\",\"default\":\"white\",\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"property-type\":\"data-constant\"},\"sky-atmosphere-color\":{\"type\":\"color\",\"default\":\"white\",\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"property-type\":\"data-constant\"},\"sky-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"transition\":{\"duration\":{\"type\":\"number\",\"default\":300,\"minimum\":0,\"units\":\"milliseconds\"},\"delay\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"milliseconds\"}},\"property-type\":{\"data-driven\":{\"type\":\"property-type\"},\"color-ramp\":{\"type\":\"property-type\"},\"data-constant\":{\"type\":\"property-type\"},\"constant\":{\"type\":\"property-type\"}},\"promoteId\":{\"*\":{\"type\":\"string\"}}};\n\n//      \nfunction isExpressionFilter(filter) {\n    if (filter === true || filter === false) {\n        return true;\n    }\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n    case 'in':\n        return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n    case 'any':\n    case 'all':\n        for (var i = 0, list = filter.slice(1); i < list.length; i += 1) {\n            var f = list[i];\n\n        if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n    default:\n        return true;\n    }\n}\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @param {string} layerType the type of the layer this filter will be applied to.\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter, layerType) {\n    if ( layerType === void 0 ) layerType = 'fill';\n\n    if (filter === null || filter === undefined) {\n        return {\n            filter: function () { return true; },\n            needGeometry: false,\n            needFeature: false\n        };\n    }\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n    var filterExp = filter;\n    var staticFilter = true;\n    try {\n        staticFilter = extractStaticFilter(filterExp);\n    } catch (e) {\n        console.warn((\"Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\\nand paste the contents of this message in the report.\\nThank you!\\nFilter Expression:\\n\" + (JSON.stringify(filterExp, null, 2)) + \"\\n        \"));\n    }\n    // Compile the static component of the filter\n    var filterSpec = spec[(\"filter_\" + layerType)];\n    var compiledStaticFilter = createExpression(staticFilter, filterSpec);\n    var filterFunc = null;\n    if (compiledStaticFilter.result === 'error') {\n        throw new Error(compiledStaticFilter.value.map(function (err) { return ((err.key) + \": \" + (err.message)); }).join(', '));\n    } else {\n        filterFunc = function (globalProperties, feature, canonical) { return compiledStaticFilter.value.evaluate(globalProperties, feature, {}, canonical); };\n    }\n    // If the static component is not equal to the entire filter then we have a dynamic component\n    // Compile the dynamic component separately\n    var dynamicFilterFunc = null;\n    var needFeature = null;\n    if (staticFilter !== filterExp) {\n        var compiledDynamicFilter = createExpression(filterExp, filterSpec);\n        if (compiledDynamicFilter.result === 'error') {\n            throw new Error(compiledDynamicFilter.value.map(function (err) { return ((err.key) + \": \" + (err.message)); }).join(', '));\n        } else {\n            dynamicFilterFunc = function (globalProperties, feature, canonical, featureTileCoord, featureDistanceData) { return compiledDynamicFilter.value.evaluate(globalProperties, feature, {}, canonical, undefined, undefined, featureTileCoord, featureDistanceData); };\n            needFeature = !isFeatureConstant(compiledDynamicFilter.value.expression);\n        }\n    }\n    filterFunc = filterFunc;\n    var needGeometry = geometryNeeded(staticFilter);\n    return {\n        filter: filterFunc,\n        dynamicFilter: dynamicFilterFunc ? dynamicFilterFunc : undefined,\n        needGeometry: needGeometry,\n        needFeature: !!needFeature\n    };\n}\nfunction extractStaticFilter(filter) {\n    if (!isDynamicFilter(filter)) {\n        return filter;\n    }\n    // Shallow copy so we can replace expressions in-place\n    var result = deepUnbundle(filter);\n    // 1. Union branches\n    unionDynamicBranches(result);\n    // 2. Collapse dynamic conditions to  `true`\n    result = collapseDynamicBooleanExpressions(result);\n    return result;\n}\nfunction collapseDynamicBooleanExpressions(expression) {\n    if (!Array.isArray(expression)) {\n        return expression;\n    }\n    var collapsed = collapsedExpression(expression);\n    if (collapsed === true) {\n        return collapsed;\n    } else {\n        return collapsed.map(function (subExpression) { return collapseDynamicBooleanExpressions(subExpression); });\n    }\n}\n/**\n * Traverses the expression and replaces all instances of branching on a\n * `dynamic` conditional (such as `['pitch']` or `['distance-from-center']`)\n * into an `any` expression.\n * This ensures that all possible outcomes of a `dynamic` branch are considered\n * when evaluating the expression upfront during filtering.\n *\n * @param {Array<any>} filter the filter expression mutated in-place.\n */\nfunction unionDynamicBranches(filter) {\n    var isBranchingDynamically = false;\n    var branches = [];\n    if (filter[0] === 'case') {\n        for (var i = 1; i < filter.length - 1; i += 2) {\n            isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[i]);\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'match') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n        for (var i$1 = 2; i$1 < filter.length - 1; i$1 += 2) {\n            branches.push(filter[i$1 + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'step') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n        for (var i$2 = 1; i$2 < filter.length - 1; i$2 += 2) {\n            branches.push(filter[i$2 + 1]);\n        }\n    }\n    if (isBranchingDynamically) {\n        filter.length = 0;\n        filter.push.apply(filter, [ 'any' ].concat( branches ));\n    }\n    // traverse and recurse into children\n    for (var i$3 = 1; i$3 < filter.length; i$3++) {\n        unionDynamicBranches(filter[i$3]);\n    }\n}\nfunction isDynamicFilter(filter) {\n    // Base Cases\n    if (!Array.isArray(filter)) {\n        return false;\n    }\n    if (isRootExpressionDynamic(filter[0])) {\n        return true;\n    }\n    for (var i = 1; i < filter.length; i++) {\n        var child = filter[i];\n        if (isDynamicFilter(child)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isRootExpressionDynamic(expression) {\n    return expression === 'pitch' || expression === 'distance-from-center';\n}\nvar dynamicConditionExpressions = new Set([\n    'in',\n    '==',\n    '!=',\n    '>',\n    '>=',\n    '<',\n    '<=',\n    'to-boolean'\n]);\nfunction collapsedExpression(expression) {\n    if (dynamicConditionExpressions.has(expression[0])) {\n        for (var i = 1; i < expression.length; i++) {\n            var param = expression[i];\n            if (isDynamicFilter(param)) {\n                return true;\n            }\n        }\n    }\n    return expression;\n}\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter))\n        { return false; }\n    if (filter[0] === 'within')\n        { return true; }\n    for (var index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index]))\n            { return true; }\n    }\n    return false;\n}\nfunction convertFilter(filter) {\n    if (!filter)\n        { return true; }\n    var op = filter[0];\n    if (filter.length <= 1)\n        { return op !== 'any'; }\n    var converted = op === '==' ? convertComparisonOp(filter[1], filter[2], '==') : op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) : op === '<' || op === '>' || op === '<=' || op === '>=' ? convertComparisonOp(filter[1], filter[2], op) : op === 'any' ? convertDisjunctionOp(filter.slice(1)) : op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) : op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) : op === 'in' ? convertInOp(filter[1], filter.slice(2)) : op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) : op === 'has' ? convertHasOp(filter[1]) : op === '!has' ? convertNegation(convertHasOp(filter[1])) : op === 'within' ? filter : true;\n    return converted;\n}\nfunction convertComparisonOp(property, value, op) {\n    switch (property) {\n    case '$type':\n        return [\n            (\"filter-type-\" + op),\n            value\n        ];\n    case '$id':\n        return [\n            (\"filter-id-\" + op),\n            value\n        ];\n    default:\n        return [\n            (\"filter-\" + op),\n            property,\n            value\n        ];\n    }\n}\nfunction convertDisjunctionOp(filters) {\n    return ['any'].concat(filters.map(convertFilter));\n}\nfunction convertInOp(property, values) {\n    if (values.length === 0) {\n        return false;\n    }\n    switch (property) {\n    case '$type':\n        return [\n            \"filter-type-in\",\n            [\n                'literal',\n                values\n            ]\n        ];\n    case '$id':\n        return [\n            \"filter-id-in\",\n            [\n                'literal',\n                values\n            ]\n        ];\n    default:\n        if (values.length > 200 && !values.some(function (v) { return typeof v !== typeof values[0]; })) {\n            return [\n                'filter-in-large',\n                property,\n                [\n                    'literal',\n                    values.sort(compare)\n                ]\n            ];\n        } else {\n            return [\n                'filter-in-small',\n                property,\n                [\n                    'literal',\n                    values\n                ]\n            ];\n        }\n    }\n}\nfunction convertHasOp(property) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [\"filter-has-id\"];\n    default:\n        return [\n            \"filter-has\",\n            property\n        ];\n    }\n}\nfunction convertNegation(filter) {\n    return [\n        '!',\n        filter\n    ];\n}\n\n//      \nvar refProperties = [\n    'type',\n    'source',\n    'source-layer',\n    'minzoom',\n    'maxzoom',\n    'filter',\n    'layout'\n];\n\n//      \nfunction deref(layer, parent) {\n    var result = {};\n    for (var k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n    refProperties.forEach(function (k) {\n        if (k in parent) {\n            result[k] = parent[k];\n        }\n    });\n    return result;\n}\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nfunction derefLayers(layers) {\n    layers = layers.slice();\n    var map = Object.create(null);\n    for (var i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n    for (var i$1 = 0; i$1 < layers.length; i$1++) {\n        if ('ref' in layers[i$1]) {\n            layers[i$1] = deref(layers[i$1], map[layers[i$1].ref]);\n        }\n    }\n    return layers;\n}\n\nvar fontWeights = {\n    thin: 100,\n    hairline: 100,\n    'ultra-light': 100,\n    'extra-light': 100,\n    light: 200,\n    book: 300,\n    regular: 400,\n    normal: 400,\n    plain: 400,\n    roman: 400,\n    standard: 400,\n    medium: 500,\n    'semi-bold': 600,\n    'demi-bold': 600,\n    bold: 700,\n    heavy: 800,\n    black: 800,\n    'extra-bold': 800,\n    'ultra-black': 900,\n    'extra-black': 900,\n    'ultra-bold': 900,\n    'heavy-black': 900,\n    fat: 900,\n    poster: 900\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\nvar fontCache = {};\nvar mapboxToCssFont = function (fonts, size, lineHeight) {\n    var cssData = fontCache[fonts];\n    if (!cssData) {\n        if (!Array.isArray(fonts)) {\n            fonts = [fonts];\n        }\n        var weight = 400;\n        var style = 'normal';\n        var fontFamilies = [];\n        var haveWeight, haveStyle;\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            var parts = font.split(' ');\n            var maybeWeight = parts[parts.length - 1].toLowerCase();\n            if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n                style = haveStyle ? style : maybeWeight;\n                parts.pop();\n                maybeWeight = parts[parts.length - 1].toLowerCase();\n            } else if (italicRE.test(maybeWeight)) {\n                maybeWeight = maybeWeight.replace(italicRE, '');\n                style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n            }\n            for (var w in fontWeights) {\n                var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n                if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n                    weight = haveWeight ? weight : fontWeights[w];\n                    parts.pop();\n                    if (previousPart && w.startsWith(previousPart)) {\n                        parts.pop();\n                    }\n                    break;\n                }\n            }\n            if (!haveWeight && typeof maybeWeight == 'number') {\n                weight = maybeWeight;\n            }\n            var fontFamily = parts.join(sp).replace('Klokantech Noto Sans', 'Noto Sans');\n            if (fontFamily.indexOf(sp) !== -1) {\n                fontFamily = '\"' + fontFamily + '\"';\n            }\n            fontFamilies.push(fontFamily);\n        }\n        // CSS font property: font-style font-weight font-size/line-height font-family\n        cssData = fontCache[fonts] = [\n            style,\n            weight,\n            fontFamilies\n        ];\n    }\n    return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n};\n\nvar mb2css = /*@__PURE__*/getDefaultExportFromCjs(mapboxToCssFont);\n\n/**\n * Generates a shaded relief image given elevation data.  Uses a 3x3\n * neighborhood for determining slope and aspect.\n * @param {Array<ImageData>} inputs Array of input images.\n * @param {Object} data Data added in the \"beforeoperations\" event.\n * @return {ImageData} Output image.\n */\nfunction hillshade(inputs, data) {\n    var elevationImage = inputs[0];\n    var width = elevationImage.width;\n    var height = elevationImage.height;\n    var elevationData = elevationImage.data;\n    var shadeData = new Uint8ClampedArray(elevationData.length);\n    var dp = data.resolution * 2;\n    var maxX = width - 1;\n    var maxY = height - 1;\n    var pixel = [\n        0,\n        0,\n        0,\n        0\n    ];\n    var twoPi = 2 * Math.PI;\n    var halfPi = Math.PI / 2;\n    var sunEl = Math.PI * data.sunEl / 180;\n    var sunAz = Math.PI * data.sunAz / 180;\n    var cosSunEl = Math.cos(sunEl);\n    var sinSunEl = Math.sin(sunEl);\n    var highlightColor = data.highlightColor;\n    var shadowColor = data.shadowColor;\n    var accentColor = data.accentColor;\n    var encoding = data.encoding;\n    var pixelX, pixelY, x0, x1, y0, y1, offset, z0, z1, dzdx, dzdy, slope, aspect, accent, scaled, shade, scaledAccentColor, compositeShadeColor, clamp, slopeScaleBase, scaledSlope, cosIncidence;\n    function calculateElevation(pixel, encoding) {\n        if ( encoding === void 0 ) encoding = 'mapbox';\n\n        // The method used to extract elevations from the DEM.\n        //\n        // The supported methods are the Mapbox format\n        // (red * 256 * 256 + green * 256 + blue) * 0.1 - 10000\n        // and the Terrarium format\n        // (red * 256 + green + blue / 256) - 32768\n        //\n        if (encoding === 'mapbox') {\n            return (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1 - 10000;\n        }\n        if (encoding === 'terrarium') {\n            return pixel[0] * 256 + pixel[1] + pixel[2] / 256 - 32768;\n        }\n    }\n    for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n        y0 = pixelY === 0 ? 0 : pixelY - 1;\n        y1 = pixelY === maxY ? maxY : pixelY + 1;\n        for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n            x0 = pixelX === 0 ? 0 : pixelX - 1;\n            x1 = pixelX === maxX ? maxX : pixelX + 1;\n            // determine elevation for (x0, pixelY)\n            offset = (pixelY * width + x0) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z0 = data.vert * calculateElevation(pixel, encoding);\n            // determine elevation for (x1, pixelY)\n            offset = (pixelY * width + x1) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z1 = data.vert * calculateElevation(pixel, encoding);\n            dzdx = (z1 - z0) / dp;\n            // determine elevation for (pixelX, y0)\n            offset = (y0 * width + pixelX) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z0 = data.vert * calculateElevation(pixel, encoding);\n            // determine elevation for (pixelX, y1)\n            offset = (y1 * width + pixelX) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z1 = data.vert * calculateElevation(pixel, encoding);\n            dzdy = (z1 - z0) / dp;\n            aspect = Math.atan2(dzdy, -dzdx);\n            if (aspect < 0) {\n                aspect = halfPi - aspect;\n            } else if (aspect > halfPi) {\n                aspect = twoPi - aspect + halfPi;\n            } else {\n                aspect = halfPi - aspect;\n            }\n            // Bootstrap slope and corresponding incident values\n            slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n            cosIncidence = sinSunEl * Math.cos(slope) + cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n            accent = Math.cos(slope);\n            // 255 for Hex colors\n            scaled = 255 * cosIncidence;\n            /*\n       * The following is heavily inspired\n       * by [Maplibre's equivalent WebGL shader](https://github.com/maplibre/maplibre-gl-js/blob/main/src/shaders/hillshade.fragment.glsl)\n       */\n            // Forces given value to stay between two given extremes\n            clamp = Math.min(Math.max(2 * data.sunEl, 0), 1);\n            // Intensity basis for hillshade opacity\n            slopeScaleBase = 1.875 - data.opacity * 1.75;\n            // Intensity interpolation so that higher intensity values create more opaque hillshading\n            scaledSlope = data.opacity !== 0.5 ? halfPi * ((Math.pow(slopeScaleBase, slope) - 1) / (Math.pow(slopeScaleBase, halfPi) - 1)) : slope;\n            // Accent hillshade color with given accentColor to emphasize rougher terrain\n            scaledAccentColor = {\n                r: (1 - accent) * accentColor.r * clamp * 255,\n                g: (1 - accent) * accentColor.g * clamp * 255,\n                b: (1 - accent) * accentColor.b * clamp * 255,\n                a: (1 - accent) * accentColor.a * clamp * 255\n            };\n            // Allows highlight vs shadow discrimination\n            shade = Math.abs(((aspect + sunAz) / Math.PI + 0.5) % 2 - 1);\n            // Creates a composite color mix between highlight & shadow colors to emphasize slopes\n            compositeShadeColor = {\n                r: (highlightColor.r * (1 - shade) + shadowColor.r * shade) * scaled,\n                g: (highlightColor.g * (1 - shade) + shadowColor.g * shade) * scaled,\n                b: (highlightColor.b * (1 - shade) + shadowColor.b * shade) * scaled,\n                a: (highlightColor.a * (1 - shade) + shadowColor.a * shade) * scaled\n            };\n            // Fill in result color value\n            offset = (pixelY * width + pixelX) * 4;\n            shadeData[offset] = scaledAccentColor.r * (1 - shade) + compositeShadeColor.r;\n            shadeData[offset + 1] = scaledAccentColor.g * (1 - shade) + compositeShadeColor.g;\n            shadeData[offset + 2] = scaledAccentColor.b * (1 - shade) + compositeShadeColor.b;\n            // Key opacity on the scaledSlope to improve legibility by increasing higher elevation rates' contrast\n            shadeData[offset + 3] = elevationData[offset + 3] * data.opacity * clamp * Math.sin(scaledSlope);\n        }\n    }\n    return new ImageData(shadeData, width, height);\n}\n\nvar mapboxBaseUrl = 'https://api.mapbox.com';\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\nfunction getMapboxPath(url) {\n    var startsWith = 'mapbox://';\n    if (url.indexOf(startsWith) !== 0) {\n        return '';\n    }\n    return url.slice(startsWith.length);\n}\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\nfunction normalizeSpriteUrl(url, token, styleUrl) {\n    var mapboxPath = getMapboxPath(url);\n    if (!mapboxPath) {\n        return decodeURI(new URL(url, styleUrl).href);\n    }\n    var startsWith = 'sprites/';\n    if (mapboxPath.indexOf(startsWith) !== 0) {\n        throw new Error((\"unexpected sprites url: \" + url));\n    }\n    var sprite = mapboxPath.slice(startsWith.length);\n    return (mapboxBaseUrl + \"/styles/v1/\" + sprite + \"/sprite?access_token=\" + token);\n}\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\nfunction normalizeStyleUrl(url, token) {\n    var mapboxPath = getMapboxPath(url);\n    if (!mapboxPath) {\n        return decodeURI(new URL(url, location.href).href);\n    }\n    var startsWith = 'styles/';\n    if (mapboxPath.indexOf(startsWith) !== 0) {\n        throw new Error((\"unexpected style url: \" + url));\n    }\n    var style = mapboxPath.slice(startsWith.length);\n    return (mapboxBaseUrl + \"/styles/v1/\" + style + \"?&access_token=\" + token);\n}\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {string} A vector tile template.\n * @private\n */\nfunction normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n    var urlObject = new URL(url, styleUrl);\n    var mapboxPath = getMapboxPath(url);\n    if (!mapboxPath) {\n        if (!token) {\n            return decodeURI(urlObject.href);\n        }\n        urlObject.searchParams.set(tokenParam, token);\n        return decodeURI(urlObject.href);\n    }\n    if (mapboxPath === 'mapbox.satellite') {\n        var sizeFactor = window.devicePixelRatio >= 1.5 ? '@2x' : '';\n        return (\"https://api.mapbox.com/v4/\" + mapboxPath + \"/{z}/{x}/{y}\" + sizeFactor + \".webp?access_token=\" + token);\n    }\n    return (\"https://{a-d}.tiles.mapbox.com/v4/\" + mapboxPath + \"/{z}/{x}/{y}.vector.pbf?access_token=\" + token);\n}\n\n/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken] Access token for 'mapbox://' urls.\n * @property {function(string, ResourceType): (Request|void)} [transformRequest]\n * Function for controlling how `ol-mapbox-style` fetches resources. Can be used for modifying\n * the url, adding headers or setting credentials options. Called with the url and the resource\n * type as arguments, this function is supposed to return a `Request` object. Without a return value,\n * the original request will not be modified. For `Tiles` and `GeoJSON` resources, only the `url` of\n * the returned request will be respected.\n * @property {string} [projection='EPSG:3857'] Only useful when working with non-standard projections.\n * Code of a projection registered with OpenLayers. All sources of the style must be provided in this\n * projection. The projection must also have a valid extent defined, which will be used to determine the\n * origin and resolutions of the tile grid for all tiled sources of the style. When provided, the bbox\n * placeholder in tile and geojson urls changes: the default is `{bbox-epsg-3857}`, when projection is e.g.\n * set to `EPSG:4326`, the bbox placeholder will be `{bbox-epsg-4326}`.\n * @property {Array<number>} [resolutions] Only useful when working with non-standard projections.\n * Resolutions for mapping resolution to the `zoom` used in the Mapbox style.\n * @property {string} [styleUrl] URL of the Mapbox GL style. Required for styles that were provided\n * as object, when they contain a relative sprite url, or sources referencing data by relative url.\n * @property {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image for an icon name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function be used for icons not in the sprite or to override sprite icons.\n * @property {string} [accessTokenParam='access_token'] Access token param. For internal use.\n */\n/**\n * @typedef {Object} ApplyStyleOptions\n * @property {string} [source=''] Source. Default is `''`, which causes the first source in the\n * style to be used.\n * @property {Array<string>} [layers] Layers. If no source is provided, the layers with the\n * provided ids will be used from the style's `layers` array. All layers need to use the same source.\n * @property {boolean} [updateSource=true] Update or create vector (tile) layer source with parameters\n * specified for the source in the mapbox style definition.\n */\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n/**\n * @param {import(\"ol/proj/Projection.js\").default} projection Projection.\n * @param {number} [tileSize=512] Tile size.\n * @return {Array<number>} Resolutions.\n */\nfunction getTileResolutions(projection, tileSize) {\n    if ( tileSize === void 0 ) tileSize = 512;\n\n    return projection.getExtent() ? createXYZ({\n        extent: projection.getExtent(),\n        tileSize: tileSize,\n        maxZoom: 22\n    }).getResolutions() : defaultResolutions;\n}\n/**\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Options} Completed options with accessToken and accessTokenParam.\n */\nfunction completeOptions(styleUrl, options) {\n    if (!options.accessToken) {\n        options = Object.assign({}, options);\n        var searchParams = new URL(styleUrl).searchParams;\n        // The last search parameter is the access token\n        searchParams.forEach(function (value, key) {\n            options.accessToken = value;\n            options.accessTokenParam = key;\n        });\n    }\n    return options;\n}\n/**\n * Applies a style function to an `ol/layer/VectorTile` or `ol/layer/Vector`\n * with an `ol/source/VectorTile` or an `ol/source/Vector`. If the layer does not have a source\n * yet, it will be created and populated from the information in the `glStyle` (unless `updateSource` is\n * set to `false`).\n *\n * **Example:**\n * ```js\n * import {applyStyle} from 'ol-mapbox-style';\n * import {VectorTile} from 'ol/layer.js';\n *\n * const layer = new VectorTile({declutter: true});\n * applyStyle(layer, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n *\n * The style function will render all layers from the `glStyle` object that use the source\n * of the first layer, the specified `source`, or a subset of layers from the same source. The\n * source needs to be a `\"type\": \"vector\"` or `\"type\": \"geojson\"` source.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * @param {VectorTileLayer|VectorLayer} layer OpenLayers layer. When the layer has a source configured,\n * it will be modified to use the configuration from the glStyle's `source`. Options specified on the\n * layer's source will override those from the glStyle's `source`, except for `url` and\n * `tileUrlFunction`. When the source projection is the default (`EPSG:3857`), the `tileGrid` will\n * also be overridden. If you'd rather not have ol-mapbox-style modify the source, configure `applyStyle()`\n * with the `updateSource: false` option.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>|Options&ApplyStyleOptions} [sourceOrLayersOrOptions] Options or\n * `source` key or an array of layer `id`s from the Mapbox Style object. When a `source` key is\n * provided, all layers for the specified source will be included in the style function. When layer\n * `id`s are provided, they must be from layers that use the same source. When not provided or a falsey\n * value, all layers using the first source specified in the glStyle will be rendered.\n * @param {Options&ApplyStyleOptions|string} [optionsOrPath] **Deprecated**. Options. Alternatively the path of the style file\n * (only required when a relative path is used for the `\"sprite\"` property of the style).\n * @param {Array<number>} [resolutions] **Deprecated**. Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections, can also be supplied with\n * options.\n * @return {Promise} Promise which will be resolved when the style can be used\n * for rendering.\n */\nfunction applyStyle(layer, glStyle, sourceOrLayersOrOptions, optionsOrPath, resolutions) {\n    if ( sourceOrLayersOrOptions === void 0 ) sourceOrLayersOrOptions = '';\n    if ( optionsOrPath === void 0 ) optionsOrPath = {};\n    if ( resolutions === void 0 ) resolutions = undefined;\n\n    var styleUrl, sourceId;\n    /** @type {Options&ApplyStyleOptions} */\n    var options;\n    var sourceOrLayers;\n    var updateSource = true;\n    if (typeof sourceOrLayersOrOptions !== 'string' && !Array.isArray(sourceOrLayersOrOptions)) {\n        options = sourceOrLayersOrOptions;\n        sourceOrLayers = options.source || options.layers;\n        optionsOrPath = options;\n    } else {\n        sourceOrLayers = sourceOrLayersOrOptions;\n    }\n    if (typeof optionsOrPath === 'string') {\n        styleUrl = optionsOrPath;\n        options = {};\n    } else {\n        styleUrl = optionsOrPath.styleUrl;\n        options = optionsOrPath;\n    }\n    if (options.updateSource === false) {\n        updateSource = false;\n    }\n    if (!resolutions) {\n        resolutions = options.resolutions;\n    }\n    if (!styleUrl && typeof glStyle === 'string' && !glStyle.trim().startsWith('{')) {\n        styleUrl = glStyle;\n    }\n    if (styleUrl) {\n        styleUrl = styleUrl.startsWith('data:') ? location.href : normalizeStyleUrl(styleUrl, options.accessToken);\n        options = completeOptions(styleUrl, options);\n    }\n    return new Promise(function (resolve, reject) {\n        // TODO: figure out where best place to check source type is\n        // Note that the source arg is an array of gl layer ids and each must be\n        // dereferenced to get source type to validate\n        getGlStyle(glStyle, options).then(function (glStyle) {\n            if (glStyle.version != 8) {\n                return reject(new Error('glStyle version 8 required.'));\n            }\n            if (!(layer instanceof VectorLayer || layer instanceof VectorTileLayer)) {\n                return reject(new Error('Can only apply to VectorLayer or VectorTileLayer'));\n            }\n            var type = layer instanceof VectorTileLayer ? 'vector' : 'geojson';\n            if (!sourceOrLayers) {\n                sourceId = Object.keys(glStyle.sources).find(function (key) {\n                    return glStyle.sources[key].type === type;\n                });\n                sourceOrLayers = sourceId;\n            } else if (Array.isArray(sourceOrLayers)) {\n                sourceId = glStyle.layers.find(function (layer) {\n                    return layer.id === sourceOrLayers[0];\n                }).source;\n            } else {\n                sourceId = sourceOrLayers;\n            }\n            if (!sourceId) {\n                return reject(new Error((\"No \" + type + \" source found in the glStyle.\")));\n            }\n            function assignSource() {\n                if (!updateSource) {\n                    return Promise.resolve();\n                }\n                if (layer instanceof VectorTileLayer) {\n                    return setupVectorSource(glStyle.sources[sourceId], styleUrl, options).then(function (source) {\n                        var targetSource = layer.getSource();\n                        if (!targetSource) {\n                            layer.setSource(source);\n                        } else if (source !== targetSource) {\n                            targetSource.setTileUrlFunction(source.getTileUrlFunction());\n                            if (typeof targetSource.setUrls === 'function' && typeof source.getUrls === 'function') {\n                                // to get correct keys for tile cache and queue\n                                targetSource.setUrls(source.getUrls());\n                            }\n                            //@ts-ignore\n                            if (!targetSource.format_) {\n                                //@ts-ignore\n                                targetSource.format_ = source.format_;\n                            }\n                            if (!targetSource.getAttributions()) {\n                                targetSource.setAttributions(source.getAttributions());\n                            }\n                            if (targetSource.getTileLoadFunction() === defaultLoadFunction) {\n                                targetSource.setTileLoadFunction(source.getTileLoadFunction());\n                            }\n                            if (equivalent(targetSource.getProjection(), source.getProjection())) {\n                                targetSource.tileGrid = source.getTileGrid();\n                            }\n                        }\n                        if (!isFinite(layer.getMaxResolution()) && !isFinite(layer.getMinZoom())) {\n                            var tileGrid = layer.getSource().getTileGrid();\n                            layer.setMaxResolution(tileGrid.getResolution(tileGrid.getMinZoom()));\n                        }\n                    });\n                }\n                var glSource = glStyle.sources[sourceId];\n                var source = layer.getSource();\n                if (!source || source.get('mapbox-source') !== glSource) {\n                    source = setupGeoJSONSource(glSource, styleUrl, options);\n                }\n                var targetSource = layer.getSource();\n                if (!targetSource) {\n                    layer.setSource(source);\n                } else if (source !== targetSource) {\n                    if (!targetSource.getAttributions()) {\n                        targetSource.setAttributions(source.getAttributions());\n                    }\n                    //@ts-ignore\n                    if (!targetSource.format_) {\n                        //@ts-ignore\n                        targetSource.format_ = source.getFormat();\n                    }\n                    //@ts-ignore\n                    targetSource.url_ = source.getUrl();\n                }\n                return Promise.resolve();\n            }\n            var spriteScale, spriteData, spriteImageUrl, style;\n            function onChange() {\n                if (!style && (!glStyle.sprite || spriteData)) {\n                    if (options.projection && !resolutions) {\n                        var projection = get$1(options.projection);\n                        var units = projection.getUnits();\n                        if (units !== 'm') {\n                            resolutions = defaultResolutions.map(function (resolution) { return resolution / METERS_PER_UNIT[units]; });\n                        }\n                    }\n                    style = stylefunction(layer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, options.getImage);\n                    if (!layer.getStyle()) {\n                        reject(new Error((\"Nothing to show for source [\" + sourceId + \"]\")));\n                    } else {\n                        assignSource().then(resolve).catch(reject);\n                    }\n                } else if (style) {\n                    layer.setStyle(style);\n                    assignSource().then(resolve).catch(reject);\n                } else {\n                    reject(new Error('Something went wrong trying to apply style.'));\n                }\n            }\n            if (glStyle.sprite) {\n                var sprite = new URL(normalizeSpriteUrl(glStyle.sprite, options.accessToken, styleUrl || location.href));\n                spriteScale = window.devicePixelRatio >= 1.5 ? 0.5 : 1;\n                var sizeFactor = spriteScale == 0.5 ? '@2x' : '';\n                var spriteUrl = sprite.origin + sprite.pathname + sizeFactor + '.json' + sprite.search;\n                new Promise(function (resolve, reject) {\n                    fetchResource('Sprite', spriteUrl, options).then(resolve).catch(function (error) {\n                        spriteUrl = sprite.origin + sprite.pathname + '.json' + sprite.search;\n                        fetchResource('Sprite', spriteUrl, options).then(resolve).catch(reject);\n                    });\n                }).then(function (spritesJson) {\n                    if (spritesJson === undefined) {\n                        reject(new Error('No sprites found.'));\n                    }\n                    spriteData = spritesJson;\n                    spriteImageUrl = sprite.origin + sprite.pathname + sizeFactor + '.png' + sprite.search;\n                    if (options.transformRequest) {\n                        var transformed = options.transformRequest(spriteImageUrl, 'SpriteImage');\n                        if (transformed instanceof Request) {\n                            spriteImageUrl = encodeURI(transformed.url);\n                        }\n                    }\n                    onChange();\n                }).catch(function (err) {\n                    reject(new Error((\"Sprites cannot be loaded: \" + spriteUrl + \": \" + (err.message))));\n                });\n            } else {\n                onChange();\n            }\n        }).catch(reject);\n    });\n}\nvar emptyObj$1 = {};\nfunction setFirstBackground(mapOrLayer, glStyle, options) {\n    glStyle.layers.some(function (layer) {\n        if (layer.type === 'background') {\n            if (mapOrLayer instanceof Layer) {\n                mapOrLayer.setBackground(function (resolution) {\n                    return getBackgroundColor(layer, resolution, options, {});\n                });\n                return true;\n            }\n            if (mapOrLayer instanceof Map || mapOrLayer instanceof LayerGroup) {\n                mapOrLayer.getLayers().push(setupBackgroundLayer(layer, options, {}));\n                return true;\n            }\n        }\n    });\n}\n/**\n * Applies properties of the Mapbox Style's first `background` layer to the\n * provided map or layer (group).\n *\n * **Example:**\n * ```js\n * import {applyBackground} from 'ol-mapbox-style';\n * import {Map} from 'ol';\n *\n * const map = new Map({target: 'map'});\n * applyBackground(map, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n * @param {Map|import(\"ol/layer/Base.js\").default} mapOrLayer OpenLayers Map or layer (group).\n * @param {Object|string} glStyle Mapbox Style object or url.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the background is applied.\n */\nfunction applyBackground(mapOrLayer, glStyle, options) {\n    if ( options === void 0 ) options = {};\n\n    return getGlStyle(glStyle, options).then(function (glStyle) {\n        setFirstBackground(mapOrLayer, glStyle, options);\n    });\n}\nfunction getSourceIdByRef(layers, ref) {\n    var sourceId;\n    layers.some(function (layer) {\n        if (layer.id == ref) {\n            sourceId = layer.source;\n            return true;\n        }\n    });\n    return sourceId;\n}\nfunction extentFromTileJSON(tileJSON, projection) {\n    var bounds = tileJSON.bounds;\n    if (bounds) {\n        var ll = fromLonLat([\n            bounds[0],\n            bounds[1]\n        ], projection);\n        var tr = fromLonLat([\n            bounds[2],\n            bounds[3]\n        ], projection);\n        return [\n            ll[0],\n            ll[1],\n            tr[0],\n            tr[1]\n        ];\n    }\n    return get$1(projection).getExtent();\n}\nfunction sourceOptionsFromTileJSON(glSource, tileJSON, options) {\n    var tileJSONSource = new TileJSON({\n        tileJSON: tileJSON,\n        tileSize: glSource.tileSize || tileJSON.tileSize || 512\n    });\n    var tileJSONDoc = tileJSONSource.getTileJSON();\n    var tileGrid = tileJSONSource.getTileGrid();\n    var projection = get$1(options.projection || 'EPSG:3857');\n    var extent = extentFromTileJSON(tileJSONDoc, projection);\n    var projectionExtent = projection.getExtent();\n    var minZoom = tileJSONDoc.minzoom || 0;\n    var maxZoom = tileJSONDoc.maxzoom || 22;\n    /** @type {import(\"ol/source/VectorTile.js\").Options} */\n    var sourceOptions = {\n        attributions: tileJSONSource.getAttributions(),\n        projection: projection,\n        tileGrid: new TileGrid({\n            origin: projectionExtent ? getTopLeft(projectionExtent) : tileGrid.getOrigin(0),\n            extent: extent || tileGrid.getExtent(),\n            minZoom: minZoom,\n            resolutions: getTileResolutions(projection, tileJSON.tileSize).slice(0, maxZoom + 1),\n            tileSize: tileGrid.getTileSize(0)\n        })\n    };\n    if (Array.isArray(tileJSONDoc.tiles)) {\n        sourceOptions.urls = tileJSONDoc.tiles;\n    } else {\n        sourceOptions.url = tileJSONDoc.tiles;\n    }\n    return sourceOptions;\n}\nfunction getBackgroundColor(glLayer, resolution, options, functionCache) {\n    var background = {\n        id: glLayer.id,\n        type: glLayer.type\n    };\n    var layout = glLayer.layout || {};\n    var paint = glLayer.paint || {};\n    background['paint'] = paint;\n    var zoom = getZoomForResolution(resolution, options.resolutions || defaultResolutions);\n    var bg, opacity;\n    if (paint['background-color'] !== undefined) {\n        bg = getValue(background, 'paint', 'background-color', zoom, emptyObj$1, functionCache);\n    }\n    if (paint['background-opacity'] !== undefined) {\n        opacity = getValue(background, 'paint', 'background-opacity', zoom, emptyObj$1, functionCache);\n    }\n    return layout.visibility == 'none' ? undefined : colorWithOpacity(bg, opacity);\n}\n/**\n * @param {Object} glLayer Mapbox Style layer object.\n * @param {Options} options Options.\n * @param {Object} functionCache Cache for functions.\n * @return {Layer} OpenLayers layer.\n */\nfunction setupBackgroundLayer(glLayer, options, functionCache) {\n    var div = document.createElement('div');\n    div.className = 'ol-mapbox-style-background';\n    div.style.position = 'absolute';\n    div.style.width = '100%';\n    div.style.height = '100%';\n    return new Layer({\n        source: new Source({}),\n        render: function render(frameState) {\n            var color = getBackgroundColor(glLayer, frameState.viewState.resolution, options, functionCache);\n            div.style.backgroundColor = color;\n            return div;\n        }\n    });\n}\n/**\n * Creates an OpenLayers VectorTile source for a gl source entry.\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string|undefined} styleUrl URL to use for the source. This is expected to be the complete http(s) url,\n * with access key applied.\n * @param {Options} options Options.\n * @return {Promise<import(\"ol/source/VectorTile\").default>} Promise resolving to a VectorTile source.\n * @private\n */\nfunction setupVectorSource(glSource, styleUrl, options) {\n    return new Promise(function (resolve, reject) {\n        getTileJson(glSource, styleUrl, options).then(function (tileJSON) {\n            var sourceOptions = sourceOptionsFromTileJSON(glSource, tileJSON, options);\n            sourceOptions.format = new MVT();\n            resolve(new VectorTileSource(sourceOptions));\n        }).catch(reject);\n    });\n}\nfunction setupVectorLayer(glSource, styleUrl, options) {\n    var layer = new VectorTileLayer({\n        declutter: true,\n        visible: false\n    });\n    setupVectorSource(glSource, styleUrl, options).then(function (source) {\n        source.set('mapbox-source', glSource);\n        layer.setSource(source);\n    }).catch(function (error) {\n        layer.setSource(undefined);\n    });\n    return layer;\n}\nfunction getBboxTemplate(projection) {\n    var projCode = projection ? projection.getCode() : 'EPSG:3857';\n    return (\"{bbox-\" + (projCode.toLowerCase().replace(/[^a-z0-9]/g, '-')) + \"}\");\n}\nfunction setupRasterLayer(glSource, styleUrl, options) {\n    var layer = new TileLayer();\n    getTileJson(glSource, styleUrl, options).then(function (tileJson) {\n        var source = new TileJSON({\n            interpolate: options.interpolate === undefined ? true : options.interpolate,\n            transition: 0,\n            crossOrigin: 'anonymous',\n            tileJSON: tileJson\n        });\n        source.tileGrid = sourceOptionsFromTileJSON(glSource, tileJson, options).tileGrid;\n        if (options.projection) {\n            //@ts-ignore\n            source.projection = get$1(options.projection);\n        }\n        var getTileUrl = source.getTileUrlFunction();\n        source.setTileUrlFunction(function (tileCoord, pixelRatio, projection) {\n            var bboxTemplate = getBboxTemplate(projection);\n            var src = getTileUrl(tileCoord, pixelRatio, projection);\n            if (src.indexOf(bboxTemplate) != -1) {\n                var bbox = source.getTileGrid().getTileCoordExtent(tileCoord);\n                src = src.replace(bboxTemplate, bbox.toString());\n            }\n            return src;\n        });\n        source.set('mapbox-source', glSource);\n        layer.setSource(source);\n    }).catch(function (error) {\n        layer.setSource(undefined);\n    });\n    return layer;\n}\n/**\n *\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string} styleUrl Style url\n * @param {Options} options ol-mapbox-style options.\n * @return {ImageLayer<Raster>} The raster layer\n */\nfunction setupHillshadeLayer(glSource, styleUrl, options) {\n    var tileLayer = setupRasterLayer(glSource, styleUrl, options);\n    /** @type {ImageLayer<Raster>} */\n    var layer = new ImageLayer({\n        source: new Raster({\n            operationType: 'image',\n            operation: hillshade,\n            sources: [tileLayer]\n        })\n    });\n    return layer;\n}\n/**\n * @param {Object} glSource glStyle source.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {VectorSource} Configured vector source.\n */\nfunction setupGeoJSONSource(glSource, styleUrl, options) {\n    var geoJsonFormat = options.projection ? new GeoJSON({ dataProjection: options.projection }) : new GeoJSON();\n    var data = glSource.data;\n    var sourceOptions = {};\n    if (typeof data == 'string') {\n        var geoJsonUrl = normalizeSourceUrl(data, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href);\n        if (options.transformRequest) {\n            var transformed = options.transformRequest(geoJsonUrl, 'GeoJSON');\n            if (transformed instanceof Request) {\n                geoJsonUrl = decodeURI(transformed.url);\n            }\n        }\n        if (/\\{bbox-[0-9a-z-]+\\}/.test(geoJsonUrl)) {\n            var extentUrl = function (extent, resolution, projection) {\n                var bboxTemplate = getBboxTemplate(projection);\n                return geoJsonUrl.replace(bboxTemplate, (\"\" + (extent.join(','))));\n            };\n            var source$1 = new VectorSource({\n                attributions: glSource.attribution,\n                format: geoJsonFormat,\n                url: extentUrl,\n                strategy: bbox\n            });\n            source$1.set('mapbox-source', glSource);\n            return source$1;\n        }\n        return new VectorSource({\n            attributions: glSource.attribution,\n            format: geoJsonFormat,\n            url: geoJsonUrl\n        });\n    }\n    sourceOptions.features = geoJsonFormat.readFeatures(data, { featureProjection: getUserProjection() || 'EPSG:3857' });\n    var source = new VectorSource(Object.assign({\n        attributions: glSource.attribution,\n        format: geoJsonFormat\n    }, sourceOptions));\n    source.set('mapbox-source', glSource);\n    return source;\n}\nfunction setupGeoJSONLayer(glSource, styleUrl, options) {\n    return new VectorLayer({\n        declutter: true,\n        source: setupGeoJSONSource(glSource, styleUrl, options),\n        visible: false\n    });\n}\nfunction prerenderRasterLayer(glLayer, layer, functionCache) {\n    var zoom = null;\n    return function (event) {\n        if (glLayer.paint && 'raster-opacity' in glLayer.paint && event.frameState.viewState.zoom !== zoom) {\n            zoom = event.frameState.viewState.zoom;\n            delete functionCache[glLayer.id];\n            updateRasterLayerProperties(glLayer, layer, zoom, functionCache);\n        }\n    };\n}\nfunction updateRasterLayerProperties(glLayer, layer, zoom, functionCache) {\n    var opacity = getValue(glLayer, 'paint', 'raster-opacity', zoom, emptyObj$1, functionCache);\n    layer.setOpacity(opacity);\n}\nfunction manageVisibility(layer, mapOrGroup) {\n    function onChange() {\n        var glStyle = mapOrGroup.get('mapbox-style');\n        if (!glStyle) {\n            return;\n        }\n        var mapboxLayers = derefLayers(glStyle.layers);\n        var layerMapboxLayerids = layer.get('mapbox-layers');\n        var visible = mapboxLayers.filter(function (mapboxLayer) {\n            return layerMapboxLayerids.includes(mapboxLayer.id);\n        }).some(function (mapboxLayer) {\n            return !mapboxLayer.layout || !mapboxLayer.layout.visibility || mapboxLayer.layout.visibility === 'visible';\n        });\n        if (layer.get('visible') !== visible) {\n            layer.setVisible(visible);\n        }\n    }\n    layer.on('change', onChange);\n    onChange();\n}\nfunction setupLayer(glStyle, styleUrl, glLayer, options) {\n    var functionCache = getFunctionCache(glStyle);\n    var glLayers = glStyle.layers;\n    var type = glLayer.type;\n    var id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n    var glSource = glStyle.sources[id];\n    var layer;\n    if (type == 'background') {\n        layer = setupBackgroundLayer(glLayer, options, functionCache);\n    } else if (glSource.type == 'vector') {\n        layer = setupVectorLayer(glSource, styleUrl, options);\n    } else if (glSource.type == 'raster') {\n        layer = setupRasterLayer(glSource, styleUrl, options);\n        layer.setVisible(glLayer.layout ? glLayer.layout.visibility !== 'none' : true);\n        layer.on('prerender', prerenderRasterLayer(glLayer, layer, functionCache));\n    } else if (glSource.type == 'geojson') {\n        layer = setupGeoJSONLayer(glSource, styleUrl, options);\n    } else if (glSource.type == 'raster-dem' && glLayer.type == 'hillshade') {\n        var hillshadeLayer = setupHillshadeLayer(glSource, styleUrl, options);\n        layer = hillshadeLayer;\n        hillshadeLayer.getSource().on('beforeoperations', function (event) {\n            var data = event.data;\n            data.resolution = event.resolution;\n            var zoom = getZoomForResolution(event.resolution, options.resolutions || defaultResolutions);\n            data.encoding = glSource.encoding;\n            data.vert = 5 * getValue(glLayer, 'paint', 'hillshade-exaggeration', zoom, emptyObj$1, functionCache);\n            data.sunAz = getValue(glLayer, 'paint', 'hillshade-illumination-direction', zoom, emptyObj$1, functionCache);\n            data.sunEl = 35;\n            data.opacity = 0.3;\n            data.highlightColor = getValue(glLayer, 'paint', 'hillshade-highlight-color', zoom, emptyObj$1, functionCache);\n            data.shadowColor = getValue(glLayer, 'paint', 'hillshade-shadow-color', zoom, emptyObj$1, functionCache);\n            data.accentColor = getValue(glLayer, 'paint', 'hillshade-accent-color', zoom, emptyObj$1, functionCache);\n        });\n        layer.setVisible(glLayer.layout ? glLayer.layout.visibility !== 'none' : true);\n    }\n    var glSourceId = id;\n    if (layer) {\n        layer.set('mapbox-source', glSourceId);\n    }\n    return layer;\n}\n/**\n * @param {*} glStyle Mapbox Style.\n * @param {Map|LayerGroup} mapOrGroup Map or layer group.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the style is loaded.\n */\nfunction processStyle(glStyle, mapOrGroup, styleUrl, options) {\n    var promises = [];\n    var view = null;\n    if (mapOrGroup instanceof Map) {\n        view = mapOrGroup.getView();\n        if (!view.isDef() && !view.getRotation() && !view.getResolutions()) {\n            var projection = options.projection ? get$1(options.projection) : view.getProjection();\n            view = new View(Object.assign(view.getProperties(), {\n                maxResolution: defaultResolutions[0] / METERS_PER_UNIT[projection.getUnits()],\n                projection: options.projection || view.getProjection()\n            }));\n            mapOrGroup.setView(view);\n        }\n        if ('center' in glStyle && !view.getCenter()) {\n            view.setCenter(fromLonLat(glStyle.center, view.getProjection()));\n        }\n        if ('zoom' in glStyle && view.getZoom() === undefined) {\n            view.setResolution(defaultResolutions[0] / METERS_PER_UNIT[view.getProjection().getUnits()] / Math.pow(2, glStyle.zoom));\n        }\n        if (!view.getCenter() || view.getZoom() === undefined) {\n            view.fit(view.getProjection().getExtent(), {\n                nearest: true,\n                size: mapOrGroup.getSize()\n            });\n        }\n    }\n    mapOrGroup.set('mapbox-style', glStyle);\n    mapOrGroup.set('mapbox-metadata', {\n        styleUrl: styleUrl,\n        options: options\n    });\n    var glLayers = glStyle.layers;\n    var layerIds = [];\n    var layer, glSourceId, id;\n    for (var i = 0, ii = glLayers.length; i < ii; ++i) {\n        var glLayer = glLayers[i];\n        var type = glLayer.type;\n        if (type == 'heatmap') {\n            //FIXME Unsupported layer type\n            throw new Error((type + \" layers are not supported\"));\n        } else {\n            id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n            // this technique assumes gl layers will be in a particular order\n            if (!id || id != glSourceId) {\n                if (layerIds.length) {\n                    promises.push(finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options));\n                    layerIds = [];\n                }\n                layer = setupLayer(glStyle, styleUrl, glLayer, options);\n                if (!(layer instanceof VectorLayer || layer instanceof VectorTileLayer)) {\n                    layerIds = [];\n                }\n                glSourceId = layer.get('mapbox-source');\n            }\n            layerIds.push(glLayer.id);\n        }\n    }\n    promises.push(finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options));\n    return Promise.all(promises);\n}\n/**\n * Loads and applies a Mapbox Style object into an OpenLayers Map or LayerGroup.\n * This includes the map background, the layers, and for Map instances that did not\n * have a View defined yet also the center and the zoom.\n *\n * **Example:**\n * ```js\n * import apply from 'ol-mapbox-style';\n *\n * apply('map', 'mapbox://styles/mapbox/bright-v9', {accessToken: 'YOUR_MAPBOX_TOKEN'});\n * ```\n *\n * The center and zoom will only be set if present in the Mapbox Style document,\n * and if not already set on the OpenLayers map.\n *\n * Layers will be added to the OpenLayers map, without affecting any layers that\n * might already be set on the map.\n *\n * Layers added by `apply()` will have two additional properties:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function sets an additional `mapbox-style` property on the OpenLayers\n * Map or LayerGroup instance, which holds the Mapbox Style object.\n *\n * @param {Map|HTMLElement|string|LayerGroup} mapOrGroupOrElement Either an existing\n * OpenLayers Map instance, or a HTML element, or the id of a HTML element that will be\n * the target of a new OpenLayers Map, or a layer group. If layer group, styles\n * releated to the map and view will be ignored.\n * @param {string|Object} style JSON style object or style url pointing to a\n * Mapbox Style object. When using Mapbox APIs, the url is the `styleUrl`\n * shown in Mapbox Studio's \"share\" panel. In addition, the `accessToken` option\n * (see below) must be set.\n * When passed as JSON style object, all OpenLayers layers created by `apply()`\n * will be immediately available, but they may not have a source yet (i.e. when\n * they are defined by a TileJSON url in the Mapbox Style document). When passed\n * as style url, layers will be added to the map when the Mapbox Style document\n * is loaded and parsed.\n * @param {Options} options Options.\n * @return {Promise<Map|LayerGroup>} A promise that resolves after all layers have been added to\n * the OpenLayers Map instance or LayerGroup, their sources set, and their styles applied. The\n * `resolve` callback will be called with the OpenLayers Map instance or LayerGroup as\n * argument.\n */\nfunction apply(mapOrGroupOrElement, style, options) {\n    if ( options === void 0 ) options = {};\n\n    var promise;\n    /** @type {Map|LayerGroup} */\n    var mapOrGroup;\n    if (typeof mapOrGroupOrElement === 'string' || mapOrGroupOrElement instanceof HTMLElement) {\n        mapOrGroup = new Map({ target: mapOrGroupOrElement });\n    } else {\n        mapOrGroup = mapOrGroupOrElement;\n    }\n    if (typeof style === 'string') {\n        var styleUrl = style.startsWith('data:') ? location.href : normalizeStyleUrl(style, options.accessToken);\n        options = completeOptions(styleUrl, options);\n        promise = new Promise(function (resolve, reject) {\n            getGlStyle(style, options).then(function (glStyle) {\n                processStyle(glStyle, mapOrGroup, styleUrl, options).then(function () {\n                    resolve(mapOrGroup);\n                }).catch(reject);\n            }).catch(function (err) {\n                reject(new Error((\"Could not load \" + style + \": \" + (err.message))));\n            });\n        });\n    } else {\n        promise = new Promise(function (resolve, reject) {\n            processStyle(style, mapOrGroup, !options.styleUrl || options.styleUrl.startsWith('data:') ? location.href : normalizeStyleUrl(options.styleUrl, options.accessToken), options).then(function () {\n                resolve(mapOrGroup);\n            }).catch(reject);\n        });\n    }\n    return promise;\n}\n/**\n * If layerIds is not empty, applies the style specified in glStyle to the layer,\n * and adds the layer to the map.\n *\n * The layer may not yet have a source when the function is called.  If so, the style\n * is applied to the layer via a once listener on the 'change:source' event.\n *\n * @param {Layer} layer An OpenLayers layer instance.\n * @param {Array<string>} layerIds Array containing layer ids of already-processed layers.\n * @param {Object} glStyle Style as a JSON object.\n * @param {string|undefined} styleUrl The original style URL. Only required\n * when a relative path is used with the `\"sprite\"` property of the style.\n * @param {Map|LayerGroup} mapOrGroup OpenLayers Map.\n * @param {Options} options Options.\n * @return {Promise} Returns a promise that resolves after the source has\n * been set on the specified layer, and the style has been applied.\n */\nfunction finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options) {\n    if ( options === void 0 ) options = {};\n\n    var minZoom = 24;\n    var maxZoom = 0;\n    var glLayers = glStyle.layers;\n    for (var i = 0, ii = glLayers.length; i < ii; ++i) {\n        var glLayer = glLayers[i];\n        if (layerIds.indexOf(glLayer.id) !== -1) {\n            minZoom = Math.min('minzoom' in glLayer ? glLayer.minzoom : 0, minZoom);\n            maxZoom = Math.max('maxzoom' in glLayer ? glLayer.maxzoom : 24, maxZoom);\n        }\n    }\n    return new Promise(function (resolve, reject) {\n        var setStyle = function () {\n            var source = layer.getSource();\n            if (!source || source.getState() === 'error') {\n                reject(new Error('Error accessing data for source ' + layer.get('mapbox-source')));\n                return;\n            }\n            if ('getTileGrid' in source) {\n                var tileGrid = /** @type {import(\"ol/source/Tile.js\").default|import(\"ol/source/VectorTile.js\").default} */\n                source.getTileGrid();\n                if (tileGrid) {\n                    var sourceMinZoom = tileGrid.getMinZoom();\n                    if (minZoom > 0 || sourceMinZoom > 0) {\n                        layer.setMaxResolution(Math.min(defaultResolutions[minZoom], tileGrid.getResolution(sourceMinZoom)) + 1e-9);\n                    }\n                    if (maxZoom < 24) {\n                        layer.setMinResolution(defaultResolutions[maxZoom] + 1e-9);\n                    }\n                }\n            } else {\n                if (minZoom > 0) {\n                    layer.setMaxResolution(defaultResolutions[minZoom] + 1e-9);\n                }\n            }\n            if (source instanceof VectorSource || source instanceof VectorTileSource) {\n                applyStyle(layer, glStyle, layerIds, Object.assign({ styleUrl: styleUrl }, options)).then(function () {\n                    manageVisibility(layer, mapOrGroup);\n                    resolve();\n                }).catch(reject);\n            } else {\n                resolve();\n            }\n        };\n        layer.set('mapbox-layers', layerIds);\n        var layers = mapOrGroup.getLayers();\n        if (layers.getArray().indexOf(layer) === -1) {\n            layers.push(layer);\n        }\n        if (layer.getSource()) {\n            setStyle();\n        } else {\n            layer.once('change:source', setStyle);\n        }\n    });\n}\n\n/** @typedef {import(\"ol\").Map} Map */\n/** @typedef {import(\"ol/layer\").Layer} Layer */\n/** @typedef {import(\"ol/layer\").Group} LayerGroup */\n/** @typedef {import(\"ol/layer\").Vector} VectorLayer */\n/** @typedef {import(\"ol/layer\").VectorTile} VectorTileLayer */\n/** @typedef {import(\"ol/source\").Source} Source */\n/**\n * @typedef {Object} FeatureIdentifier\n * @property {string|number} id The feature id.\n * @property {string} source The source id.\n */\nvar functionCacheByStyleId = {};\nvar filterCacheByStyleId = {};\nvar styleId = 0;\nfunction getStyleId(glStyle) {\n    if (!glStyle.id) {\n        glStyle.id = styleId++;\n    }\n    return glStyle.id;\n}\nfunction getStyleFunctionKey(glStyle, olLayer) {\n    return getStyleId(glStyle) + '.' + getUid(olLayer);\n}\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Function cache.\n */\nfunction getFunctionCache(glStyle) {\n    var functionCache = functionCacheByStyleId[glStyle.id];\n    if (!functionCache) {\n        functionCache = {};\n        functionCacheByStyleId[getStyleId(glStyle)] = functionCache;\n    }\n    return functionCache;\n}\nfunction clearFunctionCache() {\n    for (var key in functionCacheByStyleId) {\n        delete functionCacheByStyleId[key];\n    }\n}\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Filter cache.\n */\nfunction getFilterCache(glStyle) {\n    var filterCache = filterCacheByStyleId[glStyle.id];\n    if (!filterCache) {\n        filterCache = {};\n        filterCacheByStyleId[getStyleId(glStyle)] = filterCache;\n    }\n    return filterCache;\n}\nfunction deg2rad(degrees) {\n    return degrees * Math.PI / 180;\n}\nvar defaultResolutions = (function () {\n    var resolutions = [];\n    for (var res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n        resolutions.push(res);\n    }\n    return resolutions;\n}());\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nfunction createCanvas(width, height) {\n    if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') {\n        // eslint-disable-line\n        return new OffscreenCanvas(width, height);\n    }\n    var canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n}\nfunction getZoomForResolution(resolution, resolutions) {\n    var i = 0;\n    var ii = resolutions.length;\n    for (; i < ii; ++i) {\n        var candidate = resolutions[i];\n        if (candidate < resolution && i + 1 < ii) {\n            var zoomFactor = resolutions[i] / resolutions[i + 1];\n            return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n        }\n    }\n    return ii - 1;\n}\nvar pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options={}] Options.\n * @param {{request?: Request}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nfunction fetchResource(resourceType, url, options, metadata) {\n    if ( options === void 0 ) options = {};\n\n    if (url in pendingRequests) {\n        if (metadata) {\n            metadata.request = pendingRequests[url][0];\n        }\n        return pendingRequests[url][1];\n    }\n    var request = options.transformRequest ? options.transformRequest(url, resourceType) || new Request(url) : new Request(url);\n    if (!request.headers.get('Accept')) {\n        request.headers.set('Accept', 'application/json');\n    }\n    if (metadata) {\n        metadata.request = request;\n    }\n    var pendingRequest = fetch(request).then(function (response) {\n        delete pendingRequests[url];\n        return response.ok ? response.json() : Promise.reject(new Error('Error fetching source ' + url));\n    }).catch(function (error) {\n        delete pendingRequests[url];\n        return Promise.reject(new Error('Error fetching source ' + url));\n    });\n    pendingRequests[url] = [\n        request,\n        pendingRequest\n    ];\n    return pendingRequest;\n}\nfunction getGlStyle(glStyleOrUrl, options) {\n    if (typeof glStyleOrUrl === 'string') {\n        if (glStyleOrUrl.trim().startsWith('{')) {\n            try {\n                var glStyle = JSON.parse(glStyleOrUrl);\n                return Promise.resolve(glStyle);\n            } catch (error) {\n                return Promise.reject(error);\n            }\n        } else {\n            glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n            return fetchResource('Style', glStyleOrUrl, options);\n        }\n    } else {\n        return Promise.resolve(glStyleOrUrl);\n    }\n}\nfunction getTransformedTilesUrl(tilesUrl, options) {\n    if (options.transformRequest) {\n        var transformedRequest = options.transformRequest(tilesUrl, 'Tiles');\n        if (transformedRequest instanceof Request) {\n            return decodeURI(transformedRequest.url);\n        }\n    }\n    return tilesUrl;\n}\nvar tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Object} TileJson\n */\nfunction getTileJson(glSource, styleUrl, options) {\n    if ( options === void 0 ) options = {};\n\n    var cacheKey = [\n        styleUrl,\n        JSON.stringify(glSource)\n    ].toString();\n    var promise = tilejsonCache[cacheKey];\n    if (!promise || options.transformRequest) {\n        var url = glSource.url;\n        if (url && !glSource.tiles) {\n            var normalizedSourceUrl = normalizeSourceUrl(url, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href);\n            if (url.startsWith('mapbox://')) {\n                promise = Promise.resolve(Object.assign({}, glSource, {\n                    url: undefined,\n                    tiles: expandUrl(normalizedSourceUrl)\n                }));\n            } else {\n                var metadata = {};\n                promise = fetchResource('Source', normalizedSourceUrl, options, metadata).then(function (tileJson) {\n                    tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n                        if (tileJson.scheme === 'tms') {\n                            tileUrl = tileUrl.replace('{y}', '{-y}');\n                        }\n                        return getTransformedTilesUrl(normalizeSourceUrl(tileUrl, options.accessToken, options.accessTokenParam || 'access_token', metadata.request.url), options);\n                    });\n                    return Promise.resolve(tileJson);\n                });\n            }\n        } else {\n            glSource = Object.assign({}, glSource, {\n                tiles: glSource.tiles.map(function (tileUrl) {\n                    if (glSource.scheme === 'tms') {\n                        tileUrl = tileUrl.replace('{y}', '{-y}');\n                    }\n                    return getTransformedTilesUrl(normalizeSourceUrl(tileUrl, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href), options);\n                })\n            });\n            promise = Promise.resolve(Object.assign({}, glSource));\n        }\n        tilejsonCache[cacheKey] = promise;\n    }\n    return promise;\n}\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} spriteImage Sprite image id.\n * @param {{x: number, y: number, width: number, height: number, pixelRatio: number}} spriteImageData Sprite image data.\n * @param {number} haloWidth Halo width.\n * @param {{r: number, g: number, b: number, a: number}} haloColor Halo color.\n * @return {HTMLCanvasElement} Canvas element with the halo.\n */\nfunction drawIconHalo(spriteImage, spriteImageData, haloWidth, haloColor) {\n    var imageCanvas = document.createElement('canvas');\n    var imgSize = [\n        2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.width,\n        2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.height\n    ];\n    imageCanvas.width = imgSize[0];\n    imageCanvas.height = imgSize[1];\n    var imageContext = imageCanvas.getContext('2d');\n    imageContext.drawImage(spriteImage, spriteImageData.x, spriteImageData.y, spriteImageData.width, spriteImageData.height, haloWidth * spriteImageData.pixelRatio, haloWidth * spriteImageData.pixelRatio, spriteImageData.width, spriteImageData.height);\n    var imageData = imageContext.getImageData(0, 0, imgSize[0], imgSize[1]);\n    imageContext.globalCompositeOperation = 'destination-over';\n    imageContext.fillStyle = \"rgba(\" + (haloColor.r * 255) + \",\" + (haloColor.g * 255) + \",\" + (haloColor.b * 255) + \",\" + (haloColor.a) + \")\";\n    var data = imageData.data;\n    for (var i = 0, ii = imageData.width; i < ii; ++i) {\n        for (var j = 0, jj = imageData.height; j < jj; ++j) {\n            var index = (j * ii + i) * 4;\n            var alpha = data[index + 3];\n            if (alpha > 0) {\n                imageContext.arc(i, j, haloWidth * spriteImageData.pixelRatio, 0, 2 * Math.PI);\n            }\n        }\n    }\n    imageContext.fill();\n    return imageCanvas;\n}\nfunction smoothstep(min, max, value) {\n    var x = Math.max(0, Math.min(1, (value - min) / (max - min)));\n    return x * x * (3 - 2 * x);\n}\n/**\n * @param {HTMLImageElement} image SDF image\n * @param {{x: number, y: number, width: number, height: number}} area Area to unSDF\n * @param {{r: number, g: number, b: number, a: number}} color Color to use\n * @return {HTMLCanvasElement} Regular image\n */\nfunction drawSDF(image, area, color) {\n    var imageCanvas = document.createElement('canvas');\n    imageCanvas.width = area.width;\n    imageCanvas.height = area.height;\n    var imageContext = imageCanvas.getContext('2d');\n    imageContext.drawImage(image, area.x, area.y, area.width, area.height, 0, 0, area.width, area.height);\n    var imageData = imageContext.getImageData(0, 0, area.width, area.height);\n    var data = imageData.data;\n    for (var i = 0, ii = imageData.width; i < ii; ++i) {\n        for (var j = 0, jj = imageData.height; j < jj; ++j) {\n            var index = (j * ii + i) * 4;\n            var dist = data[index + 3] / 255;\n            var buffer = 0.75;\n            var gamma = 0.1;\n            var alpha = smoothstep(buffer - gamma, buffer + gamma, dist);\n            if (alpha > 0) {\n                data[index + 0] = Math.round(255 * color.r * alpha);\n                data[index + 1] = Math.round(255 * color.g * alpha);\n                data[index + 2] = Math.round(255 * color.b * alpha);\n                data[index + 3] = Math.round(255 * alpha);\n            } else {\n                data[index + 3] = 0;\n            }\n        }\n    }\n    imageContext.putImageData(imageData, 0, 0);\n    return imageCanvas;\n}\n/**\n * Get the OpenLayers layer instance that contains the provided Mapbox Style\n * `layer`. Note that multiple Mapbox Style layers are combined in a single\n * OpenLayers layer instance when they use the same Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} layerId Mapbox Style layer id.\n * @return {Layer} OpenLayers layer instance.\n */\nfunction getLayer(map, layerId) {\n    var layers = map.getLayers().getArray();\n    for (var i = 0, ii = layers.length; i < ii; ++i) {\n        var mapboxLayers = layers[i].get('mapbox-layers');\n        if (mapboxLayers && mapboxLayers.indexOf(layerId) !== -1) {\n            return layers[i];\n        }\n    }\n    return undefined;\n}\n/**\n * Get the OpenLayers layer instances for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Array<Layer>} OpenLayers layer instances.\n */\nfunction getLayers(map, sourceId) {\n    var result = [];\n    var layers = map.getLayers().getArray();\n    for (var i = 0, ii = layers.length; i < ii; ++i) {\n        if (layers[i].get('mapbox-source') === sourceId) {\n            result.push(layers[i]);\n        }\n    }\n    return result;\n}\n/**\n * Get the OpenLayers source instance for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Source} OpenLayers source instance.\n */\nfunction getSource(map, sourceId) {\n    var layers = map.getLayers().getArray();\n    for (var i = 0, ii = layers.length; i < ii; ++i) {\n        var source = /** @type {Layer} */\n        layers[i].getSource();\n        if (layers[i].get('mapbox-source') === sourceId) {\n            return source;\n        }\n    }\n    return undefined;\n}\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n *\n * The feature state will be stored on the OpenLayers layer matching the feature identifier, in the\n * `mapbox-featurestate` property.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer OpenLayers Map or layer to set the feature\n * state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @param {Object|null} state Feature state. Set to `null` to remove the feature state.\n */\nfunction setFeatureState(mapOrLayer, feature, state) {\n    var layers = 'getLayers' in mapOrLayer ? getLayers(mapOrLayer, feature.source) : [mapOrLayer];\n    for (var i = 0, ii = layers.length; i < ii; ++i) {\n        var featureState = layers[i].get('mapbox-featurestate');\n        if (featureState) {\n            if (state) {\n                featureState[feature.id] = state;\n            } else {\n                delete featureState[feature.id];\n            }\n            layers[i].changed();\n        } else {\n            throw new Error((\"Map or layer for source \\\"\" + (feature.source) + \"\\\" not found.\"));\n        }\n    }\n}\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer Map or layer to set the feature state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @return {Object|null} Feature state or `null` when no feature state is set for the given\n * feature identifier.\n */\nfunction getFeatureState(mapOrLayer, feature) {\n    var layers = 'getLayers' in mapOrLayer ? getLayers(mapOrLayer, feature.source) : [mapOrLayer];\n    for (var i = 0, ii = layers.length; i < ii; ++i) {\n        var featureState = layers[i].get('mapbox-featurestate');\n        if (featureState && featureState[feature.id]) {\n            return featureState[feature.id];\n        }\n    }\n    return undefined;\n}\n/**\n * Get the Mapbox Layer object for the provided `layerId`.\n * @param {Map|LayerGroup} mapOrGroup Map or LayerGroup.\n * @param {string} layerId Mapbox Layer id.\n * @return {Object} Mapbox Layer object.\n */\nfunction getMapboxLayer(mapOrGroup, layerId) {\n    var style = mapOrGroup.get('mapbox-style');\n    var layerStyle = style.layers.find(function (layer) {\n        return layer.id === layerId;\n    });\n    return layerStyle;\n}\n/**\n * Add a new Mapbox Layer object to the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Mapbox Layer object.\n * @param {string} [beforeLayerId] Optional id of the Mapbox Layer before the new layer that will be added.\n * @return {Promise<void>} Resolves when the added layer is available.\n */\nfunction addMapboxLayer(mapOrGroup, mapboxLayer, beforeLayerId) {\n    var glStyle = mapOrGroup.get('mapbox-style');\n    var mapboxLayers = glStyle.layers;\n    var spliceIndex;\n    var sourceIndex = -1;\n    if (beforeLayerId !== undefined) {\n        var beforeMapboxLayer = getMapboxLayer(mapOrGroup, beforeLayerId);\n        if (beforeMapboxLayer === undefined) {\n            throw new Error((\"Layer with id \\\"\" + beforeLayerId + \"\\\" not found.\"));\n        }\n        spliceIndex = mapboxLayers.indexOf(beforeMapboxLayer);\n    } else {\n        spliceIndex = mapboxLayers.length;\n    }\n    var sourceOffset;\n    if (spliceIndex > 0 && mapboxLayers[spliceIndex - 1].source === mapboxLayer.source) {\n        sourceIndex = spliceIndex - 1;\n        sourceOffset = -1;\n    } else if (spliceIndex < mapboxLayers.length && mapboxLayers[spliceIndex].source === mapboxLayer.source) {\n        sourceIndex = spliceIndex;\n        sourceOffset = 0;\n    }\n    if (sourceIndex === -1) {\n        var ref = mapOrGroup.get('mapbox-metadata');\n        var options = ref.options;\n        var styleUrl = ref.styleUrl;\n        var layer = setupLayer(glStyle, styleUrl, mapboxLayer, options);\n        if (beforeLayerId) {\n            var beforeLayer = getLayer(mapOrGroup, beforeLayerId);\n            var beforeLayerIndex = mapOrGroup.getLayers().getArray().indexOf(beforeLayer);\n            mapOrGroup.getLayers().insertAt(beforeLayerIndex, layer);\n        }\n        mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n        return finalizeLayer(layer, [mapboxLayer.id], glStyle, styleUrl, mapOrGroup, options);\n    }\n    if (mapboxLayers.some(function (layer) { return layer.id === mapboxLayer.id; })) {\n        throw new Error((\"Layer with id \\\"\" + (mapboxLayer.id) + \"\\\" already exists.\"));\n    }\n    var sourceLayerId = mapboxLayers[sourceIndex].id;\n    var args = styleFunctionArgs[getStyleFunctionKey(mapOrGroup.get('mapbox-style'), getLayer(mapOrGroup, sourceLayerId))];\n    mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n    if (args) {\n        var olLayer = args[0];\n        var glStyle$1 = args[1];\n        var sourceOrLayers = args[2];\n        var resolutions = args[3];\n        var spriteData = args[4];\n        var spriteImageUrl = args[5];\n        var getFonts = args[6];\n        var getImage = args[7];\n        if (Array.isArray(sourceOrLayers)) {\n            var layerIndex = sourceOrLayers.indexOf(sourceLayerId) + sourceOffset;\n            sourceOrLayers.splice(layerIndex, 0, mapboxLayer.id);\n        }\n        stylefunction(olLayer, glStyle$1, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage);\n    } else {\n        getLayer(mapOrGroup, mapboxLayers[sourceIndex].id).changed();\n    }\n    return Promise.resolve();\n}\n/**\n * Update a Mapbox Layer object in the style. The map will be re-rendered with the new style.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Updated Mapbox Layer object.\n */\nfunction updateMapboxLayer(mapOrGroup, mapboxLayer) {\n    var glStyle = mapOrGroup.get('mapbox-style');\n    var mapboxLayers = glStyle.layers;\n    var index = mapboxLayers.findIndex(function (layer) {\n        return layer.id === mapboxLayer.id;\n    });\n    if (index === -1) {\n        throw new Error((\"Layer with id \\\"\" + (mapboxLayer.id) + \"\\\" not found.\"));\n    }\n    var oldLayer = mapboxLayers[index];\n    if (oldLayer.source !== mapboxLayer.source) {\n        throw new Error('Updated layer and previous version must use the same source.');\n    }\n    delete getFunctionCache(glStyle)[mapboxLayer.id];\n    delete getFilterCache(glStyle)[mapboxLayer.id];\n    mapboxLayers[index] = mapboxLayer;\n    var args = styleFunctionArgs[getStyleFunctionKey(mapOrGroup.get('mapbox-style'), getLayer(mapOrGroup, mapboxLayer.id))];\n    if (args) {\n        stylefunction.apply(undefined, args);\n    } else {\n        getLayer(mapOrGroup, mapboxLayer.id).changed();\n    }\n}\n/**\n * Remove a Mapbox Layer object from the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string|Object} mapboxLayerIdOrLayer Mapbox Layer id or Mapbox Layer object.\n */\nfunction removeMapboxLayer(mapOrGroup, mapboxLayerIdOrLayer) {\n    var mapboxLayerId = typeof mapboxLayerIdOrLayer === 'string' ? mapboxLayerIdOrLayer : mapboxLayerIdOrLayer.id;\n    var layer = getLayer(mapOrGroup, mapboxLayerId);\n    /** @type {Array<Object>} */\n    var layerMapboxLayers = layer.get('mapbox-layers');\n    if (layerMapboxLayers.length === 1) {\n        throw new Error('Cannot remove last Mapbox layer from an OpenLayers layer.');\n    }\n    layerMapboxLayers.splice(layerMapboxLayers.indexOf(mapboxLayerId), 1);\n    var glStyle = mapOrGroup.get('mapbox-style');\n    var layers = glStyle.layers;\n    layers.splice(layers.findIndex(function (layer) { return layer.id === mapboxLayerId; }), 1);\n    var args = styleFunctionArgs[getStyleFunctionKey(glStyle, layer)];\n    if (args) {\n        var olLayer = args[0];\n        var glStyle$1 = args[1];\n        var sourceOrLayers = args[2];\n        var resolutions = args[3];\n        var spriteData = args[4];\n        var spriteImageUrl = args[5];\n        var getFonts = args[6];\n        var getImage = args[7];\n        if (Array.isArray(sourceOrLayers)) {\n            sourceOrLayers.splice(sourceOrLayers.findIndex(function (layer) { return layer === mapboxLayerId; }), 1);\n        }\n        stylefunction(olLayer, glStyle$1, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage);\n    } else {\n        getLayer(mapOrGroup, mapboxLayerId).changed();\n    }\n}    /**\n * @typedef {import(\"./apply.js\").Options} Options\n * @typedef {import('./apply.js').ResourceType} ResourceType\n * @private\n */\n\nvar hairSpacePool = Array(256).join('\\u200A');\nfunction applyLetterSpacing(text, letterSpacing) {\n    if (letterSpacing >= 0.05) {\n        var textWithLetterSpacing = '';\n        var lines = text.split('\\n');\n        var joinSpaceString = hairSpacePool.slice(0, Math.round(letterSpacing / 0.1));\n        for (var l = 0, ll = lines.length; l < ll; ++l) {\n            if (l > 0) {\n                textWithLetterSpacing += '\\n';\n            }\n            textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n        }\n        return textWithLetterSpacing;\n    }\n    return text;\n}\nvar measureContext;\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvas(1, 1).getContext('2d');\n    }\n    return measureContext;\n}\nfunction measureText(text, letterSpacing) {\n    return getMeasureContext().measureText(text).width + (text.length - 1) * letterSpacing;\n}\nvar measureCache = {};\nfunction wrapText(text, font, em, letterSpacing) {\n    if (text.indexOf('\\n') !== -1) {\n        var hardLines = text.split('\\n');\n        var lines = [];\n        for (var i = 0, ii = hardLines.length; i < ii; ++i) {\n            lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n        }\n        return lines.join('\\n');\n    }\n    var key = em + ',' + font + ',' + text + ',' + letterSpacing;\n    var wrappedText = measureCache[key];\n    if (!wrappedText) {\n        var words = text.split(' ');\n        if (words.length > 1) {\n            var ctx = getMeasureContext();\n            ctx.font = font;\n            var oneEm = ctx.measureText('M').width;\n            var maxWidth = oneEm * em;\n            var line = '';\n            var lines$1 = [];\n            // Pass 1 - wrap lines to not exceed maxWidth\n            for (var i$1 = 0, ii$1 = words.length; i$1 < ii$1; ++i$1) {\n                var word = words[i$1];\n                var testLine = line + (line ? ' ' : '') + word;\n                if (measureText(testLine, letterSpacing) <= maxWidth) {\n                    line = testLine;\n                } else {\n                    if (line) {\n                        lines$1.push(line);\n                    }\n                    line = word;\n                }\n            }\n            if (line) {\n                lines$1.push(line);\n            }\n            // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n            for (var i$2 = 0, ii$2 = lines$1.length; i$2 < ii$2 && ii$2 > 1; ++i$2) {\n                var line$1 = lines$1[i$2];\n                if (measureText(line$1, letterSpacing) < maxWidth * 0.35) {\n                    var prevWidth = i$2 > 0 ? measureText(lines$1[i$2 - 1], letterSpacing) : Infinity;\n                    var nextWidth = i$2 < ii$2 - 1 ? measureText(lines$1[i$2 + 1], letterSpacing) : Infinity;\n                    lines$1.splice(i$2, 1);\n                    ii$2 -= 1;\n                    if (prevWidth < nextWidth) {\n                        lines$1[i$2 - 1] += ' ' + line$1;\n                        i$2 -= 1;\n                    } else {\n                        lines$1[i$2] = line$1 + ' ' + lines$1[i$2];\n                    }\n                }\n            }\n            // Pass 3 - try to fill 80% of maxWidth for each line\n            for (var i$3 = 0, ii$3 = lines$1.length - 1; i$3 < ii$3; ++i$3) {\n                var line$2 = lines$1[i$3];\n                var next = lines$1[i$3 + 1];\n                if (measureText(line$2, letterSpacing) > maxWidth * 0.7 && measureText(next, letterSpacing) < maxWidth * 0.6) {\n                    var lineWords = line$2.split(' ');\n                    var lastWord = lineWords.pop();\n                    if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n                        lines$1[i$3] = lineWords.join(' ');\n                        lines$1[i$3 + 1] = lastWord + ' ' + next;\n                    }\n                    ii$3 -= 1;\n                }\n            }\n            wrappedText = lines$1.join('\\n');\n        } else {\n            wrappedText = text;\n        }\n        wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n        measureCache[key] = wrappedText;\n    }\n    return wrappedText;\n}\nvar fontFamilyRegEx = /font-family: ?([^;]*);/;\nvar stripQuotesRegEx = /(\"|')/g;\nvar loadedFontFamilies;\nfunction hasFontFamily(family) {\n    if (!loadedFontFamilies) {\n        loadedFontFamilies = {};\n        var styleSheets = document.styleSheets;\n        for (var i = 0, ii = styleSheets.length; i < ii; ++i) {\n            var styleSheet = styleSheets[i];\n            try {\n                var cssRules = styleSheet.rules || styleSheet.cssRules;\n                if (cssRules) {\n                    for (var j = 0, jj = cssRules.length; j < jj; ++j) {\n                        var cssRule = cssRules[j];\n                        if (cssRule.type == 5) {\n                            var match = cssRule.cssText.match(fontFamilyRegEx);\n                            loadedFontFamilies[match[1].replace(stripQuotesRegEx, '')] = true;\n                        }\n                    }\n                }\n            } catch (e) {\n            }\n        }\n    }\n    return family in loadedFontFamilies;\n}\nvar processedFontFamilies = {};\n/**\n * @param {Array} fonts Fonts.\n * @param {string} [templateUrl] Template URL.\n * @return {Array} Processed fonts.\n * @private\n */\nfunction getFonts(fonts, templateUrl) {\n    if ( templateUrl === void 0 ) templateUrl = 'https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css';\n\n    var fontsKey = fonts.toString();\n    if (fontsKey in processedFontFamilies) {\n        return processedFontFamilies[fontsKey];\n    }\n    var fontDescriptions = [];\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n        fonts[i] = fonts[i].replace('Arial Unicode MS', 'Arial');\n        var font = fonts[i];\n        var cssFont = mb2css(font, 1);\n        registerFont(cssFont);\n        var parts = cssFont.split(' ');\n        fontDescriptions.push([\n            parts.slice(3).join(' ').replace(/\"/g, ''),\n            parts[1],\n            parts[0]\n        ]);\n    }\n    for (var i$1 = 0, ii$1 = fontDescriptions.length; i$1 < ii$1; ++i$1) {\n        var fontDescription = fontDescriptions[i$1];\n        var family = fontDescription[0];\n        if (!hasFontFamily(family)) {\n            if (checkedFonts.get(((fontDescription[2]) + \"\\n\" + (fontDescription[1]) + \" \\n\" + family)) !== 100) {\n                var fontUrl = templateUrl.replace('{font-family}', family.replace(/ /g, '-').toLowerCase()).replace('{Font+Family}', family.replace(/ /g, '+')).replace('{fontweight}', fontDescription[1]).replace('{-fontstyle}', fontDescription[2].replace('normal', '').replace(/(.+)/, '-$1')).replace('{fontstyle}', fontDescription[2]);\n                if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n                    var markup = document.createElement('link');\n                    markup.href = fontUrl;\n                    markup.rel = 'stylesheet';\n                    document.head.appendChild(markup);\n                }\n            }\n        }\n    }\n    processedFontFamilies[fontsKey] = fonts;\n    return fonts;\n}\n\n/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n */\nvar types = {\n    'Point': 1,\n    'MultiPoint': 1,\n    'LineString': 2,\n    'MultiLineString': 2,\n    'Polygon': 3,\n    'MultiPolygon': 3\n};\nvar anchor = {\n    'center': [\n        0.5,\n        0.5\n    ],\n    'left': [\n        0,\n        0.5\n    ],\n    'right': [\n        1,\n        0.5\n    ],\n    'top': [\n        0.5,\n        0\n    ],\n    'bottom': [\n        0.5,\n        1\n    ],\n    'top-left': [\n        0,\n        0\n    ],\n    'top-right': [\n        1,\n        0\n    ],\n    'bottom-left': [\n        0,\n        1\n    ],\n    'bottom-right': [\n        1,\n        1\n    ]\n};\nvar expressionData = function (rawExpression, propertySpec) {\n    var compiledExpression = createPropertyExpression(rawExpression, propertySpec);\n    if (compiledExpression.result === 'error') {\n        throw new Error(compiledExpression.value.map(function (err) { return ((err.key) + \": \" + (err.message)); }).join(', '));\n    }\n    return compiledExpression.value;\n};\nvar emptyObj = {};\nvar zoomObj = { zoom: 0 };\nvar renderFeatureCoordinates, renderFeature;\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nfunction getValue(layer, layoutOrPaint, property, zoom, feature, functionCache, featureState) {\n    var layerId = layer.id;\n    if (!functionCache) {\n        functionCache = {};\n        console.warn('No functionCache provided to getValue()');    //eslint-disable-line no-console\n    }\n    if (!functionCache[layerId]) {\n        functionCache[layerId] = {};\n    }\n    var functions = functionCache[layerId];\n    if (!functions[property]) {\n        var value = (layer[layoutOrPaint] || emptyObj)[property];\n        var propertySpec = spec[(layoutOrPaint + \"_\" + (layer.type))][property];\n        if (value === undefined) {\n            value = propertySpec.default;\n        }\n        var isExpr = isExpression(value);\n        if (!isExpr && isFunction(value)) {\n            value = convertFunction(value, propertySpec);\n            isExpr = true;\n        }\n        if (isExpr) {\n            var compiledExpression = expressionData(value, propertySpec);\n            functions[property] = compiledExpression.evaluate.bind(compiledExpression);\n        } else {\n            if (propertySpec.type == 'color') {\n                value = Color$1.parse(value);\n            }\n            functions[property] = function () {\n                return value;\n            };\n        }\n    }\n    zoomObj.zoom = zoom;\n    return functions[property](zoomObj, feature, featureState);\n}\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getIconDeclutterMode(layer, zoom, feature, functionCache) {\n    var allowOverlap = getValue(layer, 'layout', 'icon-allow-overlap', zoom, feature, functionCache);\n    if (!allowOverlap) {\n        return 'declutter';\n    }\n    var ignorePlacement = getValue(layer, 'layout', 'icon-ignore-placement', zoom, feature, functionCache);\n    if (!ignorePlacement) {\n        return 'obstacle';\n    }\n    return 'none';\n}\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {number} zoom Zoom.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, zoom, filterCache) {\n    if (!filterCache) {\n        console.warn('No filterCache provided to evaluateFilter()');    //eslint-disable-line no-console\n    }\n    if (!(layerId in filterCache)) {\n        filterCache[layerId] = createFilter(filter).filter;\n    }\n    zoomObj.zoom = zoom;\n    return filterCache[layerId](zoomObj, feature);\n}\nvar renderTransparentEnabled = false;\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nfunction renderTransparent(enabled) {\n    if (enabled !== renderTransparentEnabled) {\n        clearFunctionCache();\n        renderTransparentEnabled = enabled;\n    }\n}\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n    if (color) {\n        if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n            return undefined;\n        }\n        var a = color.a;\n        opacity = opacity === undefined ? 1 : opacity;\n        return a === 0 ? 'transparent' : 'rgba(' + Math.round(color.r * 255 / a) + ',' + Math.round(color.g * 255 / a) + ',' + Math.round(color.b * 255 / a) + ',' + a * opacity + ')';\n    }\n    return color;\n}\nvar templateRegEx = /\\{[^{}}]*\\}/g;\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n    return text.replace(templateRegEx, function (match) {\n        return properties[match.slice(1, -1)] || '';\n    });\n}\nvar recordLayer = false;\n/**\n * Turns recording of the Mapbox Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nfunction recordStyleLayer(record) {\n    if ( record === void 0 ) record = false;\n\n    recordLayer = record;\n}\nvar styleFunctionArgs = {};\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox Style object.\n * @param {string} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox Style object.\n * @param {function(Array<string>, string=):Array<string>} getFonts Function that\n * receives a font stack and the url template from the GL style's `metadata['ol:webfonts']`\n * property (if set) as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nfunction stylefunction(olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage) {\n    if ( resolutions === void 0 ) resolutions = defaultResolutions;\n    if ( spriteData === void 0 ) spriteData = undefined;\n    if ( spriteImageUrl === void 0 ) spriteImageUrl = undefined;\n    if ( getFonts === void 0 ) getFonts = undefined;\n    if ( getImage === void 0 ) getImage = undefined;\n\n    if (typeof glStyle == 'string') {\n        glStyle = JSON.parse(glStyle);\n    }\n    if (glStyle.version != 8) {\n        throw new Error('glStyle version 8 required.');\n    }\n    styleFunctionArgs[getStyleFunctionKey(glStyle, olLayer)] = Array.from(arguments);\n    var spriteImage, spriteImageSize;\n    var spriteImageUnSDFed;\n    if (spriteImageUrl) {\n        if (typeof Image !== 'undefined') {\n            var img = new Image();\n            img.crossOrigin = 'anonymous';\n            img.onload = function () {\n                spriteImage = img;\n                spriteImageSize = [\n                    img.width,\n                    img.height\n                ];\n                olLayer.changed();\n                img.onload = null;\n            };\n            img.src = spriteImageUrl;\n        } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            //eslint-disable-line\n            var worker = self;\n            // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n            worker.postMessage({\n                action: 'loadImage',\n                src: spriteImageUrl\n            });\n            worker.addEventListener('message', function handler(event) {\n                if (event.data.action === 'imageLoaded' && event.data.src === spriteImageUrl) {\n                    spriteImage = event.data.image;\n                    spriteImageSize = [\n                        spriteImage.width,\n                        spriteImage.height\n                    ];\n                }\n            });\n        }\n    }\n    var allLayers = derefLayers(glStyle.layers);\n    var layersBySourceLayer = {};\n    var mapboxLayers = [];\n    var iconImageCache = {};\n    var patternCache = {};\n    var functionCache = getFunctionCache(glStyle);\n    var filterCache = getFilterCache(glStyle);\n    var mapboxSource;\n    for (var i = 0, ii = allLayers.length; i < ii; ++i) {\n        var layer = allLayers[i];\n        var layerId = layer.id;\n        if (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers || sourceOrLayers.indexOf(layerId) !== -1) {\n            var sourceLayer = layer['source-layer'];\n            if (!mapboxSource) {\n                mapboxSource = layer.source;\n                var source = glStyle.sources[mapboxSource];\n                if (!source) {\n                    throw new Error((\"Source \\\"\" + mapboxSource + \"\\\" is not defined\"));\n                }\n                var type = source.type;\n                if (type !== 'vector' && type !== 'geojson') {\n                    throw new Error((\"Source \\\"\" + mapboxSource + \"\\\" is not of type \\\"vector\\\" or \\\"geojson\\\", but \\\"\" + type + \"\\\"\"));\n                }\n            } else if (layer.source !== mapboxSource) {\n                throw new Error((\"Layer \\\"\" + layerId + \"\\\" does not use source \\\"\" + mapboxSource));\n            }\n            var layers = layersBySourceLayer[sourceLayer];\n            if (!layers) {\n                layers = [];\n                layersBySourceLayer[sourceLayer] = layers;\n            }\n            layers.push({\n                layer: layer,\n                index: i\n            });\n            mapboxLayers.push(layerId);\n        }\n    }\n    var textHalo = new Stroke();\n    var textColor = new Fill();\n    var styles = [];\n    /**\n   * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {string} [onlyLayer] Calculate style for this layer only.\n   * @return {Array<import(\"ol/style/Style\").default>} Style.\n   */\n    var styleFunction = function (feature, resolution, onlyLayer) {\n        var properties = feature.getProperties();\n        var layers = layersBySourceLayer[properties.layer];\n        if (!layers) {\n            return undefined;\n        }\n        var zoom = resolutions.indexOf(resolution);\n        if (zoom == -1) {\n            zoom = getZoomForResolution(resolution, resolutions);\n        }\n        var type = types[feature.getGeometry().getType()];\n        var f = {\n            id: feature.getId(),\n            properties: properties,\n            type: type\n        };\n        var featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n        var stylesLength = -1;\n        var featureBelongsToLayer;\n        for (var i = 0, ii = layers.length; i < ii; ++i) {\n            var layerData = layers[i];\n            var layer = layerData.layer;\n            var layerId = layer.id;\n            if (onlyLayer !== undefined && onlyLayer !== layerId) {\n                continue;\n            }\n            var layout = layer.layout || emptyObj;\n            var paint = layer.paint || emptyObj;\n            if (layout.visibility === 'none' || 'minzoom' in layer && zoom < layer.minzoom || 'maxzoom' in layer && zoom >= layer.maxzoom) {\n                continue;\n            }\n            var filter = layer.filter;\n            if (!filter || evaluateFilter(layerId, filter, f, zoom, filterCache)) {\n                featureBelongsToLayer = layer;\n                var color = (void 0), opacity = (void 0), fill = (void 0), stroke = (void 0), strokeColor = (void 0), style = (void 0);\n                var index = layerData.index;\n                if (type == 3 && (layer.type == 'fill' || layer.type == 'fill-extrusion')) {\n                    opacity = getValue(layer, 'paint', layer.type + '-opacity', zoom, f, functionCache, featureState);\n                    if (layer.type + '-pattern' in paint) {\n                        var fillIcon = getValue(layer, 'paint', layer.type + '-pattern', zoom, f, functionCache, featureState);\n                        if (fillIcon) {\n                            var icon = typeof fillIcon === 'string' ? fromTemplate(fillIcon, properties) : fillIcon.toString();\n                            if (spriteImage && spriteData && spriteData[icon]) {\n                                ++stylesLength;\n                                style = styles[stylesLength];\n                                if (!style || !style.getFill() || style.getStroke() || style.getText()) {\n                                    style = new Style({ fill: new Fill() });\n                                    styles[stylesLength] = style;\n                                }\n                                fill = style.getFill();\n                                style.setZIndex(index);\n                                var icon_cache_key = icon + '.' + opacity;\n                                var pattern = patternCache[icon_cache_key];\n                                if (!pattern) {\n                                    var spriteImageData = spriteData[icon];\n                                    var canvas = createCanvas(spriteImageData.width, spriteImageData.height);\n                                    var ctx = canvas.getContext('2d');\n                                    ctx.globalAlpha = opacity;\n                                    ctx.drawImage(spriteImage, spriteImageData.x, spriteImageData.y, spriteImageData.width, spriteImageData.height, 0, 0, spriteImageData.width, spriteImageData.height);\n                                    pattern = ctx.createPattern(canvas, 'repeat');\n                                    patternCache[icon_cache_key] = pattern;\n                                }\n                                fill.setColor(pattern);\n                            }\n                        }\n                    } else {\n                        color = colorWithOpacity(getValue(layer, 'paint', layer.type + '-color', zoom, f, functionCache, featureState), opacity);\n                        if (layer.type + '-outline-color' in paint) {\n                            strokeColor = colorWithOpacity(getValue(layer, 'paint', layer.type + '-outline-color', zoom, f, functionCache, featureState), opacity);\n                        }\n                        if (!strokeColor) {\n                            strokeColor = color;\n                        }\n                        if (color || strokeColor) {\n                            ++stylesLength;\n                            style = styles[stylesLength];\n                            if (!style || color && !style.getFill() || !color && style.getFill() || strokeColor && !style.getStroke() || !strokeColor && style.getStroke() || style.getText()) {\n                                style = new Style({\n                                    fill: color ? new Fill() : undefined,\n                                    stroke: strokeColor ? new Stroke() : undefined\n                                });\n                                styles[stylesLength] = style;\n                            }\n                            if (color) {\n                                fill = style.getFill();\n                                fill.setColor(color);\n                            }\n                            if (strokeColor) {\n                                stroke = style.getStroke();\n                                stroke.setColor(strokeColor);\n                                stroke.setWidth(0.5);\n                            }\n                            style.setZIndex(index);\n                        }\n                    }\n                }\n                if (type != 1 && layer.type == 'line') {\n                    color = !('line-pattern' in paint) && 'line-color' in paint ? colorWithOpacity(getValue(layer, 'paint', 'line-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'line-opacity', zoom, f, functionCache, featureState)) : undefined;\n                    var width = getValue(layer, 'paint', 'line-width', zoom, f, functionCache, featureState);\n                    if (color && width > 0) {\n                        ++stylesLength;\n                        style = styles[stylesLength];\n                        if (!style || !style.getStroke() || style.getFill() || style.getText()) {\n                            style = new Style({ stroke: new Stroke() });\n                            styles[stylesLength] = style;\n                        }\n                        stroke = style.getStroke();\n                        stroke.setLineCap(getValue(layer, 'layout', 'line-cap', zoom, f, functionCache, featureState));\n                        stroke.setLineJoin(getValue(layer, 'layout', 'line-join', zoom, f, functionCache, featureState));\n                        stroke.setMiterLimit(getValue(layer, 'layout', 'line-miter-limit', zoom, f, functionCache, featureState));\n                        stroke.setColor(color);\n                        stroke.setWidth(width);\n                        stroke.setLineDash(paint['line-dasharray'] ? getValue(layer, 'paint', 'line-dasharray', zoom, f, functionCache, featureState).map(function (x) {\n                            return x * width;\n                        }) : null);\n                        style.setZIndex(index);\n                    }\n                }\n                var hasImage = false;\n                var text = null;\n                var placementAngle = 0;\n                var icon$1 = (void 0), iconImg = (void 0), skipLabel = (void 0);\n                if ((type == 1 || type == 2) && 'icon-image' in layout) {\n                    var iconImage = getValue(layer, 'layout', 'icon-image', zoom, f, functionCache, featureState);\n                    if (iconImage) {\n                        icon$1 = typeof iconImage === 'string' ? fromTemplate(iconImage, properties) : iconImage.toString();\n                        var styleGeom = undefined;\n                        var imageElement = getImage ? getImage(olLayer, icon$1) : undefined;\n                        if (spriteImage && spriteData && spriteData[icon$1] || imageElement) {\n                            var iconRotationAlignment = getValue(layer, 'layout', 'icon-rotation-alignment', zoom, f, functionCache, featureState);\n                            if (type == 2) {\n                                var geom = feature.getGeometry();\n                                // ol package and ol-debug.js only\n                                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                                    var extent = geom.getExtent();\n                                    var size = Math.sqrt(Math.max(Math.pow((extent[2] - extent[0]) / resolution, 2), Math.pow((extent[3] - extent[1]) / resolution, 2)));\n                                    if (size > 150) {\n                                        //FIXME Do not hard-code a size of 150\n                                        var midpoint = geom.getType() === 'MultiLineString' ? geom.getFlatMidpoints() : geom.getFlatMidpoint();\n                                        if (!renderFeature) {\n                                            renderFeatureCoordinates = [\n                                                NaN,\n                                                NaN\n                                            ];\n                                            renderFeature = new RenderFeature('Point', renderFeatureCoordinates, [], {}, null);\n                                        }\n                                        styleGeom = renderFeature;\n                                        renderFeatureCoordinates[0] = midpoint[0];\n                                        renderFeatureCoordinates[1] = midpoint[1];\n                                        var placement = getValue(layer, 'layout', 'symbol-placement', zoom, f, functionCache, featureState);\n                                        if (placement === 'line' && iconRotationAlignment === 'map') {\n                                            var stride = geom.getStride();\n                                            var coordinates = geom.getFlatCoordinates();\n                                            for (var i$1 = 0, ii$1 = coordinates.length - stride; i$1 < ii$1; i$1 += stride) {\n                                                var x1 = coordinates[i$1];\n                                                var y1 = coordinates[i$1 + 1];\n                                                var x2 = coordinates[i$1 + stride];\n                                                var y2 = coordinates[i$1 + stride + 1];\n                                                var minX = Math.min(x1, x2);\n                                                var minY = Math.min(y1, y2);\n                                                var maxX = Math.max(x1, x2);\n                                                var maxY = Math.max(y1, y2);\n                                                if (midpoint[0] >= minX && midpoint[0] <= maxX && midpoint[1] >= minY && midpoint[1] <= maxY) {\n                                                    placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                                                    break;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            if (type !== 2 || styleGeom) {\n                                var iconSize = getValue(layer, 'layout', 'icon-size', zoom, f, functionCache, featureState);\n                                var iconColor = paint['icon-color'] !== undefined ? getValue(layer, 'paint', 'icon-color', zoom, f, functionCache, featureState) : null;\n                                if (!iconColor || iconColor.a !== 0) {\n                                    var haloColor = getValue(layer, 'paint', 'icon-halo-color', zoom, f, functionCache, featureState);\n                                    var haloWidth = getValue(layer, 'paint', 'icon-halo-width', zoom, f, functionCache, featureState);\n                                    var iconCacheKey = icon$1 + \".\" + iconSize + \".\" + haloWidth + \".\" + haloColor;\n                                    if (iconColor !== null) {\n                                        iconCacheKey += \".\" + iconColor;\n                                    }\n                                    iconImg = iconImageCache[iconCacheKey];\n                                    if (!iconImg) {\n                                        var declutterMode = getIconDeclutterMode(layer, zoom, f, functionCache);\n                                        var displacement = (void 0);\n                                        if ('icon-offset' in layout) {\n                                            displacement = getValue(layer, 'layout', 'icon-offset', zoom, f, functionCache, featureState).slice(0);\n                                            displacement[1] *= -1;\n                                        }\n                                        var color$1 = iconColor ? [\n                                            iconColor.r * 255,\n                                            iconColor.g * 255,\n                                            iconColor.b * 255,\n                                            iconColor.a\n                                        ] : undefined;\n                                        if (imageElement) {\n                                            var iconOptions = {\n                                                color: color$1,\n                                                rotateWithView: iconRotationAlignment === 'map',\n                                                displacement: displacement,\n                                                declutterMode: declutterMode\n                                            };\n                                            if (typeof imageElement === 'string') {\n                                                // it is a src URL\n                                                iconOptions.src = imageElement;\n                                            } else {\n                                                iconOptions.img = imageElement;\n                                                iconOptions.imgSize = [\n                                                    imageElement.width,\n                                                    imageElement.height\n                                                ];\n                                            }\n                                            iconImg = new Icon(iconOptions);\n                                        } else {\n                                            var spriteImageData$1 = spriteData[icon$1];\n                                            var img = (void 0), imgSize = (void 0), size$1 = (void 0), offset = (void 0);\n                                            if (haloWidth) {\n                                                if (spriteImageData$1.sdf) {\n                                                    img = drawIconHalo(drawSDF(spriteImage, spriteImageData$1, iconColor), {\n                                                        x: 0,\n                                                        y: 0,\n                                                        width: spriteImageData$1.width,\n                                                        height: spriteImageData$1.height,\n                                                        pixelRatio: spriteImageData$1.pixelRatio\n                                                    }, haloWidth, haloColor);\n                                                    color$1 = undefined;    // do not tint haloed icons\n                                                } else {\n                                                    img = drawIconHalo(spriteImage, spriteImageData$1, haloWidth, haloColor);\n                                                }\n                                                imgSize = [\n                                                    img.width,\n                                                    img.height\n                                                ];\n                                            } else {\n                                                if (spriteImageData$1.sdf) {\n                                                    if (!spriteImageUnSDFed) {\n                                                        spriteImageUnSDFed = drawSDF(spriteImage, {\n                                                            x: 0,\n                                                            y: 0,\n                                                            width: spriteImageSize[0],\n                                                            height: spriteImageSize[1]\n                                                        }, {\n                                                            r: 1,\n                                                            g: 1,\n                                                            b: 1,\n                                                            a: 1\n                                                        });\n                                                    }\n                                                    img = spriteImageUnSDFed;\n                                                } else {\n                                                    img = spriteImage;\n                                                }\n                                                imgSize = spriteImageSize;\n                                                size$1 = [\n                                                    spriteImageData$1.width,\n                                                    spriteImageData$1.height\n                                                ];\n                                                offset = [\n                                                    spriteImageData$1.x,\n                                                    spriteImageData$1.y\n                                                ];\n                                            }\n                                            iconImg = new Icon({\n                                                color: color$1,\n                                                img: img,\n                                                imgSize: imgSize,\n                                                size: size$1,\n                                                offset: offset,\n                                                rotateWithView: iconRotationAlignment === 'map',\n                                                scale: iconSize / spriteImageData$1.pixelRatio,\n                                                displacement: displacement,\n                                                declutterMode: declutterMode\n                                            });\n                                        }\n                                        iconImageCache[iconCacheKey] = iconImg;\n                                    }\n                                }\n                                if (iconImg) {\n                                    ++stylesLength;\n                                    style = styles[stylesLength];\n                                    if (!style || !style.getImage() || style.getFill() || style.getStroke()) {\n                                        style = new Style();\n                                        styles[stylesLength] = style;\n                                    }\n                                    style.setGeometry(styleGeom);\n                                    iconImg.setRotation(placementAngle + deg2rad(getValue(layer, 'layout', 'icon-rotate', zoom, f, functionCache, featureState)));\n                                    iconImg.setOpacity(getValue(layer, 'paint', 'icon-opacity', zoom, f, functionCache, featureState));\n                                    iconImg.setAnchor(anchor[getValue(layer, 'layout', 'icon-anchor', zoom, f, functionCache, featureState)]);\n                                    style.setImage(iconImg);\n                                    text = style.getText();\n                                    style.setText(undefined);\n                                    style.setZIndex(index);\n                                    hasImage = true;\n                                    skipLabel = false;\n                                }\n                            } else {\n                                skipLabel = true;\n                            }\n                        }\n                    }\n                }\n                if (type == 1 && layer.type === 'circle') {\n                    ++stylesLength;\n                    style = styles[stylesLength];\n                    if (!style || !style.getImage() || style.getFill() || style.getStroke()) {\n                        style = new Style();\n                        styles[stylesLength] = style;\n                    }\n                    var circleRadius = 'circle-radius' in paint ? getValue(layer, 'paint', 'circle-radius', zoom, f, functionCache, featureState) : 5;\n                    var circleStrokeColor = colorWithOpacity(getValue(layer, 'paint', 'circle-stroke-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'circle-stroke-opacity', zoom, f, functionCache, featureState));\n                    var circleColor = colorWithOpacity(getValue(layer, 'paint', 'circle-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'circle-opacity', zoom, f, functionCache, featureState));\n                    var circleStrokeWidth = getValue(layer, 'paint', 'circle-stroke-width', zoom, f, functionCache, featureState);\n                    var cache_key = circleRadius + '.' + circleStrokeColor + '.' + circleColor + '.' + circleStrokeWidth;\n                    iconImg = iconImageCache[cache_key];\n                    if (!iconImg) {\n                        iconImg = new Circle({\n                            radius: circleRadius,\n                            stroke: circleStrokeColor && circleStrokeWidth > 0 ? new Stroke({\n                                width: circleStrokeWidth,\n                                color: circleStrokeColor\n                            }) : undefined,\n                            fill: circleColor ? new Fill({ color: circleColor }) : undefined,\n                            declutterMode: 'none'\n                        });\n                        iconImageCache[cache_key] = iconImg;\n                    }\n                    style.setImage(iconImg);\n                    text = style.getText();\n                    style.setText(undefined);\n                    style.setGeometry(undefined);\n                    style.setZIndex(index);\n                    hasImage = true;\n                }\n                var label = (void 0), font = (void 0), textLineHeight = (void 0), textSize = (void 0), letterSpacing = (void 0), maxTextWidth = (void 0);\n                if ('text-field' in layout) {\n                    textSize = Math.round(getValue(layer, 'layout', 'text-size', zoom, f, functionCache, featureState));\n                    var fontArray = getValue(layer, 'layout', 'text-font', zoom, f, functionCache, featureState);\n                    textLineHeight = getValue(layer, 'layout', 'text-line-height', zoom, f, functionCache, featureState);\n                    font = mb2css(getFonts ? getFonts(fontArray, glStyle.metadata ? glStyle.metadata['ol:webfonts'] : undefined) : fontArray, textSize, textLineHeight);\n                    if (!font.includes('sans-serif')) {\n                        font += ',sans-serif';\n                    }\n                    letterSpacing = getValue(layer, 'layout', 'text-letter-spacing', zoom, f, functionCache, featureState);\n                    maxTextWidth = getValue(layer, 'layout', 'text-max-width', zoom, f, functionCache, featureState);\n                    var textField = getValue(layer, 'layout', 'text-field', zoom, f, functionCache, featureState);\n                    if (typeof textField === 'object' && textField.sections) {\n                        if (textField.sections.length === 1) {\n                            label = textField.toString();\n                        } else {\n                            label = textField.sections.reduce(function (acc, chunk, i) {\n                                var fonts = chunk.fontStack ? chunk.fontStack.split(',') : fontArray;\n                                var chunkFont = mb2css(getFonts ? getFonts(fonts) : fonts, textSize * (chunk.scale || 1), textLineHeight);\n                                var text = chunk.text;\n                                if (text === '\\n') {\n                                    acc.push('\\n', '');\n                                    return acc;\n                                }\n                                if (type == 2) {\n                                    acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                                    return;\n                                }\n                                text = wrapText(text, chunkFont, maxTextWidth, letterSpacing).split('\\n');\n                                for (var i$1 = 0, ii = text.length; i$1 < ii; ++i$1) {\n                                    if (i$1 > 0) {\n                                        acc.push('\\n', '');\n                                    }\n                                    acc.push(text[i$1], chunkFont);\n                                }\n                                return acc;\n                            }, []);\n                        }\n                    } else {\n                        label = fromTemplate(textField, properties).trim();\n                    }\n                    opacity = getValue(layer, 'paint', 'text-opacity', zoom, f, functionCache, featureState);\n                }\n                if (label && opacity && !skipLabel) {\n                    if (!hasImage) {\n                        ++stylesLength;\n                        style = styles[stylesLength];\n                        if (!style || !style.getText() || style.getFill() || style.getStroke()) {\n                            style = new Style();\n                            styles[stylesLength] = style;\n                        }\n                        style.setImage(undefined);\n                        style.setGeometry(undefined);\n                    }\n                    if (!style.getText()) {\n                        style.setText(text || new Text({\n                            padding: [\n                                2,\n                                2,\n                                2,\n                                2\n                            ]\n                        }));\n                    }\n                    text = style.getText();\n                    var textTransform = layout['text-transform'];\n                    if (textTransform == 'uppercase') {\n                        label = Array.isArray(label) ? label.map(function (t, i) { return i % 2 ? t : t.toUpperCase(); }) : label.toUpperCase();\n                    } else if (textTransform == 'lowercase') {\n                        label = Array.isArray(label) ? label.map(function (t, i) { return i % 2 ? t : t.toLowerCase(); }) : label.toLowerCase();\n                    }\n                    var wrappedLabel = Array.isArray(label) ? label : type == 2 ? applyLetterSpacing(label, letterSpacing) : wrapText(label, font, maxTextWidth, letterSpacing);\n                    text.setText(wrappedLabel);\n                    text.setFont(font);\n                    text.setRotation(deg2rad(getValue(layer, 'layout', 'text-rotate', zoom, f, functionCache, featureState)));\n                    var textAnchor = getValue(layer, 'layout', 'text-anchor', zoom, f, functionCache, featureState);\n                    var placement$1 = hasImage || type == 1 ? 'point' : getValue(layer, 'layout', 'symbol-placement', zoom, f, functionCache, featureState);\n                    var textAlign = (void 0);\n                    if (placement$1 === 'line-center') {\n                        text.setPlacement('line');\n                        textAlign = 'center';\n                    } else {\n                        text.setPlacement(placement$1);\n                    }\n                    if (placement$1 === 'line' && typeof text.setRepeat === 'function') {\n                        var symbolSpacing = getValue(layer, 'layout', 'symbol-spacing', zoom, f, functionCache, featureState);\n                        text.setRepeat(symbolSpacing * 2);\n                    }\n                    text.setOverflow(placement$1 === 'point');\n                    var textHaloWidth = getValue(layer, 'paint', 'text-halo-width', zoom, f, functionCache, featureState);\n                    var textOffset = getValue(layer, 'layout', 'text-offset', zoom, f, functionCache, featureState);\n                    var textTranslate = getValue(layer, 'paint', 'text-translate', zoom, f, functionCache, featureState);\n                    // Text offset has to take halo width and line height into account\n                    var vOffset = 0;\n                    var hOffset = 0;\n                    if (placement$1 == 'point') {\n                        textAlign = 'center';\n                        if (textAnchor.indexOf('left') !== -1) {\n                            textAlign = 'left';\n                            hOffset = textHaloWidth;\n                        } else if (textAnchor.indexOf('right') !== -1) {\n                            textAlign = 'right';\n                            hOffset = -textHaloWidth;\n                        }\n                        var textRotationAlignment = getValue(layer, 'layout', 'text-rotation-alignment', zoom, f, functionCache, featureState);\n                        text.setRotateWithView(textRotationAlignment == 'map');\n                    } else {\n                        text.setMaxAngle(deg2rad(getValue(layer, 'layout', 'text-max-angle', zoom, f, functionCache, featureState)) * label.length / wrappedLabel.length);\n                        text.setRotateWithView(false);\n                    }\n                    text.setTextAlign(textAlign);\n                    var textBaseline = 'middle';\n                    if (textAnchor.indexOf('bottom') == 0) {\n                        textBaseline = 'bottom';\n                        vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n                    } else if (textAnchor.indexOf('top') == 0) {\n                        textBaseline = 'top';\n                        vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n                    }\n                    text.setTextBaseline(textBaseline);\n                    var textJustify = getValue(layer, 'layout', 'text-justify', zoom, f, functionCache, featureState);\n                    text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n                    text.setOffsetX(textOffset[0] * textSize + hOffset + textTranslate[0]);\n                    text.setOffsetY(textOffset[1] * textSize + vOffset + textTranslate[1]);\n                    textColor.setColor(colorWithOpacity(getValue(layer, 'paint', 'text-color', zoom, f, functionCache, featureState), opacity));\n                    text.setFill(textColor);\n                    var haloColor$1 = colorWithOpacity(getValue(layer, 'paint', 'text-halo-color', zoom, f, functionCache, featureState), opacity);\n                    if (haloColor$1) {\n                        textHalo.setColor(haloColor$1);\n                        // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n                        // Halo width must be doubled because it is applied around the center of the text outline\n                        textHaloWidth *= 2;\n                        // 1/4 of text size (spec) x 2\n                        var halfTextSize = 0.5 * textSize;\n                        textHalo.setWidth(textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize);\n                        text.setStroke(textHalo);\n                    } else {\n                        text.setStroke(undefined);\n                    }\n                    var textPadding = getValue(layer, 'layout', 'text-padding', zoom, f, functionCache, featureState);\n                    var padding = text.getPadding();\n                    if (textPadding !== padding[0]) {\n                        padding[0] = textPadding;\n                        padding[1] = textPadding;\n                        padding[2] = textPadding;\n                        padding[3] = textPadding;\n                    }\n                    style.setZIndex(index);\n                }\n            }\n        }\n        if (stylesLength > -1) {\n            styles.length = stylesLength + 1;\n            if (recordLayer) {\n                if ('set' in feature) {\n                    // ol/Feature\n                    feature.set('mapbox-layer', featureBelongsToLayer);\n                } else {\n                    // ol/render/Feature\n                    feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n                }\n            }\n            return styles;\n        }\n        return undefined;\n    };\n    olLayer.setStyle(styleFunction);\n    olLayer.set('mapbox-source', mapboxSource);\n    olLayer.set('mapbox-layers', mapboxLayers);\n    olLayer.set('mapbox-featurestate', olLayer.get('mapbox-featurestate') || {});\n    return styleFunction;\n}\n/**\n * Get the the style for a specific Mapbox layer only. This can be useful for creating a legend.\n * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature OpenLayers feature.\n * @param {number} resolution View resolution.\n * @param {import(\"ol/layer\").Vector|import(\"ol/layer\").VectorTile} olLayer OpenLayers layer.\n * @param {string} layerId Id of the Mapbox layer to get the style for\n * @return {Array<import(\"ol/style\").Style>} Styles for the provided Mapbox layer.\n */\nfunction getStyleForLayer(feature, resolution, olLayer, layerId) {\n    var evaluateStyle = olLayer.getStyleFunction();\n    if (evaluateStyle.length === 3) {\n        // @ts-ignore\n        return evaluateStyle(feature, resolution, layerId);\n    }\n    return undefined;\n}\n\nexport { addMapboxLayer, apply, applyBackground, applyStyle, apply as default, getFeatureState, getLayer, getLayers, getMapboxLayer, getSource, getStyleForLayer, recordStyleLayer, removeMapboxLayer, renderTransparent, setFeatureState, stylefunction, updateMapboxLayer };\n//# sourceMappingURL=index.js.map\n","import MVT from '../src/ol/format/MVT.js';\nimport TileQueue, {\n  getTilePriority as tilePriorityFunction,\n} from '../src/ol/TileQueue.js';\nimport VectorTileLayer from '../src/ol/layer/VectorTile.js';\nimport VectorTileSource from '../src/ol/source/VectorTile.js';\nimport stringify from 'json-stringify-safe';\nimport {get} from '../src/ol/proj.js';\nimport {inView} from '../src/ol/layer/Layer.js';\nimport {stylefunction} from 'ol-mapbox-style';\n\n/** @type {any} */\nconst worker = self;\n\nlet frameState, pixelRatio, rendererTransform;\nconst canvas = new OffscreenCanvas(1, 1);\n// OffscreenCanvas does not have a style, so we mock it\ncanvas.style = {};\nconst context = canvas.getContext('2d');\n\nconst sources = {\n  landcover: new VectorTileSource({\n    maxZoom: 9,\n    format: new MVT(),\n    url: 'https://api.maptiler.com/tiles/landcover/{z}/{x}/{y}.pbf?key=get_your_own_D6rA4zTHduk6KOKTXzGB',\n  }),\n  contours: new VectorTileSource({\n    minZoom: 9,\n    maxZoom: 14,\n    format: new MVT(),\n    url: 'https://api.maptiler.com/tiles/contours/{z}/{x}/{y}.pbf?key=get_your_own_D6rA4zTHduk6KOKTXzGB',\n  }),\n  maptiler_planet: new VectorTileSource({\n    format: new MVT(),\n    maxZoom: 14,\n    url: 'https://api.maptiler.com/tiles/v3/{z}/{x}/{y}.pbf?key=get_your_own_D6rA4zTHduk6KOKTXzGB',\n  }),\n};\nconst layers = [];\n\n// Font replacement so we do not need to load web fonts in the worker\nfunction getFont(font) {\n  return font[0].replace('Noto Sans', 'serif').replace('Roboto', 'sans-serif');\n}\n\nfunction loadStyles() {\n  const styleUrl =\n    'https://api.maptiler.com/maps/topo-v2/style.json?key=get_your_own_D6rA4zTHduk6KOKTXzGB';\n\n  fetch(styleUrl)\n    .then((data) => data.json())\n    .then((styleJson) => {\n      const buckets = [];\n      let currentSource;\n      styleJson.layers.forEach((layer) => {\n        if (!layer.source) {\n          return;\n        }\n        if (currentSource !== layer.source) {\n          currentSource = layer.source;\n          buckets.push({\n            source: layer.source,\n            layers: [],\n          });\n        }\n        buckets[buckets.length - 1].layers.push(layer.id);\n      });\n\n      const spriteUrl =\n        styleJson.sprite + (pixelRatio > 1 ? '@2x' : '') + '.json';\n      const spriteImageUrl =\n        styleJson.sprite + (pixelRatio > 1 ? '@2x' : '') + '.png';\n      fetch(spriteUrl)\n        .then((data) => data.json())\n        .then((spriteJson) => {\n          buckets.forEach((bucket) => {\n            const source = sources[bucket.source];\n            if (!source) {\n              return;\n            }\n            const layer = new VectorTileLayer({\n              declutter: true,\n              source,\n              minZoom: source.getTileGrid().getMinZoom(),\n            });\n            layer.getRenderer().useContainer = function (target, transform) {\n              this.containerReused = this.getLayer() !== layers[0];\n              this.canvas = canvas;\n              this.context = context;\n              this.container = {\n                firstElementChild: canvas,\n                style: {\n                  opacity: layer.getOpacity(),\n                },\n              };\n              rendererTransform = transform;\n            };\n            stylefunction(\n              layer,\n              styleJson,\n              bucket.layers,\n              undefined,\n              spriteJson,\n              spriteImageUrl,\n              getFont\n            );\n            layers.push(layer);\n          });\n          worker.postMessage({action: 'requestRender'});\n        });\n    });\n}\n\n// Minimal map-like functionality for rendering\nconst tileQueue = new TileQueue(\n  (tile, tileSourceKey, tileCenter, tileResolution) =>\n    tilePriorityFunction(\n      frameState,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    ),\n  () => worker.postMessage({action: 'requestRender'})\n);\n\nconst maxTotalLoading = 8;\nconst maxNewLoads = 2;\n\nworker.addEventListener('message', (event) => {\n  if (event.data.action === 'requestFeatures') {\n    const layersInView = layers.filter((l) =>\n      inView(l.getLayerState(), frameState.viewState)\n    );\n    const observables = layersInView.map((l) =>\n      l.getFeatures(event.data.pixel)\n    );\n    Promise.all(observables).then((res) => {\n      const features = res.flat();\n      worker.postMessage({\n        action: 'getFeatures',\n        features: JSON.parse(stringify(features.map((e) => e.getProperties()))),\n      });\n    });\n    return;\n  }\n\n  if (event.data.action !== 'render') {\n    return;\n  }\n  frameState = event.data.frameState;\n  if (!pixelRatio) {\n    pixelRatio = frameState.pixelRatio;\n    loadStyles();\n  }\n  frameState.tileQueue = tileQueue;\n  frameState.viewState.projection = get('EPSG:3857');\n  layers.forEach((layer) => {\n    if (inView(layer.getLayerState(), frameState.viewState)) {\n      const renderer = layer.getRenderer();\n      renderer.renderFrame(frameState, canvas);\n    }\n  });\n  layers.forEach(\n    (layer) => layer.getRenderer().context && layer.renderDeclutter(frameState)\n  );\n  if (tileQueue.getTilesLoading() < maxTotalLoading) {\n    tileQueue.reprioritize();\n    tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n  }\n  const imageData = canvas.transferToImageBitmap();\n  worker.postMessage(\n    {\n      action: 'rendered',\n      imageData: imageData,\n      transform: rendererTransform,\n      frameState: JSON.parse(stringify(frameState)),\n    },\n    [imageData]\n  );\n});\n"],"names":["exports","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","i","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","serializer","replacer","cycleReplacer","stack","keys","key","slice","indexOf","join","length","thisPos","this","splice","push","call","module","obj","spaces","JSON","stringify","getSerialize","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","readPackedEnd","pbf","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","len","extraLen","realloc","writePackedVarint","arr","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","prototype","destroy","readFields","readField","result","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","readDouble","b","l","p","h","Error","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","decode","subarray","readUtf8TextDecoder","str","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","min","set","finish","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","charCodeAt","writeUtf8","writeBytes","writeRawMessage","fn","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","t","r","a","n","o","f","exp","u","sqrt","max","x","_maxEntries","_minEntries","ceil","clear","children","minX","minY","maxX","maxY","leaf","height","pop","all","_all","data","search","toBBox","collides","load","insert","_build","_splitRoot","_insert","remove","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","__esModule","definition","Object","defineProperty","enumerable","get","prop","hasOwnProperty","uidCounter_","ol_uid","PI","constructor","options","code_","code","units_","extent_","extent","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","super","units","resolution","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","Array","y","toEPSG4326","atan","EPSG4326Projection","cache","transforms","source","destination","transformFn","sourceCode","destinationCode","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","messages","AssertionError","message","name","assert","assertion","errorCode","boundingExtent","coordinates","createEmpty","ii","extendCoordinate","dest","closestSquaredDistanceXY","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","stride","extendFlatCoordinates","equals","extendXY","forEachCorner","callback","getBottomLeft","getBottomRight","getTopRight","getArea","area","getHeight","getCenter","getCorner","corner","getRotatedViewport","center","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","applyTransform","stops","width","xs","ys","_boundingExtentXYs","coordinate1","coordinate2","projection","worldWidth","worldsAway","sourceExtentWidth","projectionExtent","squaredSegmentDistance","x1","y1","x2","y2","angleInDegrees","lerp","decimals","factor","round","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","levels","info","warn","error","none","level","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","add","projectionLike","replace","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","projections","forEach","addProjections","createProjection","defaultCode","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transform","getTransform","userProjection","toUserCoordinate","fromUserCoordinate","destProjection","args","console","fromUserExtent","projections2","forwardTransform","inverseTransform","dataProjection","defaultFeatureProjection","supportedMediaTypes","getReadOptions","readProjection","featureProjection","adaptOptions","assign","getType","readFeature","readFeatures","readGeometry","writeFeature","feature","writeFeatures","features","writeGeometry","geometry","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","disposed","dispose","disposeInternal","ascending","linearFindNearest","direction","candidate","reverseSubArray","begin","tmp","extension","isArray","arr1","arr2","len1","object","property","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","dispatchEvent","event","isString","evt","Event","dispatching","pendingRemovals","propagate","handleEvent","pr","removeEventListener","getListeners","hasListener","index","listen","thisArg","once","bind","originalListener","arguments","eventsKey","listenOnce","unlistenByKey","Observable","on","un","revision_","changed","getRevision","onInternal","onceInternal","ol_key","unInternal","unByKey","ObjectEvent","oldValue","values","values_","setProperties","getKeys","getProperties","getPropertiesInternal","hasProperties","notify","eventType","ObjectEventType","addChangeListener","removeChangeListener","silent","applyProperties","unset","ua","navigator","userAgent","toLowerCase","WORKER_OFFSCREEN_CANVAS","test","devicePixelRatio","WorkerGlobalScope","OffscreenCanvas","self","Image","tmp_","passive","window","multiply","transform1","transform2","a1","d1","e1","f1","a2","d2","e2","f2","compose","dx1","dy1","sx","sy","angle","dx2","dy2","makeInverse","det","mat","transformStringDiv","transformString","node","document","createElement","style","transform2D","j","anchor","anchorX","anchorY","deltaX","deltaY","k","tmpTransform","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","lastResult","lastArgs","lastThis","called","nextArgs","memoizeOne","revision","squaredTolerance","getSimplifiedGeometry","clone","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","intersectsCoordinate","computeExtent","returnOrUpdate","rotate","scale","simplify","tolerance","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getStrideForLayout","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","setLayout","nesting","getLayoutForStride","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","ends","assignClosestPoint","maxDelta","isRing","tmpPoint","squaredDistance","assignClosestArrayPoint","deflateCoordinates","deflateCoordinatesArray","coordinatess","jj","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","x3","y3","quantizeArray","ret","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","endss","coordinatesss","interpolatePoint","fraction","cumulativeLengths","haystack","needle","comparator","mid","cmp","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","intersectsLineString","coordinatesExtent","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRing","intersectsLinearRingArray","lineStringLength","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","getCoordinateAt","getLength","getFlatMidpoint","ends_","lineStrings","appendLineString","multiLineString","interpolate","lineStringsCoordinateAtM","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","intersectsLineStringArray","deflateCoordinate","appendPoint","multiPoint","getPoint","getPoints","points","linearRing","twiceArea","linearRings","LinearRing","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","orientLinearRings","orientLinearRingsArray","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","thisLayout","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","getEndss","getFlatInteriorPoints","getInteriorPoints","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","RenderFeature","properties","id","styleFunction","id_","type_","flatCoordinates_","flatMidpoints_","properties_","midpoint","getId","getGeometry","getStyleFunction","layersPBFReader","layers","layer","layerPBFReader","version","featurePBFReader","readRawFeature","featureClass_","featureClass","geometryName_","geometryName","layerName_","layerName","layers_","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","geometryType","numEnds","getGeometryType","geom","prevEndIndex","ctor","setGeometryName","transformed","power","transformGeometryWithOptions","setGeometry","setId","pbfLayers","pbfLayer","setLayers","DROP","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","element","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","state","getState","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","background_","background","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","array","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","cappedMaxRes","easeIn","easeOut","inAndOut","animationCallback","returnValue","setTimeout","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","position","cosAngle","sinAngle","rotX","rotY","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","createSnapToResolutions","defaultMaxResolution","degrees","defaultMinResolution","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","theta","createSnapToN","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","x0","y0","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","requestAnimationFrame","currentCenter","currentResolution","w","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","toUserExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getForViewAndSize","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","inView","layerState","Base","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","map","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","Promise","resolve","getData","isVisible","view","frameState","getMapInternal","getView","layerStatesArray","getLayerGroup","find","layerExtent","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","some","arrayLayerState","createRenderer","hasRenderer","toSize","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImage","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","getSize","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","fromString","cacheSize","g","exec","hasAlpha","parseInt","substr","startsWith","split","Number","normalize","fromStringInternal_","asArray","asColorLike","createCanvasContext2D","canvasPool","settings","canvas","shift","getContext","releaseCanvas","context","clearRect","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","measureFont","measureContext","textHeights","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","left","offsetHeight","measureAndCacheTextWidth","reduce","prev","curr","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","contextInstructions","label","executeLabelInstructions","drawImage","restore","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points_","radius_","radius1","radius2_","radius2","angle_","stroke_","stroke","size_","renderOptions_","getFill","getRadius","getRadius2","getAngle","getStroke","setFill","createHitDetectionCanvas_","image","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","maxRadius","createPath_","fillStyle","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","startAngle","step","angle0","radiusC","lineTo","closePath","setRadius","color_","setColor","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometry_","geometryFunction_","defaultGeometryFunction","image_","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setImage","setText","defaultStyles","createDefaultStyle","Circle","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","setSize","maxCacheSize","shared","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","then","catch","taintedTestContext","IconImage","imageState","hitDetectionImage_","crossOrigin_","unlisten_","imageState_","src_","tainted_","initializeImage_","isTainted_","willReadFrequently","getImageData","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","fillRect","getSrc","ctx","globalCompositeOperation","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize_","imgSize","iconImage_","offset_","offsetOrigin_","offsetOrigin","HTMLCanvasElement","initialOptions_","onload","imageSize","setAnchor","iconImageSize","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","names","namedType","specific","overlapsType","oneType","otherType","LiteralExpression","CallExpression","operator","newParsingContext","variables","Set","parse","encoded","parser","parsers","parseCallExpression","item","Ops","Get","Var","Any","All","Not","Resolution","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","createParser","withArgs","arg","operation","minArgs","maxArgs","argType","argCount","expression","gotType","expectedType","argValidator","returnType","buildExpression","expected","actual","compileExpression","compileAssertionExpression","nameExpression","compileAccessorExpression","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileMatchExpression","always","rulesToStyleFunction","rules","evaluator","compiledRules","rule","styles","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","parsingContext","evaluators","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","optionalDeclutterMode","icon","buildIcon","pointsName","requireNumber","shape","buildShape","evaluateRadius","circle","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","colorLikeEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSizeLike","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getStyle","getUpdateWhileAnimating","getUpdateWhileInteracting","renderDeclutter","declutterTree","setRenderOrder","renderOrder","toStyleLike","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","endGeometry","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","sharedData","origin","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","drawFlatCoordinatess_","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryWidths","beg","keep","saveTextStates_","p0","p1","p2","p3","flatOffset","oo","cc","chunk","chunkBegin","range","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","toString","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","substring","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","widths","heights","lineWidths","baseStyle","currentWidth","currentHeight","getTextDimensions","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","beginPath","moveTo","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","pixelCoordinates","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","execute","executeHitDetection","ORDER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","forEachFeatureAtCoordinate","hitTolerance","declutteredFeatures","contextSize","newContext","indexes","maxDistanceSq","distances","distanceSq","distance","pixelIndex","getPixelIndexArray","imageData","idx","zs","executor","builderTypes","ready","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","matches","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","inversePixelTransform","pixelContext","container","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","col","row","err","useContainer","backgroundColor","layerClassName","firstElementChild","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","interimTile","transition_","transition","transitionStarts_","release","setState","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","time","inTransition","endTransition","tileLoadFunction","tileLoadFunction_","getBlankImage","naturalWidth","naturalHeight","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","triangulation","sources","gutter","renderEdges","imageSmoothingEnabled","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","steps","ud","vd","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","leftToLoad","sourceListenKey","unlistenSources_","TileRange","contains","containsTileRange","extend","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpTileRange_","isDrawableTile","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getTile","getPreload","pixelToCoordinateTransform","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","tileSize","tileResolution","getGutterForProjection","layerIndex","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","getInterpolate","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","usedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","tileSourceKey","expireCache","postRenderFunctions","preload","tileCallback","wantedTiles","tileQueue","tileCount","getTileCoordCenter","useTile","updateCacheSize","userTransform","context_","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simpleGeometry","transformGeom2D","setTransform","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","declutterBuilderGroup","imageBuilderGroup","imageReplay","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","getSquaredTolerance","getTolerance","renderFeature","loading","renderGeometry","renderFeatureInternal","getGeometries","IMAGE_REPLAYS","VECTOR_REPLAYS","boundHandleStyleImageChange_","handleStyleImageChange_","renderedLayerRevision_","renderedPixelToCoordinateTransform_","renderedRotation_","tmpTransform_","prepareTile","updateExecutorGroup_","tileImageNeedsRender_","viewHints","hifi","wantedResolution","getRenderMode","renderTileImage_","executorGroups","hasContext","layerRevision","builderState","getReplayState","dirty","renderedRenderOrder","getTileGrid","tileExtent","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","declutterExecutorGroups","tt","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","getOverlaps","lastIndexOf","executorGroup","reject","getTileCoordForCoordAndResolution","getWrapX","loadingSourceTiles","tilePixel","accumulator","concat","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","resultFeatures","hitDetect","getTileRenderTransform","worldOffset","renderMode","replayTypes","group","replayState","renderedTileResolution","renderedTileRevision","renderPixelRatio","renderScale","pixelScale","BaseVector","renderMode_","setPreload","setUseInterimTilesOnError","TileProperty","format","format_","features_","loader_","url_","getFormat","onLoad","setFeatures","onError","setLoader","loader","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","fromKey","pruneExceptNewestZ","tmpTileCoord","strict","compare","every","currentVal","res","isSorted","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","getFullTileRange","opt_direction","fullTileRanges","adaptAttributions","attributionLike","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","interpolate_","viewResolver","viewRejector","viewPromise_","getAttributionsCollapsible","refresh","setAttributions","getForProjection","extentFromProjection","resolutionsFromExtent","createForExtent","createForProjection","half","TileSourceEvent","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileCoordForTileUrlFunction","withinExtentAndZ","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","charCode","stop","urlTileCoord","replayState_","errorTileKeys","renderedTileZ","withCredentials","loadFeaturesXhr","success","failure","xhr","XMLHttpRequest","open","responseType","status","responseText","responseXML","DOMParser","parseFromString","onerror","send","xyzOptions","gridOptions","sourceTileCache","tileClass","tileGrids_","getFeaturesInExtent","tileFeatures","usedSourceTiles","cacheKey","getCacheKeyForTileKey","sourceZ","tileUrl","sourceTileState","listenChange","sourceTileKey","coordKey","newTile","getDefaultExportFromCjs","parseCSSColor_1","kCSSColorTable","clamp_css_byte","clamp_css_float","parse_css_int","parseFloat","parse_css_float","css_hue_to_rgb","m1","m2","parseCSSColor","css_str","iv","ep","fname","params","Color","rgba","ref","toArray","toArray01","toArray01PremultipliedAlpha","black","white","transparent","red","blue","Color$1","convertLiteral","convertFunction","parameters","propertySpec","default","convertIdentityFunction","zoomAndFeatureDependent","featureDependent","zoomDependent","tokens","convertTokenString","featureFunctionParameters","featureFunctionStops","zoomStops","functionType","getFunctionType","getInterpolateOperator","list","appendStopPair","convertPropertyFunction","expression$1","i$1","list$1","z$1","fixupDegenerateStepCurve","convertZoomAndPropertyFunction","isStep","base","convertZoomFunction","colorSpace","getFallback","defaultValue","stop$1","expression$2","i$2","list$2","stop$2","expression$3","i$3","list$3","stop$3","curve","interpolated","re","literal","lastIndex","ParsingError$1","ParsingError","__proto__","create","Scope","parent","bindings","has","Scope$1","NullType","kind","ObjectType","ValueType","CollatorType","FormattedType","ResolvedImageType","array$1","itemType","N","toString$1","valueMemberTypes","checkSubtype","isValidType","provided","allowedTypes","isValidNativeType","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","lhs","rhs","resolvedLocale","resolvedOptions","Collator$1","FormattedSection","fontStack","textColor","Formatted","sections","unformatted","section","factory","serialize","serialized","Formatted$1","ResolvedImage","ResolvedImage$1","validateRGBA","isValue","mixed","typeOf","Literal","evaluate","eachChild","outputDefined","Literal$1","RuntimeError","RuntimeError$1","types$2","string","number","boolean","Assertion","type$1","parsed","Assertion$1","FormatExpression","firstArg","nextTokenMayBeObject","lastExpression","content","evaluatedContent","FormatExpression$1","ImageExpression","evaluatedImageName","availableImages","ImageExpression$1","types$1","Coercion","parseColor","child","Coercion$1","geometryTypes","EvaluationContext","globals","featureState","formattedSection","_parseColorCache","canonical","featureTileCoord","featureDistanceData","canonicalID","distanceFromCenter","dX","dY","bearing","cached","EvaluationContext$1","CompoundExpression","_evaluate","ref$1","definitions","availableOverloads","overloads","signature","signatureContext","ParsingContext$1","registry","path","scope","parsedArgs","argParseFailed","arg$1","errors","signatures","actualTypes","parsed$1","register","CompoundExpression$1","CollatorExpression","CollatorExpression$1","updateBBox","bbox","boxWithinBox","bbox1","bbox2","getTileCoordinates","lat","tilesAtZoom","onBoundary","rayIntersect","pointWithinPolygon","rings","inside","ring","len2","pointWithinPolygons","twoSided","q1","q2","det1","det2","lineIntersectPolygon","vectorP","vectorQ","lineStringWithinPolygon","lineStringWithinPolygons","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","getTilePoints","pointBBox","shifts","tilePoints","getTileLines","lineBBox","tileLines","tileLine","resetBBox","Within","geojson","tilePolygon","tilePolygons","tilePoints$1","pointsWithinPolygons","tileLines$1","linesWithinPolygons","Within$1","isFeatureConstant","isStateConstant","isGlobalPropertyConstant","boundExpression","Var$1","ParsingContext","expr","_parse","annotate","typeAnnotation","Expr","isConstant","ec","error$1","isTypeAnnotation","childrenConstant","findStopLessThanOrEqualTo","currentValue","nextValue","lowerIndex","upperIndex","currentIndex","Step","labels","outputs","outputType","labelKey","valueKey","stopCount","out","Step$1","unitbezier","UnitBezier","p1x","p1y","p2x","p2y","cx","bx","ax","cy","by","ay","sampleCurveX","sampleCurveY","sampleCurveDerivativeX","solveCurveX","epsilon","t0","t1","t2","solve","UnitBezier$1","freeze","from","to","Xn","Yn","Zn","t3","deg2rad$1","rad2deg","xyz2lab","lab2xyz","xyz2rgb","rgb2xyz","rgbToLab","rgbColor","labToRgb","labColor","interpolateHue","lab","forward","hcl","hclColor","Interpolate","interpolation","exponentialInterpolation","lowerValue","upperValue","difference","interpolationFactor","lower","upper","controlPoints","rest","outputLower","outputUpper","Interpolate$1","Coalesce","needsAnnotation","firstImage","Coalesce$1","Let","Let$1","At","At$1","In","In$1","IndexOf","fromIndex","IndexOf$1","inputType","cases","otherwise","labelContext","MAX_SAFE_INTEGER","this$1$1","groupedByOutput","outputLookup","outputIndex","coerceLabel","outputIndex$1","Match$1","Case","branches","Case$1","Slice","beginIndex","endIndex","Slice$1","isComparableType","eqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","Comparison","hasUntypedArgument","lt","lt$1","rt$1","Equals","NotEquals","LessThanOrEqual","GreaterThanOrEqual","NumberFormat","currency","unit","minFractionDigits","maxFractionDigits","minimumFractionDigits","maximumFractionDigits","NumberFormat$1","Length","expressions","varargs","pitch","heatmapDensity","lineProgress","skyRadialProgress","accumulated","E","LN10","asin","isSupportedScript","toUpperCase","isFunction","StyleExpression","_warningHistory","_evaluator","_defaultValue","spec","getDefaultValue","_enumValues","createExpression","types","enum","formatted","resolvedImage","getExpectedType","evaluateWithoutErrorHandling","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","interpolationType","createPropertyExpression","isFeatureConstant$1","supportsPropertyExpression","isZoomConstant","supportsZoomExpression","zoomCurve","findZoomCurve","supportsInterpolation","childResult","deepUnbundle","unbundledValue","valueOf","unbundle","isExpressionFilter","createFilter","layerType","needGeometry","needFeature","convertFilter","filterExp","staticFilter","isDynamicFilter","unionDynamicBranches","collapseDynamicBooleanExpressions","extractStaticFilter","filterSpec","compiledStaticFilter","filterFunc","globalProperties","dynamicFilterFunc","compiledDynamicFilter","dynamicFilter","geometryNeeded","collapsed","dynamicConditionExpressions","collapsedExpression","subExpression","isBranchingDynamically","filters","convertComparisonOp","convertNegation","convertInOp","convertHasOp","refProperties","deref","derefLayers","fontWeights","thin","hairline","light","book","regular","normal","plain","roman","standard","medium","bold","heavy","fat","poster","sp","italicRE","fontCache","mb2css","cssData","fontFamilies","maybeWeight","previousPart","functionCacheByStyleId","filterCacheByStyleId","styleId","getStyleId","glStyle","getStyleFunctionKey","olLayer","getFunctionCache","functionCache","getFilterCache","filterCache","deg2rad","defaultResolutions","createCanvas","drawIconHalo","spriteImage","spriteImageData","haloWidth","haloColor","imageCanvas","imageContext","drawSDF","dist","putImageData","hairSpacePool","applyLetterSpacing","letterSpacing","textWithLetterSpacing","lines","joinSpaceString","ll","getMeasureContext","measureCache","wrapText","em","hardLines","wrappedText","words","maxWidth","lines$1","ii$1","word","testLine","ii$2","line$1","prevWidth","nextWidth","ii$3","line$2","next","lineWords","lastWord","renderFeatureCoordinates","expressionData","rawExpression","compiledExpression","emptyObj","zoomObj","getValue","layoutOrPaint","layerId","functions","isExpr","getIconDeclutterMode","evaluateFilter","renderTransparentEnabled","colorWithOpacity","templateRegEx","fromTemplate","recordLayer","styleFunctionArgs","stylefunction","sourceOrLayers","spriteData","spriteImageUrl","getFonts","spriteImageSize","spriteImageUnSDFed","worker","postMessage","action","mapboxSource","allLayers","layersBySourceLayer","mapboxLayers","iconImageCache","patternCache","sourceLayer","textHalo","onlyLayer","featureBelongsToLayer","stylesLength","layerData","paint","visibility","minzoom","maxzoom","strokeColor","fillIcon","icon_cache_key","pattern","createPattern","hasImage","placementAngle","icon$1","iconImg","skipLabel","styleGeom","imageElement","iconRotationAlignment","iconSize","iconColor","iconCacheKey","color$1","iconOptions","spriteImageData$1","size$1","sdf","circleRadius","circleStrokeColor","circleColor","circleStrokeWidth","cache_key","textLineHeight","textSize","maxTextWidth","fontArray","metadata","textField","chunkFont","trim","textTransform","wrappedLabel","textAnchor","placement$1","symbolSpacing","textHaloWidth","textOffset","textTranslate","vOffset","hOffset","textRotationAlignment","textJustify","haloColor$1","halfTextSize","textPadding","rendererTransform","landcover","contours","maptiler_planet","tileCenter","observables","fetch","json","styleJson","buckets","currentSource","spriteUrl","sprite","spriteJson","bucket","VectorTile","transferToImageBitmap"],"sourceRoot":""}