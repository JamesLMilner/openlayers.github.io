{"version":3,"file":"tooltip-on-hover.js","mappings":"kJAMA,MAAMA,EAAS,IAAI,IAAY,CAC7BC,OAAQ,IAAI,IAAa,CACvBC,IAAK,qDACLC,OAAQ,IAAI,MAEdC,WAAY,QACZC,MAAO,CACL,aAAc,CAAC,SAAU,CAAC,MAAO,SAAU,cAIzCC,EAAM,IAAI,IAAI,CAClBC,OAAQ,CAACP,GACTQ,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIJC,EAAOC,SAASC,eAAe,QAIrC,IAAIC,EAHJH,EAAKP,MAAMW,WAAa,SACxBJ,EAAKP,MAAMY,cAAgB,OAG3B,MAAMC,EAAqB,SAAUC,EAAOX,GAC1C,MAAMY,EAAUZ,EAAOa,QAAQ,oBAC3BC,EACAhB,EAAIiB,sBAAsBJ,GAAO,SAAUC,GACzC,OAAOA,CACT,IACAA,GACFR,EAAKP,MAAMmB,KAAOL,EAAM,GAAK,KAC7BP,EAAKP,MAAMoB,IAAMN,EAAM,GAAK,KACxBC,IAAYL,IACdH,EAAKP,MAAMW,WAAa,UACxBJ,EAAKc,UAAYN,EAAQO,IAAI,cAG/Bf,EAAKP,MAAMW,WAAa,SAE1BD,EAAiBK,CACnB,EAEAd,EAAIsB,GAAG,eAAe,SAAUC,GAC9B,GAAIA,EAAIC,SAGN,OAFAlB,EAAKP,MAAMW,WAAa,cACxBD,OAAiBO,GAGnB,MAAMH,EAAQb,EAAIyB,cAAcF,EAAIG,eACpCd,EAAmBC,EAAOU,EAAIG,cAAcxB,OAC9C,IAEAF,EAAIsB,GAAG,SAAS,SAAUC,GACxBX,EAAmBW,EAAIV,MAAOU,EAAIG,cAAcxB,OAClD,IAEAF,EAAI2B,mBAAmBC,iBAAiB,gBAAgB,WACtDnB,OAAiBO,EACjBV,EAAKP,MAAMW,WAAa,QAC1B,G","sources":["webpack:///./tooltip-on-hover.js"],"sourcesContent":["import GeoJSON from '../src/ol/format/GeoJSON.js';\nimport Map from '../src/ol/Map.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport View from '../src/ol/View.js';\n\nconst vector = new VectorLayer({\n  source: new VectorSource({\n    url: 'https://openlayers.org/data/vector/ecoregions.json',\n    format: new GeoJSON(),\n  }),\n  background: 'white',\n  style: {\n    'fill-color': ['string', ['get', 'COLOR'], '#eeeeee'],\n  },\n});\n\nconst map = new Map({\n  layers: [vector],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n\nconst info = document.getElementById('info');\ninfo.style.visibility = 'hidden';\ninfo.style.pointerEvents = 'none';\n\nlet currentFeature;\nconst displayFeatureInfo = function (pixel, target) {\n  const feature = target.closest('.ol-control')\n    ? undefined\n    : map.forEachFeatureAtPixel(pixel, function (feature) {\n        return feature;\n      });\n  if (feature) {\n    info.style.left = pixel[0] + 'px';\n    info.style.top = pixel[1] + 'px';\n    if (feature !== currentFeature) {\n      info.style.visibility = 'visible';\n      info.innerText = feature.get('ECO_NAME');\n    }\n  } else {\n    info.style.visibility = 'hidden';\n  }\n  currentFeature = feature;\n};\n\nmap.on('pointermove', function (evt) {\n  if (evt.dragging) {\n    info.style.visibility = 'hidden';\n    currentFeature = undefined;\n    return;\n  }\n  const pixel = map.getEventPixel(evt.originalEvent);\n  displayFeatureInfo(pixel, evt.originalEvent.target);\n});\n\nmap.on('click', function (evt) {\n  displayFeatureInfo(evt.pixel, evt.originalEvent.target);\n});\n\nmap.getTargetElement().addEventListener('pointerleave', function () {\n  currentFeature = undefined;\n  info.style.visibility = 'hidden';\n});\n"],"names":["vector","source","url","format","background","style","map","layers","target","view","center","zoom","info","document","getElementById","currentFeature","visibility","pointerEvents","displayFeatureInfo","pixel","feature","closest","undefined","forEachFeatureAtPixel","left","top","innerText","get","on","evt","dragging","getEventPixel","originalEvent","getTargetElement","addEventListener"],"sourceRoot":""}