{"version":3,"file":"ol.js","sources":["../ol/AssertionError.js","../ol/events/Event.js","../ol/ObjectEventType.js","../ol/Disposable.js","../ol/array.js","../ol/functions.js","../ol/obj.js","../ol/events/Target.js","../ol/events/EventType.js","../ol/events.js","../ol/Observable.js","../ol/util.js","../ol/Object.js","../ol/CollectionEventType.js","../ol/Collection.js","../ol/TileState.js","../ol/easing.js","../ol/Tile.js","../ol/has.js","../ol/dom.js","../ol/DataTile.js","../ol/asserts.js","../ol/Feature.js","../ol/transform.js","../ol/extent/Relationship.js","../ol/extent.js","../ol/proj/Units.js","../ol/proj/Projection.js","../ol/proj/epsg3857.js","../ol/proj/epsg4326.js","../ol/proj/projections.js","../ol/proj/transforms.js","../ol/math.js","../ol/string.js","../ol/coordinate.js","../ol/sphere.js","../ol/console.js","../ol/proj.js","../ol/geom/flat/transform.js","../ol/geom/Geometry.js","../ol/geom/SimpleGeometry.js","../ol/geom/flat/closest.js","../ol/geom/flat/deflate.js","../ol/geom/flat/simplify.js","../ol/geom/flat/inflate.js","../ol/geom/flat/area.js","../ol/geom/LinearRing.js","../ol/geom/Point.js","../ol/geom/flat/contains.js","../ol/geom/flat/interiorpoint.js","../ol/geom/flat/segments.js","../ol/geom/flat/intersectsextent.js","../ol/geom/flat/reverse.js","../ol/geom/flat/orient.js","../ol/geom/Polygon.js","../ol/Geolocation.js","../ol/ImageBase.js","../ol/ImageState.js","../ol/Image.js","../ol/ImageCanvas.js","../ol/ImageTile.js","../ol/Kinetic.js","../ol/color.js","../ol/style/IconImageCache.js","../ol/layer/Property.js","../ol/layer/Base.js","../ol/render/EventType.js","../ol/layer/Layer.js","../ol/renderer/Map.js","../ol/render/Event.js","../ol/css.js","../ol/render/canvas.js","../ol/renderer/Composite.js","../ol/layer/Group.js","../ol/MapEvent.js","../ol/MapBrowserEvent.js","../ol/MapBrowserEventType.js","../ol/pointer/EventType.js","../ol/MapBrowserEventHandler.js","../ol/MapEventType.js","../ol/MapProperty.js","../ol/structs/PriorityQueue.js","../ol/TileQueue.js","../ol/ViewHint.js","../ol/ViewProperty.js","../ol/tilegrid/common.js","../ol/centerconstraint.js","../ol/resolutionconstraint.js","../ol/rotationconstraint.js","../ol/View.js","../ol/control/Control.js","../ol/control/Attribution.js","../ol/control/Rotate.js","../ol/control/Zoom.js","../ol/interaction/Property.js","../ol/interaction/Interaction.js","../ol/interaction/DoubleClickZoom.js","../ol/interaction/Pointer.js","../ol/events/condition.js","../ol/interaction/DragPan.js","../ol/interaction/DragRotate.js","../ol/render/Box.js","../ol/interaction/DragBox.js","../ol/interaction/DragZoom.js","../ol/events/KeyCode.js","../ol/interaction/KeyboardPan.js","../ol/interaction/KeyboardZoom.js","../ol/interaction/MouseWheelZoom.js","../ol/interaction/PinchRotate.js","../ol/interaction/PinchZoom.js","../ol/size.js","../ol/Map.js","../ol/control/defaults.js","../ol/interaction/defaults.js","../ol/Overlay.js","../ol/structs/LRUCache.js","../ol/tilecoord.js","../ol/TileCache.js","../ol/TileRange.js","../ol/VectorRenderTile.js","../ol/VectorTile.js","../ol/net.js","../ol/webgl.js","../ol/webgl/Buffer.js","../ol/webgl/ContextEventType.js","../ol/webgl/PostProcessingPass.js","../ol/vec/mat4.js","../ol/webgl/Helper.js","../ol/webgl/PaletteTexture.js","../ol/webgl/RenderTarget.js","../ol/reproj/Triangulation.js","../ol/reproj.js","../ol/reproj/DataTile.js","../ol/reproj/common.js","../ol/reproj/Tile.js","../ol/webgl/TileTexture.js","../ol/renderer/Layer.js","../ol/renderer/webgl/Layer.js","../ol/renderer/webgl/TileLayer.js","../ol/style/expressions.js","../ol/webgl/ShaderBuilder.js","../ol/tilegrid/TileGrid.js","../ol/tilegrid/WMTS.js","../ol/style/Image.js","../ol/colorlike.js","../ol/style/RegularShape.js","../ol/style/Circle.js","../ol/style/Fill.js","../ol/style/IconImage.js","../ol/style/Icon.js","../ol/style/Stroke.js","../ol/style/Style.js","../ol/style/Text.js","../ol/structs/LinkedList.js","../../node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../ol/structs/RBush.js","../ol/source/TileEventType.js","../ol/source/Source.js","../ol/tilegrid.js","../ol/source/Tile.js","../ol/tileurlfunction.js","../ol/source/UrlTile.js","../ol/source/TileImage.js","../ol/source/BingMaps.js","../ol/source/XYZ.js","../ol/source/CartoDB.js","../ol/source/VectorEventType.js","../ol/loadingstrategy.js","../ol/featureloader.js","../ol/source/Vector.js","../ol/source/Cluster.js","../ol/source/DataTile.js","../ol/source/GeoTIFF.js","../ol/source/Zoomify.js","../ol/format/IIIFInfo.js","../ol/source/IIIF.js","../ol/reproj/Image.js","../ol/source/Image.js","../ol/uri.js","../ol/source/ImageArcGISRest.js","../ol/source/ImageCanvas.js","../ol/source/ImageMapGuide.js","../ol/source/ImageStatic.js","../ol/source/wms.js","../ol/source/ImageWMS.js","../ol/source/ogcTileUtil.js","../ol/source/OGCMapTile.js","../ol/source/VectorTile.js","../ol/source/OGCVectorTile.js","../ol/source/OSM.js","../ol/layer/BaseImage.js","../ol/renderer/canvas/Layer.js","../ol/renderer/canvas/ImageLayer.js","../ol/layer/Image.js","../ol/layer/TileProperty.js","../ol/layer/BaseTile.js","../ol/renderer/canvas/TileLayer.js","../ol/layer/Tile.js","../ol/source/Raster.js","../ol/source/Stamen.js","../ol/source/TileArcGISRest.js","../ol/source/TileDebug.js","../ol/source/TileJSON.js","../ol/source/TileWMS.js","../ol/source/UTFGrid.js","../ol/source/WMTS.js","../ol/style/flat.js","../ol/layer/BaseVector.js","../ol/render/webgl/constants.js","../../node_modules/earcut/src/earcut.js","../ol/render/webgl/utils.js","../ol/worker/webgl.js","../ol/renderer/webgl/PointsLayer.js","../ol/render/webgl/BatchRenderer.js","../ol/render/webgl/LineStringBatchRenderer.js","../ol/render/webgl/MixedGeometryBatch.js","../ol/render/webgl/PointBatchRenderer.js","../ol/render/webgl/PolygonBatchRenderer.js","../ol/renderer/webgl/shaders.js","../ol/renderer/webgl/VectorLayer.js","../ol/render/canvas/Instruction.js","../ol/render/VectorContext.js","../ol/render/canvas/Builder.js","../ol/render/canvas/ImageBuilder.js","../ol/render/canvas/LineStringBuilder.js","../ol/render/canvas/PolygonBuilder.js","../ol/geom/flat/straightchunk.js","../ol/render/canvas/TextBuilder.js","../ol/render/canvas/BuilderGroup.js","../ol/geom/flat/textpath.js","../ol/geom/flat/length.js","../ol/render/canvas/Executor.js","../ol/render/canvas/ExecutorGroup.js","../ol/render/canvas/Immediate.js","../ol/render/canvas/hitdetect.js","../ol/renderer/vector.js","../ol/renderer/canvas/VectorLayer.js","../ol/renderer/canvas/VectorImageLayer.js","../ol/renderer/canvas/VectorTileLayer.js","../ol/geom/Circle.js","../ol/geom/GeometryCollection.js","../ol/geom/flat/interpolate.js","../ol/geom/LineString.js","../ol/geom/MultiLineString.js","../ol/geom/MultiPoint.js","../ol/geom/flat/center.js","../ol/geom/MultiPolygon.js","../ol/render/Feature.js","../ol/layer/Vector.js","../ol/geom/flat/geodesic.js","../ol/layer/Graticule.js","../ol/render.js","../ol/layer/Heatmap.js","../ol/format/Feature.js","../../node_modules/ieee754/index.js","../../node_modules/pbf/index.js","../ol/format/MVT.js","../ol/layer/VectorTile.js","../ol/layer/MapboxVector.js","../ol/layer/VectorImage.js","../ol/layer/WebGLPoints.js","../ol/layer/WebGLTile.js","../ol/interaction/DragAndDrop.js","../ol/interaction/DragRotateAndZoom.js","../ol/interaction/Draw.js","../ol/interaction/Extent.js","../ol/interaction/Link.js","../ol/interaction/Modify.js","../ol/interaction/Select.js","../ol/interaction/Snap.js","../ol/interaction/Translate.js","../ol/format/JSONFeature.js","../ol/format/EsriJSON.js","../ol/xml.js","../ol/format/XMLFeature.js","../ol/format/GMLBase.js","../ol/format/xsd.js","../ol/format/GML2.js","../ol/format/GML3.js","../ol/format/GML.js","../ol/format/GML32.js","../ol/format/GPX.js","../ol/format/GeoJSON.js","../ol/format/TextFeature.js","../ol/format/IGC.js","../ol/format/KML.js","../ol/format/OSMXML.js","../ol/format/XML.js","../ol/format/xlink.js","../ol/format/OWS.js","../ol/geom/flat/flip.js","../ol/format/Polyline.js","../ol/format/TopoJSON.js","../ol/format/filter/Filter.js","../ol/format/filter/LogicalNary.js","../ol/format/filter/And.js","../ol/format/filter/Bbox.js","../ol/format/filter/Spatial.js","../ol/format/filter/Contains.js","../ol/format/filter/DWithin.js","../ol/format/filter/Disjoint.js","../ol/format/filter/Comparison.js","../ol/format/filter/During.js","../ol/format/filter/ComparisonBinary.js","../ol/format/filter/EqualTo.js","../ol/format/filter/GreaterThan.js","../ol/format/filter/GreaterThanOrEqualTo.js","../ol/format/filter/Intersects.js","../ol/format/filter/IsBetween.js","../ol/format/filter/IsLike.js","../ol/format/filter/IsNull.js","../ol/format/filter/LessThan.js","../ol/format/filter/LessThanOrEqualTo.js","../ol/format/filter/Not.js","../ol/format/filter/NotEqualTo.js","../ol/format/filter/Or.js","../ol/format/filter/ResourceId.js","../ol/format/filter/Within.js","../ol/format/WFS.js","../ol/format/filter.js","../ol/format/WKB.js","../ol/format/WKT.js","../ol/format/WMSCapabilities.js","../ol/format/WMSGetFeatureInfo.js","../ol/format/WMTSCapabilities.js","../ol/control/FullScreen.js","../ol/control/MousePosition.js","../ol/control/OverviewMap.js","../ol/control/ScaleLine.js","../ol/control/ZoomSlider.js","../ol/control/ZoomToExtent.js","../index.js"],"sourcesContent":["/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n  let i;\n  if (direction > 0) {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n  } else if (direction < 0) {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n  } else {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] == target) {\n        return i;\n      } else if (arr[i] < target) {\n        if (typeof direction === 'function') {\n          if (direction(target, arr[i - 1], arr[i]) > 0) {\n            return i - 1;\n          }\n          return i;\n        } else if (arr[i - 1] - target < target - arr[i]) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.2.1';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true}\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.drawImage(image, width, height);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/Geolocation\n */\nimport BaseEvent from './events/Event.js';\nimport BaseObject from './Object.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  identityTransform,\n} from './proj.js';\nimport {toRadians} from './math.js';\n\n/**\n * @enum {string}\n */\nconst Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions',\n};\n\n/**\n * @enum string\n */\nconst GeolocationErrorType = {\n  /**\n   * Triggered when a `GeolocationPositionError` occurs.\n   * @event module:ol/Geolocation.GeolocationError#error\n   * @api\n   */\n  ERROR: 'error',\n};\n\n/**\n * @classdesc\n * Events emitted on [GeolocationPositionError](https://developer.mozilla.org/en-US/docs/Web/API/GeolocationPositionError).\n */\nexport class GeolocationError extends BaseEvent {\n  /**\n   * @param {GeolocationPositionError} error error object.\n   */\n  constructor(error) {\n    super(GeolocationErrorType.ERROR);\n\n    /**\n     * Code of the underlying `GeolocationPositionError`.\n     * @type {number}\n     * @api\n     */\n    this.code = error.code;\n\n    /**\n     * Message of the underlying `GeolocationPositionError`.\n     * @type {string}\n     * @api\n     */\n    this.message = error.message;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See https://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:accuracy'|'change:accuracyGeometry'|'change:altitude'|\n *    'change:altitudeAccuracy'|'change:heading'|'change:position'|'change:projection'|'change:speed'|'change:tracking'|\n *    'change:trackingOptions'} GeolocationObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<'change', import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<GeolocationObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'error', GeolocationError, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|GeolocationObjectEventTypes, Return>} GeolocationOnSignature\n */\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](https://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes and errors, register listeners for the generic\n * `change` event and the `error` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     const geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       console.log(geolocation.getPosition());\n *     });\n *     // listen to error\n *     geolocation.on('error', function(evt) {\n *       window.console.log(evt.message);\n *     });\n *\n * @fires GeolocationError\n * @api\n */\nclass Geolocation extends BaseObject {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GeolocationOnSignature<void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    this.addChangeListener(Property.PROJECTION, this.handleProjectionChanged_);\n    this.addChangeListener(Property.TRACKING, this.handleTrackingChanged_);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        projection\n      );\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if ('geolocation' in navigator) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions()\n        );\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPosition} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(\n      Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude\n    );\n    this.set(\n      Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ? undefined : coords.altitudeAccuracy\n    );\n    this.set(\n      Property.HEADING,\n      coords.heading === null ? undefined : toRadians(coords.heading)\n    );\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition.slice());\n    this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPositionError} error error object.\n   */\n  positionError_(error) {\n    this.dispatchEvent(new GeolocationError(error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return /** @type {?import(\"./geom/Polygon.js\").default} */ (\n      this.get(Property.ACCURACY_GEOMETRY) || null\n    );\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (\n      this.get(Property.ALTITUDE_ACCURACY)\n    );\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"./proj/Projection.js\").default|undefined} */ (\n      this.get(Property.PROJECTION)\n    );\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See https://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](https://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (\n      this.get(Property.TRACKING_OPTIONS)\n    );\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(Property.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  }\n}\n\nexport default Geolocation;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/webgl\n */\n\nimport {SAFARI_BUG_237906} from './has.js';\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [attributes] Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, attributes) {\n  attributes = Object.assign(\n    {\n      preserveDrawingBuffer: true,\n      antialias: SAFARI_BUG_237906 ? false : true, // https://bugs.webkit.org/show_bug.cgi?id=237906\n    },\n    attributes\n  );\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>}\n */\nlet supportedExtensions;\n\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n","/**\n * @module ol/webgl/Buffer\n */\nimport {\n  ARRAY_BUFFER,\n  DYNAMIC_DRAW,\n  ELEMENT_ARRAY_BUFFER,\n  STATIC_DRAW,\n  STREAM_DRAW,\n} from '../webgl.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n * @api\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `DYNAMIC_DRAW`.\n   */\n  constructor(type, usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array}\n     */\n    this.array = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type = type;\n\n    assert(type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER, 62);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage = usage !== undefined ? usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   */\n  ofSize(size) {\n    this.array = new (getArrayClassForType(this.type))(size);\n  }\n\n  /**\n   * Populates the buffer with an array of the given size.\n   * @param {Array<number>} array Numerical array\n   */\n  fromArray(array) {\n    this.array = getArrayClassForType(this.type).from(array);\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   */\n  fromArrayBuffer(buffer) {\n    this.array = new (getArrayClassForType(this.type))(buffer);\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array} Array.\n   */\n  getArray() {\n    return this.array;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array ? this.array.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n","/**\n * @module ol/webgl/PostProcessingPass\n */\n\nimport {getUid} from '../util.js';\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n  \n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n  \n  uniform vec2 u_screenSize;\n   \n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n   \n  uniform sampler2D u_image;\n  uniform float u_opacity;\n   \n  varying vec2 v_texCoord;\n   \n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {WebGLUniformLocation} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *   uniform float u_opacity;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n *   }\n *   ```\n *\n * @api\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    this.renderTargetTexture_ = gl.createTexture();\n    this.renderTargetTextureSize_ = null;\n\n    this.frameBuffer_ = gl.createFramebuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER\n    );\n    gl.compileShader(fragmentShader);\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW\n    );\n\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position'\n    );\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize'\n    );\n    this.renderTargetOpacityLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_opacity'\n    );\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image'\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach((name) => {\n        this.uniforms_.push({\n          value: options.uniforms[name],\n          location: gl.getUniformLocation(this.renderTargetProgram_, name),\n        });\n      });\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @api\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   * @api\n   */\n  apply(frameState, nextPass, preCompose, postCompose) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    if (!nextPass) {\n      // clear the canvas if we are the first to render to it\n      // and preserveDrawingBuffer is true\n      const canvasId = getUid(gl.canvas);\n      if (!frameState.renderTargets[canvasId]) {\n        const attributes = gl.getContextAttributes();\n        if (attributes && attributes.preserveDrawingBuffer) {\n          gl.clearColor(0.0, 0.0, 0.0, 0.0);\n          gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n\n        frameState.renderTargets[canvasId] = true;\n      }\n    }\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    const opacity = frameState.layerStatesArray[frameState.layerIndex].opacity;\n    gl.uniform1f(this.renderTargetOpacityLocation_, opacity);\n\n    this.applyUniforms(frameState);\n\n    if (preCompose) {\n      preCompose(gl, frameState);\n    }\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    if (postCompose) {\n      postCompose(gl, frameState);\n    }\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   * @api\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data)\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n","/**\n * @module ol/vec/mat4\n */\n\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n} from '../webgl.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n} from '../transform.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Names of uniforms made available to all shaders.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n  OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n  SIZE_PX: 'u_sizePx',\n  PIXEL_RATIO: 'u_pixelRatio',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../Map.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n * @property {string} [canvasCacheKey] The cache key for the canvas.\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {UniformValue} [prevValue] The previous value.\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @typedef {Object} CanvasCacheItem\n * @property {HTMLCanvasElement} canvas Canvas element.\n * @property {number} users The count of users of this canvas.\n */\n\n/**\n * @type {Object<string,CanvasCacheItem>}\n */\nconst canvasCache = {};\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {string} The shared cache key.\n */\nfunction getSharedCanvasCacheKey(key) {\n  return 'shared/' + key;\n}\n\nlet uniqueCanvasCacheKeyCount = 0;\n\n/**\n * @return {string} The unique cache key.\n */\nfunction getUniqueCanvasCacheKey() {\n  const key = 'unique/' + uniqueCanvasCacheKeyCount;\n  uniqueCanvasCacheKeyCount += 1;\n  return key;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {HTMLCanvasElement} The canvas.\n */\nfunction getCanvas(key) {\n  let cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    const canvas = document.createElement('canvas');\n    canvas.style.position = 'absolute';\n    canvas.style.left = '0';\n    cacheItem = {users: 0, canvas};\n    canvasCache[key] = cacheItem;\n  }\n\n  cacheItem.users += 1;\n  return cacheItem.canvas;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n */\nfunction releaseCanvas(key) {\n  const cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    return;\n  }\n\n  cacheItem.users -= 1;\n  if (cacheItem.users > 0) {\n    return;\n  }\n\n  const canvas = cacheItem.canvas;\n  const gl = getContext(canvas);\n  const extension = gl.getExtension('WEBGL_lose_context');\n  if (extension) {\n    extension.loseContext();\n  }\n\n  delete canvasCache[key];\n}\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls; note how a frameState is required to set up a program,\n *   // as several default uniforms are computed from it (projection matrix, zoom level, etc.)\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program, frameState);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Specify the attribute names with\n *   {@link module:ol/webgl/Helper~WebGLHelper#enableAttributes} (see code snippet below).\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n    options = options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ =\n      this.handleWebGLContextRestored.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.canvasCacheKey_ = options.canvasCacheKey\n      ? getSharedCanvasCacheKey(options.canvasCacheKey)\n      : getUniqueCanvasCacheKey();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = getCanvas(this.canvasCacheKey_);\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getContext(this.canvas_);\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object>}\n     */\n    this.extensionCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    this.canvas_.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, WebGLUniformLocation>}\n     */\n    this.uniformLocations_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.attribLocations_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      this.setUniforms(options.uniforms);\n    }\n\n    const gl = this.getGL();\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(function (options) {\n          return new WebGLPostProcessingPass({\n            webGlContext: gl,\n            scaleRatio: options.scaleRatio,\n            vertexShader: options.vertexShader,\n            fragmentShader: options.fragmentShader,\n            uniforms: options.uniforms,\n          });\n        })\n      : [new WebGLPostProcessingPass({webGlContext: gl})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  setUniforms(uniforms) {\n    this.uniforms_ = [];\n    for (const name in uniforms) {\n      this.uniforms_.push({\n        name: name,\n        value: uniforms[name],\n      });\n    }\n    this.uniformLocations_ = {};\n  }\n\n  /**\n   * @param {string} canvasCacheKey The canvas cache key.\n   * @return {boolean} The provided key matches the one this helper was constructed with.\n   */\n  canvasCacheKeyMatches(canvasCacheKey) {\n    return this.canvasCacheKey_ === getSharedCanvasCacheKey(canvasCacheKey);\n  }\n\n  /**\n   * Get a WebGL extension.  If the extension is not supported, null is returned.\n   * Extensions are cached after they are enabled for the first time.\n   * @param {string} name The extension name.\n   * @return {Object|null} The extension or null if not supported.\n   */\n  getExtension(name) {\n    if (name in this.extensionCache_) {\n      return this.extensionCache_[name];\n    }\n    const extension = this.gl_.getExtension(name);\n    this.extensionCache_[name] = extension;\n    return extension;\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  bindBuffer(buffer) {\n    const gl = this.getGL();\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  flushBufferData(buffer) {\n    const gl = this.getGL();\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.getGL();\n    const bufferKey = getUid(buf);\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.canvas_.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    releaseCanvas(this.canvasCacheKey_);\n\n    delete this.gl_;\n    delete this.canvas_;\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   */\n  prepareDraw(frameState, disableAlphaBlend) {\n    const gl = this.getGL();\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   */\n  prepareDrawToRenderTarget(frameState, renderTarget, disableAlphaBlend) {\n    const gl = this.getGL();\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  drawElements(start, end) {\n    const gl = this.getGL();\n    this.getExtension('OES_element_index_uint');\n\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  finalizeDraw(frameState, preCompose, postCompose) {\n    // apply post processes using the next one as target\n    for (let i = 0, ii = this.postProcessPasses_.length; i < ii; i++) {\n      if (i === ii - 1) {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          null,\n          preCompose,\n          postCompose\n        );\n      } else {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          this.postProcessPasses_[i + 1]\n        );\n      }\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getCanvas() {\n    return this.canvas_;\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n    const offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_SCALE_MATRIX,\n      fromTransform(this.tmpMat4_, offsetScaleMatrix)\n    );\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_ROTATION_MATRIX,\n      fromTransform(this.tmpMat4_, offsetRotateMatrix)\n    );\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution\n    );\n    this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, pixelRatio);\n    this.setUniformFloatVec2(DefaultUniform.SIZE_PX, [size[0], size[1]]);\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach((uniform) => {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (\n        value instanceof HTMLCanvasElement ||\n        value instanceof HTMLImageElement ||\n        value instanceof ImageData\n      ) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        const imageReady =\n          !(value instanceof HTMLImageElement) ||\n          /** @type {HTMLImageElement} */ (value).complete;\n        if (imageReady && uniform.prevValue !== value) {\n          uniform.prevValue = value;\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n\n        // fill texture slots by increasing index\n        gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n      } else if (Array.isArray(value) && value.length === 6) {\n        this.setUniformMatrixValue(\n          uniform.name,\n          fromTransform(this.tmpMat4_, value)\n        );\n      } else if (Array.isArray(value) && value.length <= 4) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1]\n            );\n            return;\n          case 3:\n            gl.uniform3f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2]\n            );\n            return;\n          case 4:\n            gl.uniform4f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(this.getUniformLocation(uniform.name), value);\n      }\n    });\n  }\n\n  /**\n   * Set up a program for use. The program will be set as the current one. Then, the uniforms used\n   * in the program will be set based on the current frame state and the helper configuration.\n   * @param {WebGLProgram} program Program.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  useProgram(program, frameState) {\n    const gl = this.getGL();\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    this.uniformLocations_ = {};\n    this.attribLocations_ = {};\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.getGL();\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.getGL();\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compilation failed: ${gl.getShaderInfoLog(\n        fragmentShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   */\n  getUniformLocation(name) {\n    if (this.uniformLocations_[name] === undefined) {\n      this.uniformLocations_[name] = this.getGL().getUniformLocation(\n        this.currentProgram_,\n        name\n      );\n    }\n    return this.uniformLocations_[name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   */\n  getAttributeLocation(name) {\n    if (this.attribLocations_[name] === undefined) {\n      this.attribLocations_[name] = this.getGL().getAttribLocation(\n        this.currentProgram_,\n        name\n      );\n    }\n    return this.attribLocations_[name];\n  }\n\n  /**\n   * Modifies the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n\n    resetTransform(transform);\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1]\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   */\n  setUniformFloatValue(uniform, value) {\n    this.getGL().uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec2 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec2(uniform, value) {\n    this.getGL().uniform2fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec4(uniform, value) {\n    this.getGL().uniform4fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.getGL().uniformMatrix4fv(\n      this.getUniformLocation(uniform),\n      false,\n      value\n    );\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.getGL().enableVertexAttribArray(location);\n    this.getGL().vertexAttribPointer(\n      location,\n      size,\n      type,\n      false,\n      stride,\n      offset\n    );\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @private\n   */\n  handleWebGLContextLost() {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {}\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   */\n  createTexture(size, data, texture) {\n    const gl = this.getGL();\n    texture = texture || gl.createTexture();\n\n    // set params & size\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if (data) {\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, data);\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null\n      );\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n","/**\n * @module ol/webgl/PaletteTexture\n */\n\nclass PaletteTexture {\n  /**\n   * @param {string} name The name of the texture.\n   * @param {Uint8Array} data The texture data.\n   */\n  constructor(name, data) {\n    this.name = name;\n    this.data = data;\n\n    /**\n     * @type {WebGLTexture}\n     * @private\n     */\n    this.texture_ = null;\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl Rendering context.\n   * @return {WebGLTexture} The texture.\n   */\n  getTexture(gl) {\n    if (!this.texture_) {\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        this.data.length / 4,\n        1,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data\n      );\n      this.texture_ = texture;\n    }\n    return this.texture_;\n  }\n}\n\nexport default PaletteTexture;\n","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport {equals} from '../array.js';\n\n// for pixel color reading\nconst tmpArray4 = new Uint8Array(4);\n\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n * @api\n */\nclass WebGLRenderTarget {\n  /**\n   * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n   * @param {Array<number>} [size] Expected size of the render target texture; note: this can be changed later on.\n   */\n  constructor(helper, size) {\n    /**\n     * @private\n     * @type {import(\"./Helper.js\").default}\n     */\n    this.helper_ = helper;\n    const gl = helper.getGL();\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.texture_ = gl.createTexture();\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer_ = gl.createFramebuffer();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.size_ = size || [1, 1];\n\n    /**\n     * @type {Uint8Array}\n     * @private\n     */\n    this.data_ = new Uint8Array(0);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dataCacheDirty_ = true;\n\n    this.updateSize_();\n  }\n\n  /**\n   * Changes the size of the render target texture. Note: will do nothing if the size\n   * is already the same.\n   * @param {Array<number>} size Expected size of the render target texture\n   * @api\n   */\n  setSize(size) {\n    if (equals(size, this.size_)) {\n      return;\n    }\n    this.size_[0] = size[0];\n    this.size_[1] = size[1];\n    this.updateSize_();\n  }\n\n  /**\n   * Returns the size of the render target texture\n   * @return {Array<number>} Size of the render target texture\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n   * render target into memory, which is an expensive operation.\n   * This content will be kept in cache but should be cleared after each new render.\n   * @api\n   */\n  clearCachedData() {\n    this.dataCacheDirty_ = true;\n  }\n\n  /**\n   * Returns the full content of the frame buffer as a series of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * @return {Uint8Array} Integer array of color values\n   * @api\n   */\n  readAll() {\n    if (this.dataCacheDirty_) {\n      const size = this.size_;\n      const gl = this.helper_.getGL();\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n      gl.readPixels(\n        0,\n        0,\n        size[0],\n        size[1],\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data_\n      );\n      this.dataCacheDirty_ = false;\n    }\n    return this.data_;\n  }\n\n  /**\n   * Reads one pixel of the frame buffer as an array of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * If x and/or y are outside of existing data, an array filled with 0 is returned.\n   * @param {number} x Pixel coordinate\n   * @param {number} y Pixel coordinate\n   * @return {Uint8Array} Integer array with one color value (4 components)\n   * @api\n   */\n  readPixel(x, y) {\n    if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n      tmpArray4[0] = 0;\n      tmpArray4[1] = 0;\n      tmpArray4[2] = 0;\n      tmpArray4[3] = 0;\n      return tmpArray4;\n    }\n\n    this.readAll();\n    const index =\n      Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n    tmpArray4[0] = this.data_[index * 4];\n    tmpArray4[1] = this.data_[index * 4 + 1];\n    tmpArray4[2] = this.data_[index * 4 + 2];\n    tmpArray4[3] = this.data_[index * 4 + 3];\n    return tmpArray4;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture to render to\n   */\n  getTexture() {\n    return this.texture_;\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer of the render target\n   */\n  getFramebuffer() {\n    return this.framebuffer_;\n  }\n\n  /**\n   * @private\n   */\n  updateSize_() {\n    const size = this.size_;\n    const gl = this.helper_.getGL();\n\n    this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture_,\n      0\n    );\n\n    this.data_ = new Uint8Array(size[0] * size[1] * 4);\n  }\n}\n\nexport default WebGLRenderTarget;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/DataTile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D, releaseCanvas} from '../dom.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8Array(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<DataTile>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n      const getTile = options.getTileFunction;\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8Array;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0]\n      );\n      const packedLength = pixelCount * bandCount;\n      let packedData = tileDataR;\n      if (tileDataR.length !== packedLength) {\n        packedData = new DataType(packedLength);\n        let dataIndex = 0;\n        let rowOffset = 0;\n        const colCount = pixelSize[0] * bandCount;\n        for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n          for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n            packedData[dataIndex++] = tileDataR[rowOffset + colIndex];\n          }\n          rowOffset += bytesPerRow / bytesPerElement;\n        }\n      }\n      dataSources.push({\n        extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n        data: new Uint8Array(packedData.buffer),\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const targetWidth = typeof size === 'number' ? size : size[0];\n      const targetHeight = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      let dataR, dataU;\n\n      const bytesPerPixel = dataSources[0].bytesPerPixel;\n\n      const reprojs = Math.ceil(bytesPerPixel / 3);\n      for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n        const sources = [];\n        for (let i = 0, len = dataSources.length; i < len; ++i) {\n          const dataSource = dataSources[i];\n          const buffer = dataSource.data;\n          const pixelSize = dataSource.pixelSize;\n          const width = pixelSize[0];\n          const height = pixelSize[1];\n          const context = createCanvasContext2D(width, height, canvasPool);\n          const imageData = context.createImageData(width, height);\n          const data = imageData.data;\n          let offset = reproj * 3;\n          for (let j = 0, len = data.length; j < len; j += 4) {\n            data[j] = buffer[offset];\n            data[j + 1] = buffer[offset + 1];\n            data[j + 2] = buffer[offset + 2];\n            data[j + 3] = 255;\n            offset += bytesPerPixel;\n          }\n          context.putImageData(imageData, 0, 0);\n          sources.push({\n            extent: dataSource.extent,\n            image: context.canvas,\n          });\n        }\n\n        const canvas = renderReprojected(\n          targetWidth,\n          targetHeight,\n          this.pixelRatio_,\n          sourceResolution,\n          this.sourceTileGrid_.getExtent(),\n          targetResolution,\n          targetExtent,\n          this.triangulation_,\n          sources,\n          this.gutter_,\n          false,\n          false\n        );\n\n        for (let i = 0, len = sources.length; i < len; ++i) {\n          const canvas = sources[i].image;\n          const context = canvas.getContext('2d');\n          releaseCanvas(context);\n          canvasPool.push(context.canvas);\n        }\n\n        const context = canvas.getContext('2d');\n        const imageData = context.getImageData(\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n\n        releaseCanvas(context);\n        canvasPool.push(canvas);\n\n        if (!dataR) {\n          dataU = new Uint8Array(\n            bytesPerPixel * imageData.width * imageData.height\n          );\n          dataR = new dataSources[0].dataType(dataU.buffer);\n        }\n\n        const data = imageData.data;\n        let offset = reproj * 3;\n        for (let i = 0, len = data.length; i < len; i += 4) {\n          if (data[i + 3] === 255) {\n            dataU[offset] = data[i];\n            dataU[offset + 1] = data[i + 1];\n            dataU[offset + 2] = data[i + 2];\n          } else {\n            dataU[offset] = 0;\n            dataU[offset + 1] = 0;\n            dataU[offset + 2] = 0;\n          }\n          offset += bytesPerPixel;\n        }\n      }\n\n      this.reprojData_ = dataR;\n      this.reprojSize_ = [\n        Math.round(targetWidth * this.pixelRatio_),\n        Math.round(targetHeight * this.pixelRatio_),\n      ];\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach((tile) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(\n        tile,\n        EventType.CHANGE,\n        function () {\n          const state = tile.getState();\n          if (\n            state == TileState.LOADED ||\n            state == TileState.ERROR ||\n            state == TileState.EMPTY\n          ) {\n            unlistenByKey(sourceListenKey);\n            leftToLoad--;\n            if (leftToLoad === 0) {\n              this.unlistenSources_();\n              this.reproject_();\n            }\n          }\n        },\n        this\n      );\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function (tile) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/webgl/TileTexture\n */\n\nimport DataTile, {asArrayLike, asImageLike} from '../DataTile.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileState from '../TileState.js';\nimport WebGLArrayBuffer from './Buffer.js';\nimport {ARRAY_BUFFER, STATIC_DRAW} from '../webgl.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\n\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction bindAndConfigure(gl, texture, interpolate) {\n  const resampleFilter = interpolate ? gl.LINEAR : gl.NEAREST;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, resampleFilter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, resampleFilter);\n}\n\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {import(\"../DataTile.js\").ImageLike} image The image.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction uploadImageTexture(gl, texture, image, interpolate) {\n  bindAndConfigure(gl, texture, interpolate);\n\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n}\n\n/**\n * @param {import(\"./Helper.js\").default} helper The WebGL helper.\n * @param {WebGLTexture} texture The texture.\n * @param {import(\"../DataTile.js\").ArrayLike} data The pixel data.\n * @param {import(\"../size.js\").Size} size The pixel size.\n * @param {number} bandCount The band count.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction uploadDataTexture(\n  helper,\n  texture,\n  data,\n  size,\n  bandCount,\n  interpolate\n) {\n  const gl = helper.getGL();\n  let textureType;\n  let canInterpolate;\n  if (data instanceof Float32Array) {\n    textureType = gl.FLOAT;\n    helper.getExtension('OES_texture_float');\n    const extension = helper.getExtension('OES_texture_float_linear');\n    canInterpolate = extension !== null;\n  } else {\n    textureType = gl.UNSIGNED_BYTE;\n    canInterpolate = true;\n  }\n  bindAndConfigure(gl, texture, interpolate && canInterpolate);\n\n  const bytesPerRow = data.byteLength / size[1];\n  let unpackAlignment = 1;\n  if (bytesPerRow % 8 === 0) {\n    unpackAlignment = 8;\n  } else if (bytesPerRow % 4 === 0) {\n    unpackAlignment = 4;\n  } else if (bytesPerRow % 2 === 0) {\n    unpackAlignment = 2;\n  }\n\n  let format;\n  switch (bandCount) {\n    case 1: {\n      format = gl.LUMINANCE;\n      break;\n    }\n    case 2: {\n      format = gl.LUMINANCE_ALPHA;\n      break;\n    }\n    case 3: {\n      format = gl.RGB;\n      break;\n    }\n    case 4: {\n      format = gl.RGBA;\n      break;\n    }\n    default: {\n      throw new Error(`Unsupported number of bands: ${bandCount}`);\n    }\n  }\n\n  const oldUnpackAlignment = gl.getParameter(gl.UNPACK_ALIGNMENT);\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, unpackAlignment);\n  gl.texImage2D(\n    gl.TEXTURE_2D,\n    0,\n    format,\n    size[0],\n    size[1],\n    0,\n    format,\n    textureType,\n    data\n  );\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, oldUnpackAlignment);\n}\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @typedef {import(\"../DataTile.js\").default|ImageTile|ReprojTile} TileType\n */\n\n/**\n * @typedef {Object} Options\n * @property {TileType} tile The tile.\n * @property {import(\"../tilegrid/TileGrid.js\").default} grid Tile grid.\n * @property {import(\"../webgl/Helper.js\").default} helper WebGL helper.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n */\n\nclass TileTexture extends EventTarget {\n  /**\n   * @param {Options} options The tile texture options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {TileType}\n     */\n    this.tile;\n\n    /**\n     * @type {Array<WebGLTexture>}\n     */\n    this.textures = [];\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.renderSize_ = toSize(\n      options.grid.getTileSize(options.tile.tileCoord[0])\n    );\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.gutter_ = options.gutter || 0;\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = NaN;\n\n    /**\n     * @type {import(\"../webgl/Helper.js\").default}\n     * @private\n     */\n    this.helper_ = options.helper;\n\n    const coords = new WebGLArrayBuffer(ARRAY_BUFFER, STATIC_DRAW);\n    coords.fromArray([\n      0, // P0\n      1,\n      1, // P1\n      1,\n      1, // P2\n      0,\n      0, // P3\n      0,\n    ]);\n    this.helper_.flushBufferData(coords);\n\n    /**\n     * @type {WebGLArrayBuffer}\n     */\n    this.coords = coords;\n\n    this.setTile(options.tile);\n  }\n\n  /**\n   * @param {TileType} tile Tile.\n   */\n  setTile(tile) {\n    if (tile !== this.tile) {\n      if (this.tile) {\n        this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n      }\n      this.tile = tile;\n      this.textures.length = 0;\n      this.loaded = tile.getState() === TileState.LOADED;\n      if (this.loaded) {\n        this.uploadTile_();\n      } else {\n        if (tile instanceof ImageTile) {\n          const image = tile.getImage();\n          if (image instanceof Image && !image.crossOrigin) {\n            image.crossOrigin = 'anonymous';\n          }\n        }\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n      }\n    }\n  }\n\n  uploadTile_() {\n    const helper = this.helper_;\n    const gl = helper.getGL();\n    const tile = this.tile;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     */\n    let data;\n\n    if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n      data = tile.getImage();\n    } else {\n      data = tile.getData();\n    }\n\n    const image = asImageLike(data);\n    if (image) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n      this.bandCount = 4;\n      uploadImageTexture(gl, texture, image, tile.interpolate);\n      return;\n    }\n\n    data = asArrayLike(data);\n\n    const sourceTileSize = /** @type {DataTile} */ (tile).getSize();\n    const pixelSize = [\n      sourceTileSize[0] + 2 * this.gutter_,\n      sourceTileSize[1] + 2 * this.gutter_,\n    ];\n    const isFloat = data instanceof Float32Array;\n    const pixelCount = pixelSize[0] * pixelSize[1];\n    const DataType = isFloat ? Float32Array : Uint8Array;\n    const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n    const bytesPerRow = data.byteLength / pixelSize[1];\n\n    this.bandCount = Math.floor(bytesPerRow / bytesPerElement / pixelSize[0]);\n    const textureCount = Math.ceil(this.bandCount / 4);\n\n    if (textureCount === 1) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n      uploadDataTexture(\n        helper,\n        texture,\n        data,\n        pixelSize,\n        this.bandCount,\n        tile.interpolate\n      );\n      return;\n    }\n\n    const textureDataArrays = new Array(textureCount);\n    for (let textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n\n      const bandCount =\n        textureIndex < textureCount - 1 ? 4 : ((this.bandCount - 1) % 4) + 1;\n      textureDataArrays[textureIndex] = new DataType(pixelCount * bandCount);\n    }\n\n    let dataIndex = 0;\n    let rowOffset = 0;\n    const colCount = pixelSize[0] * this.bandCount;\n    for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n      for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n        const dataValue = data[rowOffset + colIndex];\n\n        const pixelIndex = Math.floor(dataIndex / this.bandCount);\n        const bandIndex = colIndex % this.bandCount;\n        const textureIndex = Math.floor(bandIndex / 4);\n        const textureData = textureDataArrays[textureIndex];\n        const bandCount = textureData.length / pixelCount;\n        const textureBandIndex = bandIndex % 4;\n        textureData[pixelIndex * bandCount + textureBandIndex] = dataValue;\n\n        ++dataIndex;\n      }\n      rowOffset += bytesPerRow / bytesPerElement;\n    }\n\n    for (let textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n      const texture = this.textures[textureIndex];\n      const textureData = textureDataArrays[textureIndex];\n      const bandCount = textureData.length / pixelCount;\n      uploadDataTexture(\n        helper,\n        texture,\n        textureData,\n        pixelSize,\n        bandCount,\n        tile.interpolate\n      );\n    }\n  }\n\n  handleTileChange_() {\n    if (this.tile.getState() === TileState.LOADED) {\n      this.loaded = true;\n      this.uploadTile_();\n      this.dispatchEvent(EventType.CHANGE);\n    }\n  }\n\n  disposeInternal() {\n    const gl = this.helper_.getGL();\n    this.helper_.deleteBuffer(this.coords);\n    for (let i = 0; i < this.textures.length; ++i) {\n      gl.deleteTexture(this.textures[i]);\n    }\n    this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n  }\n\n  /**\n   * @param {import(\"../DataTile.js\").ImageLike} image The image.\n   * @param {number} renderCol The column index (in rendered tile space).\n   * @param {number} renderRow The row index (in rendered tile space).\n   * @return {Uint8ClampedArray|null} The data.\n   * @private\n   */\n  getImagePixelData_(image, renderCol, renderRow) {\n    const gutter = this.gutter_;\n    const renderWidth = this.renderSize_[0];\n    const renderHeight = this.renderSize_[1];\n\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    const sourceWidth = image.width;\n    const sourceHeight = image.height;\n\n    const sourceWidthWithoutGutter = sourceWidth - 2 * gutter;\n    const sourceHeightWithoutGutter = sourceHeight - 2 * gutter;\n\n    const sourceCol =\n      gutter + Math.floor(sourceWidthWithoutGutter * (renderCol / renderWidth));\n\n    const sourceRow =\n      gutter +\n      Math.floor(sourceHeightWithoutGutter * (renderRow / renderHeight));\n\n    let data;\n    try {\n      pixelContext.drawImage(image, sourceCol, sourceRow, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import(\"../DataTile.js\").ArrayLike} data The data.\n   * @param {import(\"../size.js\").Size} sourceSize The size.\n   * @param {number} renderCol The column index (in rendered tile space).\n   * @param {number} renderRow The row index (in rendered tile space).\n   * @return {import(\"../DataTile.js\").ArrayLike|null} The data.\n   * @private\n   */\n  getArrayPixelData_(data, sourceSize, renderCol, renderRow) {\n    const gutter = this.gutter_;\n    const renderWidth = this.renderSize_[0];\n    const renderHeight = this.renderSize_[1];\n\n    const sourceWidthWithoutGutter = sourceSize[0];\n    const sourceHeightWithoutGutter = sourceSize[1];\n    const sourceWidth = sourceWidthWithoutGutter + 2 * gutter;\n    const sourceHeight = sourceHeightWithoutGutter + 2 * gutter;\n\n    const sourceCol =\n      gutter + Math.floor(sourceWidthWithoutGutter * (renderCol / renderWidth));\n\n    const sourceRow =\n      gutter +\n      Math.floor(sourceHeightWithoutGutter * (renderRow / renderHeight));\n\n    if (data instanceof DataView) {\n      const bytesPerPixel = data.byteLength / (sourceWidth * sourceHeight);\n      const offset = bytesPerPixel * (sourceRow * sourceWidth + sourceCol);\n      const buffer = data.buffer.slice(offset, offset + bytesPerPixel);\n      return new DataView(buffer);\n    }\n\n    const offset = this.bandCount * (sourceRow * sourceWidth + sourceCol);\n    return data.slice(offset, offset + this.bandCount);\n  }\n\n  /**\n   * Get data for a pixel.  If the tile is not loaded, null is returned.\n   * @param {number} renderCol The column index (in rendered tile space).\n   * @param {number} renderRow The row index (in rendered tile space).\n   * @return {import(\"../DataTile.js\").ArrayLike|null} The data.\n   */\n  getPixelData(renderCol, renderRow) {\n    if (!this.loaded) {\n      return null;\n    }\n\n    if (this.tile instanceof DataTile) {\n      const data = this.tile.getData();\n      const arrayData = asArrayLike(data);\n      if (arrayData) {\n        const sourceSize = this.tile.getSize();\n        return this.getArrayPixelData_(\n          arrayData,\n          sourceSize,\n          renderCol,\n          renderRow\n        );\n      }\n      return this.getImagePixelData_(asImageLike(data), renderCol, renderRow);\n    }\n\n    return this.getImagePixelData_(this.tile.getImage(), renderCol, renderRow);\n  }\n}\n\nexport default TileTexture;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerProperty from '../../layer/Property.js';\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(layer, options) {\n    super(layer);\n\n    options = options || {};\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform is only\n     * set before dispatching rendering events.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @private\n     */\n    this.postProcesses_ = options.postProcesses;\n\n    /**\n     * @private\n     */\n    this.uniforms_ = options.uniforms;\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper;\n\n    layer.addChangeListener(LayerProperty.MAP, this.removeHelper.bind(this));\n\n    this.dispatchPreComposeEvent = this.dispatchPreComposeEvent.bind(this);\n    this.dispatchPostComposeEvent = this.dispatchPostComposeEvent.bind(this);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPreComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.PRECOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.PRECOMPOSE,\n        undefined,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPostComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.POSTCOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.POSTCOMPOSE,\n        undefined,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * Reset options (only handles uniforms).\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    this.uniforms_ = options.uniforms;\n    if (this.helper) {\n      this.helper.setUniforms(this.uniforms_);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  removeHelper() {\n    if (this.helper) {\n      this.helper.dispose();\n      delete this.helper;\n    }\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    if (this.getLayer().getRenderSource()) {\n      let incrementGroup = true;\n      let groupNumber = -1;\n      let className;\n      for (let i = 0, ii = frameState.layerStatesArray.length; i < ii; i++) {\n        const layer = frameState.layerStatesArray[i].layer;\n        const renderer = layer.getRenderer();\n        if (!(renderer instanceof WebGLLayerRenderer)) {\n          incrementGroup = true;\n          continue;\n        }\n        const layerClassName = layer.getClassName();\n        if (incrementGroup || layerClassName !== className) {\n          groupNumber += 1;\n          incrementGroup = false;\n        }\n        className = layerClassName;\n        if (renderer === this) {\n          break;\n        }\n      }\n\n      const canvasCacheKey =\n        'map/' + frameState.mapId + '/group/' + groupNumber;\n\n      if (!this.helper || !this.helper.canvasCacheKeyMatches(canvasCacheKey)) {\n        this.removeHelper();\n\n        this.helper = new WebGLHelper({\n          postProcesses: this.postProcesses_,\n          uniforms: this.uniforms_,\n          canvasCacheKey: canvasCacheKey,\n        });\n\n        if (className) {\n          this.helper.getCanvas().className = className;\n        }\n\n        this.afterHelperCreated();\n      }\n    }\n\n    return this.prepareFrameInternal(frameState);\n  }\n\n  /**\n   * @protected\n   */\n  afterHelperCreated() {}\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @protected\n   */\n  prepareFrameInternal(frameState) {\n    return true;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.removeHelper();\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      composeTransform(\n        this.inversePixelTransform_,\n        0,\n        0,\n        frameState.pixelRatio,\n        -frameState.pixelRatio,\n        0,\n        0,\n        -frameState.size[1]\n      );\n\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform_,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n}\n\nexport default WebGLLayerRenderer;\n","/**\n * @module ol/renderer/webgl/TileLayer\n */\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport TileTexture from '../../webgl/TileTexture.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport {ELEMENT_ARRAY_BUFFER, STATIC_DRAW} from '../../webgl.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  boundingExtent,\n  containsCoordinate,\n  getIntersection,\n  isEmpty,\n} from '../../extent.js';\nimport {\n  create as createMat4,\n  fromTransform as mat4FromTransform,\n} from '../../vec/mat4.js';\nimport {\n  createOrUpdate as createTileCoord,\n  getKey as getTileCoordKey,\n} from '../../tilecoord.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  TILE_TEXTURE_ARRAY: 'u_tileTextures',\n  TILE_TRANSFORM: 'u_tileTransform',\n  TRANSITION_ALPHA: 'u_transitionAlpha',\n  DEPTH: 'u_depth',\n  TEXTURE_PIXEL_WIDTH: 'u_texturePixelWidth',\n  TEXTURE_PIXEL_HEIGHT: 'u_texturePixelHeight',\n  TEXTURE_RESOLUTION: 'u_textureResolution', // map units per texture pixel\n  TEXTURE_ORIGIN_X: 'u_textureOriginX', // map x coordinate of left edge of texture\n  TEXTURE_ORIGIN_Y: 'u_textureOriginY', // map y coordinate of top edge of texture\n  RENDER_EXTENT: 'u_renderExtent', // intersection of layer, source, and view extent\n  RESOLUTION: 'u_resolution',\n  ZOOM: 'u_zoom',\n};\n\nexport const Attributes = {\n  TEXTURE_COORD: 'a_textureCoord',\n};\n\n/**\n * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n */\nconst attributeDescriptions = [\n  {\n    name: Attributes.TEXTURE_COORD,\n    size: 2,\n    type: AttributeType.FLOAT,\n  },\n];\n\n/**\n * @type {Object<string, boolean>}\n */\nconst empty = {};\n\n/**\n * Transform a zoom level into a depth value ranging from -1 to 1.\n * @param {number} z A zoom level.\n * @return {number} A depth value.\n */\nfunction depthForZ(z) {\n  return 2 * (1 - 1 / (z + 1)) - 1;\n}\n\n/**\n * Add a tile texture to the lookup.\n * @param {Object<number, Array<import(\"../../webgl/TileTexture.js\").default>>} tileTexturesByZ Lookup of\n * tile textures by zoom level.\n * @param {import(\"../../webgl/TileTexture.js\").default} tileTexture A tile texture.\n * @param {number} z The zoom level.\n */\nfunction addTileTextureToLookup(tileTexturesByZ, tileTexture, z) {\n  if (!(z in tileTexturesByZ)) {\n    tileTexturesByZ[z] = [];\n  }\n  tileTexturesByZ[z].push(tileTexture);\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection)\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\nfunction getCacheKey(source, tileCoord) {\n  return `${source.getKey()},${getTileCoordKey(tileCoord)}`;\n}\n\n/**\n * @typedef {Object} Options\n * @property {string} vertexShader Vertex shader source.\n * @property {string} fragmentShader Fragment shader source.\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {Array<import(\"../../webgl/PaletteTexture.js\").default>} [paletteTextures] Palette textures.\n * @property {number} [cacheSize=512] The texture cache size.\n */\n\n/**\n * @typedef {import(\"../../layer/WebGLTile.js\").default} LayerType\n */\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @extends {WebGLLayerRenderer<LayerType>}\n * @api\n */\nclass WebGLTileLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, {\n      uniforms: options.uniforms,\n    });\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * This transform converts texture coordinates to screen coordinates.\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.tileTransform_ = createTransform();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.tempMat4_ = createMat4();\n\n    /**\n     * @type {import(\"../../TileRange.js\").default}\n     * @private\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    /**\n     * @type {import(\"../../size.js\").Size}\n     * @private\n     */\n    this.tempSize_ = [0, 0];\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * Tiles are rendered as a quad with the following structure:\n     *\n     *  [P3]---------[P2]\n     *   |`           |\n     *   |  `     B   |\n     *   |    `       |\n     *   |      `     |\n     *   |   A    `   |\n     *   |          ` |\n     *  [P0]---------[P1]\n     *\n     * Triangle A: P0, P1, P3\n     * Triangle B: P1, P2, P3\n     *\n     * @private\n     */\n    this.indices_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, STATIC_DRAW);\n    this.indices_.fromArray([0, 1, 3, 1, 2, 3]);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../webgl/TileTexture.js\").default>}\n     * @private\n     */\n    this.tileTextureCache_ = new LRUCache(cacheSize);\n\n    /**\n     * @type {Array<import(\"../../webgl/PaletteTexture.js\").default>}\n     * @private\n     */\n    this.paletteTextures_ = options.paletteTextures || [];\n\n    /**\n     * @private\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.projection_ = undefined;\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset({\n      uniforms: options.uniforms,\n    });\n    this.vertexShader_ = options.vertexShader;\n    this.fragmentShader_ = options.fragmentShader;\n    this.paletteTextures_ = options.paletteTextures || [];\n\n    if (this.helper) {\n      this.program_ = this.helper.getProgram(\n        this.fragmentShader_,\n        this.vertexShader_\n      );\n    }\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_\n    );\n\n    this.helper.flushBufferData(this.indices_);\n  }\n\n  /**\n   * @param {import(\"../../webgl/TileTexture\").TileType} tile Tile.\n   * @return {boolean} Tile is drawable.\n   * @private\n   */\n  isDrawableTile_(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    if (!this.projection_) {\n      this.projection_ = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.projection_) {\n      this.clearCache();\n      this.projection_ = frameState.viewState.projection;\n    }\n\n    const layer = this.getLayer();\n    const source = layer.getRenderSource();\n    if (!source) {\n      return false;\n    }\n\n    if (isEmpty(getRenderExtent(frameState, frameState.extent))) {\n      return false;\n    }\n    return source.getState() === 'ready';\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {Object<number, Array<TileTexture>>} tileTexturesByZ The zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tileTexturesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileTextureCache = this.tileTextureCache_;\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0)\n        ),\n        tileSource.zDirection\n      )\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n          const cacheKey = getCacheKey(tileSource, tileCoord);\n\n          /** @type {TileTexture} */\n          let tileTexture;\n\n          /** @type {import(\"../../webgl/TileTexture\").TileType} */\n          let tile;\n\n          if (tileTextureCache.containsKey(cacheKey)) {\n            tileTexture = tileTextureCache.get(cacheKey);\n            tile = tileTexture.tile;\n          }\n          if (!tileTexture || tileTexture.tile.key !== tileSource.getKey()) {\n            tile = tileSource.getTile(\n              z,\n              x,\n              y,\n              frameState.pixelRatio,\n              viewState.projection\n            );\n            if (!tileTexture) {\n              tileTexture = new TileTexture({\n                tile: tile,\n                grid: tileGrid,\n                helper: this.helper,\n                gutter: gutter,\n              });\n              tileTextureCache.set(cacheKey, tileTexture);\n            } else {\n              if (this.isDrawableTile_(tile)) {\n                tileTexture.setTile(tile);\n              } else {\n                const interimTile =\n                  /** @type {import(\"../../webgl/TileTexture\").TileType} */ (\n                    tile.getInterimTile()\n                  );\n                tileTexture.setTile(interimTile);\n              }\n            }\n          }\n\n          addTileTextureToLookup(tileTexturesByZ, tileTexture, z);\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    this.frameState_ = frameState;\n    this.renderComplete = true;\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n    const extent = getRenderExtent(frameState, frameState.extent);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    /**\n     * @type {Object<number, Array<import(\"../../webgl/TileTexture.js\").default>>}\n     */\n    const tileTexturesByZ = {};\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(\n        frameState,\n        nextExtent,\n        targetZ,\n        tileTexturesByZ,\n        preload\n      );\n    }\n\n    this.enqueueTiles(frameState, extent, z, tileTexturesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          extent,\n          z - 1,\n          tileTexturesByZ,\n          preload - 1\n        );\n      }, 0);\n    }\n\n    /**\n     * A lookup of alpha values for tiles at the target rendering resolution\n     * for tiles that are in transition.  If a tile coord key is absent from\n     * this lookup, the tile should be rendered at alpha 1.\n     * @type {Object<string, number>}\n     */\n    const alphaLookup = {};\n\n    const uid = getUid(this);\n    const time = frameState.time;\n    let blend = false;\n\n    // look for cached tiles to use if a target tile is not ready\n    const tileTextures = tileTexturesByZ[z];\n    for (let i = 0, ii = tileTextures.length; i < ii; ++i) {\n      const tileTexture = tileTextures[i];\n      const tile = tileTexture.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileTexture.loaded) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n        blend = true;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        alphaLookup[tileCoordKey] = alpha;\n      }\n      this.renderComplete = false;\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tileTexturesByZ\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tileTexturesByZ\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    this.helper.useProgram(this.program_, frameState);\n    this.helper.prepareDraw(frameState, !blend);\n\n    const zs = Object.keys(tileTexturesByZ).map(Number).sort(ascending);\n\n    const centerX = viewState.center[0];\n    const centerY = viewState.center[1];\n\n    for (let j = 0, jj = zs.length; j < jj; ++j) {\n      const tileZ = zs[j];\n      const tileResolution = tileGrid.getResolution(tileZ);\n      const tileSize = toSize(tileGrid.getTileSize(tileZ), this.tempSize_);\n      const tileOrigin = tileGrid.getOrigin(tileZ);\n\n      const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n      const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n      const aspectRatio = tileWidthWithGutter / tileHeightWithGutter;\n\n      const centerI =\n        (centerX - tileOrigin[0]) / (tileSize[0] * tileResolution);\n      const centerJ =\n        (tileOrigin[1] - centerY) / (tileSize[1] * tileResolution);\n\n      const tileScale = viewState.resolution / tileResolution;\n\n      const depth = depthForZ(tileZ);\n      const tileTextures = tileTexturesByZ[tileZ];\n      for (let i = 0, ii = tileTextures.length; i < ii; ++i) {\n        const tileTexture = tileTextures[i];\n        if (!tileTexture.loaded) {\n          continue;\n        }\n        const tile = tileTexture.tile;\n        const tileCoord = tile.tileCoord;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n\n        const tileCenterI = tileCoord[1];\n        const tileCenterJ = tileCoord[2];\n\n        resetTransform(this.tileTransform_);\n        scaleTransform(\n          this.tileTransform_,\n          2 / ((frameState.size[0] * tileScale) / tileWidthWithGutter),\n          -2 / ((frameState.size[1] * tileScale) / tileWidthWithGutter)\n        );\n        rotateTransform(this.tileTransform_, viewState.rotation);\n        scaleTransform(this.tileTransform_, 1, 1 / aspectRatio);\n        translateTransform(\n          this.tileTransform_,\n          (tileSize[0] * (tileCenterI - centerI) - gutter) /\n            tileWidthWithGutter,\n          (tileSize[1] * (tileCenterJ - centerJ) - gutter) /\n            tileHeightWithGutter\n        );\n\n        this.helper.setUniformMatrixValue(\n          Uniforms.TILE_TRANSFORM,\n          mat4FromTransform(this.tempMat4_, this.tileTransform_)\n        );\n\n        this.helper.bindBuffer(tileTexture.coords);\n        this.helper.bindBuffer(this.indices_);\n        this.helper.enableAttributes(attributeDescriptions);\n\n        let textureSlot = 0;\n        while (textureSlot < tileTexture.textures.length) {\n          const textureProperty = 'TEXTURE' + textureSlot;\n          const uniformName = `${Uniforms.TILE_TEXTURE_ARRAY}[${textureSlot}]`;\n          gl.activeTexture(gl[textureProperty]);\n          gl.bindTexture(gl.TEXTURE_2D, tileTexture.textures[textureSlot]);\n          gl.uniform1i(\n            this.helper.getUniformLocation(uniformName),\n            textureSlot\n          );\n          ++textureSlot;\n        }\n\n        for (\n          let paletteIndex = 0;\n          paletteIndex < this.paletteTextures_.length;\n          ++paletteIndex\n        ) {\n          const paletteTexture = this.paletteTextures_[paletteIndex];\n          gl.activeTexture(gl['TEXTURE' + textureSlot]);\n          const texture = paletteTexture.getTexture(gl);\n          gl.bindTexture(gl.TEXTURE_2D, texture);\n          gl.uniform1i(\n            this.helper.getUniformLocation(paletteTexture.name),\n            textureSlot\n          );\n          ++textureSlot;\n        }\n\n        const alpha =\n          tileCoordKey in alphaLookup ? alphaLookup[tileCoordKey] : 1;\n\n        if (alpha < 1) {\n          frameState.animate = true;\n        }\n\n        this.helper.setUniformFloatValue(Uniforms.TRANSITION_ALPHA, alpha);\n        this.helper.setUniformFloatValue(Uniforms.DEPTH, depth);\n        this.helper.setUniformFloatValue(\n          Uniforms.TEXTURE_PIXEL_WIDTH,\n          tileWidthWithGutter\n        );\n        this.helper.setUniformFloatValue(\n          Uniforms.TEXTURE_PIXEL_HEIGHT,\n          tileHeightWithGutter\n        );\n        this.helper.setUniformFloatValue(\n          Uniforms.TEXTURE_RESOLUTION,\n          tileResolution\n        );\n        this.helper.setUniformFloatValue(\n          Uniforms.TEXTURE_ORIGIN_X,\n          tileOrigin[0] +\n            tileCenterI * tileSize[0] * tileResolution -\n            gutter * tileResolution\n        );\n        this.helper.setUniformFloatValue(\n          Uniforms.TEXTURE_ORIGIN_Y,\n          tileOrigin[1] -\n            tileCenterJ * tileSize[1] * tileResolution +\n            gutter * tileResolution\n        );\n        let gutterExtent = extent;\n        if (gutter > 0) {\n          gutterExtent = tileGrid.getTileCoordExtent(tileCoord);\n          getIntersection(gutterExtent, extent, gutterExtent);\n        }\n        this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT, gutterExtent);\n        this.helper.setUniformFloatValue(\n          Uniforms.RESOLUTION,\n          viewState.resolution\n        );\n        this.helper.setUniformFloatValue(Uniforms.ZOOM, viewState.zoom);\n\n        this.helper.drawElements(0, this.indices_.getSize());\n      }\n    }\n\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent\n    );\n\n    const canvas = this.helper.getCanvas();\n\n    const tileTextureCache = this.tileTextureCache_;\n    while (tileTextureCache.canExpireCache()) {\n      const tileTexture = tileTextureCache.pop();\n      tileTexture.dispose();\n    }\n\n    // TODO: let the renderers manage their own cache instead of managing the source cache\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../Map.js\").default} map Map.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     */\n    const postRenderFunction = function (map, frameState) {\n      tileSource.updateCacheSize(0.1, frameState.viewState.projection);\n      tileSource.expireCache(frameState.viewState.projection, empty);\n    };\n\n    frameState.postRenderFunctions.push(postRenderFunction);\n\n    this.postRender(gl, frameState);\n    return canvas;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView} Data at the pixel location.\n   */\n  getData(pixel) {\n    const gl = this.helper.getGL();\n    if (!gl) {\n      return null;\n    }\n\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const viewState = frameState.viewState;\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (\n        !containsCoordinate(\n          fromUserExtent(layerExtent, viewState.projection),\n          coordinate\n        )\n      ) {\n        return null;\n      }\n    }\n\n    // determine last source suitable for rendering at coordinate\n    const sources = layer.getSources(\n      boundingExtent([coordinate]),\n      viewState.resolution\n    );\n    let i, source, tileGrid;\n    for (i = sources.length - 1; i >= 0; --i) {\n      source = sources[i];\n      if (source.getState() === 'ready') {\n        tileGrid = source.getTileGridForProjection(viewState.projection);\n        if (source.getWrapX()) {\n          break;\n        }\n        const gridExtent = tileGrid.getExtent();\n        if (!gridExtent || containsCoordinate(gridExtent, coordinate)) {\n          break;\n        }\n      }\n    }\n    if (i < 0) {\n      return null;\n    }\n\n    const tileTextureCache = this.tileTextureCache_;\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const cacheKey = getCacheKey(source, tileCoord);\n      if (!tileTextureCache.containsKey(cacheKey)) {\n        continue;\n      }\n      const tileTexture = tileTextureCache.get(cacheKey);\n      const tile = tileTexture.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        return null;\n      }\n      if (!tileTexture.loaded) {\n        continue;\n      }\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col =\n        (coordinate[0] - tileOrigin[0]) / tileResolution -\n        tileCoord[1] * tileSize[0];\n\n      const row =\n        (tileOrigin[1] - coordinate[1]) / tileResolution -\n        tileCoord[2] * tileSize[1];\n\n      return tileTexture.getPixelData(col, row);\n    }\n    return null;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {Object<number, Array<import(\"../../webgl/TileTexture.js\").default>>} tileTexturesByZ Lookup of\n   * tile textures by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tileTexturesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileTextureCache = this.tileTextureCache_;\n    const source = this.getLayer().getRenderSource();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, [altZ, x, y]);\n        let loaded = false;\n        if (tileTextureCache.containsKey(cacheKey)) {\n          const tileTexture = tileTextureCache.get(cacheKey);\n          if (tileTexture.loaded) {\n            addTileTextureToLookup(tileTexturesByZ, tileTexture, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  clearCache() {\n    const tileTextureCache = this.tileTextureCache_;\n    tileTextureCache.forEach((tileTexture) => tileTexture.dispose());\n    tileTextureCache.clear();\n  }\n\n  removeHelper() {\n    if (this.helper) {\n      this.clearCache();\n    }\n\n    super.removeHelper();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const helper = this.helper;\n    if (helper) {\n      const gl = helper.getGL();\n      gl.deleteProgram(this.program_);\n      delete this.program_;\n\n      helper.deleteBuffer(this.indices_);\n    }\n\n    super.disposeInternal();\n\n    delete this.indices_;\n    delete this.tileTextureCache_;\n    delete this.frameState_;\n  }\n}\n\nexport default WebGLTileLayerRenderer;\n","/**\n * Operators and utilities used for style expressions\n * @module ol/style/expressions\n */\n\nimport PaletteTexture from '../webgl/PaletteTexture.js';\nimport {Uniforms} from '../renderer/webgl/TileLayer.js';\nimport {asArray, fromString, isStringColor} from '../color.js';\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expressions.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels.\n *   * `['get', 'attributeName']` fetches a feature attribute (it will be prefixed by `a_` in the shader)\n *     Note: those will be taken from the attributes provided to the renderer\n *   * `['resolution']` returns the current resolution\n *   * `['time']` returns the time in seconds since the creation of the layer\n *   * `['var', 'varName']` fetches a value from the style variables, or 0 if undefined\n *   * `['zoom']` returns the current zoom level\n *\n * * Math operators:\n *   * `['*', value1, value2]` multiplies `value1` by `value2`\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2]` adds `value1` and `value2`\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4.\n *   * `['color', red, green, blue, alpha]` creates a `color` value from `number` values; the `alpha` parameter is\n *     optional; if not specified, it will be set to 1.\n *     Note: `red`, `green` and `blue` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range).\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\n/**\n * Possible inferred types from a given value or expression.\n * Note: these are binary flags.\n * @enum {number}\n */\nexport const ValueTypes = {\n  NUMBER: 0b00001,\n  STRING: 0b00010,\n  COLOR: 0b00100,\n  BOOLEAN: 0b01000,\n  NUMBER_ARRAY: 0b10000,\n  ANY: 0b11111,\n  NONE: 0,\n};\n\n/**\n * An operator declaration must contain two methods: `getReturnType` which returns a type based on\n * the operator arguments, and `toGlsl` which returns a GLSL-compatible string.\n * Note: both methods can process arguments recursively.\n * @typedef {Object} Operator\n * @property {function(Array<ExpressionValue>): ValueTypes|number} getReturnType Returns one or several types\n * @property {function(ParsingContext, Array<ExpressionValue>, ValueTypes=): string} toGlsl Returns a GLSL-compatible string\n * Note: takes in an optional type hint as 3rd parameter\n */\n\n/**\n * Operator declarations\n * @type {Object<string, Operator>}\n */\nexport const Operators = {};\n\n/**\n * Returns the possible types for a given value (each type being a binary flag)\n * To test a value use e.g. `getValueType(v) & ValueTypes.BOOLEAN`\n * @param {ExpressionValue} value Value\n * @return {ValueTypes|number} Type or types inferred from the value\n */\nexport function getValueType(value) {\n  if (typeof value === 'number') {\n    return ValueTypes.NUMBER;\n  }\n  if (typeof value === 'boolean') {\n    return ValueTypes.BOOLEAN;\n  }\n  if (typeof value === 'string') {\n    if (isStringColor(value)) {\n      return ValueTypes.COLOR | ValueTypes.STRING;\n    }\n    return ValueTypes.STRING;\n  }\n  if (!Array.isArray(value)) {\n    throw new Error(`Unhandled value type: ${JSON.stringify(value)}`);\n  }\n  const valueArr = /** @type {Array<*>} */ (value);\n  const onlyNumbers = valueArr.every(function (v) {\n    return typeof v === 'number';\n  });\n  if (onlyNumbers) {\n    if (valueArr.length === 3 || valueArr.length === 4) {\n      return ValueTypes.COLOR | ValueTypes.NUMBER_ARRAY;\n    }\n    return ValueTypes.NUMBER_ARRAY;\n  }\n  if (typeof valueArr[0] !== 'string') {\n    throw new Error(\n      `Expected an expression operator but received: ${JSON.stringify(\n        valueArr\n      )}`\n    );\n  }\n  const operator = Operators[valueArr[0]];\n  if (operator === undefined) {\n    throw new Error(\n      `Unrecognized expression operator: ${JSON.stringify(valueArr)}`\n    );\n  }\n  return operator.getReturnType(valueArr.slice(1));\n}\n\n/**\n * Checks if only one value type is enabled in the input number.\n * @param {ValueTypes|number} valueType Number containing value type binary flags\n * @return {boolean} True if only one type flag is enabled, false if zero or multiple\n */\nexport function isTypeUnique(valueType) {\n  return Math.log2(valueType) % 1 === 0;\n}\n\n/**\n * Context available during the parsing of an expression.\n * @typedef {Object} ParsingContext\n * @property {boolean} [inFragmentShader] If false, means the expression output should be made for a vertex shader\n * @property {Array<string>} variables List of variables used in the expression; contains **unprefixed names**\n * @property {Array<string>} attributes List of attributes used in the expression; contains **unprefixed names**\n * @property {Object<string, number>} stringLiteralsMap This object maps all encountered string values to a number\n * @property {Object<string, string>} functions Lookup of functions used by the style.\n * @property {number} [bandCount] Number of bands per pixel.\n * @property {Array<PaletteTexture>} [paletteTextures] List of palettes used by the style.\n */\n\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @return {string} The value as string.\n */\nexport function numberToGlsl(v) {\n  const s = v.toString();\n  return s.includes('.') ? s : s + '.0';\n}\n\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @return {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n  if (array.length < 2 || array.length > 4) {\n    throw new Error(\n      '`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.'\n    );\n  }\n  return `vec${array.length}(${array.map(numberToGlsl).join(', ')})`;\n}\n\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n  const array = asArray(color).slice();\n  if (array.length < 4) {\n    array.push(1);\n  }\n  return arrayToGlsl(\n    array.map(function (c, i) {\n      return i < 3 ? c / 255 : c;\n    })\n  );\n}\n\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @return {number} Number equivalent\n */\nexport function getStringNumberEquivalent(context, string) {\n  if (context.stringLiteralsMap[string] === undefined) {\n    context.stringLiteralsMap[string] = Object.keys(\n      context.stringLiteralsMap\n    ).length;\n  }\n  return context.stringLiteralsMap[string];\n}\n\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @return {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(context, string) {\n  return numberToGlsl(getStringNumberEquivalent(context, string));\n}\n\n/**\n * Recursively parses a style expression and outputs a GLSL-compatible string. Takes in a parsing context that\n * will be read and modified during the parsing operation.\n * @param {ParsingContext} context Parsing context\n * @param {ExpressionValue} value Value\n * @param {ValueTypes|number} [typeHint] Hint for the expected final type (can be several types combined)\n * @return {string} GLSL-compatible output\n */\nexport function expressionToGlsl(context, value, typeHint) {\n  // operator\n  if (Array.isArray(value) && typeof value[0] === 'string') {\n    const operator = Operators[value[0]];\n    if (operator === undefined) {\n      throw new Error(\n        `Unrecognized expression operator: ${JSON.stringify(value)}`\n      );\n    }\n    return operator.toGlsl(context, value.slice(1), typeHint);\n  }\n\n  const valueType = getValueType(value);\n  if ((valueType & ValueTypes.NUMBER) > 0) {\n    return numberToGlsl(/** @type {number} */ (value));\n  }\n\n  if ((valueType & ValueTypes.BOOLEAN) > 0) {\n    return value.toString();\n  }\n\n  if (\n    (valueType & ValueTypes.STRING) > 0 &&\n    (typeHint === undefined || typeHint == ValueTypes.STRING)\n  ) {\n    return stringToGlsl(context, value.toString());\n  }\n\n  if (\n    (valueType & ValueTypes.COLOR) > 0 &&\n    (typeHint === undefined || typeHint == ValueTypes.COLOR)\n  ) {\n    return colorToGlsl(/** @type {Array<number> | string} */ (value));\n  }\n\n  if ((valueType & ValueTypes.NUMBER_ARRAY) > 0) {\n    return arrayToGlsl(/** @type {Array<number>} */ (value));\n  }\n\n  throw new Error(`Unexpected expression ${value} (expected type ${typeHint})`);\n}\n\nfunction assertNumber(value) {\n  if (!(getValueType(value) & ValueTypes.NUMBER)) {\n    throw new Error(\n      `A numeric value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertNumbers(values) {\n  for (let i = 0; i < values.length; i++) {\n    assertNumber(values[i]);\n  }\n}\nfunction assertString(value) {\n  if (!(getValueType(value) & ValueTypes.STRING)) {\n    throw new Error(\n      `A string value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertBoolean(value) {\n  if (!(getValueType(value) & ValueTypes.BOOLEAN)) {\n    throw new Error(\n      `A boolean value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertArgsCount(args, count) {\n  if (args.length !== count) {\n    throw new Error(\n      `Exactly ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsMinCount(args, count) {\n  if (args.length < count) {\n    throw new Error(\n      `At least ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsMaxCount(args, count) {\n  if (args.length > count) {\n    throw new Error(\n      `At most ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsEven(args) {\n  if (args.length % 2 !== 0) {\n    throw new Error(\n      `An even amount of arguments was expected, got ${args} instead`\n    );\n  }\n}\nfunction assertArgsOdd(args) {\n  if (args.length % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected, got ${args} instead`\n    );\n  }\n}\nfunction assertUniqueInferredType(args, types) {\n  if (!isTypeUnique(types)) {\n    throw new Error(\n      `Could not infer only one type from the following expression: ${JSON.stringify(\n        args\n      )}`\n    );\n  }\n}\n\nOperators['get'] = {\n  getReturnType: function (args) {\n    return ValueTypes.ANY;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertString(args[0]);\n    const value = args[0].toString();\n    if (!context.attributes.includes(value)) {\n      context.attributes.push(value);\n    }\n    const prefix = context.inFragmentShader ? 'v_' : 'a_';\n    return prefix + value;\n  },\n};\n\n/**\n * Get the uniform name given a variable name.\n * @param {string} variableName The variable name.\n * @return {string} The uniform name.\n */\nexport function uniformNameForVariable(variableName) {\n  return 'u_var_' + variableName;\n}\n\nOperators['var'] = {\n  getReturnType: function (args) {\n    return ValueTypes.ANY;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertString(args[0]);\n    const value = args[0].toString();\n    if (!context.variables.includes(value)) {\n      context.variables.push(value);\n    }\n    return uniformNameForVariable(value);\n  },\n};\n\nexport const PALETTE_TEXTURE_ARRAY = 'u_paletteTextures';\n\n// ['palette', index, colors]\nOperators['palette'] = {\n  getReturnType: function (args) {\n    return ValueTypes.COLOR;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumber(args[0]);\n    const index = expressionToGlsl(context, args[0]);\n    const colors = args[1];\n    if (!Array.isArray(colors)) {\n      throw new Error('The second argument of palette must be an array');\n    }\n    const numColors = colors.length;\n    const palette = new Uint8Array(numColors * 4);\n    for (let i = 0; i < numColors; i++) {\n      const candidate = colors[i];\n      /**\n       * @type {import('../color.js').Color}\n       */\n      let color;\n      if (typeof candidate === 'string') {\n        color = fromString(candidate);\n      } else {\n        if (!Array.isArray(candidate)) {\n          throw new Error(\n            'The second argument of palette must be an array of strings or colors'\n          );\n        }\n        const length = candidate.length;\n        if (length === 4) {\n          color = candidate;\n        } else {\n          if (length !== 3) {\n            throw new Error(\n              `Expected palette color to have 3 or 4 values, got ${length}`\n            );\n          }\n          color = [candidate[0], candidate[1], candidate[2], 1];\n        }\n      }\n      const offset = i * 4;\n      palette[offset] = color[0];\n      palette[offset + 1] = color[1];\n      palette[offset + 2] = color[2];\n      palette[offset + 3] = color[3] * 255;\n    }\n    if (!context.paletteTextures) {\n      context.paletteTextures = [];\n    }\n    const paletteName = `${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}]`;\n    const paletteTexture = new PaletteTexture(paletteName, palette);\n    context.paletteTextures.push(paletteTexture);\n    return `texture2D(${paletteName}, vec2((${index} + 0.5) / ${numColors}.0, 0.5))`;\n  },\n};\n\nconst GET_BAND_VALUE_FUNC = 'getBandValue';\n\nOperators['band'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 1);\n    assertArgsMaxCount(args, 3);\n    const band = args[0];\n\n    if (!(GET_BAND_VALUE_FUNC in context.functions)) {\n      let ifBlocks = '';\n      const bandCount = context.bandCount || 1;\n      for (let i = 0; i < bandCount; i++) {\n        const colorIndex = Math.floor(i / 4);\n        let bandIndex = i % 4;\n        if (i === bandCount - 1 && bandIndex === 1) {\n          // LUMINANCE_ALPHA - band 1 assigned to rgb and band 2 assigned to alpha\n          bandIndex = 3;\n        }\n        const textureName = `${Uniforms.TILE_TEXTURE_ARRAY}[${colorIndex}]`;\n        ifBlocks += `\n          if (band == ${i + 1}.0) {\n            return texture2D(${textureName}, v_textureCoord + vec2(dx, dy))[${bandIndex}];\n          }\n        `;\n      }\n\n      context.functions[GET_BAND_VALUE_FUNC] = `\n        float getBandValue(float band, float xOffset, float yOffset) {\n          float dx = xOffset / ${Uniforms.TEXTURE_PIXEL_WIDTH};\n          float dy = yOffset / ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n          ${ifBlocks}\n        }\n      `;\n    }\n\n    const bandExpression = expressionToGlsl(context, band);\n    const xOffsetExpression = expressionToGlsl(context, args[1] || 0);\n    const yOffsetExpression = expressionToGlsl(context, args[2] || 0);\n    return `${GET_BAND_VALUE_FUNC}(${bandExpression}, ${xOffsetExpression}, ${yOffsetExpression})`;\n  },\n};\n\nOperators['time'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_time';\n  },\n};\n\nOperators['zoom'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_zoom';\n  },\n};\n\nOperators['resolution'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_resolution';\n  },\n};\n\nOperators['*'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 2);\n    assertNumbers(args);\n    return `(${args.map((arg) => expressionToGlsl(context, arg)).join(' * ')})`;\n  },\n};\n\nOperators['/'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} / ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['+'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 2);\n    assertNumbers(args);\n\n    return `(${args.map((arg) => expressionToGlsl(context, arg)).join(' + ')})`;\n  },\n};\n\nOperators['-'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} - ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['clamp'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 3);\n    assertNumbers(args);\n    const min = expressionToGlsl(context, args[1]);\n    const max = expressionToGlsl(context, args[2]);\n    return `clamp(${expressionToGlsl(context, args[0])}, ${min}, ${max})`;\n  },\n};\n\nOperators['%'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `mod(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['^'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `pow(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['abs'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `abs(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['floor'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `floor(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['round'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `floor(${expressionToGlsl(context, args[0])} + 0.5)`;\n  },\n};\n\nOperators['ceil'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `ceil(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['sin'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `sin(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['cos'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `cos(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['atan'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 1);\n    assertArgsMaxCount(args, 2);\n    assertNumbers(args);\n    return args.length === 2\n      ? `atan(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n          context,\n          args[1]\n        )})`\n      : `atan(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['>'] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} > ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['>='] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} >= ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['<'] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} < ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['<='] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} <= ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nfunction getEqualOperator(operator) {\n  return {\n    getReturnType: function (args) {\n      return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n      assertArgsCount(args, 2);\n\n      // find common type\n      let type = ValueTypes.ANY;\n      for (let i = 0; i < args.length; i++) {\n        type &= getValueType(args[i]);\n      }\n      if (type === ValueTypes.NONE) {\n        throw new Error(\n          `All arguments should be of compatible type, got ${JSON.stringify(\n            args\n          )} instead`\n        );\n      }\n\n      // Since it's not possible to have color types here, we can leave it out\n      // This fixes issues in case the value type is ambiguously detected as a color (e.g. the string 'red')\n      type &= ~ValueTypes.COLOR;\n\n      return `(${expressionToGlsl(\n        context,\n        args[0],\n        type\n      )} ${operator} ${expressionToGlsl(context, args[1], type)})`;\n    },\n  };\n}\n\nOperators['=='] = getEqualOperator('==');\n\nOperators['!='] = getEqualOperator('!=');\n\nOperators['!'] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertBoolean(args[0]);\n    return `(!${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nfunction getDecisionOperator(operator) {\n  return {\n    getReturnType: function (args) {\n      return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n      assertArgsMinCount(args, 2);\n      for (let i = 0; i < args.length; i++) {\n        assertBoolean(args[i]);\n      }\n      let result = '';\n      result = args\n        .map((arg) => expressionToGlsl(context, arg))\n        .join(` ${operator} `);\n      result = `(${result})`;\n      return result;\n    },\n  };\n}\n\nOperators['all'] = getDecisionOperator('&&');\n\nOperators['any'] = getDecisionOperator('||');\n\nOperators['between'] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 3);\n    assertNumbers(args);\n    const min = expressionToGlsl(context, args[1]);\n    const max = expressionToGlsl(context, args[2]);\n    const value = expressionToGlsl(context, args[0]);\n    return `(${value} >= ${min} && ${value} <= ${max})`;\n  },\n};\n\nOperators['array'] = {\n  getReturnType: function (args) {\n    return ValueTypes.NUMBER_ARRAY;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 2);\n    assertArgsMaxCount(args, 4);\n    assertNumbers(args);\n    const parsedArgs = args.map(function (val) {\n      return expressionToGlsl(context, val, ValueTypes.NUMBER);\n    });\n    return `vec${args.length}(${parsedArgs.join(', ')})`;\n  },\n};\n\nOperators['color'] = {\n  getReturnType: function (args) {\n    return ValueTypes.COLOR;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 3);\n    assertArgsMaxCount(args, 4);\n    assertNumbers(args);\n    const array = /** @type {Array<number>} */ (args);\n    if (args.length === 3) {\n      array.push(1);\n    }\n    const parsedArgs = args.map(function (val, i) {\n      return (\n        expressionToGlsl(context, val, ValueTypes.NUMBER) +\n        (i < 3 ? ' / 255.0' : '')\n      );\n    });\n    return `vec${args.length}(${parsedArgs.join(', ')})`;\n  },\n};\n\nOperators['interpolate'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.COLOR | ValueTypes.NUMBER;\n    for (let i = 3; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    return type;\n  },\n  toGlsl: function (context, args, typeHint) {\n    assertArgsEven(args);\n    assertArgsMinCount(args, 6);\n\n    // validate interpolation type\n    const type = args[0];\n    let interpolation;\n    switch (type[0]) {\n      case 'linear':\n        interpolation = 1;\n        break;\n      case 'exponential':\n        interpolation = type[1];\n        break;\n      default:\n        interpolation = null;\n    }\n    if (!interpolation) {\n      throw new Error(\n        `Invalid interpolation type for \"interpolate\" operator, received: ${JSON.stringify(\n          type\n        )}`\n      );\n    }\n\n    // compute input/output types\n    typeHint = typeHint !== undefined ? typeHint : ValueTypes.ANY;\n    const outputType = Operators['interpolate'].getReturnType(args) & typeHint;\n    assertUniqueInferredType(args, outputType);\n\n    const input = expressionToGlsl(context, args[1]);\n    const exponent = numberToGlsl(interpolation);\n\n    let result = '';\n    for (let i = 2; i < args.length - 2; i += 2) {\n      const stop1 = expressionToGlsl(context, args[i]);\n      const output1 =\n        result || expressionToGlsl(context, args[i + 1], outputType);\n      const stop2 = expressionToGlsl(context, args[i + 2]);\n      const output2 = expressionToGlsl(context, args[i + 3], outputType);\n      result = `mix(${output1}, ${output2}, pow(clamp((${input} - ${stop1}) / (${stop2} - ${stop1}), 0.0, 1.0), ${exponent}))`;\n    }\n    return result;\n  },\n};\n\nOperators['match'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.ANY;\n    for (let i = 2; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    type = type & getValueType(args[args.length - 1]);\n    return type;\n  },\n  toGlsl: function (context, args, typeHint) {\n    assertArgsEven(args);\n    assertArgsMinCount(args, 4);\n\n    typeHint = typeHint !== undefined ? typeHint : ValueTypes.ANY;\n    const outputType = Operators['match'].getReturnType(args) & typeHint;\n    assertUniqueInferredType(args, outputType);\n\n    const input = expressionToGlsl(context, args[0]);\n    const fallback = expressionToGlsl(\n      context,\n      args[args.length - 1],\n      outputType\n    );\n    let result = null;\n    for (let i = args.length - 3; i >= 1; i -= 2) {\n      const match = expressionToGlsl(context, args[i]);\n      const output = expressionToGlsl(context, args[i + 1], outputType);\n      result = `(${input} == ${match} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  },\n};\n\nOperators['case'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.ANY;\n    for (let i = 1; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    type = type & getValueType(args[args.length - 1]);\n    return type;\n  },\n  toGlsl: function (context, args, typeHint) {\n    assertArgsOdd(args);\n    assertArgsMinCount(args, 3);\n\n    typeHint = typeHint !== undefined ? typeHint : ValueTypes.ANY;\n    const outputType = Operators['case'].getReturnType(args) & typeHint;\n    assertUniqueInferredType(args, outputType);\n    for (let i = 0; i < args.length - 1; i += 2) {\n      assertBoolean(args[i]);\n    }\n\n    const fallback = expressionToGlsl(\n      context,\n      args[args.length - 1],\n      outputType\n    );\n    let result = null;\n    for (let i = args.length - 3; i >= 0; i -= 2) {\n      const condition = expressionToGlsl(context, args[i]);\n      const output = expressionToGlsl(context, args[i + 1], outputType);\n      result = `(${condition} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  },\n};\n","/**\n * Classes and utilities for generating shaders from literal style objects\n * @module ol/webgl/ShaderBuilder\n */\n\nimport {\n  ValueTypes,\n  expressionToGlsl,\n  getStringNumberEquivalent,\n  uniformNameForVariable,\n} from '../style/expressions.js';\n\n/**\n * @typedef {Object} VaryingDescription\n * @property {string} name Varying name, as will be declared in the header.\n * @property {string} type Varying type, either `float`, `vec2`, `vec4`...\n * @property {string} expression Expression which will be assigned to the varying in the vertex shader, and\n * passed on to the fragment shader.\n */\n\n/**\n * @classdesc\n * This class implements a classic builder pattern for generating many different types of shaders.\n * Methods can be chained, e. g.:\n *\n * ```js\n * const shader = new ShaderBuilder()\n *   .addVarying('v_width', 'float', 'a_width')\n *   .addUniform('u_time')\n *   .setColorExpression('...')\n *   .setSizeExpression('...')\n *   .outputSymbolFragmentShader();\n * ```\n */\nexport class ShaderBuilder {\n  constructor() {\n    /**\n     * Uniforms; these will be declared in the header (should include the type).\n     * @type {Array<string>}\n     * @private\n     */\n    this.uniforms = [];\n\n    /**\n     * Attributes; these will be declared in the header (should include the type).\n     * @type {Array<string>}\n     * @private\n     */\n    this.attributes = [];\n\n    /**\n     * Varyings with a name, a type and an expression.\n     * @type {Array<VaryingDescription>}\n     * @private\n     */\n    this.varyings = [];\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.sizeExpression = 'vec2(1.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.rotationExpression = '0.0';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.offsetExpression = 'vec2(0.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.colorExpression = 'vec4(1.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.texCoordExpression = 'vec4(0.0, 0.0, 1.0, 1.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.discardExpression = 'false';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.rotateWithView = false;\n  }\n\n  /**\n   * Adds a uniform accessible in both fragment and vertex shaders.\n   * The given name should include a type, such as `sampler2D u_texture`.\n   * @param {string} name Uniform name\n   * @return {ShaderBuilder} the builder object\n   */\n  addUniform(name) {\n    this.uniforms.push(name);\n    return this;\n  }\n\n  /**\n   * Adds an attribute accessible in the vertex shader, read from the geometry buffer.\n   * The given name should include a type, such as `vec2 a_position`.\n   * @param {string} name Attribute name\n   * @return {ShaderBuilder} the builder object\n   */\n  addAttribute(name) {\n    this.attributes.push(name);\n    return this;\n  }\n\n  /**\n   * Adds a varying defined in the vertex shader and accessible from the fragment shader.\n   * The type and expression of the varying have to be specified separately.\n   * @param {string} name Varying name\n   * @param {'float'|'vec2'|'vec3'|'vec4'} type Type\n   * @param {string} expression Expression used to assign a value to the varying.\n   * @return {ShaderBuilder} the builder object\n   */\n  addVarying(name, type, expression) {\n    this.varyings.push({\n      name: name,\n      type: type,\n      expression: expression,\n    });\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the size of the shape.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec2` value.\n   * @param {string} expression Size expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSizeExpression(expression) {\n    this.sizeExpression = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the rotation of the shape.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `float` value in radians.\n   * @param {string} expression Size expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setRotationExpression(expression) {\n    this.rotationExpression = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the offset of the symbol from the point center.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec2` value.\n   * Note: will only be used for point geometry shaders.\n   * @param {string} expression Offset expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolOffsetExpression(expression) {\n    this.offsetExpression = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the color of the shape.\n   * This expression can use all the uniforms, varyings and attributes available\n   * in the fragment shader, and should evaluate to a `vec4` value.\n   * @param {string} expression Color expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setColorExpression(expression) {\n    this.colorExpression = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the texture coordinates of the vertices.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec4` value.\n   * @param {string} expression Texture coordinate expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setTextureCoordinateExpression(expression) {\n    this.texCoordExpression = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to determine whether a fragment (pixel) should be discarded,\n   * i.e. not drawn at all.\n   * This expression can use all the uniforms, varyings and attributes available\n   * in the fragment shader, and should evaluate to a `bool` value (it will be\n   * used in an `if` statement)\n   * @param {string} expression Fragment discard expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setFragmentDiscardExpression(expression) {\n    this.discardExpression = expression;\n    return this;\n  }\n\n  /**\n   * Sets whether the symbols should rotate with the view or stay aligned with the map.\n   * Note: will only be used for point geometry shaders.\n   * @param {boolean} rotateWithView Rotate with view\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolRotateWithView(rotateWithView) {\n    this.rotateWithView = rotateWithView;\n    return this;\n  }\n\n  /**\n   * @return {string} Previously set size expression\n   */\n  getSizeExpression() {\n    return this.sizeExpression;\n  }\n\n  /**\n   * @return {string} Previously set symbol offset expression\n   */\n  getOffsetExpression() {\n    return this.offsetExpression;\n  }\n\n  /**\n   * @return {string} Previously set color expression\n   */\n  getColorExpression() {\n    return this.colorExpression;\n  }\n\n  /**\n   * @return {string} Previously set texture coordinate expression\n   */\n  getTextureCoordinateExpression() {\n    return this.texCoordExpression;\n  }\n\n  /**\n   * @return {string} Previously set fragment discard expression\n   */\n  getFragmentDiscardExpression() {\n    return this.discardExpression;\n  }\n\n  /**\n   * Generates a symbol vertex shader from the builder parameters,\n   * intended to be used on point geometries.\n   *\n   * Four uniforms are hardcoded in all shaders: `u_projectionMatrix`, `u_offsetScaleMatrix`,\n   * `u_offsetRotateMatrix`, `u_time`.\n   *\n   * The following attributes are hardcoded and expected to be present in the vertex buffers:\n   * `vec2 a_position`, `float a_index` (being the index of the vertex in the quad, 0 to 3).\n   *\n   * The following varyings are hardcoded and gives the coordinate of the pixel both in the quad and on the texture:\n   * `vec2 v_quadCoord`, `vec2 v_texCoord`\n   *\n   * @param {boolean} [forHitDetection] If true, the shader will be modified to include hit detection variables\n   * (namely, hit color with encoded feature id).\n   * @return {string} The full shader as a string.\n   */\n  getSymbolVertexShader(forHitDetection) {\n    const offsetMatrix = this.rotateWithView\n      ? 'u_offsetScaleMatrix * u_offsetRotateMatrix'\n      : 'u_offsetScaleMatrix';\n\n    let attributes = this.attributes;\n    let varyings = this.varyings;\n\n    if (forHitDetection) {\n      attributes = attributes.concat('vec4 a_hitColor');\n      varyings = varyings.concat({\n        name: 'v_hitColor',\n        type: 'vec4',\n        expression: 'a_hitColor',\n      });\n    }\n\n    return `precision mediump float;\nuniform mat4 u_projectionMatrix;\nuniform mat4 u_offsetScaleMatrix;\nuniform mat4 u_offsetRotateMatrix;\nuniform float u_time;\nuniform float u_zoom;\nuniform float u_resolution;\n${this.uniforms\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute float a_index;\n${attributes\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_texCoord;\nvarying vec2 v_quadCoord;\n${varyings\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\nvoid main(void) {\n  mat4 offsetMatrix = ${offsetMatrix};\n  vec2 halfSize = ${this.sizeExpression} * 0.5;\n  vec2 offset = ${this.offsetExpression};\n  float angle = ${this.rotationExpression};\n  float offsetX;\n  float offsetY;\n  if (a_index == 0.0) {\n    offsetX = (offset.x - halfSize.x) * cos(angle) + (offset.y - halfSize.y) * sin(angle);\n    offsetY = (offset.y - halfSize.y) * cos(angle) - (offset.x - halfSize.x) * sin(angle);\n  } else if (a_index == 1.0) {\n    offsetX = (offset.x + halfSize.x) * cos(angle) + (offset.y - halfSize.y) * sin(angle);\n    offsetY = (offset.y - halfSize.y) * cos(angle) - (offset.x + halfSize.x) * sin(angle);\n  } else if (a_index == 2.0) {\n    offsetX = (offset.x + halfSize.x) * cos(angle) + (offset.y + halfSize.y) * sin(angle);\n    offsetY = (offset.y + halfSize.y) * cos(angle) - (offset.x + halfSize.x) * sin(angle);\n  } else {\n    offsetX = (offset.x - halfSize.x) * cos(angle) + (offset.y + halfSize.y) * sin(angle);\n    offsetY = (offset.y + halfSize.y) * cos(angle) - (offset.x - halfSize.x) * sin(angle);\n  }\n  vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n  vec4 texCoord = ${this.texCoordExpression};\n  float u = a_index == 0.0 || a_index == 3.0 ? texCoord.s : texCoord.p;\n  float v = a_index == 2.0 || a_index == 3.0 ? texCoord.t : texCoord.q;\n  v_texCoord = vec2(u, v);\n  u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n  v = a_index == 2.0 || a_index == 3.0 ? 0.0 : 1.0;\n  v_quadCoord = vec2(u, v);\n${varyings\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a symbol fragment shader from the builder parameters,\n   * intended to be used on point geometries.\n   *\n   * Expects the following varyings to be transmitted by the vertex shader:\n   * `vec2 v_quadCoord`, `vec2 v_texCoord`\n   *\n   * @param {boolean} [forHitDetection] If true, the shader will be modified to include hit detection variables\n   * (namely, hit color with encoded feature id).\n   * @return {string} The full shader as a string.\n   */\n  getSymbolFragmentShader(forHitDetection) {\n    const hitDetectionBypass = forHitDetection\n      ? '  if (gl_FragColor.a < 0.1) { discard; } gl_FragColor = v_hitColor;'\n      : '';\n\n    let varyings = this.varyings;\n\n    if (forHitDetection) {\n      varyings = varyings.concat({\n        name: 'v_hitColor',\n        type: 'vec4',\n        expression: 'a_hitColor',\n      });\n    }\n\n    return `precision mediump float;\nuniform float u_time;\nuniform float u_zoom;\nuniform float u_resolution;\n${this.uniforms\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_texCoord;\nvarying vec2 v_quadCoord;\n${varyings\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\nvoid main(void) {\n  if (${this.discardExpression}) { discard; }\n  gl_FragColor = ${this.colorExpression};\n  gl_FragColor.rgb *= gl_FragColor.a;\n${hitDetectionBypass}\n}`;\n  }\n}\n\n/**\n * @typedef {Object} StyleParseResult\n * @property {ShaderBuilder} builder Shader builder pre-configured according to a given style\n * @property {Object<string,import(\"./Helper\").UniformValue>} uniforms Uniform definitions.\n * @property {Array<import(\"../renderer/webgl/PointsLayer\").CustomAttribute>} attributes Attribute descriptions.\n */\n\n/**\n * Parses a {@link import(\"../style/literal\").LiteralStyle} object and returns a {@link ShaderBuilder}\n * object that has been configured according to the given style, as well as `attributes` and `uniforms`\n * arrays to be fed to the `WebGLPointsRenderer` class.\n *\n * Also returns `uniforms` and `attributes` properties as expected by the\n * {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n * @param {import(\"../style/literal\").LiteralStyle} style Literal style.\n * @return {StyleParseResult} Result containing shader params, attributes and uniforms.\n */\nexport function parseLiteralStyle(style) {\n  const symbStyle = style.symbol;\n  const size = symbStyle.size !== undefined ? symbStyle.size : 1;\n  const color = symbStyle.color || 'white';\n  const texCoord = symbStyle.textureCoord || [0, 0, 1, 1];\n  const offset = symbStyle.offset || [0, 0];\n  const opacity = symbStyle.opacity !== undefined ? symbStyle.opacity : 1;\n  const rotation = symbStyle.rotation !== undefined ? symbStyle.rotation : 0;\n\n  /**\n   * @type {import(\"../style/expressions.js\").ParsingContext}\n   */\n  const vertContext = {\n    inFragmentShader: false,\n    variables: [],\n    attributes: [],\n    stringLiteralsMap: {},\n    functions: {},\n  };\n  const parsedSize = expressionToGlsl(\n    vertContext,\n    size,\n    ValueTypes.NUMBER_ARRAY | ValueTypes.NUMBER\n  );\n  const parsedOffset = expressionToGlsl(\n    vertContext,\n    offset,\n    ValueTypes.NUMBER_ARRAY\n  );\n  const parsedTexCoord = expressionToGlsl(\n    vertContext,\n    texCoord,\n    ValueTypes.NUMBER_ARRAY\n  );\n  const parsedRotation = expressionToGlsl(\n    vertContext,\n    rotation,\n    ValueTypes.NUMBER\n  );\n\n  /**\n   * @type {import(\"../style/expressions.js\").ParsingContext}\n   */\n  const fragContext = {\n    inFragmentShader: true,\n    variables: vertContext.variables,\n    attributes: [],\n    stringLiteralsMap: vertContext.stringLiteralsMap,\n    functions: {},\n  };\n  const parsedColor = expressionToGlsl(fragContext, color, ValueTypes.COLOR);\n  const parsedOpacity = expressionToGlsl(\n    fragContext,\n    opacity,\n    ValueTypes.NUMBER\n  );\n\n  let opacityFilter = '1.0';\n  const visibleSize = `vec2(${expressionToGlsl(\n    fragContext,\n    size,\n    ValueTypes.NUMBER_ARRAY | ValueTypes.NUMBER\n  )}).x`;\n  switch (symbStyle.symbolType) {\n    case 'square':\n      break;\n    case 'image':\n      break;\n    // taken from https://thebookofshaders.com/07/\n    case 'circle':\n      opacityFilter = `(1.0-smoothstep(1.-4./${visibleSize},1.,dot(v_quadCoord-.5,v_quadCoord-.5)*4.))`;\n      break;\n    case 'triangle':\n      const st = '(v_quadCoord*2.-1.)';\n      const a = `(atan(${st}.x,${st}.y))`;\n      opacityFilter = `(1.0-smoothstep(.5-3./${visibleSize},.5,cos(floor(.5+${a}/2.094395102)*2.094395102-${a})*length(${st})))`;\n      break;\n\n    default:\n      throw new Error('Unexpected symbol type: ' + symbStyle.symbolType);\n  }\n\n  const builder = new ShaderBuilder()\n    .setSizeExpression(`vec2(${parsedSize})`)\n    .setRotationExpression(parsedRotation)\n    .setSymbolOffsetExpression(parsedOffset)\n    .setTextureCoordinateExpression(parsedTexCoord)\n    .setSymbolRotateWithView(!!symbStyle.rotateWithView)\n    .setColorExpression(\n      `vec4(${parsedColor}.rgb, ${parsedColor}.a * ${parsedOpacity} * ${opacityFilter})`\n    );\n\n  if (style.filter) {\n    const parsedFilter = expressionToGlsl(\n      fragContext,\n      style.filter,\n      ValueTypes.BOOLEAN\n    );\n    builder.setFragmentDiscardExpression(`!${parsedFilter}`);\n  }\n\n  /** @type {Object<string,import(\"../webgl/Helper\").UniformValue>} */\n  const uniforms = {};\n\n  // define one uniform per variable\n  fragContext.variables.forEach(function (varName) {\n    const uniformName = uniformNameForVariable(varName);\n    builder.addUniform(`float ${uniformName}`);\n    uniforms[uniformName] = function () {\n      if (!style.variables || style.variables[varName] === undefined) {\n        throw new Error(\n          `The following variable is missing from the style: ${varName}`\n        );\n      }\n      let value = style.variables[varName];\n      if (typeof value === 'string') {\n        value = getStringNumberEquivalent(vertContext, value);\n      }\n      return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n    };\n  });\n\n  if (symbStyle.symbolType === 'image' && symbStyle.src) {\n    const texture = new Image();\n    texture.crossOrigin =\n      symbStyle.crossOrigin === undefined ? 'anonymous' : symbStyle.crossOrigin;\n    texture.src = symbStyle.src;\n    builder\n      .addUniform('sampler2D u_texture')\n      .setColorExpression(\n        builder.getColorExpression() + ' * texture2D(u_texture, v_texCoord)'\n      );\n    uniforms['u_texture'] = texture;\n  }\n\n  // for each feature attribute used in the fragment shader, define a varying that will be used to pass data\n  // from the vertex to the fragment shader, as well as an attribute in the vertex shader (if not already present)\n  fragContext.attributes.forEach(function (attrName) {\n    if (!vertContext.attributes.includes(attrName)) {\n      vertContext.attributes.push(attrName);\n    }\n    builder.addVarying(`v_${attrName}`, 'float', `a_${attrName}`);\n  });\n\n  // for each feature attribute used in the vertex shader, define an attribute in the vertex shader.\n  vertContext.attributes.forEach(function (attrName) {\n    builder.addAttribute(`float a_${attrName}`);\n  });\n\n  return {\n    builder: builder,\n    attributes: vertContext.attributes.map(function (attributeName) {\n      return {\n        name: attributeName,\n        callback: function (feature, props) {\n          let value = props[attributeName];\n          if (typeof value === 'string') {\n            value = getStringNumberEquivalent(vertContext, value);\n          }\n          return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n        },\n      };\n    }),\n    uniforms: uniforms,\n  };\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, tempExtent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight]\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.height_ = options.height;\n\n    /**\n     * Recalculate the scale if width or height where given.\n     */\n    if (this.width_ !== undefined || this.height_ !== undefined) {\n      const image = this.getImage(1);\n      const setScale = () => {\n        this.updateScaleFromWidthAndHeight(this.width_, this.height_);\n      };\n      if (image.width > 0) {\n        this.updateScaleFromWidthAndHeight(this.width_, this.height_);\n      } else {\n        image.addEventListener('load', setScale);\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n      width: this.width_,\n      height: this.height_,\n    });\n  }\n\n  /**\n   * Set the scale of the Icon by calculating it from given width and height and the\n   * width and height of the image.\n   *\n   * @private\n   * @param {number} width The width.\n   * @param {number} height The height.\n   */\n  updateScaleFromWidthAndHeight(width, height) {\n    const image = this.getImage(1);\n    if (width !== undefined && height !== undefined) {\n      super.setScale([width / image.width, height / image.height]);\n    } else if (width !== undefined) {\n      super.setScale([width / image.width, width / image.width]);\n    } else if (height !== undefined) {\n      super.setScale([height / image.height, height / image.height]);\n    } else {\n      super.setScale([1, 1]);\n    }\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels).\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Get the height of the icon (in pixels).\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    return this.height_;\n  }\n\n  /**\n   * Set the width of the icon in pixels.\n   *\n   * @param {number} width The width to set.\n   */\n  setWidth(width) {\n    this.width_ = width;\n    this.updateScaleFromWidthAndHeight(width, this.height_);\n  }\n\n  /**\n   * Set the height of the icon in pixels.\n   *\n   * @param {number} height The height to set.\n   */\n  setHeight(height) {\n    this.height_ = height;\n    this.updateScaleFromWidthAndHeight(this.width_, height);\n  }\n\n  /**\n   * Set the scale and updates the width and height correspondingly.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @override\n   * @api\n   */\n  setScale(scale) {\n    super.setScale(scale);\n    const image = this.getImage(1);\n    if (image) {\n      const widthScale = Array.isArray(scale) ? scale[0] : scale;\n      if (widthScale !== undefined) {\n        this.width_ = widthScale * image.width;\n      }\n      const heightScale = Array.isArray(scale) ? scale[1] : scale;\n      if (heightScale !== undefined) {\n        this.height_ = heightScale * image.height;\n      }\n    }\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/structs/LinkedList\n */\n\n/**\n * @typedef {Object} Item\n * @property {Item} [prev] Previous.\n * @property {Item} [next] Next.\n * @property {?} data Data.\n */\n\n/**\n * @classdesc\n * Creates an empty linked list structure.\n */\nclass LinkedList {\n  /**\n   * @param {boolean} [circular] The last item is connected to the first one,\n   * and the first item to the last one. Default is true.\n   */\n  constructor(circular) {\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.first_;\n\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.last_;\n\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.head_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.circular_ = circular === undefined ? true : circular;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.length_ = 0;\n  }\n\n  /**\n   * Inserts an item into the linked list right after the current one.\n   *\n   * @param {?} data Item data.\n   */\n  insertItem(data) {\n    /** @type {Item} */\n    const item = {\n      prev: undefined,\n      next: undefined,\n      data: data,\n    };\n\n    const head = this.head_;\n\n    //Initialize the list.\n    if (!head) {\n      this.first_ = item;\n      this.last_ = item;\n      if (this.circular_) {\n        item.next = item;\n        item.prev = item;\n      }\n    } else {\n      //Link the new item to the adjacent ones.\n      const next = head.next;\n      item.prev = head;\n      item.next = next;\n      head.next = item;\n      if (next) {\n        next.prev = item;\n      }\n\n      if (head === this.last_) {\n        this.last_ = item;\n      }\n    }\n    this.head_ = item;\n    this.length_++;\n  }\n\n  /**\n   * Removes the current item from the list. Sets the cursor to the next item,\n   * if possible.\n   */\n  removeItem() {\n    const head = this.head_;\n    if (head) {\n      const next = head.next;\n      const prev = head.prev;\n      if (next) {\n        next.prev = prev;\n      }\n      if (prev) {\n        prev.next = next;\n      }\n      this.head_ = next || prev;\n\n      if (this.first_ === this.last_) {\n        this.head_ = undefined;\n        this.first_ = undefined;\n        this.last_ = undefined;\n      } else if (this.first_ === head) {\n        this.first_ = this.head_;\n      } else if (this.last_ === head) {\n        this.last_ = prev ? this.head_.prev : this.head_;\n      }\n      this.length_--;\n    }\n  }\n\n  /**\n   * Sets the cursor to the first item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  firstItem() {\n    this.head_ = this.first_;\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the last item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  lastItem() {\n    this.head_ = this.last_;\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the next item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  nextItem() {\n    if (this.head_ && this.head_.next) {\n      this.head_ = this.head_.next;\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the next item's data without moving the cursor.\n   *\n   * @return {?} Item data.\n   */\n  getNextItem() {\n    if (this.head_ && this.head_.next) {\n      return this.head_.next.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the previous item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  prevItem() {\n    if (this.head_ && this.head_.prev) {\n      this.head_ = this.head_.prev;\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the previous item's data without moving the cursor.\n   *\n   * @return {?} Item data.\n   */\n  getPrevItem() {\n    if (this.head_ && this.head_.prev) {\n      return this.head_.prev.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the current item's data.\n   *\n   * @return {?} Item data.\n   */\n  getCurrItem() {\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the first item of the list. This only works for circular lists, and sets\n   * the last item accordingly.\n   */\n  setFirstItem() {\n    if (this.circular_ && this.head_) {\n      this.first_ = this.head_;\n      this.last_ = this.head_.prev;\n    }\n  }\n\n  /**\n   * Concatenates two lists.\n   * @param {LinkedList} list List to merge into the current list.\n   */\n  concat(list) {\n    if (list.head_) {\n      if (this.head_) {\n        const end = this.head_.next;\n        this.head_.next = list.first_;\n        list.first_.prev = this.head_;\n        end.prev = list.last_;\n        list.last_.next = end;\n        this.length_ += list.length_;\n      } else {\n        this.head_ = list.head_;\n        this.first_ = list.first_;\n        this.last_ = list.last_;\n        this.length_ = list.length_;\n      }\n      list.head_ = undefined;\n      list.first_ = undefined;\n      list.last_ = undefined;\n      list.length_ = 0;\n    }\n  }\n\n  /**\n   * Returns the current length of the list.\n   *\n   * @return {number} Length.\n   */\n  getLength() {\n    return this.length_;\n  }\n}\n\nexport default LinkedList;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link module:ol/Map~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../Map.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/BingMaps\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {createOrUpdate} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nconst TOS_ATTRIBUTION =\n  '<a class=\"ol-attribution-bing-tos\" ' +\n  'href=\"https://www.microsoft.com/maps/product/terms.html\" target=\"_blank\">' +\n  'Terms of Use</a>';\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at https://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources Resources.\n */\n\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nclass BingMaps extends TileImage {\n  /**\n   * @param {Options} options Bing Maps options.\n   */\n  constructor(options) {\n    const hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    super({\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    const url =\n      'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n      this.imagerySet_ +\n      '?uriScheme=https&include=ImageryProviders&key=' +\n      this.apiKey_ +\n      '&c=' +\n      this.culture_;\n\n    requestJSONP(\n      url,\n      this.handleImageryMetadataResponse.bind(this),\n      undefined,\n      'jsonp'\n    );\n  }\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  getApiKey() {\n    return this.apiKey_;\n  }\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  getImagerySet() {\n    return this.imagerySet_;\n  }\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  handleImageryMetadataResponse(response) {\n    if (\n      response.statusCode != 200 ||\n      response.statusDescription != 'OK' ||\n      response.authenticationResultCode != 'ValidCredentials' ||\n      response.resourceSets.length != 1 ||\n      response.resourceSets[0].resources.length != 1\n    ) {\n      this.setState('error');\n      return;\n    }\n\n    const resource = response.resourceSets[0].resources[0];\n    const maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    const sourceProjection = this.getProjection();\n    const extent = extentFromProjection(sourceProjection);\n    const scale = this.hidpi_ ? 2 : 1;\n    const tileSize =\n      resource.imageWidth == resource.imageHeight\n        ? resource.imageWidth / scale\n        : [resource.imageWidth / scale, resource.imageHeight / scale];\n\n    const tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize,\n    });\n    this.tileGrid = tileGrid;\n\n    const culture = this.culture_;\n    const hidpi = this.hidpi_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function (subdomain) {\n        /** @type {import('../tilecoord.js').TileCoord} */\n        const quadKeyTileCoord = [0, 0, 0];\n        const imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {import(\"../proj/Projection.js\").default} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function (tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            }\n            createOrUpdate(\n              tileCoord[0],\n              tileCoord[1],\n              tileCoord[2],\n              quadKeyTileCoord\n            );\n            let url = imageUrl;\n            if (hidpi) {\n              url += '&dpi=d1&device=mobile';\n            }\n            return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n          }\n        );\n      })\n    );\n\n    if (resource.imageryProviders) {\n      const transform = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        this.getProjection()\n      );\n\n      this.setAttributions((frameState) => {\n        const attributions = [];\n        const viewState = frameState.viewState;\n        const tileGrid = this.getTileGrid();\n        const z = tileGrid.getZForResolution(\n          viewState.resolution,\n          this.zDirection\n        );\n        const tileCoord = tileGrid.getTileCoordForCoordAndZ(\n          viewState.center,\n          z\n        );\n        const zoom = tileCoord[0];\n        resource.imageryProviders.map(function (imageryProvider) {\n          let intersecting = false;\n          const coverageAreas = imageryProvider.coverageAreas;\n          for (let i = 0, ii = coverageAreas.length; i < ii; ++i) {\n            const coverageArea = coverageAreas[i];\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n              const bbox = coverageArea.bbox;\n              const epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n              const extent = applyTransform(epsg4326Extent, transform);\n              if (intersects(extent, frameState.extent)) {\n                intersecting = true;\n                break;\n              }\n            }\n          }\n          if (intersecting) {\n            attributions.push(imageryProvider.attribution);\n          }\n        });\n\n        attributions.push(TOS_ATTRIBUTION);\n        return attributions;\n      });\n    }\n\n    this.setState('ready');\n  }\n}\n\nexport default BingMaps;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/CartoDB\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * https://carto.com/developers/maps-api/guides/anonymous-maps/\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See https://carto.com/developers/maps-api/guides/named-maps/\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See https://carto.com/developers/maps-api/guides/named-maps/\n * for more detail.\n * @property {string} [account] Username as used to access public Carto dashboard at https://{username}.carto.com/.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @typedef {Object} CartoDBLayerInfo\n * @property {string} layergroupid The layer group ID\n * @property {{https: string}} cdn_url The CDN URL\n */\n\n/**\n * @classdesc\n * Layer source for the CartoDB Maps API.\n * @api\n */\nclass CartoDB extends XYZ {\n  /**\n   * @param {Options} options CartoDB options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n      minZoom: options.minZoom,\n      projection: options.projection,\n      transition: options.transition,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.account_ = options.account;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.mapId_ = options.map || '';\n\n    /**\n     * @type {!Object}\n     * @private\n     */\n    this.config_ = options.config || {};\n\n    /**\n     * @type {!Object<string, CartoDBLayerInfo>}\n     * @private\n     */\n    this.templateCache_ = {};\n\n    this.initializeMap_();\n  }\n\n  /**\n   * Returns the current config.\n   * @return {!Object} The current configuration.\n   * @api\n   */\n  getConfig() {\n    return this.config_;\n  }\n\n  /**\n   * Updates the carto db config.\n   * @param {Object} config a key-value lookup. Values will replace current values\n   *     in the config.\n   * @api\n   */\n  updateConfig(config) {\n    Object.assign(this.config_, config);\n    this.initializeMap_();\n  }\n\n  /**\n   * Sets the CartoDB config\n   * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n   *     object.\n   * If using named maps, a key-value lookup with the template parameters.\n   * @api\n   */\n  setConfig(config) {\n    this.config_ = config || {};\n    this.initializeMap_();\n  }\n\n  /**\n   * Issue a request to initialize the CartoDB map.\n   * @private\n   */\n  initializeMap_() {\n    const paramHash = JSON.stringify(this.config_);\n    if (this.templateCache_[paramHash]) {\n      this.applyTemplate_(this.templateCache_[paramHash]);\n      return;\n    }\n    let mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n\n    if (this.mapId_) {\n      mapUrl += '/named/' + this.mapId_;\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener(\n      'load',\n      this.handleInitResponse_.bind(this, paramHash)\n    );\n    client.addEventListener('error', this.handleInitError_.bind(this));\n    client.open('POST', mapUrl);\n    client.setRequestHeader('Content-type', 'application/json');\n    client.send(JSON.stringify(this.config_));\n  }\n\n  /**\n   * Handle map initialization response.\n   * @param {string} paramHash a hash representing the parameter set that was used\n   *     for the request\n   * @param {Event} event Event.\n   * @private\n   */\n  handleInitResponse_(paramHash, event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {CartoDBLayerInfo} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.setState('error');\n        return;\n      }\n      this.applyTemplate_(response);\n      this.templateCache_[paramHash] = response;\n      this.setState('ready');\n    } else {\n      this.setState('error');\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event Event.\n   */\n  handleInitError_(event) {\n    this.setState('error');\n  }\n\n  /**\n   * Apply the new tile urls returned by carto db\n   * @param {CartoDBLayerInfo} data Result of carto db call.\n   * @private\n   */\n  applyTemplate_(data) {\n    const tilesUrl =\n      'https://' +\n      data.cdn_url.https +\n      '/' +\n      this.account_ +\n      '/api/v1/map/' +\n      data.layergroupid +\n      '/{z}/{x}/{y}.png';\n    this.setUrl(tilesUrl);\n  }\n}\n\nexport default CartoDB;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/source/Cluster\n */\n\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\nimport {add as addCoordinate, scale as scaleCoordinate} from '../coordinate.js';\nimport {assert} from '../asserts.js';\nimport {\n  buffer,\n  createEmpty,\n  createOrUpdateFromCoordinate,\n  getCenter,\n} from '../extent.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Distance in pixels within which features will\n * be clustered together.\n * @property {number} [minDistance=0] Minimum distance in pixels between clusters.\n * Will be capped at the configured distance.\n * By default no minimum distance is guaranteed. This config can be used to avoid\n * overlapping icons. As a tradoff, the cluster feature's position will no longer be\n * the center of all its features.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Point~Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underlying source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {function(Point, Array<Feature>):Feature} [createCluster]\n * Function that takes the cluster's center {@link module:ol/geom/Point~Point} and an array\n * of {@link module:ol/Feature~Feature} included in this cluster. Must return a\n * {@link module:ol/Feature~Feature} that will be used to render. Default implementation is:\n * ```js\n * function(point, features) {\n *   return new Feature({\n *     geometry: point,\n *     features: features\n *   });\n * }\n * ```\n * @property {VectorSource} [source=null] Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * If the instance is disposed without also disposing the underlying\n * source `setSource(null)` has to be called to remove the listener reference\n * from the wrapped source.\n * @api\n */\nclass Cluster extends VectorSource {\n  /**\n   * @param {Options} options Cluster options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.minDistance = options.minDistance || 0;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.interpolationRatio = 0;\n\n    /**\n     * @type {Array<Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {Feature} feature Feature.\n     * @return {Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction =\n      options.geometryFunction ||\n      function (feature) {\n        const geometry = /** @type {Point} */ (feature.getGeometry());\n        assert(geometry.getType() == 'Point', 10); // The default `geometryFunction` can only handle `Point` geometries\n        return geometry;\n      };\n\n    /**\n     * @type {function(Point, Array<Feature>):Feature}\n     * @private\n     */\n    this.createCustomCluster_ = options.createCluster;\n\n    /**\n     * @type {VectorSource|null}\n     * @protected\n     */\n    this.source = null;\n\n    /**\n     * @private\n     */\n    this.boundRefresh_ = this.refresh.bind(this);\n\n    this.updateDistance(this.distance, this.minDistance);\n    this.setSource(options.source || null);\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/VectorEventType~VectorEventType#removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    this.features.length = 0;\n    super.clear(fast);\n  }\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  getDistance() {\n    return this.distance;\n  }\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {VectorSource|null} Source.\n   * @api\n   */\n  getSource() {\n    return this.source;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    this.source.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.resolution = resolution;\n      this.refresh();\n    }\n  }\n\n  /**\n   * Set the distance within which features will be clusterd together.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  setDistance(distance) {\n    this.updateDistance(distance, this.minDistance);\n  }\n\n  /**\n   * Set the minimum distance between clusters. Will be capped at the\n   * configured distance.\n   * @param {number} minDistance The minimum distance in pixels.\n   * @api\n   */\n  setMinDistance(minDistance) {\n    this.updateDistance(this.distance, minDistance);\n  }\n\n  /**\n   * The configured minimum distance between clusters.\n   * @return {number} The minimum distance in pixels.\n   * @api\n   */\n  getMinDistance() {\n    return this.minDistance;\n  }\n\n  /**\n   * Replace the wrapped source.\n   * @param {VectorSource|null} source The new source for this instance.\n   * @api\n   */\n  setSource(source) {\n    if (this.source) {\n      this.source.removeEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.source = source;\n    if (source) {\n      source.addEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.refresh();\n  }\n\n  /**\n   * Handle the source changing.\n   */\n  refresh() {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n  }\n\n  /**\n   * Update the distances and refresh the source if necessary.\n   * @param {number} distance The new distance.\n   * @param {number} minDistance The new minimum distance.\n   */\n  updateDistance(distance, minDistance) {\n    const ratio =\n      distance === 0 ? 0 : Math.min(minDistance, distance) / distance;\n    const changed =\n      distance !== this.distance || this.interpolationRatio !== ratio;\n    this.distance = distance;\n    this.minDistance = minDistance;\n    this.interpolationRatio = ratio;\n    if (changed) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  cluster() {\n    if (this.resolution === undefined || !this.source) {\n      return;\n    }\n    const extent = createEmpty();\n    const mapDistance = this.distance * this.resolution;\n    const features = this.source.getFeatures();\n\n    /** @type {Object<string, true>} */\n    const clustered = {};\n\n    for (let i = 0, ii = features.length; i < ii; i++) {\n      const feature = features[i];\n      if (!(getUid(feature) in clustered)) {\n        const geometry = this.geometryFunction(feature);\n        if (geometry) {\n          const coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          const neighbors = this.source\n            .getFeaturesInExtent(extent)\n            .filter(function (neighbor) {\n              const uid = getUid(neighbor);\n              if (uid in clustered) {\n                return false;\n              }\n              clustered[uid] = true;\n              return true;\n            });\n          this.features.push(this.createCluster(neighbors, extent));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Feature>} features Features\n   * @param {import(\"../extent.js\").Extent} extent The searched extent for these features.\n   * @return {Feature} The cluster feature.\n   * @protected\n   */\n  createCluster(features, extent) {\n    const centroid = [0, 0];\n    for (let i = features.length - 1; i >= 0; --i) {\n      const geometry = this.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n    const searchCenter = getCenter(extent);\n    const ratio = this.interpolationRatio;\n    const geometry = new Point([\n      centroid[0] * (1 - ratio) + searchCenter[0] * ratio,\n      centroid[1] * (1 - ratio) + searchCenter[1] * ratio,\n    ]);\n    if (this.createCustomCluster_) {\n      return this.createCustomCluster_(geometry, features);\n    }\n    return new Feature({\n      geometry,\n      features,\n    });\n  }\n}\n\nexport default Cluster;\n","/**\n * @module ol/source/DataTile\n */\nimport DataTile from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport ReprojDataTile from '../reproj/DataTile.js';\nimport TileCache from '../TileCache.js';\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {\n  createXYZ,\n  extentFromProjection,\n  getForProjection as getTileGridForProjection,\n} from '../tilegrid.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\nimport {toPromise} from '../functions.js';\nimport {toSize} from '../size.js';\n\n/**\n * Data tile loading function.  The function is called with z, x, and y tile coordinates and\n * returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * @typedef {function(number, number, number) : (import(\"../DataTile.js\").Data|Promise<import(\"../DataTile.js\").Data>)} Loader\n */\n\n/**\n * @typedef {Object} Options\n * @property {Loader} [loader] Data loader.  Called with z, x, and y tile coordinates.\n * Returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The pixel width and height of the source tiles.\n * This may be different than the rendered pixel size if a `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around data tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported data should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Tile projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"./Source.js\").State} [state] The source state.\n * @property {boolean} [wrapX=false] Render tiles beyond the antimeridian.\n * @property {number} [transition] Transition time when fading in new tiles (in miliseconds).\n * @property {number} [bandCount=4] Number of bands represented in the data.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * A source for typed array data tiles.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass DataTileSource extends TileSource {\n  /**\n   * @param {Options} options DataTile source options.\n   */\n  constructor(options) {\n    const projection =\n      options.projection === undefined ? 'EPSG:3857' : options.projection;\n\n    let tileGrid = options.tileGrid;\n    if (tileGrid === undefined && projection) {\n      tileGrid = createXYZ({\n        extent: extentFromProjection(projection),\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize,\n      });\n    }\n\n    super({\n      cacheSize: 0.1, // don't cache on the source\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: projection,\n      tileGrid: tileGrid,\n      opaque: options.opaque,\n      state: options.state,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {import('../size.js').Size|null}\n     */\n    this.tileSize_ = options.tileSize ? toSize(options.tileSize) : null;\n\n    /**\n     * @private\n     * @type {Array<import('../size.js').Size>|null}\n     */\n    this.tileSizes_ = null;\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n    /**\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = options.bandCount === undefined ? 4 : options.bandCount; // assume RGBA if undefined\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../TileCache.js\").default>}\n     */\n    this.tileCacheForProjection_ = {};\n  }\n\n  /**\n   * Set the source tile sizes.  The length of the array is expected to match the number of\n   * levels in the tile grid.\n   * @protected\n   * @param {Array<import('../size.js').Size>} tileSizes An array of tile sizes.\n   */\n  setTileSizes(tileSizes) {\n    this.tileSizes_ = tileSizes;\n  }\n\n  /**\n   * Get the source tile size at the given zoom level.  This may be different than the rendered tile\n   * size.\n   * @protected\n   * @param {number} z Tile zoom level.\n   * @return {import('../size.js').Size} The source tile size.\n   */\n  getTileSize(z) {\n    if (this.tileSizes_) {\n      return this.tileSizes_[z];\n    }\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    const tileGrid = this.getTileGrid();\n    return tileGrid ? toSize(tileGrid.getTileSize(z)) : [256, 256];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.gutter_;\n    }\n\n    return 0;\n  }\n\n  /**\n   * @param {Loader} loader The data loader.\n   * @protected\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} targetProj The output projection.\n   * @param {import(\"../proj/Projection.js\").default} sourceProj The input projection.\n   * @return {!DataTile} Tile.\n   */\n  getReprojTile_(z, x, y, targetProj, sourceProj) {\n    const cache = this.getTileCacheForProjection(targetProj);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (cache.containsKey(tileCoordKey)) {\n      const tile = cache.get(tileCoordKey);\n      if (tile && tile.key == this.getKey()) {\n        return tile;\n      }\n    }\n\n    const tileGrid = this.getTileGrid();\n    const reprojTilePixelRatio = Math.max.apply(\n      null,\n      tileGrid.getResolutions().map((r, z) => {\n        const tileSize = toSize(tileGrid.getTileSize(z));\n        const textureSize = this.getTileSize(z);\n        return Math.max(\n          textureSize[0] / tileSize[0],\n          textureSize[1] / tileSize[1]\n        );\n      })\n    );\n\n    const sourceTileGrid = this.getTileGridForProjection(sourceProj);\n    const targetTileGrid = this.getTileGridForProjection(targetProj);\n    const tileCoord = [z, x, y];\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      targetProj\n    );\n\n    const options = Object.assign(\n      {\n        sourceProj,\n        sourceTileGrid,\n        targetProj,\n        targetTileGrid,\n        tileCoord,\n        wrappedTileCoord,\n        pixelRatio: reprojTilePixelRatio,\n        gutter: this.getGutterForProjection(sourceProj),\n        getTileFunction: (z, x, y, pixelRatio) =>\n          this.getTile(z, x, y, pixelRatio, sourceProj),\n      },\n      this.tileOptions\n    );\n    const newTile = new ReprojDataTile(options);\n    newTile.key = this.getKey();\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!DataTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      sourceProjection &&\n      projection &&\n      !equivalent(sourceProjection, projection)\n    ) {\n      return this.getReprojTile_(z, x, y, projection, sourceProjection);\n    }\n\n    const size = this.getTileSize(z);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    }\n\n    const sourceLoader = this.loader_;\n\n    function loader() {\n      return toPromise(function () {\n        return sourceLoader(z, x, y);\n      });\n    }\n\n    const options = Object.assign(\n      {\n        tileCoord: [z, x, y],\n        loader: loader,\n        size: size,\n      },\n      this.tileOptions\n    );\n\n    const tile = new DataTile(options);\n    tile.key = this.getKey();\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   */\n  handleTileChange_(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection_)) {\n      this.tileGridForProjection_[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection_[projKey];\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection_)) {\n        this.tileGridForProjection_[projKey] = tilegrid;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection_)) {\n      this.tileCacheForProjection_[projKey] = new TileCache(0.1); // don't cache\n    }\n    return this.tileCacheForProjection_[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection_) {\n      const tileCache = this.tileCacheForProjection_[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection_) {\n      this.tileCacheForProjection_[id].clear();\n    }\n  }\n}\n\nexport default DataTileSource;\n","/**\n * @module ol/source/GeoTIFF\n */\nimport DataTile from './DataTile.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport {\n  Pool,\n  globals as geotiffGlobals,\n  fromBlob as tiffFromBlob,\n  fromUrl as tiffFromUrl,\n  fromUrls as tiffFromUrls,\n} from 'geotiff';\nimport {\n  Projection,\n  get as getCachedProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {clamp} from '../math.js';\nimport {getCenter, getIntersection} from '../extent.js';\nimport {error as logError} from '../console.js';\nimport {fromCode as unitsFromCode} from '../proj/Units.js';\n\n/**\n * Determine if an image type is a mask.\n * See https://www.awaresystems.be/imaging/tiff/tifftags/newsubfiletype.html\n * @param {GeoTIFFImage} image The image.\n * @return {boolean} The image is a mask.\n */\nfunction isMask(image) {\n  const fileDirectory = image.fileDirectory;\n  const type = fileDirectory.NewSubfileType || 0;\n  return (type & 4) === 4;\n}\n\n/**\n * @param {true|false|'auto'} preference The convertToRGB option.\n * @param {GeoTIFFImage} image The image.\n * @return {boolean} Use the `image.readRGB()` method.\n */\nfunction readRGB(preference, image) {\n  if (!preference) {\n    return false;\n  }\n  if (preference === true) {\n    return true;\n  }\n  if (image.getSamplesPerPixel() !== 3) {\n    return false;\n  }\n  const interpretation = image.fileDirectory.PhotometricInterpretation;\n  const interpretations = geotiffGlobals.photometricInterpretations;\n  return (\n    interpretation === interpretations.CMYK ||\n    interpretation === interpretations.YCbCr ||\n    interpretation === interpretations.CIELab ||\n    interpretation === interpretations.ICCLab\n  );\n}\n\n/**\n * @typedef {Object} SourceInfo\n * @property {string} [url] URL for the source GeoTIFF.\n * @property {Array<string>} [overviews] List of any overview URLs, only applies if the url parameter is given.\n * @property {Blob} [blob] Blob containing the source GeoTIFF. `blob` and `url` are mutually exclusive.\n * @property {number} [min=0] The minimum source data value.  Rendered values are scaled from 0 to 1 based on\n * the configured min and max.  If not provided and raster statistics are available, those will be used instead.\n * If neither are available, the minimum for the data type will be used.  To disable this behavior, set\n * the `normalize` option to `false` in the constructor.\n * @property {number} [max] The maximum source data value.  Rendered values are scaled from 0 to 1 based on\n * the configured min and max.  If not provided and raster statistics are available, those will be used instead.\n * If neither are available, the maximum for the data type will be used.  To disable this behavior, set\n * the `normalize` option to `false` in the constructor.\n * @property {number} [nodata] Values to discard (overriding any nodata values in the metadata).\n * When provided, an additional alpha band will be added to the data.  Often the GeoTIFF metadata\n * will include information about nodata values, so you should only need to set this property if\n * you find that it is not already extracted from the metadata.\n * @property {Array<number>} [bands] Band numbers to be read from (where the first band is `1`). If not provided, all bands will\n * be read. For example, if a GeoTIFF has blue (1), green (2), red (3), and near-infrared (4) bands, and you only need the\n * near-infrared band, configure `bands: [4]`.\n */\n\n/**\n * @typedef {Object} GeoKeys\n * @property {number} GTModelTypeGeoKey Model type.\n * @property {number} GTRasterTypeGeoKey Raster type.\n * @property {number} GeogAngularUnitsGeoKey Angular units.\n * @property {number} GeogInvFlatteningGeoKey Inverse flattening.\n * @property {number} GeogSemiMajorAxisGeoKey Semi-major axis.\n * @property {number} GeographicTypeGeoKey Geographic coordinate system code.\n * @property {number} ProjLinearUnitsGeoKey Projected linear unit code.\n * @property {number} ProjectedCSTypeGeoKey Projected coordinate system code.\n */\n\n/**\n * @typedef {import(\"geotiff\").GeoTIFF} GeoTIFF\n */\n\n/**\n * @typedef {import(\"geotiff\").MultiGeoTIFF} MultiGeoTIFF\n */\n\n/**\n * @typedef {Object} GDALMetadata\n * @property {string} STATISTICS_MINIMUM The minimum value (as a string).\n * @property {string} STATISTICS_MAXIMUM The maximum value (as a string).\n */\n\nconst STATISTICS_MAXIMUM = 'STATISTICS_MAXIMUM';\nconst STATISTICS_MINIMUM = 'STATISTICS_MINIMUM';\n\nconst defaultTileSize = 256;\n\n/**\n * @typedef {import(\"geotiff\").GeoTIFFImage} GeoTIFFImage\n */\n\nlet workerPool;\nfunction getWorkerPool() {\n  if (!workerPool) {\n    workerPool = new Pool();\n  }\n  return workerPool;\n}\n\n/**\n * Get the bounding box of an image.  If the image does not have an affine transform,\n * the pixel bounds are returned.\n * @param {GeoTIFFImage} image The image.\n * @return {Array<number>} The image bounding box.\n */\nfunction getBoundingBox(image) {\n  try {\n    return image.getBoundingBox();\n  } catch (_) {\n    const fileDirectory = image.fileDirectory;\n    return [0, 0, fileDirectory.ImageWidth, fileDirectory.ImageLength];\n  }\n}\n\n/**\n * Get the origin of an image.  If the image does not have an affine transform,\n * the top-left corner of the pixel bounds is returned.\n * @param {GeoTIFFImage} image The image.\n * @return {Array<number>} The image origin.\n */\nfunction getOrigin(image) {\n  try {\n    return image.getOrigin().slice(0, 2);\n  } catch (_) {\n    return [0, image.fileDirectory.ImageLength];\n  }\n}\n\n/**\n * Get the resolution of an image.  If the image does not have an affine transform,\n * the width of the image is compared with the reference image.\n * @param {GeoTIFFImage} image The image.\n * @param {GeoTIFFImage} referenceImage The reference image.\n * @return {Array<number>} The map x and y units per pixel.\n */\nfunction getResolutions(image, referenceImage) {\n  try {\n    return image.getResolution(referenceImage);\n  } catch (_) {\n    return [\n      referenceImage.fileDirectory.ImageWidth / image.fileDirectory.ImageWidth,\n      referenceImage.fileDirectory.ImageHeight /\n        image.fileDirectory.ImageHeight,\n    ];\n  }\n}\n\n/**\n * @param {GeoTIFFImage} image A GeoTIFF.\n * @return {import(\"../proj/Projection.js\").default} The image projection.\n */\nfunction getProjection(image) {\n  const geoKeys = image.geoKeys;\n  if (!geoKeys) {\n    return null;\n  }\n\n  if (\n    geoKeys.ProjectedCSTypeGeoKey &&\n    geoKeys.ProjectedCSTypeGeoKey !== 32767\n  ) {\n    const code = 'EPSG:' + geoKeys.ProjectedCSTypeGeoKey;\n    let projection = getCachedProjection(code);\n    if (!projection) {\n      const units = unitsFromCode(geoKeys.ProjLinearUnitsGeoKey);\n      if (units) {\n        projection = new Projection({\n          code: code,\n          units: units,\n        });\n      }\n    }\n    return projection;\n  }\n\n  if (geoKeys.GeographicTypeGeoKey && geoKeys.GeographicTypeGeoKey !== 32767) {\n    const code = 'EPSG:' + geoKeys.GeographicTypeGeoKey;\n    let projection = getCachedProjection(code);\n    if (!projection) {\n      const units = unitsFromCode(geoKeys.GeogAngularUnitsGeoKey);\n      if (units) {\n        projection = new Projection({\n          code: code,\n          units: units,\n        });\n      }\n    }\n    return projection;\n  }\n\n  return null;\n}\n\n/**\n * @param {GeoTIFF|MultiGeoTIFF} tiff A GeoTIFF.\n * @return {Promise<Array<GeoTIFFImage>>} Resolves to a list of images.\n */\nfunction getImagesForTIFF(tiff) {\n  return tiff.getImageCount().then(function (count) {\n    const requests = new Array(count);\n    for (let i = 0; i < count; ++i) {\n      requests[i] = tiff.getImage(i);\n    }\n    return Promise.all(requests);\n  });\n}\n\n/**\n * @param {SourceInfo} source The GeoTIFF source.\n * @param {Object} options Options for the GeoTIFF source.\n * @return {Promise<Array<GeoTIFFImage>>} Resolves to a list of images.\n */\nfunction getImagesForSource(source, options) {\n  let request;\n  if (source.blob) {\n    request = tiffFromBlob(source.blob);\n  } else if (source.overviews) {\n    request = tiffFromUrls(source.url, source.overviews, options);\n  } else {\n    request = tiffFromUrl(source.url, options);\n  }\n  return request.then(getImagesForTIFF);\n}\n\n/**\n * @param {number|Array<number>|Array<Array<number>>} expected Expected value.\n * @param {number|Array<number>|Array<Array<number>>} got Actual value.\n * @param {number} tolerance Accepted tolerance in fraction of expected between expected and got.\n * @param {string} message The error message.\n * @param {function(Error):void} rejector A function to be called with any error.\n */\nfunction assertEqual(expected, got, tolerance, message, rejector) {\n  if (Array.isArray(expected)) {\n    const length = expected.length;\n    if (!Array.isArray(got) || length != got.length) {\n      const error = new Error(message);\n      rejector(error);\n      throw error;\n    }\n    for (let i = 0; i < length; ++i) {\n      assertEqual(expected[i], got[i], tolerance, message, rejector);\n    }\n    return;\n  }\n\n  got = /** @type {number} */ (got);\n  if (Math.abs(expected - got) > tolerance * expected) {\n    throw new Error(message);\n  }\n}\n\n/**\n * @param {Array} array The data array.\n * @return {number} The minimum value.\n */\nfunction getMinForDataType(array) {\n  if (array instanceof Int8Array) {\n    return -128;\n  }\n  if (array instanceof Int16Array) {\n    return -32768;\n  }\n  if (array instanceof Int32Array) {\n    return -2147483648;\n  }\n  if (array instanceof Float32Array) {\n    return 1.2e-38;\n  }\n  return 0;\n}\n\n/**\n * @param {Array} array The data array.\n * @return {number} The maximum value.\n */\nfunction getMaxForDataType(array) {\n  if (array instanceof Int8Array) {\n    return 127;\n  }\n  if (array instanceof Uint8Array) {\n    return 255;\n  }\n  if (array instanceof Uint8ClampedArray) {\n    return 255;\n  }\n  if (array instanceof Int16Array) {\n    return 32767;\n  }\n  if (array instanceof Uint16Array) {\n    return 65535;\n  }\n  if (array instanceof Int32Array) {\n    return 2147483647;\n  }\n  if (array instanceof Uint32Array) {\n    return 4294967295;\n  }\n  if (array instanceof Float32Array) {\n    return 3.4e38;\n  }\n  return 255;\n}\n\n/**\n * @typedef {Object} GeoTIFFSourceOptions\n * @property {boolean} [forceXHR=false] Whether to force the usage of the browsers XMLHttpRequest API.\n * @property {Object<string, string>} [headers] additional key-value pairs of headers to be passed with each request. Key is the header name, value the header value.\n * @property {string} [credentials] How credentials shall be handled. See\n * https://developer.mozilla.org/en-US/docs/Web/API/fetch for reference and possible values\n * @property {number} [maxRanges] The maximum amount of ranges to request in a single multi-range request.\n * By default only a single range is used.\n * @property {boolean} [allowFullFile=false] Whether or not a full file is accepted when only a portion is\n * requested. Only use this when you know the source image to be small enough to fit in memory.\n * @property {number} [blockSize=65536] The block size to use.\n * @property {number} [cacheSize=100] The number of blocks that shall be held in a LRU cache.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<SourceInfo>} sources List of information about GeoTIFF sources.\n * Multiple sources can be combined when their resolution sets are equal after applying a scale.\n * The list of sources defines a mapping between input bands as they are read from each GeoTIFF and\n * the output bands that are provided by data tiles. To control which bands to read from each GeoTIFF,\n * use the {@link import(\"./GeoTIFF.js\").SourceInfo bands} property. If, for example, you specify two\n * sources, one with 3 bands and {@link import(\"./GeoTIFF.js\").SourceInfo nodata} configured, and\n * another with 1 band, the resulting data tiles will have 5 bands: 3 from the first source, 1 alpha\n * band from the first source, and 1 band from the second source.\n * @property {GeoTIFFSourceOptions} [sourceOptions] Additional options to be passed to [geotiff.js](https://geotiffjs.github.io/geotiff.js/module-geotiff.html)'s `fromUrl` or `fromUrls` methods.\n * @property {true|false|'auto'} [convertToRGB=false] By default, bands from the sources are read as-is. When\n * reading GeoTIFFs with the purpose of displaying them as RGB images, setting this to `true` will\n * convert other color spaces (YCbCr, CMYK) to RGB.  Setting the option to `'auto'` will make it so CMYK, YCbCr,\n * CIELab, and ICCLab images will automatically be converted to RGB.\n * @property {boolean} [normalize=true] By default, the source data is normalized to values between\n * 0 and 1 with scaling factors based on the raster statistics or `min` and `max` properties of each source.\n * If instead you want to work with the raw values in a style expression, set this to `false`.  Setting this option\n * to `false` will make it so any `min` and `max` properties on sources are ignored.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {boolean} [wrapX=false] Render tiles beyond the tile grid extent.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * the linear interpolation is used to resample the data.  If false, nearest neighbor is used.\n */\n\n/**\n * @classdesc\n * A source for working with GeoTIFF data.\n * **Note for users of the full build**: The `GeoTIFF` source requires the\n * [geotiff.js](https://github.com/geotiffjs/geotiff.js) library to be loaded as well.\n *\n * @api\n */\nclass GeoTIFFSource extends DataTile {\n  /**\n   * @param {Options} options Data tile options.\n   */\n  constructor(options) {\n    super({\n      state: 'loading',\n      tileGrid: null,\n      projection: null,\n      opaque: options.opaque,\n      transition: options.transition,\n      interpolate: options.interpolate !== false,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {Array<SourceInfo>}\n     * @private\n     */\n    this.sourceInfo_ = options.sources;\n\n    const numSources = this.sourceInfo_.length;\n\n    /**\n     * @type {Object}\n     * @private\n     */\n    this.sourceOptions_ = options.sourceOptions;\n\n    /**\n     * @type {Array<Array<GeoTIFFImage>>}\n     * @private\n     */\n    this.sourceImagery_ = new Array(numSources);\n\n    /**\n     * @type {Array<Array<GeoTIFFImage>>}\n     * @private\n     */\n    this.sourceMasks_ = new Array(numSources);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.resolutionFactors_ = new Array(numSources);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.samplesPerPixel_;\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.nodataValues_;\n\n    /**\n     * @type {Array<Array<GDALMetadata>>}\n     * @private\n     */\n    this.metadata_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.normalize_ = options.normalize !== false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.addAlpha_ = false;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {true|false|'auto'}\n     */\n    this.convertToRGB_ = options.convertToRGB || false;\n\n    this.setKey(this.sourceInfo_.map((source) => source.url).join(','));\n\n    const self = this;\n    const requests = new Array(numSources);\n    for (let i = 0; i < numSources; ++i) {\n      requests[i] = getImagesForSource(\n        this.sourceInfo_[i],\n        this.sourceOptions_\n      );\n    }\n    Promise.all(requests)\n      .then(function (sources) {\n        self.configure_(sources);\n      })\n      .catch(function (error) {\n        logError(error);\n        self.error_ = error;\n        self.setState('error');\n      });\n  }\n\n  /**\n   * @return {Error} A source loading error. When the source state is `error`, use this function\n   * to get more information about the error. To debug a faulty configuration, you may want to use\n   * a listener like\n   * ```js\n   * geotiffSource.on('change', () => {\n   *   if (geotiffSource.getState() === 'error') {\n   *     console.error(geotiffSource.getError());\n   *   }\n   * });\n   * ```\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Determine the projection of the images in this GeoTIFF.\n   * The default implementation looks at the ProjectedCSTypeGeoKey and the GeographicTypeGeoKey\n   * of each image in turn.\n   * You can override this method in a subclass to support more projections.\n   *\n   * @param {Array<Array<GeoTIFFImage>>} sources Each source is a list of images\n   * from a single GeoTIFF.\n   */\n  determineProjection(sources) {\n    const firstSource = sources[0];\n    for (let i = firstSource.length - 1; i >= 0; --i) {\n      const image = firstSource[i];\n      const projection = getProjection(image);\n      if (projection) {\n        this.projection = projection;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Configure the tile grid based on images within the source GeoTIFFs.  Each GeoTIFF\n   * must have the same internal tiled structure.\n   * @param {Array<Array<GeoTIFFImage>>} sources Each source is a list of images\n   * from a single GeoTIFF.\n   * @private\n   */\n  configure_(sources) {\n    let extent;\n    let origin;\n    let commonRenderTileSizes;\n    let commonSourceTileSizes;\n    let resolutions;\n    const samplesPerPixel = new Array(sources.length);\n    const nodataValues = new Array(sources.length);\n    const metadata = new Array(sources.length);\n    let minZoom = 0;\n\n    const sourceCount = sources.length;\n    for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      const images = [];\n      const masks = [];\n      sources[sourceIndex].forEach((item) => {\n        if (isMask(item)) {\n          masks.push(item);\n        } else {\n          images.push(item);\n        }\n      });\n\n      const imageCount = images.length;\n      if (masks.length > 0 && masks.length !== imageCount) {\n        throw new Error(\n          `Expected one mask per image found ${masks.length} masks and ${imageCount} images`\n        );\n      }\n\n      let sourceExtent;\n      let sourceOrigin;\n      const sourceTileSizes = new Array(imageCount);\n      const renderTileSizes = new Array(imageCount);\n      const sourceResolutions = new Array(imageCount);\n\n      nodataValues[sourceIndex] = new Array(imageCount);\n      metadata[sourceIndex] = new Array(imageCount);\n\n      for (let imageIndex = 0; imageIndex < imageCount; ++imageIndex) {\n        const image = images[imageIndex];\n        const nodataValue = image.getGDALNoData();\n        metadata[sourceIndex][imageIndex] = image.getGDALMetadata(0);\n        nodataValues[sourceIndex][imageIndex] = nodataValue;\n\n        const wantedSamples = this.sourceInfo_[sourceIndex].bands;\n        samplesPerPixel[sourceIndex] = wantedSamples\n          ? wantedSamples.length\n          : image.getSamplesPerPixel();\n        const level = imageCount - (imageIndex + 1);\n\n        if (!sourceExtent) {\n          sourceExtent = getBoundingBox(image);\n        }\n\n        if (!sourceOrigin) {\n          sourceOrigin = getOrigin(image);\n        }\n\n        const imageResolutions = getResolutions(image, images[0]);\n        sourceResolutions[level] = imageResolutions[0];\n\n        const sourceTileSize = [image.getTileWidth(), image.getTileHeight()];\n\n        // request larger blocks for untiled layouts\n        if (\n          sourceTileSize[0] !== sourceTileSize[1] &&\n          sourceTileSize[1] < defaultTileSize\n        ) {\n          sourceTileSize[0] = defaultTileSize;\n          sourceTileSize[1] = defaultTileSize;\n        }\n\n        sourceTileSizes[level] = sourceTileSize;\n\n        const aspectRatio = imageResolutions[0] / Math.abs(imageResolutions[1]);\n        renderTileSizes[level] = [\n          sourceTileSize[0],\n          sourceTileSize[1] / aspectRatio,\n        ];\n      }\n\n      if (!extent) {\n        extent = sourceExtent;\n      } else {\n        getIntersection(extent, sourceExtent, extent);\n      }\n\n      if (!origin) {\n        origin = sourceOrigin;\n      } else {\n        const message = `Origin mismatch for source ${sourceIndex}, got [${sourceOrigin}] but expected [${origin}]`;\n        assertEqual(origin, sourceOrigin, 0, message, this.viewRejector);\n      }\n\n      if (!resolutions) {\n        resolutions = sourceResolutions;\n        this.resolutionFactors_[sourceIndex] = 1;\n      } else {\n        if (resolutions.length - minZoom > sourceResolutions.length) {\n          minZoom = resolutions.length - sourceResolutions.length;\n        }\n        const resolutionFactor =\n          resolutions[resolutions.length - 1] /\n          sourceResolutions[sourceResolutions.length - 1];\n        this.resolutionFactors_[sourceIndex] = resolutionFactor;\n        const scaledSourceResolutions = sourceResolutions.map(\n          (resolution) => (resolution *= resolutionFactor)\n        );\n        const message = `Resolution mismatch for source ${sourceIndex}, got [${scaledSourceResolutions}] but expected [${resolutions}]`;\n        assertEqual(\n          resolutions.slice(minZoom, resolutions.length),\n          scaledSourceResolutions,\n          0.02,\n          message,\n          this.viewRejector\n        );\n      }\n\n      if (!commonRenderTileSizes) {\n        commonRenderTileSizes = renderTileSizes;\n      } else {\n        assertEqual(\n          commonRenderTileSizes.slice(minZoom, commonRenderTileSizes.length),\n          renderTileSizes,\n          0.01,\n          `Tile size mismatch for source ${sourceIndex}`,\n          this.viewRejector\n        );\n      }\n\n      if (!commonSourceTileSizes) {\n        commonSourceTileSizes = sourceTileSizes;\n      } else {\n        assertEqual(\n          commonSourceTileSizes.slice(minZoom, commonSourceTileSizes.length),\n          sourceTileSizes,\n          0,\n          `Tile size mismatch for source ${sourceIndex}`,\n          this.viewRejector\n        );\n      }\n\n      this.sourceImagery_[sourceIndex] = images.reverse();\n      this.sourceMasks_[sourceIndex] = masks.reverse();\n    }\n\n    for (let i = 0, ii = this.sourceImagery_.length; i < ii; ++i) {\n      const sourceImagery = this.sourceImagery_[i];\n      while (sourceImagery.length < resolutions.length) {\n        sourceImagery.unshift(undefined);\n      }\n    }\n\n    if (!this.getProjection()) {\n      this.determineProjection(sources);\n    }\n\n    this.samplesPerPixel_ = samplesPerPixel;\n    this.nodataValues_ = nodataValues;\n    this.metadata_ = metadata;\n\n    // decide if we need to add an alpha band to handle nodata\n    outer: for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      // option 1: source is configured with a nodata value\n      if (this.sourceInfo_[sourceIndex].nodata !== undefined) {\n        this.addAlpha_ = true;\n        break;\n      }\n      if (this.sourceMasks_[sourceIndex].length) {\n        this.addAlpha_ = true;\n        break;\n      }\n\n      const values = nodataValues[sourceIndex];\n\n      // option 2: check image metadata for limited bands\n      const bands = this.sourceInfo_[sourceIndex].bands;\n      if (bands) {\n        for (let i = 0; i < bands.length; ++i) {\n          if (values[bands[i] - 1] !== null) {\n            this.addAlpha_ = true;\n            break outer;\n          }\n        }\n        continue;\n      }\n\n      // option 3: check image metadata for all bands\n      for (let imageIndex = 0; imageIndex < values.length; ++imageIndex) {\n        if (values[imageIndex] !== null) {\n          this.addAlpha_ = true;\n          break outer;\n        }\n      }\n    }\n\n    let bandCount = this.addAlpha_ ? 1 : 0;\n    for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      bandCount += samplesPerPixel[sourceIndex];\n    }\n    this.bandCount = bandCount;\n\n    const tileGrid = new TileGrid({\n      extent: extent,\n      minZoom: minZoom,\n      origin: origin,\n      resolutions: resolutions,\n      tileSizes: commonRenderTileSizes,\n    });\n\n    this.tileGrid = tileGrid;\n    this.setTileSizes(commonSourceTileSizes);\n\n    this.setLoader(this.loadTile_.bind(this));\n    this.setState('ready');\n\n    const zoom = 1;\n    if (resolutions.length === 2) {\n      resolutions = [resolutions[0], resolutions[1], resolutions[1] / 2];\n    } else if (resolutions.length === 1) {\n      resolutions = [resolutions[0] * 2, resolutions[0], resolutions[0] / 2];\n    }\n\n    this.viewResolver({\n      showFullExtent: true,\n      projection: this.projection,\n      resolutions: resolutions,\n      center: toUserCoordinate(getCenter(extent), this.projection),\n      extent: toUserExtent(extent, this.projection),\n      zoom: zoom,\n    });\n  }\n\n  /**\n   * @param {number} z The z tile index.\n   * @param {number} x The x tile index.\n   * @param {number} y The y tile index.\n   * @return {Promise} The composed tile data.\n   * @private\n   */\n  loadTile_(z, x, y) {\n    const sourceTileSize = this.getTileSize(z);\n    const sourceCount = this.sourceImagery_.length;\n    const requests = new Array(sourceCount * 2);\n    const nodataValues = this.nodataValues_;\n    const sourceInfo = this.sourceInfo_;\n    const pool = getWorkerPool();\n    for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      const source = sourceInfo[sourceIndex];\n      const resolutionFactor = this.resolutionFactors_[sourceIndex];\n      const pixelBounds = [\n        Math.round(x * (sourceTileSize[0] * resolutionFactor)),\n        Math.round(y * (sourceTileSize[1] * resolutionFactor)),\n        Math.round((x + 1) * (sourceTileSize[0] * resolutionFactor)),\n        Math.round((y + 1) * (sourceTileSize[1] * resolutionFactor)),\n      ];\n      const image = this.sourceImagery_[sourceIndex][z];\n      let samples;\n      if (source.bands) {\n        samples = source.bands.map(function (bandNumber) {\n          return bandNumber - 1;\n        });\n      }\n\n      /** @type {number|Array<number>} */\n      let fillValue;\n      if ('nodata' in source && source.nodata !== null) {\n        fillValue = source.nodata;\n      } else {\n        if (!samples) {\n          fillValue = nodataValues[sourceIndex];\n        } else {\n          fillValue = samples.map(function (sampleIndex) {\n            return nodataValues[sourceIndex][sampleIndex];\n          });\n        }\n      }\n\n      const readOptions = {\n        window: pixelBounds,\n        width: sourceTileSize[0],\n        height: sourceTileSize[1],\n        samples: samples,\n        fillValue: fillValue,\n        pool: pool,\n        interleave: false,\n      };\n      if (readRGB(this.convertToRGB_, image)) {\n        requests[sourceIndex] = image.readRGB(readOptions);\n      } else {\n        requests[sourceIndex] = image.readRasters(readOptions);\n      }\n\n      // requests after `sourceCount` are for mask data (if any)\n      const maskIndex = sourceCount + sourceIndex;\n      const mask = this.sourceMasks_[sourceIndex][z];\n      if (!mask) {\n        requests[maskIndex] = Promise.resolve(null);\n        continue;\n      }\n\n      requests[maskIndex] = mask.readRasters({\n        window: pixelBounds,\n        width: sourceTileSize[0],\n        height: sourceTileSize[1],\n        samples: [0],\n        pool: pool,\n        interleave: false,\n      });\n    }\n\n    return Promise.all(requests)\n      .then(this.composeTile_.bind(this, sourceTileSize))\n      .catch(function (error) {\n        logError(error);\n        throw error;\n      });\n  }\n\n  /**\n   * @param {import(\"../size.js\").Size} sourceTileSize The source tile size.\n   * @param {Array} sourceSamples The source samples.\n   * @return {import(\"../DataTile.js\").Data} The composed tile data.\n   * @private\n   */\n  composeTile_(sourceTileSize, sourceSamples) {\n    const metadata = this.metadata_;\n    const sourceInfo = this.sourceInfo_;\n    const sourceCount = this.sourceImagery_.length;\n    const bandCount = this.bandCount;\n    const samplesPerPixel = this.samplesPerPixel_;\n    const nodataValues = this.nodataValues_;\n    const normalize = this.normalize_;\n    const addAlpha = this.addAlpha_;\n\n    const pixelCount = sourceTileSize[0] * sourceTileSize[1];\n    const dataLength = pixelCount * bandCount;\n\n    /** @type {Uint8Array|Float32Array} */\n    let data;\n    if (normalize) {\n      data = new Uint8Array(dataLength);\n    } else {\n      data = new Float32Array(dataLength);\n    }\n\n    let dataIndex = 0;\n    for (let pixelIndex = 0; pixelIndex < pixelCount; ++pixelIndex) {\n      let transparent = addAlpha;\n      for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n        const source = sourceInfo[sourceIndex];\n\n        let min = source.min;\n        let max = source.max;\n        let gain, bias;\n        if (normalize) {\n          const stats = metadata[sourceIndex][0];\n          if (min === undefined) {\n            if (stats && STATISTICS_MINIMUM in stats) {\n              min = parseFloat(stats[STATISTICS_MINIMUM]);\n            } else {\n              min = getMinForDataType(sourceSamples[sourceIndex][0]);\n            }\n          }\n          if (max === undefined) {\n            if (stats && STATISTICS_MAXIMUM in stats) {\n              max = parseFloat(stats[STATISTICS_MAXIMUM]);\n            } else {\n              max = getMaxForDataType(sourceSamples[sourceIndex][0]);\n            }\n          }\n\n          gain = 255 / (max - min);\n          bias = -min * gain;\n        }\n\n        for (\n          let sampleIndex = 0;\n          sampleIndex < samplesPerPixel[sourceIndex];\n          ++sampleIndex\n        ) {\n          const sourceValue =\n            sourceSamples[sourceIndex][sampleIndex][pixelIndex];\n\n          let value;\n          if (normalize) {\n            value = clamp(gain * sourceValue + bias, 0, 255);\n          } else {\n            value = sourceValue;\n          }\n\n          if (!addAlpha) {\n            data[dataIndex] = value;\n          } else {\n            let nodata = source.nodata;\n            if (nodata === undefined) {\n              let bandIndex;\n              if (source.bands) {\n                bandIndex = source.bands[sampleIndex] - 1;\n              } else {\n                bandIndex = sampleIndex;\n              }\n              nodata = nodataValues[sourceIndex][bandIndex];\n            }\n\n            const nodataIsNaN = isNaN(nodata);\n            if (\n              (!nodataIsNaN && sourceValue !== nodata) ||\n              (nodataIsNaN && !isNaN(sourceValue))\n            ) {\n              transparent = false;\n              data[dataIndex] = value;\n            }\n          }\n          dataIndex++;\n        }\n        if (!transparent) {\n          const maskIndex = sourceCount + sourceIndex;\n          const mask = sourceSamples[maskIndex];\n          if (mask && !mask[0][pixelIndex]) {\n            transparent = true;\n          }\n        }\n      }\n      if (addAlpha) {\n        if (!transparent) {\n          data[dataIndex] = 255;\n        }\n        dataIndex++;\n      }\n    }\n\n    return data;\n  }\n}\n\n/**\n * Get a promise for view properties based on the source.  Use the result of this function\n * as the `view` option in a map constructor.\n *\n *     const source = new GeoTIFF(options);\n *\n *     const map = new Map({\n *       target: 'map',\n *       layers: [\n *         new TileLayer({\n *           source: source,\n *         }),\n *       ],\n *       view: source.getView(),\n *     });\n *\n * @function\n * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n * @api\n *\n */\nGeoTIFFSource.prototype.getView;\n\nexport default GeoTIFFSource;\n","/**\n * @module ol/source/Zoomify\n */\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\n\nimport ImageTile from '../ImageTile.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileImage from './TileImage.js';\nimport TileState from '../TileState.js';\nimport {assert} from '../asserts.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {getCenter} from '../extent.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'default' | 'truncated'} TierSizeCalculation\n */\n\nexport class CustomTile extends ImageTile {\n  /**\n   * @param {import(\"../size.js\").Size} tileSize Full tile size.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    tileSize,\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    options\n  ) {\n    super(tileCoord, state, src, crossOrigin, tileLoadFunction, options);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.zoomifyImage_ = null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tileSize_ = tileSize;\n  }\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    if (this.zoomifyImage_) {\n      return this.zoomifyImage_;\n    }\n    const image = super.getImage();\n    if (this.state == TileState.LOADED) {\n      const tileSize = this.tileSize_;\n      if (image.width == tileSize[0] && image.height == tileSize[1]) {\n        this.zoomifyImage_ = image;\n        return image;\n      }\n      const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n      context.drawImage(image, 0, 0);\n      this.zoomifyImage_ = context.canvas;\n      return context.canvas;\n    }\n    return image;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value  you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {number} [tilePixelRatio] The pixel ratio used by the tile service. For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px by 512px images (for retina/hidpi devices) then `tilePixelRatio` should be set to `2`\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {string} url URL template or base URL of the Zoomify service.\n * A base URL is the fixed part\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\n * `{tileIndex}` and `{z}` placeholders, e.g.\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {TierSizeCalculation} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\n * @property {import(\"../size.js\").Size} size Size.\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the TileGrid that is created.\n * Default sets the TileGrid in the\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\n * as `[0, 0, width, height]`.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\n * Imaging Protocol are supported).\n * @api\n */\nclass Zoomify extends TileImage {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const size = options.size;\n    const tierSizeCalculation =\n      options.tierSizeCalculation !== undefined\n        ? options.tierSizeCalculation\n        : 'default';\n\n    const tilePixelRatio = options.tilePixelRatio || 1;\n    const imageWidth = size[0];\n    const imageHeight = size[1];\n    const tierSizeInTiles = [];\n    const tileSize = options.tileSize || DEFAULT_TILE_SIZE;\n    let tileSizeForTierSizeCalculation = tileSize * tilePixelRatio;\n\n    switch (tierSizeCalculation) {\n      case 'default':\n        while (\n          imageWidth > tileSizeForTierSizeCalculation ||\n          imageHeight > tileSizeForTierSizeCalculation\n        ) {\n          tierSizeInTiles.push([\n            Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\n            Math.ceil(imageHeight / tileSizeForTierSizeCalculation),\n          ]);\n          tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\n        }\n        break;\n      case 'truncated':\n        let width = imageWidth;\n        let height = imageHeight;\n        while (\n          width > tileSizeForTierSizeCalculation ||\n          height > tileSizeForTierSizeCalculation\n        ) {\n          tierSizeInTiles.push([\n            Math.ceil(width / tileSizeForTierSizeCalculation),\n            Math.ceil(height / tileSizeForTierSizeCalculation),\n          ]);\n          width >>= 1;\n          height >>= 1;\n        }\n        break;\n      default: // Unknown `tierSizeCalculation` configured\n        assert(false, 53);\n        break;\n    }\n\n    tierSizeInTiles.push([1, 1]);\n    tierSizeInTiles.reverse();\n\n    const resolutions = [tilePixelRatio];\n    const tileCountUpToTier = [0];\n    for (let i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\n      resolutions.push(tilePixelRatio << i);\n      tileCountUpToTier.push(\n        tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\n          tileCountUpToTier[i - 1]\n      );\n    }\n    resolutions.reverse();\n\n    const tileGrid = new TileGrid({\n      tileSize: tileSize,\n      extent: options.extent || [0, -imageHeight, imageWidth, 0],\n      resolutions: resolutions,\n    });\n\n    let url = options.url;\n    if (url && !url.includes('{TileGroup}') && !url.includes('{tileIndex}')) {\n      url += '{TileGroup}/{z}-{x}-{y}.jpg';\n    }\n    const urls = expandUrl(url);\n\n    let tileWidth = tileSize * tilePixelRatio;\n\n    /**\n     * @param {string} template Template.\n     * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n     */\n    function createFromTemplate(template) {\n      return (\n        /**\n         * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {import(\"../proj/Projection.js\").default} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function (tileCoord, pixelRatio, projection) {\n          if (!tileCoord) {\n            return undefined;\n          }\n          const tileCoordZ = tileCoord[0];\n          const tileCoordX = tileCoord[1];\n          const tileCoordY = tileCoord[2];\n          const tileIndex =\n            tileCoordX + tileCoordY * tierSizeInTiles[tileCoordZ][0];\n          const tileGroup =\n            ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileWidth) | 0;\n          const localContext = {\n            'z': tileCoordZ,\n            'x': tileCoordX,\n            'y': tileCoordY,\n            'tileIndex': tileIndex,\n            'TileGroup': 'TileGroup' + tileGroup,\n          };\n          return template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return localContext[p];\n          });\n        }\n      );\n    }\n\n    const tileUrlFunction = createFromTileUrlFunctions(\n      urls.map(createFromTemplate)\n    );\n\n    const ZoomifyTileClass = CustomTile.bind(\n      null,\n      toSize(tileSize * tilePixelRatio)\n    );\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      tilePixelRatio: tilePixelRatio,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: ZoomifyTileClass,\n      tileGrid: tileGrid,\n      tileUrlFunction: tileUrlFunction,\n      transition: options.transition,\n    });\n\n    /**\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection;\n\n    // Server retina tile detection (non-standard):\n    // Try loading the center tile for the highest resolution. If it is not\n    // available, we are dealing with retina tiles, and need to adjust the\n    // tile url calculation.\n    const tileUrl = tileGrid.getTileCoordForCoordAndResolution(\n      getCenter(tileGrid.getExtent()),\n      resolutions[resolutions.length - 1]\n    );\n    const testTileUrl = tileUrlFunction(tileUrl, 1, null);\n    const image = new Image();\n    image.addEventListener('error', () => {\n      tileWidth = tileSize;\n      this.changed();\n    });\n    image.src = testTileUrl;\n  }\n}\n\nexport default Zoomify;\n","/**\n * @module ol/format/IIIFInfo\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} PreferredOptions\n * @property {string} [format] Preferred image format. Will be used if the image information\n * indicates support for that format.\n * @property {string} [quality] IIIF image qualitiy.  Will be used if the image information\n * indicates support for that quality.\n */\n\n/**\n * @typedef {Object} SupportedFeatures\n * @property {Array<string>} [supports] Supported IIIF image size and region\n * calculation features.\n * @property {Array<string>} [formats] Supported image formats.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n */\n\n/**\n * @typedef {Object} TileInfo\n * @property {Array<number>} scaleFactors Supported resolution scaling factors.\n * @property {number} width Tile width in pixels.\n * @property {number} [height] Tile height in pixels. Same as tile width if height is\n * not given.\n */\n\n/**\n * @typedef {Object} IiifProfile\n * @property {Array<string>} [formats] Supported image formats for the image service.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n * @property {Array<string>} [supports] Supported features.\n * @property {number} [maxArea] Maximum area (pixels) available for this image service.\n * @property {number} [maxHeight] Maximum height.\n * @property {number} [maxWidth] Maximum width.\n */\n\n/**\n * @typedef {Object<string,string|number|Array<number|string|IiifProfile|Object<string, number>|TileInfo>>}\n *    ImageInformationResponse\n */\n\n/**\n * Enum representing the major IIIF Image API versions\n * @enum {string}\n */\nexport const Versions = {\n  VERSION1: 'version1',\n  VERSION2: 'version2',\n  VERSION3: 'version3',\n};\n\n/**\n * Supported image formats, qualities and supported region / size calculation features\n * for different image API versions and compliance levels\n * @const\n * @type {Object<string, Object<string, SupportedFeatures>>}\n */\nconst IIIF_PROFILE_VALUES = {};\nIIIF_PROFILE_VALUES[Versions.VERSION1] = {\n  'level0': {\n    supports: [],\n    formats: [],\n    qualities: ['native'],\n  },\n  'level1': {\n    supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n    formats: ['jpg'],\n    qualities: ['native'],\n  },\n  'level2': {\n    supports: [\n      'regionByPx',\n      'regionByPct',\n      'sizeByW',\n      'sizeByH',\n      'sizeByPct',\n      'sizeByConfinedWh',\n      'sizeByWh',\n    ],\n    formats: ['jpg', 'png'],\n    qualities: ['native', 'color', 'grey', 'bitonal'],\n  },\n};\nIIIF_PROFILE_VALUES[Versions.VERSION2] = {\n  'level0': {\n    supports: [],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level1': {\n    supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level2': {\n    supports: [\n      'regionByPx',\n      'regionByPct',\n      'sizeByW',\n      'sizeByH',\n      'sizeByPct',\n      'sizeByConfinedWh',\n      'sizeByDistortedWh',\n      'sizeByWh',\n    ],\n    formats: ['jpg', 'png'],\n    qualities: ['default', 'bitonal'],\n  },\n};\nIIIF_PROFILE_VALUES[Versions.VERSION3] = {\n  'level0': {\n    supports: [],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level1': {\n    supports: ['regionByPx', 'regionSquare', 'sizeByW', 'sizeByH', 'sizeByWh'],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level2': {\n    supports: [\n      'regionByPx',\n      'regionSquare',\n      'regionByPct',\n      'sizeByW',\n      'sizeByH',\n      'sizeByPct',\n      'sizeByConfinedWh',\n      'sizeByWh',\n    ],\n    formats: ['jpg', 'png'],\n    qualities: ['default'],\n  },\n};\nIIIF_PROFILE_VALUES['none'] = {\n  'none': {\n    supports: [],\n    formats: [],\n    qualities: [],\n  },\n};\n\nconst COMPLIANCE_VERSION1 =\n  /^https?:\\/\\/library\\.stanford\\.edu\\/iiif\\/image-api\\/(?:1\\.1\\/)?compliance\\.html#level[0-2]$/;\nconst COMPLIANCE_VERSION2 =\n  /^https?:\\/\\/iiif\\.io\\/api\\/image\\/2\\/level[0-2](?:\\.json)?$/;\nconst COMPLIANCE_VERSION3 =\n  /(^https?:\\/\\/iiif\\.io\\/api\\/image\\/3\\/level[0-2](?:\\.json)?$)|(^level[0-2]$)/;\n\nfunction generateVersion1Options(iiifInfo) {\n  let levelProfile = iiifInfo.getComplianceLevelSupportedFeatures();\n  // Version 1.0 and 1.1 do not require a profile.\n  if (levelProfile === undefined) {\n    levelProfile = IIIF_PROFILE_VALUES[Versions.VERSION1]['level0'];\n  }\n  return {\n    url:\n      iiifInfo.imageInfo['@id'] === undefined\n        ? undefined\n        : iiifInfo.imageInfo['@id'].replace(/\\/?(?:info\\.json)?$/g, ''),\n    supports: levelProfile.supports,\n    formats: [\n      ...levelProfile.formats,\n      iiifInfo.imageInfo.formats === undefined\n        ? []\n        : iiifInfo.imageInfo.formats,\n    ],\n    qualities: [\n      ...levelProfile.qualities,\n      iiifInfo.imageInfo.qualities === undefined\n        ? []\n        : iiifInfo.imageInfo.qualities,\n    ],\n    resolutions: iiifInfo.imageInfo.scale_factors,\n    tileSize:\n      iiifInfo.imageInfo.tile_width !== undefined\n        ? iiifInfo.imageInfo.tile_height !== undefined\n          ? [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_height]\n          : [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_width]\n        : iiifInfo.imageInfo.tile_height != undefined\n        ? [iiifInfo.imageInfo.tile_height, iiifInfo.imageInfo.tile_height]\n        : undefined,\n  };\n}\n\nfunction generateVersion2Options(iiifInfo) {\n  const levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(),\n    additionalProfile =\n      Array.isArray(iiifInfo.imageInfo.profile) &&\n      iiifInfo.imageInfo.profile.length > 1,\n    profileSupports =\n      additionalProfile && iiifInfo.imageInfo.profile[1].supports\n        ? iiifInfo.imageInfo.profile[1].supports\n        : [],\n    profileFormats =\n      additionalProfile && iiifInfo.imageInfo.profile[1].formats\n        ? iiifInfo.imageInfo.profile[1].formats\n        : [],\n    profileQualities =\n      additionalProfile && iiifInfo.imageInfo.profile[1].qualities\n        ? iiifInfo.imageInfo.profile[1].qualities\n        : [];\n  return {\n    url: iiifInfo.imageInfo['@id'].replace(/\\/?(?:info\\.json)?$/g, ''),\n    sizes:\n      iiifInfo.imageInfo.sizes === undefined\n        ? undefined\n        : iiifInfo.imageInfo.sizes.map(function (size) {\n            return [size.width, size.height];\n          }),\n    tileSize:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : [\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.width;\n            })[0],\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.height === undefined ? tile.width : tile.height;\n            })[0],\n          ],\n    resolutions:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : iiifInfo.imageInfo.tiles.map(function (tile) {\n            return tile.scaleFactors;\n          })[0],\n    supports: [...levelProfile.supports, ...profileSupports],\n    formats: [...levelProfile.formats, ...profileFormats],\n    qualities: [...levelProfile.qualities, ...profileQualities],\n  };\n}\n\nfunction generateVersion3Options(iiifInfo) {\n  const levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(),\n    formats =\n      iiifInfo.imageInfo.extraFormats === undefined\n        ? levelProfile.formats\n        : [...levelProfile.formats, ...iiifInfo.imageInfo.extraFormats],\n    preferredFormat =\n      iiifInfo.imageInfo.preferredFormats !== undefined &&\n      Array.isArray(iiifInfo.imageInfo.preferredFormats) &&\n      iiifInfo.imageInfo.preferredFormats.length > 0\n        ? iiifInfo.imageInfo.preferredFormats\n            .filter(function (format) {\n              return ['jpg', 'png', 'gif'].includes(format);\n            })\n            .reduce(function (acc, format) {\n              return acc === undefined && formats.includes(format)\n                ? format\n                : acc;\n            }, undefined)\n        : undefined;\n  return {\n    url: iiifInfo.imageInfo['id'],\n    sizes:\n      iiifInfo.imageInfo.sizes === undefined\n        ? undefined\n        : iiifInfo.imageInfo.sizes.map(function (size) {\n            return [size.width, size.height];\n          }),\n    tileSize:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : [\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.width;\n            })[0],\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.height;\n            })[0],\n          ],\n    resolutions:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : iiifInfo.imageInfo.tiles.map(function (tile) {\n            return tile.scaleFactors;\n          })[0],\n    supports:\n      iiifInfo.imageInfo.extraFeatures === undefined\n        ? levelProfile.supports\n        : [...levelProfile.supports, ...iiifInfo.imageInfo.extraFeatures],\n    formats: formats,\n    qualities:\n      iiifInfo.imageInfo.extraQualities === undefined\n        ? levelProfile.qualities\n        : [...levelProfile.qualities, ...iiifInfo.imageInfo.extraQualities],\n    preferredFormat: preferredFormat,\n  };\n}\n\nconst versionFunctions = {};\nversionFunctions[Versions.VERSION1] = generateVersion1Options;\nversionFunctions[Versions.VERSION2] = generateVersion2Options;\nversionFunctions[Versions.VERSION3] = generateVersion3Options;\n\n/**\n * @classdesc\n * Format for transforming IIIF Image API image information responses into\n * IIIF tile source ready options\n *\n * @api\n */\nclass IIIFInfo {\n  /**\n   * @param {string|ImageInformationResponse} imageInfo\n   * Deserialized image information JSON response object or JSON response as string\n   */\n  constructor(imageInfo) {\n    this.setImageInfo(imageInfo);\n  }\n\n  /**\n   * @param {string|ImageInformationResponse} imageInfo\n   * Deserialized image information JSON response object or JSON response as string\n   * @api\n   */\n  setImageInfo(imageInfo) {\n    if (typeof imageInfo == 'string') {\n      this.imageInfo = JSON.parse(imageInfo);\n    } else {\n      this.imageInfo = imageInfo;\n    }\n  }\n\n  /**\n   * @return {Versions} Major IIIF version.\n   * @api\n   */\n  getImageApiVersion() {\n    if (this.imageInfo === undefined) {\n      return;\n    }\n    let context = this.imageInfo['@context'] || 'ol-no-context';\n    if (typeof context == 'string') {\n      context = [context];\n    }\n    for (let i = 0; i < context.length; i++) {\n      switch (context[i]) {\n        case 'http://library.stanford.edu/iiif/image-api/1.1/context.json':\n        case 'http://iiif.io/api/image/1/context.json':\n          return Versions.VERSION1;\n        case 'http://iiif.io/api/image/2/context.json':\n          return Versions.VERSION2;\n        case 'http://iiif.io/api/image/3/context.json':\n          return Versions.VERSION3;\n        case 'ol-no-context':\n          // Image API 1.0 has no '@context'\n          if (\n            this.getComplianceLevelEntryFromProfile(Versions.VERSION1) &&\n            this.imageInfo.identifier\n          ) {\n            return Versions.VERSION1;\n          }\n          break;\n        default:\n      }\n    }\n    assert(false, 61);\n  }\n\n  /**\n   * @param {Versions} version Optional IIIF image API version\n   * @return {string} Compliance level as it appears in the IIIF image information\n   * response.\n   */\n  getComplianceLevelEntryFromProfile(version) {\n    if (this.imageInfo === undefined || this.imageInfo.profile === undefined) {\n      return;\n    }\n    if (version === undefined) {\n      version = this.getImageApiVersion();\n    }\n    switch (version) {\n      case Versions.VERSION1:\n        if (COMPLIANCE_VERSION1.test(this.imageInfo.profile)) {\n          return this.imageInfo.profile;\n        }\n        break;\n      case Versions.VERSION3:\n        if (COMPLIANCE_VERSION3.test(this.imageInfo.profile)) {\n          return this.imageInfo.profile;\n        }\n        break;\n      case Versions.VERSION2:\n        if (\n          typeof this.imageInfo.profile === 'string' &&\n          COMPLIANCE_VERSION2.test(this.imageInfo.profile)\n        ) {\n          return this.imageInfo.profile;\n        }\n        if (\n          Array.isArray(this.imageInfo.profile) &&\n          this.imageInfo.profile.length > 0 &&\n          typeof this.imageInfo.profile[0] === 'string' &&\n          COMPLIANCE_VERSION2.test(this.imageInfo.profile[0])\n        ) {\n          return this.imageInfo.profile[0];\n        }\n        break;\n      default:\n    }\n  }\n\n  /**\n   * @param {Versions} version Optional IIIF image API version\n   * @return {string} Compliance level, on of 'level0', 'level1' or 'level2' or undefined\n   */\n  getComplianceLevelFromProfile(version) {\n    const complianceLevel = this.getComplianceLevelEntryFromProfile(version);\n    if (complianceLevel === undefined) {\n      return undefined;\n    }\n    const level = complianceLevel.match(/level[0-2](?:\\.json)?$/g);\n    return Array.isArray(level) ? level[0].replace('.json', '') : undefined;\n  }\n\n  /**\n   * @return {SupportedFeatures} Image formats, qualities and region / size calculation\n   * methods that are supported by the IIIF service.\n   */\n  getComplianceLevelSupportedFeatures() {\n    if (this.imageInfo === undefined) {\n      return;\n    }\n    const version = this.getImageApiVersion();\n    const level = this.getComplianceLevelFromProfile(version);\n    if (level === undefined) {\n      return IIIF_PROFILE_VALUES['none']['none'];\n    }\n    return IIIF_PROFILE_VALUES[version][level];\n  }\n\n  /**\n   * @param {PreferredOptions} [preferredOptions] Optional options for preferred format and quality.\n   * @return {import(\"../source/IIIF.js\").Options} IIIF tile source ready constructor options.\n   * @api\n   */\n  getTileSourceOptions(preferredOptions) {\n    const options = preferredOptions || {},\n      version = this.getImageApiVersion();\n    if (version === undefined) {\n      return;\n    }\n    const imageOptions =\n      version === undefined ? undefined : versionFunctions[version](this);\n    if (imageOptions === undefined) {\n      return;\n    }\n    return {\n      url: imageOptions.url,\n      version: version,\n      size: [this.imageInfo.width, this.imageInfo.height],\n      sizes: imageOptions.sizes,\n      format:\n        options.format !== undefined &&\n        imageOptions.formats.includes(options.format)\n          ? options.format\n          : imageOptions.preferredFormat !== undefined\n          ? imageOptions.preferredFormat\n          : 'jpg',\n      supports: imageOptions.supports,\n      quality:\n        options.quality && imageOptions.qualities.includes(options.quality)\n          ? options.quality\n          : imageOptions.qualities.includes('native')\n          ? 'native'\n          : 'default',\n      resolutions: Array.isArray(imageOptions.resolutions)\n        ? imageOptions.resolutions.sort(function (a, b) {\n            return b - a;\n          })\n        : undefined,\n      tileSize: imageOptions.tileSize,\n    };\n  }\n}\n\nexport default IIIFInfo;\n","/**\n * @module ol/source/IIIF\n */\n\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileImage from './TileImage.js';\nimport {CustomTile} from './Zoomify.js';\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\nimport {Versions} from '../format/IIIFInfo.js';\nimport {assert} from '../asserts.js';\nimport {getTopLeft} from '../extent.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Size of the cache.\n * @property {null|string} [crossOrigin] The value for the crossOrigin option of the request.\n * @property {import(\"../extent.js\").Extent} [extent=[0, -height, width, 0]] The extent.\n * @property {string} [format='jpg'] Requested image format.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {string} [quality] Requested IIIF image quality. Default is 'native'\n * for version 1, 'default' for versions 2 and 3.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Array<number>} [resolutions] Supported resolutions as given in IIIF 'scaleFactors'\n * @property {import(\"../size.js\").Size} size Size of the image [width, height].\n * @property {Array<import(\"../size.js\").Size>} [sizes] Supported scaled image sizes.\n * Content of the IIIF info.json 'sizes' property, but as array of Size objects.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {Array<string>} [supports=[]] Supported IIIF region and size calculation\n * features.\n * @property {number} [tilePixelRatio] Tile pixel ratio.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Same tile size is used for all zoom levels. If tile size is a number,\n * a square tile is assumed. If the IIIF image service supports arbitrary\n * tiling (sizeByH, sizeByW, sizeByWh or sizeByPct as well as regionByPx or regionByPct\n * are supported), the default tilesize is 256.\n * @property {number} [transition] Transition.\n * @property {string} [url] Base URL of the IIIF Image service.\n * This should be the same as the IIIF Image ID.\n * @property {import(\"../format/IIIFInfo.js\").Versions} [version=Versions.VERSION2] Service's IIIF Image API version.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\nfunction formatPercentage(percentage) {\n  return percentage.toLocaleString('en', {maximumFractionDigits: 10});\n}\n\n/**\n * @classdesc\n * Layer source for IIIF Image API services.\n * @api\n */\nclass IIIF extends TileImage {\n  /**\n   * @param {Options} [options] Tile source options. Use {@link import(\"../format/IIIFInfo.js\").IIIFInfo}\n   * to parse Image API service information responses into constructor options.\n   * @api\n   */\n  constructor(options) {\n    /**\n     * @type {Partial<Options>}\n     */\n    const partialOptions = options || {};\n\n    let baseUrl = partialOptions.url || '';\n    baseUrl =\n      baseUrl +\n      (baseUrl.lastIndexOf('/') === baseUrl.length - 1 || baseUrl === ''\n        ? ''\n        : '/');\n    const version = partialOptions.version || Versions.VERSION2;\n    const sizes = partialOptions.sizes || [];\n    const size = partialOptions.size;\n    assert(\n      size != undefined &&\n        Array.isArray(size) &&\n        size.length == 2 &&\n        !isNaN(size[0]) &&\n        size[0] > 0 &&\n        !isNaN(size[1]) &&\n        size[1] > 0,\n      60\n    );\n    const width = size[0];\n    const height = size[1];\n    const tileSize = partialOptions.tileSize;\n    const tilePixelRatio = partialOptions.tilePixelRatio || 1;\n    const format = partialOptions.format || 'jpg';\n    const quality =\n      partialOptions.quality ||\n      (partialOptions.version == Versions.VERSION1 ? 'native' : 'default');\n    let resolutions = partialOptions.resolutions || [];\n    const supports = partialOptions.supports || [];\n    const extent = partialOptions.extent || [0, -height, width, 0];\n\n    const supportsListedSizes =\n      sizes != undefined && Array.isArray(sizes) && sizes.length > 0;\n    const supportsListedTiles =\n      tileSize !== undefined &&\n      ((typeof tileSize === 'number' &&\n        Number.isInteger(tileSize) &&\n        tileSize > 0) ||\n        (Array.isArray(tileSize) && tileSize.length > 0));\n    const supportsArbitraryTiling =\n      supports != undefined &&\n      Array.isArray(supports) &&\n      (supports.includes('regionByPx') || supports.includes('regionByPct')) &&\n      (supports.includes('sizeByWh') ||\n        supports.includes('sizeByH') ||\n        supports.includes('sizeByW') ||\n        supports.includes('sizeByPct'));\n\n    let tileWidth, tileHeight, maxZoom;\n\n    resolutions.sort(function (a, b) {\n      return b - a;\n    });\n\n    if (supportsListedTiles || supportsArbitraryTiling) {\n      if (tileSize != undefined) {\n        if (\n          typeof tileSize === 'number' &&\n          Number.isInteger(tileSize) &&\n          tileSize > 0\n        ) {\n          tileWidth = tileSize;\n          tileHeight = tileSize;\n        } else if (Array.isArray(tileSize) && tileSize.length > 0) {\n          if (\n            tileSize.length == 1 ||\n            (tileSize[1] == undefined && Number.isInteger(tileSize[0]))\n          ) {\n            tileWidth = tileSize[0];\n            tileHeight = tileSize[0];\n          }\n          if (tileSize.length == 2) {\n            if (\n              Number.isInteger(tileSize[0]) &&\n              Number.isInteger(tileSize[1])\n            ) {\n              tileWidth = tileSize[0];\n              tileHeight = tileSize[1];\n            } else if (\n              tileSize[0] == undefined &&\n              Number.isInteger(tileSize[1])\n            ) {\n              tileWidth = tileSize[1];\n              tileHeight = tileSize[1];\n            }\n          }\n        }\n      }\n      if (tileWidth === undefined || tileHeight === undefined) {\n        tileWidth = DEFAULT_TILE_SIZE;\n        tileHeight = DEFAULT_TILE_SIZE;\n      }\n      if (resolutions.length == 0) {\n        maxZoom = Math.max(\n          Math.ceil(Math.log(width / tileWidth) / Math.LN2),\n          Math.ceil(Math.log(height / tileHeight) / Math.LN2)\n        );\n        for (let i = maxZoom; i >= 0; i--) {\n          resolutions.push(Math.pow(2, i));\n        }\n      } else {\n        const maxScaleFactor = Math.max(...resolutions);\n        // TODO maxScaleFactor might not be a power to 2\n        maxZoom = Math.round(Math.log(maxScaleFactor) / Math.LN2);\n      }\n    } else {\n      // No tile support.\n      tileWidth = width;\n      tileHeight = height;\n      resolutions = [];\n      if (supportsListedSizes) {\n        /*\n         * 'sizes' provided. Use full region in different resolutions. Every\n         * resolution has only one tile.\n         */\n        sizes.sort(function (a, b) {\n          return a[0] - b[0];\n        });\n        maxZoom = -1;\n        const ignoredSizesIndex = [];\n        for (let i = 0; i < sizes.length; i++) {\n          const resolution = width / sizes[i][0];\n          if (\n            resolutions.length > 0 &&\n            resolutions[resolutions.length - 1] == resolution\n          ) {\n            ignoredSizesIndex.push(i);\n            continue;\n          }\n          resolutions.push(resolution);\n          maxZoom++;\n        }\n        if (ignoredSizesIndex.length > 0) {\n          for (let i = 0; i < ignoredSizesIndex.length; i++) {\n            sizes.splice(ignoredSizesIndex[i] - i, 1);\n          }\n        }\n      } else {\n        // No useful image information at all. Try pseudo tile with full image.\n        resolutions.push(1);\n        sizes.push([width, height]);\n        maxZoom = 0;\n      }\n    }\n\n    const tileGrid = new TileGrid({\n      tileSize: [tileWidth, tileHeight],\n      extent: extent,\n      origin: getTopLeft(extent),\n      resolutions: resolutions,\n    });\n\n    const tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n      let regionParam, sizeParam;\n      const zoom = tileCoord[0];\n      if (zoom > maxZoom) {\n        return;\n      }\n      const tileX = tileCoord[1],\n        tileY = tileCoord[2],\n        scale = resolutions[zoom];\n      if (\n        tileX === undefined ||\n        tileY === undefined ||\n        scale === undefined ||\n        tileX < 0 ||\n        Math.ceil(width / scale / tileWidth) <= tileX ||\n        tileY < 0 ||\n        Math.ceil(height / scale / tileHeight) <= tileY\n      ) {\n        return;\n      }\n      if (supportsArbitraryTiling || supportsListedTiles) {\n        const regionX = tileX * tileWidth * scale,\n          regionY = tileY * tileHeight * scale;\n        let regionW = tileWidth * scale,\n          regionH = tileHeight * scale,\n          sizeW = tileWidth,\n          sizeH = tileHeight;\n        if (regionX + regionW > width) {\n          regionW = width - regionX;\n        }\n        if (regionY + regionH > height) {\n          regionH = height - regionY;\n        }\n        if (regionX + tileWidth * scale > width) {\n          sizeW = Math.floor((width - regionX + scale - 1) / scale);\n        }\n        if (regionY + tileHeight * scale > height) {\n          sizeH = Math.floor((height - regionY + scale - 1) / scale);\n        }\n        if (\n          regionX == 0 &&\n          regionW == width &&\n          regionY == 0 &&\n          regionH == height\n        ) {\n          // canonical full image region parameter is 'full', not 'x,y,w,h'\n          regionParam = 'full';\n        } else if (\n          !supportsArbitraryTiling ||\n          supports.includes('regionByPx')\n        ) {\n          regionParam = regionX + ',' + regionY + ',' + regionW + ',' + regionH;\n        } else if (supports.includes('regionByPct')) {\n          const pctX = formatPercentage((regionX / width) * 100),\n            pctY = formatPercentage((regionY / height) * 100),\n            pctW = formatPercentage((regionW / width) * 100),\n            pctH = formatPercentage((regionH / height) * 100);\n          regionParam = 'pct:' + pctX + ',' + pctY + ',' + pctW + ',' + pctH;\n        }\n        if (\n          version == Versions.VERSION3 &&\n          (!supportsArbitraryTiling || supports.includes('sizeByWh'))\n        ) {\n          sizeParam = sizeW + ',' + sizeH;\n        } else if (!supportsArbitraryTiling || supports.includes('sizeByW')) {\n          sizeParam = sizeW + ',';\n        } else if (supports.includes('sizeByH')) {\n          sizeParam = ',' + sizeH;\n        } else if (supports.includes('sizeByWh')) {\n          sizeParam = sizeW + ',' + sizeH;\n        } else if (supports.includes('sizeByPct')) {\n          sizeParam = 'pct:' + formatPercentage(100 / scale);\n        }\n      } else {\n        regionParam = 'full';\n        if (supportsListedSizes) {\n          const regionWidth = sizes[zoom][0],\n            regionHeight = sizes[zoom][1];\n          if (version == Versions.VERSION3) {\n            if (regionWidth == width && regionHeight == height) {\n              sizeParam = 'max';\n            } else {\n              sizeParam = regionWidth + ',' + regionHeight;\n            }\n          } else {\n            if (regionWidth == width) {\n              sizeParam = 'full';\n            } else {\n              sizeParam = regionWidth + ',';\n            }\n          }\n        } else {\n          sizeParam = version == Versions.VERSION3 ? 'max' : 'full';\n        }\n      }\n      return (\n        baseUrl + regionParam + '/' + sizeParam + '/0/' + quality + '.' + format\n      );\n    };\n\n    const IiifTileClass = CustomTile.bind(\n      null,\n      toSize(tileSize || 256).map(function (size) {\n        return size * tilePixelRatio;\n      })\n    );\n\n    super({\n      attributions: partialOptions.attributions,\n      attributionsCollapsible: partialOptions.attributionsCollapsible,\n      cacheSize: partialOptions.cacheSize,\n      crossOrigin: partialOptions.crossOrigin,\n      interpolate: partialOptions.interpolate,\n      projection: partialOptions.projection,\n      reprojectionErrorThreshold: partialOptions.reprojectionErrorThreshold,\n      state: partialOptions.state,\n      tileClass: IiifTileClass,\n      tileGrid: tileGrid,\n      tilePixelRatio: partialOptions.tilePixelRatio,\n      tileUrlFunction: tileUrlFunction,\n      transition: partialOptions.transition,\n    });\n\n    /**\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = partialOptions.zDirection;\n  }\n}\n\nexport default IIIF;\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {getCenter, getHeight, getIntersection, getWidth} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageBase {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate\n  ) {\n    const maxSourceExtent = sourceProj.getExtent();\n    const maxTargetExtent = targetProj.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = getImageFunction(\n      sourceExtent,\n      sourceResolution,\n      pixelRatio\n    );\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_)\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport ImageState from '../ImageState.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {abstract} from '../util.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate()\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\nexport default ImageSource;\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n","/**\n * @module ol/source/ImageArcGISRest\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, getHeight, getWidth} from '../extent.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest~TileArcGISRest} data source.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageArcGISRest extends ImageSource {\n  /**\n   * @param {Options} [options] Image ArcGIS Rest Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    const image = this.image_;\n    if (\n      image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), extent)\n    ) {\n      return image;\n    }\n\n    const params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(params, this.params_);\n\n    extent = extent.slice();\n    const centerX = (extent[0] + extent[2]) / 2;\n    const centerY = (extent[1] + extent[3]) / 2;\n    if (this.ratio_ != 1) {\n      const halfWidth = (this.ratio_ * getWidth(extent)) / 2;\n      const halfHeight = (this.ratio_ * getHeight(extent)) / 2;\n      extent[0] = centerX - halfWidth;\n      extent[1] = centerY - halfHeight;\n      extent[2] = centerX + halfWidth;\n      extent[3] = centerY + halfHeight;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    // Compute an integer width and height.\n    const width = Math.ceil(getWidth(extent) / imageResolution);\n    const height = Math.ceil(getHeight(extent) / imageResolution);\n\n    // Modify the extent to match the integer width and height.\n    extent[0] = centerX - (imageResolution * width) / 2;\n    extent[2] = centerX + (imageResolution * width) / 2;\n    extent[1] = centerY - (imageResolution * height) / 2;\n    extent[3] = centerY + (imageResolution * height) / 2;\n\n    this.imageSize_[0] = width;\n    this.imageSize_[1] = height;\n\n    const url = this.getRequestUrl_(\n      extent,\n      this.imageSize_,\n      pixelRatio,\n      projection,\n      params\n    );\n\n    this.image_ = new ImageWrapper(\n      extent,\n      resolution,\n      pixelRatio,\n      url,\n      this.crossOrigin_,\n      this.imageLoadFunction_\n    );\n\n    this.renderedRevision_ = this.getRevision();\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n\n    return this.image_;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    // (if there is no numeric portion the entire projection code must\n    // form a valid ArcGIS SpatialReference definition).\n    const srid = projection\n      .getCode()\n      .split(/:(?=\\d+$)/)\n      .pop();\n\n    params['SIZE'] = size[0] + ',' + size[1];\n    params['BBOX'] = extent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(90 * pixelRatio);\n\n    const url = this.url_;\n\n    const modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    if (modifiedUrl == url) {\n      assert(false, 50); // `options.featureTypes` should be an Array\n    }\n    return appendParams(modifiedUrl, params);\n  }\n\n  /**\n   * Return the URL used for this ArcGIS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.image_ = null;\n    this.changed();\n  }\n}\n\nexport default ImageArcGISRest;\n","/**\n * @module ol/source/ImageCanvas\n */\n\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageSource from './Image.js';\nimport {\n  containsExtent,\n  getHeight,\n  getWidth,\n  scaleFromCenter,\n} from '../extent.js';\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the pixel ratio of the map, {@link module:ol/size~Size} the image size,\n * and {@link module:ol/proj/Projection~Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas~ImageCanvasSource}.\n *\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: {@link import(\"../extent.js\").Extent} the\n * image extent, `{number}` the image resolution, `{number}` the pixel ratio of the map,\n * {@link import(\"../size.js\").Size} the image size, and {@link import(\"../proj/Projection.js\").default} the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {import(\"./Source.js\").State} [state] Source state.\n */\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nclass ImageCanvasSource extends ImageSource {\n  /**\n   * @param {Options} [options] ImageCanvas options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n      state: options.state,\n    });\n\n    /**\n     * @private\n     * @type {FunctionType}\n     */\n    this.canvasFunction_ = options.canvasFunction;\n\n    /**\n     * @private\n     * @type {import(\"../ImageCanvas.js\").default}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n\n    let canvas = this.canvas_;\n    if (\n      canvas &&\n      this.renderedRevision_ == this.getRevision() &&\n      canvas.getResolution() == resolution &&\n      canvas.getPixelRatio() == pixelRatio &&\n      containsExtent(canvas.getExtent(), extent)\n    ) {\n      return canvas;\n    }\n\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n    const width = getWidth(extent) / resolution;\n    const height = getHeight(extent) / resolution;\n    const size = [width * pixelRatio, height * pixelRatio];\n\n    const canvasElement = this.canvasFunction_.call(\n      this,\n      extent,\n      resolution,\n      pixelRatio,\n      size,\n      projection\n    );\n    if (canvasElement) {\n      canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n    }\n    this.canvas_ = canvas;\n    this.renderedRevision_ = this.getRevision();\n\n    return canvas;\n  }\n}\n\nexport default ImageCanvasSource;\n","/**\n * @module ol/source/ImageMapGuide\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport {appendParams} from '../uri.js';\nimport {\n  containsExtent,\n  getCenter,\n  getHeight,\n  getWidth,\n  scaleFromCenter,\n} from '../extent.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [url] The mapagent url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [displayDpi=96] The display resolution.\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object} [params] Additional parameters.\n */\n\n/**\n * @classdesc\n * Source for images from Mapguide servers\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageMapGuide extends ImageSource {\n  /**\n   * @param {Options} options ImageMapGuide options.\n   */\n  constructor(options) {\n    super({\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.displayDpi_ =\n      options.displayDpi !== undefined ? options.displayDpi : 96;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.metersPerUnit_ =\n      options.metersPerUnit !== undefined ? options.metersPerUnit : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useOverlay_ =\n      options.useOverlay !== undefined ? options.useOverlay : false;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    let image = this.image_;\n    if (\n      image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), extent)\n    ) {\n      return image;\n    }\n\n    if (this.ratio_ != 1) {\n      extent = extent.slice();\n      scaleFromCenter(extent, this.ratio_);\n    }\n    const width = getWidth(extent) / resolution;\n    const height = getHeight(extent) / resolution;\n    const size = [width * pixelRatio, height * pixelRatio];\n\n    if (this.url_ !== undefined) {\n      const imageUrl = this.getUrl(\n        this.url_,\n        this.params_,\n        extent,\n        size,\n        projection\n      );\n      image = new ImageWrapper(\n        extent,\n        resolution,\n        pixelRatio,\n        imageUrl,\n        this.crossOrigin_,\n        this.imageLoadFunction_\n      );\n      image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this)\n      );\n    } else {\n      image = null;\n    }\n    this.image_ = image;\n    this.renderedRevision_ = this.getRevision();\n\n    return image;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.changed();\n  }\n\n  /**\n   * @param {string} baseUrl The mapagent url.\n   * @param {Object<string, string|number>} params Request parameters.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string} The mapagent map image request URL.\n   */\n  getUrl(baseUrl, params, extent, size, projection) {\n    const scale = getScale(extent, size, this.metersPerUnit_, this.displayDpi_);\n    const center = getCenter(extent);\n    const baseParams = {\n      'OPERATION': this.useOverlay_\n        ? 'GETDYNAMICMAPOVERLAYIMAGE'\n        : 'GETMAPIMAGE',\n      'VERSION': '2.0.0',\n      'LOCALE': 'en',\n      'CLIENTAGENT': 'ol/source/ImageMapGuide source',\n      'CLIP': '1',\n      'SETDISPLAYDPI': this.displayDpi_,\n      'SETDISPLAYWIDTH': Math.round(size[0]),\n      'SETDISPLAYHEIGHT': Math.round(size[1]),\n      'SETVIEWSCALE': scale,\n      'SETVIEWCENTERX': center[0],\n      'SETVIEWCENTERY': center[1],\n    };\n    Object.assign(baseParams, params);\n    return appendParams(baseUrl, baseParams);\n  }\n\n  /**\n   * Set the image load function of the MapGuide source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent The map extents.\n * @param {import(\"../size.js\").Size} size The viewport size.\n * @param {number} metersPerUnit The meters-per-unit value.\n * @param {number} dpi The display resolution.\n * @return {number} The computed map scale.\n */\nfunction getScale(extent, size, metersPerUnit, dpi) {\n  const mcsW = getWidth(extent);\n  const mcsH = getHeight(extent);\n  const devW = size[0];\n  const devH = size[1];\n  const mpp = 0.0254 / dpi;\n  if (devH * mcsW > devW * mcsH) {\n    return (mcsW * metersPerUnit) / (devW * mpp); // width limited\n  }\n  return (mcsH * metersPerUnit) / (devH * mpp); // height limited\n}\n\nexport default ImageMapGuide;\n","/**\n * @module ol/source/ImageStatic\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getHeight, getWidth, intersects} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nclass Static extends ImageSource {\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  constructor(options) {\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined\n          ? options.imageLoadFunction\n          : defaultImageLoadFunction;\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: getProjection(options.projection),\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = new ImageWrapper(\n      this.imageExtent_,\n      undefined,\n      1,\n      this.url_,\n      crossOrigin,\n      imageLoadFunction\n    );\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n  }\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  getImageExtent() {\n    return this.imageExtent_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n    return null;\n  }\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   */\n  handleImageChange(evt) {\n    if (this.image_.getState() == ImageState.LOADED) {\n      const imageExtent = this.image_.getExtent();\n      const image = this.image_.getImage();\n      let imageWidth, imageHeight;\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n      const extentWidth = getWidth(imageExtent);\n      const extentHeight = getHeight(imageExtent);\n      const xResolution = extentWidth / imageWidth;\n      const yResolution = extentHeight / imageHeight;\n      let targetWidth = imageWidth;\n      let targetHeight = imageHeight;\n      if (xResolution > yResolution) {\n        targetWidth = Math.round(extentWidth / yResolution);\n      } else {\n        targetHeight = Math.round(extentHeight / xResolution);\n      }\n      if (targetWidth !== imageWidth || targetHeight !== imageHeight) {\n        const context = createCanvasContext2D(targetWidth, targetHeight);\n        if (!this.getInterpolate()) {\n          context.imageSmoothingEnabled = false;\n        }\n        const canvas = context.canvas;\n        context.drawImage(\n          image,\n          0,\n          0,\n          imageWidth,\n          imageHeight,\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n        this.image_.setImage(canvas);\n      }\n    }\n    super.handleImageChange(evt);\n  }\n}\n\nexport default Static;\n","/**\n * @module ol/source/wms\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_VERSION = '1.3.0';\n\n/**\n * @api\n * @typedef {'carmentaserver' | 'geoserver' | 'mapserver' | 'qgis'} ServerType\n * Set the server type to use implementation-specific parameters beyond the WMS specification.\n *  - `'carmentaserver'`: HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n *  - `'geoserver'`: HiDPI support for [GeoServer](https://geoserver.org/)\n *  - `'mapserver'`: HiDPI support for [MapServer](https://mapserver.org/)\n *  - `'qgis'`: HiDPI support for [QGIS](https://qgis.org/)\n */\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport {DEFAULT_VERSION} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {ceil, floor, round} from '../math.js';\nimport {compareVersions} from '../string.js';\nimport {\n  containsExtent,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {get as getProjection, transform} from '../proj.js';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 4;\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} [url] WMS service URL.\n */\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageWMS extends ImageSource {\n  /**\n   * @param {Options} [options] ImageWMS options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        resolution\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const extent = getForViewAndSize(\n      coordinate,\n      resolution,\n      0,\n      GETFEATUREINFO_IMAGE_SIZE\n    );\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(baseParams, this.params_, params);\n\n    const x = floor((coordinate[0] - extent[0]) / resolution, DECIMALS);\n    const y = floor((extent[3] - coordinate[1]) / resolution, DECIMALS);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent,\n      GETFEATUREINFO_IMAGE_SIZE,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.url_), baseParams);\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    const center = getCenter(extent);\n    const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n    const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n    const viewExtent = getForViewAndSize(center, imageResolution, 0, [\n      viewWidth,\n      viewHeight,\n    ]);\n    const requestWidth = ceil(\n      (this.ratio_ * getWidth(extent)) / imageResolution,\n      DECIMALS\n    );\n    const requestHeight = ceil(\n      (this.ratio_ * getHeight(extent)) / imageResolution,\n      DECIMALS\n    );\n    const requestExtent = getForViewAndSize(center, imageResolution, 0, [\n      requestWidth,\n      requestHeight,\n    ]);\n\n    const image = this.image_;\n    if (\n      image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)\n    ) {\n      return image;\n    }\n\n    const params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    Object.assign(params, this.params_);\n\n    this.imageSize_[0] = round(\n      getWidth(requestExtent) / imageResolution,\n      DECIMALS\n    );\n    this.imageSize_[1] = round(\n      getHeight(requestExtent) / imageResolution,\n      DECIMALS\n    );\n\n    const url = this.getRequestUrl_(\n      requestExtent,\n      this.imageSize_,\n      pixelRatio,\n      projection,\n      params\n    );\n\n    this.image_ = new ImageWrapper(\n      requestExtent,\n      resolution,\n      pixelRatio,\n      url,\n      this.crossOrigin_,\n      this.imageLoadFunction_\n    );\n\n    this.renderedRevision_ = this.getRevision();\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n\n    return this.image_;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case 'geoserver':\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case 'mapserver':\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case 'carmentaserver':\n        case 'qgis':\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default: // Unknown `serverType` configured\n          assert(false, 8);\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    const axisOrientation = projection.getAxisOrientation();\n    let bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  }\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n}\n\nexport default ImageWMS;\n","/**\n * @module ol/source/ogcTileUtil\n */\n\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport {getJSON, resolveUrl} from '../net.js';\nimport {get as getProjection} from '../proj.js';\nimport {getIntersection as intersectExtents} from '../extent.js';\n\n/**\n * See https://ogcapi.ogc.org/tiles/.\n */\n\n/**\n * @typedef {'map' | 'vector'} TileType\n */\n\n/**\n * @typedef {'topLeft' | 'bottomLeft'} CornerOfOrigin\n */\n\n/**\n * @typedef {Object} TileSet\n * @property {TileType} dataType Type of data represented in the tileset.\n * @property {string} [tileMatrixSetDefinition] Reference to a tile matrix set definition.\n * @property {TileMatrixSet} [tileMatrixSet] Tile matrix set definition.\n * @property {Array<TileMatrixSetLimit>} [tileMatrixSetLimits] Tile matrix set limits.\n * @property {Array<Link>} links Tileset links.\n */\n\n/**\n * @typedef {Object} Link\n * @property {string} rel The link rel attribute.\n * @property {string} href The link URL.\n * @property {string} type The link type.\n */\n\n/**\n * @typedef {Object} TileMatrixSetLimit\n * @property {string} tileMatrix The tile matrix id.\n * @property {number} minTileRow The minimum tile row.\n * @property {number} maxTileRow The maximum tile row.\n * @property {number} minTileCol The minimum tile column.\n * @property {number} maxTileCol The maximum tile column.\n */\n\n/**\n * @typedef {Object} TileMatrixSet\n * @property {string} id The tile matrix set identifier.\n * @property {string} crs The coordinate reference system.\n * @property {Array<TileMatrix>} tileMatrices Array of tile matrices.\n */\n\n/**\n * @typedef {Object} TileMatrix\n * @property {string} id The tile matrix identifier.\n * @property {number} cellSize The pixel resolution (map units per pixel).\n * @property {Array<number>} pointOfOrigin The map location of the matrix origin.\n * @property {CornerOfOrigin} [cornerOfOrigin='topLeft'] The corner of the matrix that represents the origin ('topLeft' or 'bottomLeft').\n * @property {number} matrixWidth The number of columns.\n * @property {number} matrixHeight The number of rows.\n * @property {number} tileWidth The pixel width of a tile.\n * @property {number} tileHeight The pixel height of a tile.\n */\n\n/**\n * @type {Object<string, boolean>}\n */\nconst knownMapMediaTypes = {\n  'image/png': true,\n  'image/jpeg': true,\n  'image/gif': true,\n  'image/webp': true,\n};\n\n/**\n * @type {Object<string, boolean>}\n */\nconst knownVectorMediaTypes = {\n  'application/vnd.mapbox-vector-tile': true,\n  'application/geo+json': true,\n};\n\n/**\n * @typedef {Object} TileSetInfo\n * @property {string} urlTemplate The tile URL template.\n * @property {import(\"../tilegrid/TileGrid.js\").default} grid The tile grid.\n * @property {import(\"../Tile.js\").UrlFunction} urlFunction The tile URL function.\n */\n\n/**\n * @typedef {Object} SourceInfo\n * @property {string} url The tile set URL.\n * @property {string} mediaType The preferred tile media type.\n * @property {Array<string>} [supportedMediaTypes] The supported media types.\n * @property {import(\"../proj/Projection.js\").default} projection The source projection.\n * @property {Object} [context] Optional context for constructing the URL.\n */\n\n/**\n * @param {Array<Link>} links Tileset links.\n * @param {string} [mediaType] The preferred media type.\n * @return {string} The tile URL template.\n */\nexport function getMapTileUrlTemplate(links, mediaType) {\n  let tileUrlTemplate;\n  let fallbackUrlTemplate;\n  for (let i = 0; i < links.length; ++i) {\n    const link = links[i];\n    if (link.rel === 'item') {\n      if (link.type === mediaType) {\n        tileUrlTemplate = link.href;\n        break;\n      }\n      if (knownMapMediaTypes[link.type]) {\n        fallbackUrlTemplate = link.href;\n      } else if (!fallbackUrlTemplate && link.type.startsWith('image/')) {\n        fallbackUrlTemplate = link.href;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate) {\n    if (fallbackUrlTemplate) {\n      tileUrlTemplate = fallbackUrlTemplate;\n    } else {\n      throw new Error('Could not find \"item\" link');\n    }\n  }\n\n  return tileUrlTemplate;\n}\n\n/**\n * @param {Array<Link>} links Tileset links.\n * @param {string} [mediaType] The preferred media type.\n * @param {Array<string>} [supportedMediaTypes] The media types supported by the parser.\n * @return {string} The tile URL template.\n */\nexport function getVectorTileUrlTemplate(\n  links,\n  mediaType,\n  supportedMediaTypes\n) {\n  let tileUrlTemplate;\n  let fallbackUrlTemplate;\n\n  /**\n   * Lookup of URL by media type.\n   * @type {Object<string, string>}\n   */\n  const hrefLookup = {};\n\n  for (let i = 0; i < links.length; ++i) {\n    const link = links[i];\n    hrefLookup[link.type] = link.href;\n    if (link.rel === 'item') {\n      if (link.type === mediaType) {\n        tileUrlTemplate = link.href;\n        break;\n      }\n      if (knownVectorMediaTypes[link.type]) {\n        fallbackUrlTemplate = link.href;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate && supportedMediaTypes) {\n    for (let i = 0; i < supportedMediaTypes.length; ++i) {\n      const supportedMediaType = supportedMediaTypes[i];\n      if (hrefLookup[supportedMediaType]) {\n        tileUrlTemplate = hrefLookup[supportedMediaType];\n        break;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate) {\n    if (fallbackUrlTemplate) {\n      tileUrlTemplate = fallbackUrlTemplate;\n    } else {\n      throw new Error('Could not find \"item\" link');\n    }\n  }\n\n  return tileUrlTemplate;\n}\n\n/**\n * @param {SourceInfo} sourceInfo The source info.\n * @param {TileMatrixSet} tileMatrixSet Tile matrix set.\n * @param {string} tileUrlTemplate Tile URL template.\n * @param {Array<TileMatrixSetLimit>} [tileMatrixSetLimits] Tile matrix set limits.\n * @return {TileSetInfo} Tile set info.\n */\nfunction parseTileMatrixSet(\n  sourceInfo,\n  tileMatrixSet,\n  tileUrlTemplate,\n  tileMatrixSetLimits\n) {\n  let projection = sourceInfo.projection;\n  if (!projection) {\n    projection = getProjection(tileMatrixSet.crs);\n    if (!projection) {\n      throw new Error(`Unsupported CRS: ${tileMatrixSet.crs}`);\n    }\n  }\n  const backwards = projection.getAxisOrientation().substr(0, 2) !== 'en';\n\n  const matrices = tileMatrixSet.tileMatrices;\n\n  /**\n   * @type {Object<string, TileMatrix>}\n   */\n  const matrixLookup = {};\n  for (let i = 0; i < matrices.length; ++i) {\n    const matrix = matrices[i];\n    matrixLookup[matrix.id] = matrix;\n  }\n\n  /**\n   * @type {Object<string, TileMatrixSetLimit>}\n   */\n  const limitLookup = {};\n\n  /**\n   * @type {Array<string>}\n   */\n  const matrixIds = [];\n\n  if (tileMatrixSetLimits) {\n    for (let i = 0; i < tileMatrixSetLimits.length; ++i) {\n      const limit = tileMatrixSetLimits[i];\n      const id = limit.tileMatrix;\n      matrixIds.push(id);\n      limitLookup[id] = limit;\n    }\n  } else {\n    for (let i = 0; i < matrices.length; ++i) {\n      const id = matrices[i].id;\n      matrixIds.push(id);\n    }\n  }\n\n  const length = matrixIds.length;\n  const origins = new Array(length);\n  const resolutions = new Array(length);\n  const sizes = new Array(length);\n  const tileSizes = new Array(length);\n  const extent = [-Infinity, -Infinity, Infinity, Infinity];\n\n  for (let i = 0; i < length; ++i) {\n    const id = matrixIds[i];\n    const matrix = matrixLookup[id];\n    const origin = matrix.pointOfOrigin;\n    if (backwards) {\n      origins[i] = [origin[1], origin[0]];\n    } else {\n      origins[i] = origin;\n    }\n    resolutions[i] = matrix.cellSize;\n    sizes[i] = [matrix.matrixWidth, matrix.matrixHeight];\n    tileSizes[i] = [matrix.tileWidth, matrix.tileHeight];\n    const limit = limitLookup[id];\n    if (limit) {\n      const tileMapWidth = matrix.cellSize * matrix.tileWidth;\n      const minX = origins[i][0] + limit.minTileCol * tileMapWidth;\n      const maxX = origins[i][0] + (limit.maxTileCol + 1) * tileMapWidth;\n\n      const tileMapHeight = matrix.cellSize * matrix.tileHeight;\n      const upsideDown = matrix.cornerOfOrigin === 'bottomLeft';\n\n      let minY;\n      let maxY;\n      if (upsideDown) {\n        minY = origins[i][1] + limit.minTileRow * tileMapHeight;\n        maxY = origins[i][1] + (limit.maxTileRow + 1) * tileMapHeight;\n      } else {\n        minY = origins[i][1] - (limit.maxTileRow + 1) * tileMapHeight;\n        maxY = origins[i][1] - limit.minTileRow * tileMapHeight;\n      }\n\n      intersectExtents(extent, [minX, minY, maxX, maxY], extent);\n    }\n  }\n\n  const tileGrid = new TileGrid({\n    origins: origins,\n    resolutions: resolutions,\n    sizes: sizes,\n    tileSizes: tileSizes,\n    extent: tileMatrixSetLimits ? extent : undefined,\n  });\n\n  const context = sourceInfo.context;\n  const base = sourceInfo.url;\n\n  function tileUrlFunction(tileCoord, pixelRatio, projection) {\n    if (!tileCoord) {\n      return undefined;\n    }\n\n    const id = matrixIds[tileCoord[0]];\n    const matrix = matrixLookup[id];\n    const upsideDown = matrix.cornerOfOrigin === 'bottomLeft';\n\n    const localContext = {\n      tileMatrix: id,\n      tileCol: tileCoord[1],\n      tileRow: upsideDown ? -tileCoord[2] - 1 : tileCoord[2],\n    };\n\n    if (tileMatrixSetLimits) {\n      const limit = limitLookup[matrix.id];\n      if (\n        localContext.tileCol < limit.minTileCol ||\n        localContext.tileCol > limit.maxTileCol ||\n        localContext.tileRow < limit.minTileRow ||\n        localContext.tileRow > limit.maxTileRow\n      ) {\n        return undefined;\n      }\n    }\n\n    Object.assign(localContext, context);\n\n    const url = tileUrlTemplate.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n      return localContext[p];\n    });\n\n    return resolveUrl(base, url);\n  }\n\n  return {\n    grid: tileGrid,\n    urlTemplate: tileUrlTemplate,\n    urlFunction: tileUrlFunction,\n  };\n}\n\n/**\n * @param {SourceInfo} sourceInfo The source info.\n * @param {TileSet} tileSet Tile set.\n * @return {TileSetInfo|Promise<TileSetInfo>} Tile set info.\n */\nfunction parseTileSetMetadata(sourceInfo, tileSet) {\n  const tileMatrixSetLimits = tileSet.tileMatrixSetLimits;\n  let tileUrlTemplate;\n\n  if (tileSet.dataType === 'map') {\n    tileUrlTemplate = getMapTileUrlTemplate(\n      tileSet.links,\n      sourceInfo.mediaType\n    );\n  } else if (tileSet.dataType === 'vector') {\n    tileUrlTemplate = getVectorTileUrlTemplate(\n      tileSet.links,\n      sourceInfo.mediaType,\n      sourceInfo.supportedMediaTypes\n    );\n  } else {\n    throw new Error('Expected tileset data type to be \"map\" or \"vector\"');\n  }\n\n  if (tileSet.tileMatrixSet) {\n    return parseTileMatrixSet(\n      sourceInfo,\n      tileSet.tileMatrixSet,\n      tileUrlTemplate,\n      tileMatrixSetLimits\n    );\n  }\n\n  const tileMatrixSetLink = tileSet.links.find(\n    (link) =>\n      link.rel === 'http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme'\n  );\n  if (!tileMatrixSetLink) {\n    throw new Error(\n      'Expected http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme link or tileMatrixSet'\n    );\n  }\n  const tileMatrixSetDefinition = tileMatrixSetLink.href;\n\n  const url = resolveUrl(sourceInfo.url, tileMatrixSetDefinition);\n  return getJSON(url).then(function (tileMatrixSet) {\n    return parseTileMatrixSet(\n      sourceInfo,\n      tileMatrixSet,\n      tileUrlTemplate,\n      tileMatrixSetLimits\n    );\n  });\n}\n\n/**\n * @param {SourceInfo} sourceInfo Source info.\n * @return {Promise<TileSetInfo>} Tile set info.\n */\nexport function getTileSetInfo(sourceInfo) {\n  return getJSON(sourceInfo.url).then(function (tileSet) {\n    return parseTileSetMetadata(sourceInfo, tileSet);\n  });\n}\n","/**\n * @module ol/source/OGCMapTile\n */\nimport TileImage from './TileImage.js';\nimport {getTileSetInfo} from './ogcTileUtil.js';\nimport {error as logError} from '../console.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} url URL to the OGC Map Tileset endpoint.\n * @property {Object} [context] A lookup of values to use in the tile URL template.  The `{tileMatrix}`\n * (zoom level), `{tileRow}`, and `{tileCol}` variables in the URL will always be provided by the source.\n * @property {string} [mediaType] The content type for the tiles (e.g. \"image/png\").  If not provided,\n * the source will try to find a link with rel=\"item\" that uses a supported image type.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. By default, the projection\n * will be derived from the `crs` of the `tileMatrixSet`.  You can override this by supplying\n * a projection to the constructor.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(tile, src) {\n *   tile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for map tiles from an [OGC API - Tiles](https://ogcapi.ogc.org/tiles/) service that provides \"map\" type tiles.\n * The service must conform to at least the core (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/core)\n * and tileset (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/tileset) conformance classes.\n * @api\n */\nclass OGCMapTile extends TileImage {\n  /**\n   * @param {Options} options OGC map tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n    });\n\n    const sourceInfo = {\n      url: options.url,\n      projection: this.getProjection(),\n      mediaType: options.mediaType,\n      context: options.context || null,\n    };\n\n    getTileSetInfo(sourceInfo)\n      .then(this.handleTileSetInfo_.bind(this))\n      .catch(this.handleError_.bind(this));\n  }\n\n  /**\n   * @param {import(\"./ogcTileUtil.js\").TileSetInfo} tileSetInfo Tile set info.\n   * @private\n   */\n  handleTileSetInfo_(tileSetInfo) {\n    this.tileGrid = tileSetInfo.grid;\n    this.setTileUrlFunction(tileSetInfo.urlFunction, tileSetInfo.urlTemplate);\n    this.setState('ready');\n  }\n\n  /**\n   * @private\n   * @param {Error} error The error.\n   */\n  handleError_(error) {\n    logError(error);\n    this.setState('error');\n  }\n}\n\nexport default OGCMapTile;\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {fromKey, getCacheKeyForTileKey, getKeyZXY} from '../tilecoord.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache = new TileCache(this.tileCache.highWaterMark);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.tileCache;\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const z = fromKey(tileCache.peekFirstKey())[0];\n    const tileGrid = this.tileGrid;\n    tileCache.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n    this.sourceTileCache.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    const usedSourceTiles = Object.keys(usedTiles).reduce((acc, key) => {\n      const cacheKey = getCacheKeyForTileKey(key);\n      const tile = tileCache.peek(cacheKey);\n      if (tile) {\n        const sourceTiles = tile.sourceTiles;\n        for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n          acc[sourceTiles[i].getKey()] = true;\n        }\n      }\n      return acc;\n    }, {});\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache.expireCache(usedSourceTiles);\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection\n        );\n        const sourceTile = this.sourceTileCache.containsKey(tileUrl)\n          ? this.sourceTileCache.get(tileUrl)\n          : new this.tileClass(\n              sourceTileCoord,\n              tileUrl ? TileState.IDLE : TileState.EMPTY,\n              tileUrl,\n              this.format_,\n              this.tileLoadFunction\n            );\n        tile.sourceTiles.push(sourceTile);\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0]\n          );\n          this.sourceTileCache.set(tileUrl, sourceTile);\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR\n          )\n            ? TileState.ERROR\n            : TileState.LOADED\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const coordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    let tile;\n    if (this.tileCache.containsKey(coordKey)) {\n      tile = this.tileCache.get(coordKey);\n      if (tile.key === key) {\n        return tile;\n      }\n    }\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        empty =\n          empty &&\n          !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n      });\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection)\n    );\n\n    newTile.key = key;\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      this.tileCache.replace(coordKey, newTile);\n    } else {\n      this.tileCache.set(coordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    super.updateCacheSize(tileCount * 2, projection);\n    this.sourceTileCache.highWaterMark =\n      this.getTileCacheForProjection(projection).highWaterMark;\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile)\n      );\n    }\n  );\n}\n","/**\n * @module ol/source/OGCVectorTile\n */\n\nimport VectorTile from './VectorTile.js';\nimport {getTileSetInfo} from './ogcTileUtil.js';\nimport {error as logError} from '../console.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} url URL to the OGC Vector Tileset endpoint.\n * @property {Object} [context] A lookup of values to use in the tile URL template.  The `{tileMatrix}`\n * (zoom level), `{tileRow}`, and `{tileCol}` variables in the URL will always be provided by the source.\n * @property {import(\"../format/Feature.js\").default} format Feature parser for tiles.\n * @property {string} [mediaType] The content type for the tiles (e.g. \"application/vnd.mapbox-vector-tile\").  If not provided,\n * the source will try to find a link with rel=\"item\" that uses a vector type supported by the configured format.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for map tiles from an [OGC API - Tiles](https://ogcapi.ogc.org/tiles/) service that provides \"vector\" type tiles.\n * The service must conform to at least the core (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/core)\n * and tileset (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/tileset) conformance classes.\n *\n * Vector tile sets may come in a variety of formats (e.g. GeoJSON, MVT).  The `format` option is used to determine\n * which of the advertised media types is used.  If you need to force the use of a particular media type, you can\n * provide the `mediaType` option.\n * @api\n */\nclass OGCVectorTile extends VectorTile {\n  /**\n   * @param {Options} options OGC vector tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      format: options.format,\n      overlaps: options.overlaps,\n      projection: options.projection,\n      tileClass: options.tileClass,\n      transition: options.transition,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n      state: 'loading',\n    });\n\n    const sourceInfo = {\n      url: options.url,\n      projection: this.getProjection(),\n      mediaType: options.mediaType,\n      supportedMediaTypes: options.format.supportedMediaTypes,\n      context: options.context || null,\n    };\n\n    getTileSetInfo(sourceInfo)\n      .then(this.handleTileSetInfo_.bind(this))\n      .catch(this.handleError_.bind(this));\n  }\n\n  /**\n   * @param {import(\"./ogcTileUtil.js\").TileSetInfo} tileSetInfo Tile set info.\n   * @private\n   */\n  handleTileSetInfo_(tileSetInfo) {\n    this.tileGrid = tileSetInfo.grid;\n    this.setTileUrlFunction(tileSetInfo.urlFunction, tileSetInfo.urlTemplate);\n    this.setState('ready');\n  }\n\n  /**\n   * @private\n   * @param {Error} error The error.\n   */\n  handleError_(error) {\n    logError(error);\n    this.setState('error');\n  }\n}\n\nexport default OGCVectorTile;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.image_.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth)\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight)\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scale =\n      (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n\n    const extent = frameState.extent;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scale,\n      scale,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution\n    );\n\n    this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageLayer from '../layer/Image.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileLayer from '../layer/Tile.js';\nimport TileQueue from '../TileQueue.js';\nimport TileSource from './Tile.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {create as createTransform} from '../transform.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport {getUid} from '../util.js';\n\nlet hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet context;\n\n/**\n * @param {Uint8ClampedArray} data Image data.\n * @param {number} width Number of columns.\n * @param {number} height Number of rows.\n * @return {ImageData} Image data.\n */\nexport function newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  }\n\n  if (!context) {\n    context = document.createElement('canvas').getContext('2d');\n  }\n  const imageData = context.createImageData(width, height);\n  imageData.data.set(data);\n  return imageData;\n}\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  let workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    }\n    return {data: data, width: width, height: height};\n  }\n\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'}))\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    this._imageOps = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this._imageOps) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this._onWorkerMessage.bind(this, 0)\n      );\n    }\n    this._workers = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this._queue = [];\n\n    this._maxQueueLength = config.queue || Infinity;\n    this._running = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this._dataLookup = {};\n\n    /**\n     * @type {Job}\n     * @private\n     */\n    this._job = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this._enqueue({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this._dispatch();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  _enqueue(job) {\n    this._queue.push(job);\n    while (this._queue.length > this._maxQueueLength) {\n      this._queue.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  _dispatch() {\n    if (this._running || this._queue.length === 0) {\n      return;\n    }\n\n    const job = this._queue.shift();\n    this._job = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        buffers\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this._workers[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        slices\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  _onWorkerMessage(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this._dataLookup[index] = event.data;\n    --this._running;\n    if (this._running === 0) {\n      this._resolveJob();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  _resolveJob() {\n    const job = this._job;\n    const threads = this._workers.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n      meta = this._dataLookup[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this._dataLookup[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this._dataLookup[i]['meta'];\n      }\n    }\n    this._job = null;\n    this._dataLookup = {};\n    job.callback(\n      null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta\n    );\n    this._dispatch();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   */\n  disposeInternal() {\n    for (let i = 0; i < this._workers.length; ++i) {\n      this._workers[i].terminate();\n    }\n    this._workers.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n * @property {Array<number>|null} [resolutions] Resolutions. If specified, raster operations will only\n * be run at the given resolutions.  By default, the resolutions of the first source with resolutions\n * specified will be used, if any. Set to `null` to use any view resolution instead.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /** @type {boolean} */\n    this.useResolutions_ = options.resolutions !== null;\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.changed.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutterTree: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      const attributions = [];\n      for (\n        let index = 0, iMax = options.sources.length;\n        index < iMax;\n        ++index\n      ) {\n        const sourceOrLayer = options.sources[index];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        if (!source) {\n          continue;\n        }\n        const attributionGetter = source.getAttributions();\n        if (typeof attributionGetter === 'function') {\n          const sourceAttribution = attributionGetter(frameState);\n          attributions.push.apply(attributions, sourceAttribution);\n        }\n      }\n      return attributions.length !== 0 ? attributions : null;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.size[0] = Math.ceil(getWidth(extent) / resolution);\n    frameState.size[1] = Math.ceil(getHeight(extent) / resolution);\n    frameState.extent = [\n      center[0] - (frameState.size[0] * resolution) / 2,\n      center[1] - (frameState.size[1] * resolution) / 2,\n      center[0] + (frameState.size[0] * resolution) / 2,\n      center[1] + (frameState.size[1] * resolution) / 2,\n    ];\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (!source || source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(frameState.extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    frameState.tileQueue.loadMoreTiles(16, 16);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data)\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState)\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    this.changed();\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data)\n    );\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    if (!this.useResolutions_) {\n      return null;\n    }\n    let resolutions = super.getResolutions();\n    if (!resolutions) {\n      for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n        const source = this.layers_[i].getSource();\n        resolutions = source.getResolutions(projection);\n        if (resolutions) {\n          break;\n        }\n      }\n    }\n    return resolutions;\n  }\n\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height, undefined, {\n      willReadFrequently: true,\n    });\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height, undefined, {\n        willReadFrequently: true,\n      });\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","/**\n * @module ol/source/Stamen\n */\n\nimport XYZ from './XYZ.js';\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>, ' +\n    'under <a href=\"https://creativecommons.org/licenses/by/3.0/\" target=\"_blank\">CC BY' +\n    ' 3.0</a>.',\n  OSM_ATTRIBUTION,\n];\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nconst LayerConfig = {\n  'terrain': {\n    extension: 'png',\n    opaque: true,\n  },\n  'terrain-background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true,\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true,\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true,\n  },\n};\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nconst ProviderConfig = {\n  'terrain': {\n    minZoom: 0,\n    maxZoom: 18,\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20,\n  },\n  'watercolor': {\n    minZoom: 0,\n    maxZoom: 18,\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nclass Stamen extends XYZ {\n  /**\n   * @param {Options} options Stamen options.\n   */\n  constructor(options) {\n    const i = options.layer.indexOf('-');\n    const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    const providerConfig = ProviderConfig[provider];\n\n    const layerConfig = LayerConfig[options.layer];\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' +\n          options.layer +\n          '/{z}/{x}/{y}.' +\n          layerConfig.extension;\n\n    super({\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      maxZoom:\n        options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom:\n        options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default Stamen;\n","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams} from '../uri.js';\nimport {createEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} [urls] ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nclass TileArcGISRest extends TileImage {\n  /**\n   * @param {Options} [options] Tile ArcGIS Rest options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    // (if there is no numeric portion the entire projection code must\n    // form a valid ArcGIS SpatialReference definition).\n    const srid = projection\n      .getCode()\n      .split(/:(?=\\d+$)/)\n      .pop();\n\n    params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n    params['BBOX'] = tileExtent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(\n      params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio\n    );\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    const modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    return appendParams(modifiedUrl, params);\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.hidpi_ ? pixelRatio : 1;\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && !this.hidpi_) {\n      pixelRatio = 1;\n    }\n\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    // Apply default params and override with user specified values.\n    const baseParams = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileArcGISRest;\n","/**\n * @module ol/source/TileDebug\n */\n\nimport XYZ from './XYZ.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Optional projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Set to `1` when debugging `VectorTile` sources with a default configuration.\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {string} [template='z:{z} x:{x} y:{y}'] Template for labeling the tiles.\n * Should include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n */\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n * @api\n */\nclass TileDebug extends XYZ {\n  /**\n   * @param {Options} [options] Debug tile options.\n   */\n  constructor(options) {\n    /**\n     * @type {Options}\n     */\n    options = options || {};\n\n    super({\n      opaque: false,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      zDirection: options.zDirection,\n      url: options.template || 'z:{z} x:{x} y:{y}',\n      tileLoadFunction: (tile, text) => {\n        const z = tile.getTileCoord()[0];\n        const tileSize = toSize(this.tileGrid.getTileSize(z));\n        const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n        context.strokeStyle = 'grey';\n        context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n        context.fillStyle = 'grey';\n        context.strokeStyle = 'white';\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.font = '24px sans-serif';\n        context.lineWidth = 4;\n        context.strokeText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n        context.fillText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n\n        /** @type {import(\"../ImageTile.js\").default} */ (tile).setImage(\n          context.canvas\n        );\n      },\n    });\n  }\n}\n\nexport default TileDebug;\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {assert} from '../asserts.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/source/TileWMS\n */\n\nimport TileImage from './TileImage.js';\nimport {DEFAULT_VERSION} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {buffer as bufferSize, scale as scaleSize, toSize} from '../size.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {modulo} from '../math.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See https://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options} [options] Tile WMS options.\n   */\n  constructor(options) {\n    options = options ? options : /** @type {Options} */ ({});\n\n    const params = Object.assign({}, options.params);\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    const z = tileGrid.getZForResolution(resolution, this.zDirection);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        tileResolution\n      );\n      tileExtent = transformExtent(\n        tileExtent,\n        projectionObj,\n        sourceProjectionObj\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(baseParams, this.params_, params);\n\n    const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case 'geoserver':\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case 'mapserver':\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case 'carmentaserver':\n        case 'qgis':\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default: // Unknown `serverType` configured\n          assert(false, 52);\n          break;\n      }\n    }\n\n    const axisOrientation = projection.getAxisOrientation();\n    const bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      let tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    Object.assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileWMS;\n","/**\n * @module ol/source/UTFGrid\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileSource from './Tile.js';\nimport TileState from '../TileState.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {assert} from '../asserts.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {listenOnce} from '../events.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\n\nexport class CustomTile extends Tile {\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {import(\"../extent.js\").Extent} extent Extent of the tile.\n   * @param {boolean} preemptive Load the tile when visible (before it's needed).\n   * @param {boolean} jsonp Load the tile as a script.\n   */\n  constructor(tileCoord, state, src, extent, preemptive, jsonp) {\n    super(tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n  }\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLImageElement} Image.\n   */\n  getImage() {\n    return null;\n  }\n\n  /**\n   * Synchronously returns data at given coordinate (if available).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {*} The data.\n   */\n  getData(coordinate) {\n    if (!this.grid_ || !this.keys_) {\n      return null;\n    }\n    const xRelative =\n      (coordinate[0] - this.extent_[0]) / (this.extent_[2] - this.extent_[0]);\n    const yRelative =\n      (coordinate[1] - this.extent_[1]) / (this.extent_[3] - this.extent_[1]);\n\n    const row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n    if (typeof row !== 'string') {\n      return null;\n    }\n\n    let code = row.charCodeAt(Math.floor(xRelative * row.length));\n    if (code >= 93) {\n      code--;\n    }\n    if (code >= 35) {\n      code--;\n    }\n    code -= 32;\n\n    let data = null;\n    if (code in this.keys_) {\n      const id = this.keys_[code];\n      if (this.data_ && id in this.data_) {\n        data = this.data_[id];\n      } else {\n        data = id;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate (or `null` if not yet loaded).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   */\n  forDataAtCoordinate(coordinate, callback, request) {\n    if (this.state == TileState.EMPTY && request === true) {\n      this.state = TileState.IDLE;\n      listenOnce(\n        this,\n        EventType.CHANGE,\n        function (e) {\n          callback(this.getData(coordinate));\n        },\n        this\n      );\n      this.loadInternal_();\n    } else {\n      if (request === true) {\n        setTimeout(() => {\n          callback(this.getData(coordinate));\n        }, 0);\n      } else {\n        callback(this.getData(coordinate));\n      }\n    }\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.src_;\n  }\n\n  /**\n   * @private\n   */\n  handleError_() {\n    this.state = TileState.ERROR;\n    this.changed();\n  }\n\n  /**\n   * @param {!UTFGridJSON} json UTFGrid data.\n   * @private\n   */\n  handleLoad_(json) {\n    this.grid_ = json['grid'];\n    this.keys_ = json['keys'];\n    this.data_ = json['data'];\n\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  loadInternal_() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      if (this.jsonp_) {\n        requestJSONP(\n          this.src_,\n          this.handleLoad_.bind(this),\n          this.handleError_.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', this.src_);\n        client.send();\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {!UTFGridJSON} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.handleError_();\n        return;\n      }\n      this.handleLoad_(response);\n    } else {\n      this.handleError_();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleError_();\n  }\n\n  /**\n   */\n  load() {\n    if (this.preemptive_) {\n      this.loadInternal_();\n    } else {\n      this.setState(TileState.EMPTY);\n    }\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false` (lazy loading), you need to pass `true` as\n * `request` to the `forDataAtCoordinateAndResolution` method otherwise no\n * data will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nclass UTFGrid extends TileSource {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super({\n      projection: getProjection('EPSG:3857'),\n      state: 'loading',\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ =\n      options.preemptive !== undefined ? options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {import(\"./TileJSON.js\").Config} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * Return the template from TileJSON.\n   * @return {string|undefined} The template from TileJSON.\n   * @api\n   */\n  getTemplate() {\n    return this.template_;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate and resolution (or `null` if not yet loaded or\n   * in case of an error).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @api\n   */\n  forDataAtCoordinateAndResolution(coordinate, resolution, callback, request) {\n    if (this.tileGrid) {\n      const z = this.tileGrid.getZForResolution(resolution, this.zDirection);\n      const tileCoord = this.tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = /** @type {!CustomTile} */ (\n        this.getTile(\n          tileCoord[0],\n          tileCoord[1],\n          tileCoord[2],\n          1,\n          this.getProjection()\n        )\n      );\n      tile.forDataAtCoordinate(coordinate, callback, request);\n    } else {\n      if (request === true) {\n        setTimeout(function () {\n          callback(null);\n        }, 0);\n      } else {\n        callback(null);\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n\n  /**\n   * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n   * @protected\n   * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n    });\n    this.tileGrid = tileGrid;\n\n    this.template_ = tileJSON['template'];\n\n    const grids = tileJSON['grids'];\n    if (!grids) {\n      this.setState('error');\n      return;\n    }\n\n    this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n    if (tileJSON['attribution'] !== undefined) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n\n    this.setState('ready');\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!CustomTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    }\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n    const tile = new CustomTile(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.tileGrid.getTileCoordExtent(tileCoord),\n      this.preemptive_,\n      this.jsonp_\n    );\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UTFGrid;\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams} from '../uri.js';\nimport {containsExtent} from '../extent.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection, transformExtent} from '../proj.js';\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @typedef {'KVP' | 'REST'} RequestEncoding\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {RequestEncoding} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined ? options.requestEncoding : 'KVP';\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {RequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      ),\n      key\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {RequestEncoding} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    const res = this.urls ? this.urls.slice(0) : [];\n    for (const key in this.dimensions_) {\n      res.push(key + '-' + this.dimensions_[key]);\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    Object.assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == 'KVP') {\n      Object.assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == 'KVP'\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n      this.tileGrid\n    );\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        }\n        const localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': tileCoord[2],\n        };\n        Object.assign(localContext, dimensions);\n        let url = template;\n        if (requestEncoding == 'KVP') {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = layers.find(function (elt) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (!l) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        const tileMatrixSet = tileMatrixSets.find(function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        }\n        return supportedCRS == config['projection'];\n      });\n    } else {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = l['Style'].findIndex(function (elt) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    }\n    return elt['isDefault'];\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = matrixSets.find(function (elt) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = matrixSetObj.TileMatrix.find(\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  let matrixSetExtent = matrixSetObj['BoundingBox'];\n  if (matrixSetExtent && switchXY) {\n    matrixSetExtent = [\n      matrixSetExtent[1],\n      matrixSetExtent[0],\n      matrixSetExtent[3],\n      matrixSetExtent[2],\n    ];\n  }\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    if (wgs84BoundingBox) {\n      wrapX =\n        wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n    } else {\n      const wgs84MatrixSetExtent = transformExtent(\n        matrixSetExtent,\n        matrixSetObj['SupportedCRS'],\n        'EPSG:4326'\n      );\n      // Ignore slight deviation from the correct x limits\n      wrapX =\n        wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n        wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = gets[i]['Constraint'].find(function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === 'KVP') {\n          if (encodings.includes('KVP')) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = 'KVP';\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = 'REST';\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use \"flat\" style object literals instead of\n   * using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.).  See the documentation\n   * for the [flat style types]{@link module:ol/style/flat~FlatStyle} to see what properties are supported.\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/webgl/constants\n */\n\n/**\n * @enum {string}\n */\nexport const WebGLWorkerMessageType = {\n  GENERATE_POLYGON_BUFFERS: 'GENERATE_POLYGON_BUFFERS',\n  GENERATE_POINT_BUFFERS: 'GENERATE_POINT_BUFFERS',\n  GENERATE_LINE_STRING_BUFFERS: 'GENERATE_LINE_STRING_BUFFERS',\n};\n\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {number} id Message id; will be used both in request and response as a means of identification\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions Polygon render instructions raw binary buffer.\n * @property {number} [customAttributesCount] Amount of custom attributes count in the polygon render instructions.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {import(\"../../transform\").Transform} [renderInstructionsTransform] Transformation matrix used to project the instructions coordinates\n */\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim | 0);\n            triangles.push(ear.i / dim | 0);\n            triangles.push(next.i / dim | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    var p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim | 0);\n            triangles.push(p.i / dim | 0);\n            triangles.push(b.i / dim | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","/**\n * @module ol/render/webgl/utils\n */\nimport earcut from 'earcut';\nimport {apply as applyTransform} from '../../transform.js';\nimport {clamp} from '../../math.js';\n\nconst tmpArray_ = [];\n\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\nconst bufferPositions_ = {vertexPosition: 0, indexPosition: 0};\n\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesCount Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(\n  instructions,\n  elementIndex,\n  vertexBuffer,\n  indexBuffer,\n  customAttributesCount,\n  bufferPositions\n) {\n  // This is for x, y and index\n  const baseVertexAttrsCount = 3;\n  const baseInstructionsCount = 2;\n  const stride = baseVertexAttrsCount + customAttributesCount;\n\n  const x = instructions[elementIndex + 0];\n  const y = instructions[elementIndex + 1];\n\n  // read custom numerical attributes on the feature\n  const customAttrs = tmpArray_;\n  customAttrs.length = customAttributesCount;\n  for (let i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  let vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  let iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  const baseIndex = vPos / stride;\n\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n\n  return bufferPositions_;\n}\n\n/**\n * Pushes a single quad to form a line segment; also includes a computation for the join angles with previous and next\n * segment, in order to be able to offset the vertices correctly in the shader\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} segmentStartIndex Index of the segment start point from which render instructions will be read.\n * @param {number} segmentEndIndex Index of the segment start point from which render instructions will be read.\n * @param {number|null} beforeSegmentIndex Index of the point right before the segment (null if none, e.g this is a line start)\n * @param {number|null} afterSegmentIndex Index of the point right after the segment (null if none, e.g this is a line end)\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {Array<number>} customAttributes Array of custom attributes value\n * @param {import('../../transform.js').Transform} instructionsTransform Transform matrix used to project coordinates in instructions\n * @param {import('../../transform.js').Transform} invertInstructionsTransform Transform matrix used to project coordinates in instructions\n * @private\n */\nexport function writeLineSegmentToBuffers(\n  instructions,\n  segmentStartIndex,\n  segmentEndIndex,\n  beforeSegmentIndex,\n  afterSegmentIndex,\n  vertexArray,\n  indexArray,\n  customAttributes,\n  instructionsTransform,\n  invertInstructionsTransform\n) {\n  // compute the stride to determine how many vertices were already pushed\n  const baseVertexAttrsCount = 5; // base attributes: x0, y0, x1, y1, params (vertex number [0-3], join angle 1, join angle 2)\n  const stride = baseVertexAttrsCount + customAttributes.length;\n  const baseIndex = vertexArray.length / stride;\n\n  // The segment is composed of two positions called P0[x0, y0] and P1[x1, y1]\n  // Depending on whether there are points before and after the segment, its final shape\n  // will be different\n  const p0 = [\n    instructions[segmentStartIndex + 0],\n    instructions[segmentStartIndex + 1],\n  ];\n  const p1 = [instructions[segmentEndIndex], instructions[segmentEndIndex + 1]];\n\n  // to compute offsets from the line center we need to reproject\n  // coordinates back in world units and compute the length of the segment\n  const p0world = applyTransform(invertInstructionsTransform, [...p0]);\n  const p1world = applyTransform(invertInstructionsTransform, [...p1]);\n\n  function computeVertexParameters(vertexNumber, joinAngle1, joinAngle2) {\n    const shift = 10000;\n    const anglePrecision = 1500;\n    return (\n      Math.round(joinAngle1 * anglePrecision) +\n      Math.round(joinAngle2 * anglePrecision) * shift +\n      vertexNumber * shift * shift\n    );\n  }\n\n  // compute the angle between p0pA and p0pB\n  // returns a value in [0, 2PI]\n  function angleBetween(p0, pA, pB) {\n    const lenA = Math.sqrt(\n      (pA[0] - p0[0]) * (pA[0] - p0[0]) + (pA[1] - p0[1]) * (pA[1] - p0[1])\n    );\n    const tangentA = [(pA[0] - p0[0]) / lenA, (pA[1] - p0[1]) / lenA];\n    const orthoA = [-tangentA[1], tangentA[0]];\n    const lenB = Math.sqrt(\n      (pB[0] - p0[0]) * (pB[0] - p0[0]) + (pB[1] - p0[1]) * (pB[1] - p0[1])\n    );\n    const tangentB = [(pB[0] - p0[0]) / lenB, (pB[1] - p0[1]) / lenB];\n\n    // this angle can be clockwise or anticlockwise; hence the computation afterwards\n    const angle =\n      lenA === 0 || lenB === 0\n        ? 0\n        : Math.acos(\n            clamp(tangentB[0] * tangentA[0] + tangentB[1] * tangentA[1], -1, 1)\n          );\n    const isClockwise = tangentB[0] * orthoA[0] + tangentB[1] * orthoA[1] > 0;\n    return !isClockwise ? Math.PI * 2 - angle : angle;\n  }\n\n  const joinBefore = beforeSegmentIndex !== null;\n  const joinAfter = afterSegmentIndex !== null;\n\n  let angle0 = 0;\n  let angle1 = 0;\n\n  // add vertices and adapt offsets for P0 in case of join\n  if (joinBefore) {\n    // B for before\n    const pB = [\n      instructions[beforeSegmentIndex],\n      instructions[beforeSegmentIndex + 1],\n    ];\n    const pBworld = applyTransform(invertInstructionsTransform, [...pB]);\n    angle0 = angleBetween(p0world, p1world, pBworld);\n  }\n  // adapt offsets for P1 in case of join\n  if (joinAfter) {\n    // A for after\n    const pA = [\n      instructions[afterSegmentIndex],\n      instructions[afterSegmentIndex + 1],\n    ];\n    const pAworld = applyTransform(invertInstructionsTransform, [...pA]);\n    angle1 = angleBetween(p1world, p0world, pAworld);\n  }\n\n  // add main segment triangles\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(0, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(1, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(2, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(3, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  indexArray.push(\n    baseIndex,\n    baseIndex + 1,\n    baseIndex + 2,\n    baseIndex + 1,\n    baseIndex + 3,\n    baseIndex + 2\n  );\n}\n\n/**\n * Pushes several triangles to form a polygon, including holes\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} polygonStartIndex Index of the polygon start point from which render instructions will be read.\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {number} customAttributesCount Amount of custom attributes for each element.\n * @return {number} Next polygon instructions index\n * @private\n */\nexport function writePolygonTrianglesToBuffers(\n  instructions,\n  polygonStartIndex,\n  vertexArray,\n  indexArray,\n  customAttributesCount\n) {\n  const instructionsPerVertex = 2; // x, y\n  const attributesPerVertex = 2 + customAttributesCount;\n  let instructionsIndex = polygonStartIndex;\n  const customAttributes = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + customAttributesCount\n  );\n  instructionsIndex += customAttributesCount;\n  const ringsCount = instructions[instructionsIndex++];\n  let verticesCount = 0;\n  const holes = new Array(ringsCount - 1);\n  for (let i = 0; i < ringsCount; i++) {\n    verticesCount += instructions[instructionsIndex++];\n    if (i < ringsCount - 1) {\n      holes[i] = verticesCount;\n    }\n  }\n  const flatCoords = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + verticesCount * instructionsPerVertex\n  );\n\n  // pushing to vertices and indices!! this is where the magic happens\n  const result = earcut(flatCoords, holes, instructionsPerVertex);\n  for (let i = 0; i < result.length; i++) {\n    indexArray.push(result[i] + vertexArray.length / attributesPerVertex);\n  }\n  for (let i = 0; i < flatCoords.length; i += 2) {\n    vertexArray.push(flatCoords[i], flatCoords[i + 1], ...customAttributes);\n  }\n\n  return instructionsIndex + verticesCount * instructionsPerVertex;\n}\n\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n  const canvas = document.createElement('canvas');\n  const image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, array) {\n  array = array || [];\n  const radix = 256;\n  const divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n  array[2] = (Math.floor(id / radix) % radix) / divide;\n  array[3] = (id % radix) / divide;\n  return array;\n}\n\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  let id = 0;\n  const radix = 256;\n  const mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\n","\n        export function create() {\n          const source = \"const e=\\\"GENERATE_POLYGON_BUFFERS\\\",t=\\\"GENERATE_POINT_BUFFERS\\\",n=\\\"GENERATE_LINE_STRING_BUFFERS\\\",r={1:\\\"The view center is not defined\\\",2:\\\"The view resolution is not defined\\\",3:\\\"The view rotation is not defined\\\",4:\\\"`image` and `src` cannot be provided at the same time\\\",5:\\\"`imgSize` must be set when `image` is provided\\\",7:\\\"`format` must be set when `url` is set\\\",8:\\\"Unknown `serverType` configured\\\",9:\\\"`url` must be configured or set using `#setUrl()`\\\",10:\\\"The default `geometryFunction` can only handle `Point` geometries\\\",11:\\\"`options.featureTypes` must be an Array\\\",12:\\\"`options.geometryName` must also be provided when `options.bbox` is set\\\",13:\\\"Invalid corner\\\",14:\\\"Invalid color\\\",15:\\\"Tried to get a value for a key that does not exist in the cache\\\",16:\\\"Tried to set a value for a key that is used already\\\",17:\\\"`resolutions` must be sorted in descending order\\\",18:\\\"Either `origin` or `origins` must be configured, never both\\\",19:\\\"Number of `tileSizes` and `resolutions` must be equal\\\",20:\\\"Number of `origins` and `resolutions` must be equal\\\",22:\\\"Either `tileSize` or `tileSizes` must be configured, never both\\\",24:\\\"Invalid extent or geometry provided as `geometry`\\\",25:\\\"Cannot fit empty extent provided as `geometry`\\\",26:\\\"Features must have an id set\\\",27:\\\"Features must have an id set\\\",28:'`renderMode` must be `\\\"hybrid\\\"` or `\\\"vector\\\"`',30:\\\"The passed `feature` was already added to the source\\\",31:\\\"Tried to enqueue an `element` that was already added to the queue\\\",32:\\\"Transformation matrix cannot be inverted\\\",33:\\\"Invalid units\\\",34:\\\"Invalid geometry layout\\\",36:\\\"Unknown SRS type\\\",37:\\\"Unknown geometry type found\\\",38:\\\"`styleMapValue` has an unknown type\\\",39:\\\"Unknown geometry type\\\",40:\\\"Expected `feature` to have a geometry\\\",41:\\\"Expected an `ol/style/Style` or an array of `ol/style/Style.js`\\\",42:\\\"Question unknown, the answer is 42\\\",43:\\\"Expected `layers` to be an array or a `Collection`\\\",47:\\\"Expected `controls` to be an array or an `ol/Collection`\\\",48:\\\"Expected `interactions` to be an array or an `ol/Collection`\\\",49:\\\"Expected `overlays` to be an array or an `ol/Collection`\\\",50:\\\"`options.featureTypes` should be an Array\\\",51:\\\"Either `url` or `tileJSON` options must be provided\\\",52:\\\"Unknown `serverType` configured\\\",53:\\\"Unknown `tierSizeCalculation` configured\\\",55:\\\"The {-y} placeholder requires a tile grid with extent\\\",56:\\\"mapBrowserEvent must originate from a pointer event\\\",57:\\\"At least 2 conditions are required\\\",59:\\\"Invalid command found in the PBF\\\",60:\\\"Missing or invalid `size`\\\",61:\\\"Cannot determine IIIF Image API version from provided image information JSON\\\",62:\\\"A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`\\\",64:\\\"Layer opacity must be a number\\\",66:\\\"`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`\\\",67:\\\"A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both\\\",68:\\\"A VectorTile source can only be rendered if it has a projection compatible with the view projection\\\",69:\\\"`width` or `height` cannot be provided together with `scale`\\\"};class o extends Error{constructor(e){const t=r[e];super(t),this.code=e,this.name=\\\"AssertionError\\\",this.message=t}}var i=o;function a(e,t){const n=t[0],r=t[1];return t[0]=e[0]*n+e[2]*r+e[4],t[1]=e[1]*n+e[3]*r+e[5],t}function s(e,t){const n=(r=t)[0]*r[3]-r[1]*r[2];var r;!function(e,t){if(!e)throw new i(t)}(0!==n,32);const o=t[0],a=t[1],s=t[2],u=t[3],f=t[4],x=t[5];return e[0]=u/n,e[1]=-a/n,e[2]=-s/n,e[3]=o/n,e[4]=(s*x-u*f)/n,e[5]=-(o*x-a*f)/n,e}new Array(6);var u={};function f(e,t,n){n=n||2;var r,o,i,a,s,u,f,l=t&&t.length,c=l?t[0]*n:e.length,v=x(e,0,c,n,!0),d=[];if(!v||v.next===v.prev)return d;if(l&&(v=function(e,t,n,r){var o,i,a,s=[];for(o=0,i=t.length;o<i;o++)(a=x(e,t[o]*r,o<i-1?t[o+1]*r:e.length,r,!1))===a.next&&(a.steiner=!0),s.push(w(a));for(s.sort(p),o=0;o<s.length;o++)n=b(s[o],n);return n}(e,t,v,n)),e.length>80*n){r=i=e[0],o=a=e[1];for(var y=n;y<c;y+=n)(s=e[y])<r&&(r=s),(u=e[y+1])<o&&(o=u),s>i&&(i=s),u>a&&(a=u);f=0!==(f=Math.max(i-r,a-o))?32767/f:0}return h(v,d,n,r,o,f,0),d}function x(e,t,n,r,o){var i,a;if(o===B(e,t,n,r)>0)for(i=t;i<n;i+=r)a=k(i,e[i],e[i+1],a);else for(i=n-r;i>=t;i-=r)a=k(i,e[i],e[i+1],a);return a&&M(a,a.next)&&(z(a),a=a.next),a}function l(e,t){if(!e)return e;t||(t=e);var n,r=e;do{if(n=!1,r.steiner||!M(r,r.next)&&0!==Z(r.prev,r,r.next))r=r.next;else{if(z(r),(r=t=r.prev)===r.next)break;n=!0}}while(n||r!==t);return t}function h(e,t,n,r,o,i,a){if(e){!a&&i&&function(e,t,n,r){var o=e;do{0===o.z&&(o.z=m(o.x,o.y,t,n,r)),o.prevZ=o.prev,o.nextZ=o.next,o=o.next}while(o!==e);o.prevZ.nextZ=null,o.prevZ=null,function(e){var t,n,r,o,i,a,s,u,f=1;do{for(n=e,e=null,i=null,a=0;n;){for(a++,r=n,s=0,t=0;t<f&&(s++,r=r.nextZ);t++);for(u=f;s>0||u>0&&r;)0!==s&&(0===u||!r||n.z<=r.z)?(o=n,n=n.nextZ,s--):(o=r,r=r.nextZ,u--),i?i.nextZ=o:e=o,o.prevZ=i,i=o;n=r}i.nextZ=null,f*=2}while(a>1)}(o)}(e,r,o,i);for(var s,u,f=e;e.prev!==e.next;)if(s=e.prev,u=e.next,i?v(e,r,o,i):c(e))t.push(s.i/n|0),t.push(e.i/n|0),t.push(u.i/n|0),z(e),e=u.next,f=u.next;else if((e=u)===f){a?1===a?h(e=d(l(e),t,n),t,n,r,o,i,2):2===a&&y(e,t,n,r,o,i):h(l(e),t,n,r,o,i,1);break}}}function c(e){var t=e.prev,n=e,r=e.next;if(Z(t,n,r)>=0)return!1;for(var o=t.x,i=n.x,a=r.x,s=t.y,u=n.y,f=r.y,x=o<i?o<a?o:a:i<a?i:a,l=s<u?s<f?s:f:u<f?u:f,h=o>i?o>a?o:a:i>a?i:a,c=s>u?s>f?s:f:u>f?u:f,v=r.next;v!==t;){if(v.x>=x&&v.x<=h&&v.y>=l&&v.y<=c&&A(o,s,i,u,a,f,v.x,v.y)&&Z(v.prev,v,v.next)>=0)return!1;v=v.next}return!0}function v(e,t,n,r){var o=e.prev,i=e,a=e.next;if(Z(o,i,a)>=0)return!1;for(var s=o.x,u=i.x,f=a.x,x=o.y,l=i.y,h=a.y,c=s<u?s<f?s:f:u<f?u:f,v=x<l?x<h?x:h:l<h?l:h,d=s>u?s>f?s:f:u>f?u:f,y=x>l?x>h?x:h:l>h?l:h,p=m(c,v,t,n,r),b=m(d,y,t,n,r),g=e.prevZ,w=e.nextZ;g&&g.z>=p&&w&&w.z<=b;){if(g.x>=c&&g.x<=d&&g.y>=v&&g.y<=y&&g!==o&&g!==a&&A(s,x,u,l,f,h,g.x,g.y)&&Z(g.prev,g,g.next)>=0)return!1;if(g=g.prevZ,w.x>=c&&w.x<=d&&w.y>=v&&w.y<=y&&w!==o&&w!==a&&A(s,x,u,l,f,h,w.x,w.y)&&Z(w.prev,w,w.next)>=0)return!1;w=w.nextZ}for(;g&&g.z>=p;){if(g.x>=c&&g.x<=d&&g.y>=v&&g.y<=y&&g!==o&&g!==a&&A(s,x,u,l,f,h,g.x,g.y)&&Z(g.prev,g,g.next)>=0)return!1;g=g.prevZ}for(;w&&w.z<=b;){if(w.x>=c&&w.x<=d&&w.y>=v&&w.y<=y&&w!==o&&w!==a&&A(s,x,u,l,f,h,w.x,w.y)&&Z(w.prev,w,w.next)>=0)return!1;w=w.nextZ}return!0}function d(e,t,n){var r=e;do{var o=r.prev,i=r.next.next;!M(o,i)&&F(o,r,r.next,i)&&S(o,i)&&S(i,o)&&(t.push(o.i/n|0),t.push(r.i/n|0),t.push(i.i/n|0),z(r),z(r.next),r=e=i),r=r.next}while(r!==e);return l(r)}function y(e,t,n,r,o,i){var a=e;do{for(var s=a.next.next;s!==a.prev;){if(a.i!==s.i&&E(a,s)){var u=U(a,s);return a=l(a,a.next),u=l(u,u.next),h(a,t,n,r,o,i,0),void h(u,t,n,r,o,i,0)}s=s.next}a=a.next}while(a!==e)}function p(e,t){return e.x-t.x}function b(e,t){var n=function(e,t){var n,r=t,o=e.x,i=e.y,a=-1/0;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){var s=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(s<=o&&s>a&&(a=s,n=r.x<r.next.x?r:r.next,s===o))return n}r=r.next}while(r!==t);if(!n)return null;var u,f=n,x=n.x,l=n.y,h=1/0;r=n;do{o>=r.x&&r.x>=x&&o!==r.x&&A(i<l?o:a,i,x,l,i<l?a:o,i,r.x,r.y)&&(u=Math.abs(i-r.y)/(o-r.x),S(r,e)&&(u<h||u===h&&(r.x>n.x||r.x===n.x&&g(n,r)))&&(n=r,h=u)),r=r.next}while(r!==f);return n}(e,t);if(!n)return t;var r=U(n,e);return l(r,r.next),l(n,n.next)}function g(e,t){return Z(e.prev,e,t.prev)<0&&Z(t.next,e,e.next)<0}function m(e,t,n,r,o){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-n)*o|0)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-r)*o|0)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function w(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function A(e,t,n,r,o,i,a,s){return(o-a)*(t-s)>=(e-a)*(i-s)&&(e-a)*(r-s)>=(n-a)*(t-s)&&(n-a)*(i-s)>=(o-a)*(r-s)}function E(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&F(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(S(e,t)&&S(t,e)&&function(e,t){var n=e,r=!1,o=(e.x+t.x)/2,i=(e.y+t.y)/2;do{n.y>i!=n.next.y>i&&n.next.y!==n.y&&o<(n.next.x-n.x)*(i-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==e);return r}(e,t)&&(Z(e.prev,e,t.prev)||Z(e,t.prev,t))||M(e,t)&&Z(e.prev,e,e.next)>0&&Z(t.prev,t,t.next)>0)}function Z(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function M(e,t){return e.x===t.x&&e.y===t.y}function F(e,t,n,r){var o=I(Z(e,t,n)),i=I(Z(e,t,r)),a=I(Z(n,r,e)),s=I(Z(n,r,t));return o!==i&&a!==s||(!(0!==o||!T(e,n,t))||(!(0!==i||!T(e,r,t))||(!(0!==a||!T(n,e,r))||!(0!==s||!T(n,t,r)))))}function T(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function I(e){return e>0?1:e<0?-1:0}function S(e,t){return Z(e.prev,e,e.next)<0?Z(e,t,e.next)>=0&&Z(e,e.prev,t)>=0:Z(e,t,e.prev)<0||Z(e,e.next,t)<0}function U(e,t){var n=new R(e.i,e.x,e.y),r=new R(t.i,t.x,t.y),o=e.next,i=t.prev;return e.next=t,t.prev=e,n.next=o,o.prev=n,r.next=n,n.prev=r,i.next=r,r.prev=i,r}function k(e,t,n,r){var o=new R(e,t,n);return r?(o.next=r.next,o.prev=r,r.next.prev=o,r.next=o):(o.prev=o,o.next=o),o}function z(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function R(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function B(e,t,n,r){for(var o=0,i=t,a=n-r;i<n;i+=r)o+=(e[a]-e[i])*(e[i+1]+e[a+1]),a=i;return o}({get exports(){return u},set exports(e){u=e}}).exports=f,u.default=f,f.deviation=function(e,t,n,r){var o=t&&t.length,i=o?t[0]*n:e.length,a=Math.abs(B(e,0,i,n));if(o)for(var s=0,u=t.length;s<u;s++){var f=t[s]*n,x=s<u-1?t[s+1]*n:e.length;a-=Math.abs(B(e,f,x,n))}var l=0;for(s=0;s<r.length;s+=3){var h=r[s]*n,c=r[s+1]*n,v=r[s+2]*n;l+=Math.abs((e[h]-e[v])*(e[c+1]-e[h+1])-(e[h]-e[c])*(e[v+1]-e[h+1]))}return 0===a&&0===l?0:Math.abs((l-a)/a)},f.flatten=function(e){for(var t=e[0][0].length,n={vertices:[],holes:[],dimensions:t},r=0,o=0;o<e.length;o++){for(var i=0;i<e[o].length;i++)for(var a=0;a<t;a++)n.vertices.push(e[o][i][a]);o>0&&(r+=e[o-1].length,n.holes.push(r))}return n};const N=[],P={vertexPosition:0,indexPosition:0};function C(e,t,n,r,o){e[t+0]=n,e[t+1]=r,e[t+2]=o}function _(e,t,n,r,o,i){const a=3+o,s=e[t+0],u=e[t+1],f=N;f.length=o;for(let n=0;n<f.length;n++)f[n]=e[t+2+n];let x=i?i.vertexPosition:0,l=i?i.indexPosition:0;const h=x/a;return C(n,x,s,u,0),f.length&&n.set(f,x+3),x+=a,C(n,x,s,u,1),f.length&&n.set(f,x+3),x+=a,C(n,x,s,u,2),f.length&&n.set(f,x+3),x+=a,C(n,x,s,u,3),f.length&&n.set(f,x+3),x+=a,r[l++]=h,r[l++]=h+1,r[l++]=h+3,r[l++]=h+1,r[l++]=h+2,r[l++]=h+3,P.vertexPosition=x,P.indexPosition=l,P}function q(e,t,n,r,o,i,s,u,f,x){const l=5+u.length,h=i.length/l,c=[e[t+0],e[t+1]],v=[e[n],e[n+1]],d=a(x,[...c]),y=a(x,[...v]);function p(e,t,n){const r=1e4;return Math.round(1500*t)+Math.round(1500*n)*r+e*r*r}function b(e,t,n){const r=Math.sqrt((t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1])),o=[(t[0]-e[0])/r,(t[1]-e[1])/r],i=[-o[1],o[0]],a=Math.sqrt((n[0]-e[0])*(n[0]-e[0])+(n[1]-e[1])*(n[1]-e[1])),s=[(n[0]-e[0])/a,(n[1]-e[1])/a],u=0===r||0===a?0:Math.acos((f=s[0]*o[0]+s[1]*o[1],x=-1,l=1,Math.min(Math.max(f,x),l)));var f,x,l;return s[0]*i[0]+s[1]*i[1]>0?u:2*Math.PI-u}const g=null!==o;let m=0,w=0;if(null!==r){m=b(d,y,a(x,[...[e[r],e[r+1]]]))}if(g){w=b(y,d,a(x,[...[e[o],e[o+1]]]))}i.push(c[0],c[1],v[0],v[1],p(0,m,w)),i.push(...u),i.push(c[0],c[1],v[0],v[1],p(1,m,w)),i.push(...u),i.push(c[0],c[1],v[0],v[1],p(2,m,w)),i.push(...u),i.push(c[0],c[1],v[0],v[1],p(3,m,w)),i.push(...u),s.push(h,h+1,h+2,h+1,h+3,h+2)}function L(e,t,n,r,o){const i=2+o;let a=t;const s=e.slice(a,a+o);a+=o;const f=e[a++];let x=0;const l=new Array(f-1);for(let t=0;t<f;t++)x+=e[a++],t<f-1&&(l[t]=x);const h=e.slice(a,a+2*x),c=u(h,l,2);for(let e=0;e<c.length;e++)r.push(c[e]+n.length/i);for(let e=0;e<h.length;e+=2)n.push(h[e],h[e+1],...s);return a+2*x}const G=self;G.onmessage=r=>{const o=r.data;switch(o.type){case t:{const e=3,t=2,n=o.customAttributesCount,r=t+n,i=new Float32Array(o.renderInstructions),a=i.length/r,s=4*a*(n+e),u=new Uint32Array(6*a),f=new Float32Array(s);let x;for(let e=0;e<i.length;e+=r)x=_(i,e,f,u,n,x);const l=Object.assign({vertexBuffer:f.buffer,indexBuffer:u.buffer,renderInstructions:i.buffer},o);G.postMessage(l,[f.buffer,u.buffer,i.buffer]);break}case n:{const e=[],t=[],n=o.customAttributesCount,r=2,i=new Float32Array(o.renderInstructions);let a=0;const u=o.renderInstructionsTransform,f=[1,0,0,1,0,0];let x,l;for(s(f,u);a<i.length;){l=Array.from(i.slice(a,a+n)),a+=n,x=i[a++];for(let n=0;n<x-1;n++)q(i,a+n*r,a+(n+1)*r,n>0?a+(n-1)*r:null,n<x-2?a+(n+2)*r:null,e,t,l,0,f);a+=x*r}const h=Uint32Array.from(t),c=Float32Array.from(e),v=Object.assign({vertexBuffer:c.buffer,indexBuffer:h.buffer,renderInstructions:i.buffer},o);G.postMessage(v,[c.buffer,h.buffer,i.buffer]);break}case e:{const e=[],t=[],n=o.customAttributesCount,r=new Float32Array(o.renderInstructions);let i=0;for(;i<r.length;)i=L(r,i,e,t,n);const a=Uint32Array.from(t),s=Float32Array.from(e),u=Object.assign({vertexBuffer:s.buffer,indexBuffer:a.buffer,renderInstructions:r.buffer},o);G.postMessage(u,[s.buffer,a.buffer,r.buffer]);break}}};\";\n          return new Worker(typeof Blob === 'undefined'\n            ? 'data:application/javascript;base64,' + Buffer.from(source, 'binary').toString('base64')\n            : URL.createObjectURL(new Blob([source], {type: 'application/javascript'})));\n        }\n      \n","/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport {ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER} from '../../webgl.js';\nimport {AttributeType, DefaultUniform} from '../../webgl/Helper.js';\nimport {WebGLWorkerMessageType} from '../../render/webgl/constants.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {assert} from '../../asserts.js';\nimport {buffer, createEmpty, equals, getWidth} from '../../extent.js';\nimport {colorDecodeId, colorEncodeId} from '../../render/webgl/utils.js';\nimport {create as createWebGLWorker} from '../../worker/webgl.js';\nimport {getUid} from '../../util.js';\nimport {listen, unlistenByKey} from '../../events.js';\n\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default, Object<string, *>):number} callback This callback computes the numerical value of the\n * attribute for a given feature (properties are available as 2nd arg for quicker access).\n */\n\n/**\n * @typedef {Object} FeatureCacheItem Object that holds a reference to a feature, its geometry and properties. Used to optimize\n * rebuildBuffers by accessing these objects quicker.\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Object<string, *>} properties Feature properties\n * @property {import(\"../../geom\").Geometry} geometry Feature geometry\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Array<CustomAttribute>} [attributes] These attributes will be read from the features in the source and then\n * passed to the GPU. The `name` property of each attribute will serve as its identifier:\n *  * In the vertex shader as an `attribute` by prefixing it with `a_`\n *  * In the fragment shader as a `varying` by prefixing it with `v_`\n * Please note that these can only be numerical values.\n * @property {string} vertexShader Vertex shader source, mandatory.\n * @property {string} fragmentShader Fragment shader source, mandatory.\n * @property {string} [hitVertexShader] Vertex shader source for hit detection rendering.\n * @property {string} [hitFragmentShader] Fragment shader source for hit detection rendering.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot and `u_opacity` is reserved for the layer opacity.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * You need to provide vertex and fragment shaders for rendering. This can be done using\n * {@link module:ol/webgl/ShaderBuilder~ShaderBuilder} utilities. These shaders shall expect a `a_position` attribute\n * containing the screen-space projected center of the quad, as well as a `a_index` attribute\n * whose value (0, 1, 2 or 3) indicates which quad vertex is currently getting processed (see structure below).\n *\n * To include variable attributes in the shaders, you need to declare them using the `attributes` property of\n * the options object like so:\n * ```js\n * new WebGLPointsLayerRenderer(layer, {\n *   attributes: [\n *     {\n *       name: 'size',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *     {\n *       name: 'weight',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *   ],\n *   vertexShader:\n *     // shader using attribute a_weight and a_size\n *   fragmentShader:\n *     // shader using varying v_weight and v_size\n * ```\n *\n * To enable hit detection, you must as well provide dedicated shaders using the `hitVertexShader`\n * and `hitFragmentShader` properties. These shall expect the `a_hitColor` attribute to contain\n * the final color that will have to be output for hit detection to work.\n *\n * The following uniform is used for the main texture: `u_texture`.\n * The following uniform is used for the layer opacity: `u_opacity`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * @api\n */\nclass WebGLPointsLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n   * @param {Options} options Options.\n   */\n  constructor(layer, options) {\n    const uniforms = options.uniforms || {};\n    const projectionMatrixTransform = createTransform();\n    uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n\n    super(layer, {\n      uniforms: uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    this.ready = false;\n\n    this.sourceRevision_ = -1;\n\n    this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.hitVerticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.indicesBuffer_ = new WebGLArrayBuffer(\n      ELEMENT_ARRAY_BUFFER,\n      DYNAMIC_DRAW\n    );\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hitDetectionEnabled_ =\n      options.hitFragmentShader && options.hitVertexShader ? true : false;\n\n    /**\n     * @private\n     */\n    this.hitVertexShader_ = options.hitVertexShader;\n\n    /**\n     * @private\n     */\n    this.hitFragmentShader_ = options.hitFragmentShader;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.hitProgram_;\n\n    const customAttributes = options.attributes\n      ? options.attributes.map(function (attribute) {\n          return {\n            name: 'a_' + attribute.name,\n            size: 1,\n            type: AttributeType.FLOAT,\n          };\n        })\n      : [];\n\n    /**\n     * A list of attributes used by the renderer. By default only the position and\n     * index of the vertex (0 to 3) are required.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.attributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(customAttributes);\n\n    /**\n     * A list of attributes used for hit detection.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.hitDetectionAttributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_hitColor',\n        size: 4,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_featureUid',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(customAttributes);\n\n    this.customAttributes = options.attributes ? options.attributes : [];\n\n    this.previousExtent_ = createEmpty();\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentTransform_ = projectionMatrixTransform;\n\n    /**\n     * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.renderTransform_ = createTransform();\n\n    /**\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.invertRenderTransform_ = createTransform();\n\n    /**\n     * @type {Float32Array}\n     * @private\n     */\n    this.renderInstructions_ = new Float32Array(0);\n\n    /**\n     * These instructions are used for hit detection\n     * @type {Float32Array}\n     * @private\n     */\n    this.hitRenderInstructions_ = new Float32Array(0);\n\n    /**\n     * @type {WebGLRenderTarget}\n     * @private\n     */\n    this.hitRenderTarget_;\n\n    /**\n     * Keep track of latest message sent to worker\n     * @type {number}\n     * @private\n     */\n    this.generateBuffersRun_ = 0;\n\n    /**\n     * @private\n     */\n    this.worker_ = createWebGLWorker();\n\n    this.worker_.addEventListener(\n      'message',\n      /**\n       * @param {*} event Event.\n       */\n      (event) => {\n        const received = event.data;\n        if (received.type === WebGLWorkerMessageType.GENERATE_POINT_BUFFERS) {\n          const projectionTransform = received.projectionTransform;\n          if (received.hitDetection) {\n            this.hitVerticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n            this.helper.flushBufferData(this.hitVerticesBuffer_);\n          } else {\n            this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n            this.helper.flushBufferData(this.verticesBuffer_);\n          }\n          this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n          this.helper.flushBufferData(this.indicesBuffer_);\n\n          this.renderTransform_ = projectionTransform;\n          makeInverseTransform(\n            this.invertRenderTransform_,\n            this.renderTransform_\n          );\n          if (received.hitDetection) {\n            this.hitRenderInstructions_ = new Float32Array(\n              event.data.renderInstructions\n            );\n          } else {\n            this.renderInstructions_ = new Float32Array(\n              event.data.renderInstructions\n            );\n            if (received.generateBuffersRun === this.generateBuffersRun_) {\n              this.ready = true;\n            }\n          }\n\n          this.getLayer().changed();\n        }\n      }\n    );\n\n    /**\n     * This object will be updated when the source changes. Key is uid.\n     * @type {Object<string, FeatureCacheItem>}\n     * @private\n     */\n    this.featureCache_ = {};\n\n    /**\n     * Amount of features in the cache.\n     * @type {number}\n     * @private\n     */\n    this.featureCount_ = 0;\n\n    const source = this.getLayer().getSource();\n    this.sourceListenKeys_ = [\n      listen(\n        source,\n        VectorEventType.ADDFEATURE,\n        this.handleSourceFeatureAdded_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CHANGEFEATURE,\n        this.handleSourceFeatureChanged_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceFeatureDelete_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CLEAR,\n        this.handleSourceFeatureClear_,\n        this\n      ),\n    ];\n    source.forEachFeature((feature) => {\n      this.featureCache_[getUid(feature)] = {\n        feature: feature,\n        properties: feature.getProperties(),\n        geometry: feature.getGeometry(),\n      };\n      this.featureCount_++;\n    });\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_\n    );\n\n    if (this.hitDetectionEnabled_) {\n      this.hitProgram_ = this.helper.getProgram(\n        this.hitFragmentShader_,\n        this.hitVertexShader_\n      );\n\n      this.hitRenderTarget_ = new WebGLRenderTarget(this.helper);\n    }\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureAdded_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n    this.featureCount_++;\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureChanged_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureDelete_(event) {\n    const feature = event.feature;\n    delete this.featureCache_[getUid(feature)];\n    this.featureCount_--;\n  }\n\n  /**\n   * @private\n   */\n  handleSourceFeatureClear_() {\n    this.featureCache_ = {};\n    this.featureCount_ = 0;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const projection = frameState.viewState.projection;\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    // FIXME fix hit detection isn't reliable when rendering multiple worlds\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const projectionExtent = projection.getExtent();\n\n    const extent = frameState.extent;\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n\n    const startWorld = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n\n    let world = startWorld;\n    const renderCount = this.indicesBuffer_.getSize();\n\n    do {\n      // apply the current projection transform with the invert of the one used to fill buffers\n      this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n      translateTransform(this.currentTransform_, world * worldWidth, 0);\n      multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n      this.helper.applyUniforms(frameState);\n\n      this.helper.drawElements(0, renderCount);\n    } while (++world < endWorld);\n\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent\n    );\n    const canvas = this.helper.getCanvas();\n\n    if (this.hitDetectionEnabled_) {\n      this.renderHitDetection(frameState, startWorld, endWorld, worldWidth);\n      this.hitRenderTarget_.clearCachedData();\n    }\n\n    this.postRender(gl, frameState);\n\n    return canvas;\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const viewState = frameState.viewState;\n    const viewNotMoving =\n      !frameState.viewHints[ViewHint.ANIMATING] &&\n      !frameState.viewHints[ViewHint.INTERACTING];\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n\n    if (sourceChanged) {\n      this.sourceRevision_ = vectorSource.getRevision();\n    }\n\n    if (viewNotMoving && (extentChanged || sourceChanged)) {\n      const projection = viewState.projection;\n      const resolution = viewState.resolution;\n\n      const renderBuffer =\n        layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n      const extent = buffer(frameState.extent, renderBuffer * resolution);\n      vectorSource.loadFeatures(extent, resolution, projection);\n\n      this.rebuildBuffers_(frameState);\n      this.previousExtent_ = frameState.extent.slice();\n    }\n\n    this.helper.useProgram(this.program_, frameState);\n    this.helper.prepareDraw(frameState);\n\n    // write new data\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.attributes);\n\n    return true;\n  }\n\n  /**\n   * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  rebuildBuffers_(frameState) {\n    // saves the projection transform for the current frame state\n    const projectionTransform = createTransform();\n    this.helper.makeProjectionTransform(frameState, projectionTransform);\n\n    // here we anticipate the amount of render instructions that we well generate\n    // this can be done since we know that for normal render we only have x, y as base instructions,\n    // and x, y, r, g, b, a and featureUid for hit render instructions\n    // and we also know the amount of custom attributes to append to these\n    const totalInstructionsCount =\n      (2 + this.customAttributes.length) * this.featureCount_;\n    if (\n      !this.renderInstructions_ ||\n      this.renderInstructions_.length !== totalInstructionsCount\n    ) {\n      this.renderInstructions_ = new Float32Array(totalInstructionsCount);\n    }\n    if (this.hitDetectionEnabled_) {\n      const totalHitInstructionsCount =\n        (7 + this.customAttributes.length) * this.featureCount_;\n      if (\n        !this.hitRenderInstructions_ ||\n        this.hitRenderInstructions_.length !== totalHitInstructionsCount\n      ) {\n        this.hitRenderInstructions_ = new Float32Array(\n          totalHitInstructionsCount\n        );\n      }\n    }\n\n    // loop on features to fill the buffer\n    let featureCache, geometry;\n    const tmpCoords = [];\n    const tmpColor = [];\n    let renderIndex = 0;\n    let hitIndex = 0;\n    let hitColor;\n    for (const featureUid in this.featureCache_) {\n      featureCache = this.featureCache_[featureUid];\n      geometry = /** @type {import(\"../../geom\").Point} */ (\n        featureCache.geometry\n      );\n      if (!geometry || geometry.getType() !== 'Point') {\n        continue;\n      }\n\n      tmpCoords[0] = geometry.getFlatCoordinates()[0];\n      tmpCoords[1] = geometry.getFlatCoordinates()[1];\n      applyTransform(projectionTransform, tmpCoords);\n\n      hitColor = colorEncodeId(hitIndex + 6, tmpColor);\n\n      this.renderInstructions_[renderIndex++] = tmpCoords[0];\n      this.renderInstructions_[renderIndex++] = tmpCoords[1];\n\n      // for hit detection, the feature uid is saved in the opacity value\n      // and the index of the opacity value is encoded in the color values\n      if (this.hitDetectionEnabled_) {\n        this.hitRenderInstructions_[hitIndex++] = tmpCoords[0];\n        this.hitRenderInstructions_[hitIndex++] = tmpCoords[1];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[0];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[1];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[2];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[3];\n        this.hitRenderInstructions_[hitIndex++] = Number(featureUid);\n      }\n\n      // pushing custom attributes\n      let value;\n      for (let j = 0; j < this.customAttributes.length; j++) {\n        value = this.customAttributes[j].callback(\n          featureCache.feature,\n          featureCache.properties\n        );\n        this.renderInstructions_[renderIndex++] = value;\n        if (this.hitDetectionEnabled_) {\n          this.hitRenderInstructions_[hitIndex++] = value;\n        }\n      }\n    }\n\n    /** @type {import('../../render/webgl/constants.js').WebGLWorkerGenerateBuffersMessage} */\n    const message = {\n      id: 0,\n      type: WebGLWorkerMessageType.GENERATE_POINT_BUFFERS,\n      renderInstructions: this.renderInstructions_.buffer,\n      customAttributesCount: this.customAttributes.length,\n    };\n    // additional properties will be sent back as-is by the worker\n    message['projectionTransform'] = projectionTransform;\n    message['generateBuffersRun'] = ++this.generateBuffersRun_;\n    this.ready = false;\n    this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n    this.renderInstructions_ = null;\n\n    /** @type {import('../../render/webgl/constants.js').WebGLWorkerGenerateBuffersMessage} */\n    if (this.hitDetectionEnabled_) {\n      const hitMessage = {\n        id: 0,\n        type: WebGLWorkerMessageType.GENERATE_POINT_BUFFERS,\n        renderInstructions: this.hitRenderInstructions_.buffer,\n        customAttributesCount: 5 + this.customAttributes.length,\n      };\n      hitMessage['projectionTransform'] = projectionTransform;\n      hitMessage['hitDetection'] = true;\n      this.worker_.postMessage(hitMessage, [\n        this.hitRenderInstructions_.buffer,\n      ]);\n      this.hitRenderInstructions_ = null;\n    }\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    assert(this.hitDetectionEnabled_, 66);\n    if (!this.hitRenderInstructions_) {\n      return undefined;\n    }\n\n    const pixel = applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice()\n    );\n\n    const data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n    const color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n    const index = colorDecodeId(color);\n    const opacity = this.hitRenderInstructions_[index];\n    const uid = Math.floor(opacity).toString();\n\n    const source = this.getLayer().getSource();\n    const feature = source.getFeatureByUid(uid);\n    if (feature) {\n      return callback(feature, this.getLayer(), null);\n    }\n    return undefined;\n  }\n\n  /**\n   * Render the hit detection data to the corresponding render target\n   * @param {import(\"../../Map.js\").FrameState} frameState current frame state\n   * @param {number} startWorld the world to render in the first iteration\n   * @param {number} endWorld the last world to render\n   * @param {number} worldWidth the width of the worlds being rendered\n   */\n  renderHitDetection(frameState, startWorld, endWorld, worldWidth) {\n    // skip render entirely if vertex buffers not ready/generated yet\n    if (!this.hitVerticesBuffer_.getSize()) {\n      return;\n    }\n\n    let world = startWorld;\n\n    this.hitRenderTarget_.setSize([\n      Math.floor(frameState.size[0] / 2),\n      Math.floor(frameState.size[1] / 2),\n    ]);\n\n    this.helper.useProgram(this.hitProgram_, frameState);\n    this.helper.prepareDrawToRenderTarget(\n      frameState,\n      this.hitRenderTarget_,\n      true\n    );\n\n    this.helper.bindBuffer(this.hitVerticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.hitDetectionAttributes);\n\n    do {\n      this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n      translateTransform(this.currentTransform_, world * worldWidth, 0);\n      multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n      this.helper.applyUniforms(frameState);\n\n      const renderCount = this.indicesBuffer_.getSize();\n      this.helper.drawElements(0, renderCount);\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.worker_.terminate();\n    this.layer_ = null;\n    this.sourceListenKeys_.forEach(function (key) {\n      unlistenByKey(key);\n    });\n    this.sourceListenKeys_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default WebGLPointsLayerRenderer;\n","/**\n * @module ol/render/webgl/BatchRenderer\n */\nimport {WebGLWorkerMessageType} from './constants.js';\nimport {abstract} from '../../util.js';\nimport {\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n  translate as translateTransform,\n} from '../../transform.js';\n\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default):number} callback This callback computes the numerical value of the\n * attribute for a given feature.\n */\n\nlet workerMessageCounter = 0;\n\n/**\n * @classdesc Abstract class for batch renderers.\n * Batch renderers are meant to render the geometries contained in a {@link module:ol/render/webgl/GeometryBatch}\n * instance. They are responsible for generating render instructions and transforming them into WebGL buffers.\n */\nclass AbstractBatchRenderer {\n  /**\n   * @param {import(\"../../webgl/Helper.js\").default} helper WebGL helper instance\n   * @param {Worker} worker WebGL worker instance\n   * @param {string} vertexShader Vertex shader\n   * @param {string} fragmentShader Fragment shader\n   * @param {Array<CustomAttribute>} customAttributes List of custom attributes\n   */\n  constructor(helper, worker, vertexShader, fragmentShader, customAttributes) {\n    /**\n     * @type {import(\"../../webgl/Helper.js\").default}\n     * @private\n     */\n    this.helper_ = helper;\n\n    /**\n     * @type {Worker}\n     * @private\n     */\n    this.worker_ = worker;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_ = this.helper_.getProgram(fragmentShader, vertexShader);\n\n    /**\n     * A list of attributes used by the renderer.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     * @protected\n     */\n    this.attributes = [];\n\n    /**\n     * @type {Array<CustomAttribute>}\n     * @protected\n     */\n    this.customAttributes = customAttributes;\n  }\n\n  /**\n   * Rebuild rendering instructions and webgl buffers based on the provided frame state\n   * Note: this is a costly operation.\n   * @param {import(\"./MixedGeometryBatch.js\").GeometryBatch} batch Geometry batch\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @param {import(\"../../geom/Geometry.js\").Type} geometryType Geometry type\n   * @param {function(): void} callback Function called once the render buffers are updated\n   */\n  rebuild(batch, frameState, geometryType, callback) {\n    // store transform for rendering instructions\n    batch.renderInstructionsTransform = this.helper_.makeProjectionTransform(\n      frameState,\n      createTransform()\n    );\n    this.generateRenderInstructions(batch);\n    this.generateBuffers_(batch, geometryType, callback);\n  }\n\n  /**\n   * Render the geometries in the batch. This will also update the current transform used for rendering according to\n   * the invert transform of the webgl buffers\n   * @param {import(\"./MixedGeometryBatch.js\").GeometryBatch} batch Geometry batch\n   * @param {import(\"../../transform.js\").Transform} currentTransform Transform\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} offsetX X offset\n   */\n  render(batch, currentTransform, frameState, offsetX) {\n    // multiply the current projection transform with the invert of the one used to fill buffers\n    this.helper_.makeProjectionTransform(frameState, currentTransform);\n    translateTransform(currentTransform, offsetX, 0);\n    multiplyTransform(currentTransform, batch.invertVerticesBufferTransform);\n\n    // enable program, buffers and attributes\n    this.helper_.useProgram(this.program_, frameState);\n    this.helper_.bindBuffer(batch.verticesBuffer);\n    this.helper_.bindBuffer(batch.indicesBuffer);\n    this.helper_.enableAttributes(this.attributes);\n\n    const renderCount = batch.indicesBuffer.getSize();\n    this.helper_.drawElements(0, renderCount);\n  }\n\n  /**\n   * Rebuild rendering instructions based on the provided frame state\n   * This is specific to the geometry type and has to be implemented by subclasses.\n   * @param {import(\"./MixedGeometryBatch.js\").GeometryBatch} batch Geometry batch\n   * @protected\n   */\n  generateRenderInstructions(batch) {\n    abstract();\n  }\n\n  /**\n   * Rebuild internal webgl buffers for rendering based on the current rendering instructions;\n   * This is asynchronous: webgl buffers wil _not_ be updated right away\n   * @param {import(\"./MixedGeometryBatch.js\").GeometryBatch} batch Geometry batch\n   * @param {import(\"../../geom/Geometry.js\").Type} geometryType Geometry type\n   * @param {function(): void} callback Function called once the render buffers are updated\n   * @private\n   */\n  generateBuffers_(batch, geometryType, callback) {\n    const messageId = workerMessageCounter++;\n\n    let messageType;\n    switch (geometryType) {\n      case 'Polygon':\n        messageType = WebGLWorkerMessageType.GENERATE_POLYGON_BUFFERS;\n        break;\n      case 'Point':\n        messageType = WebGLWorkerMessageType.GENERATE_POINT_BUFFERS;\n        break;\n      case 'LineString':\n        messageType = WebGLWorkerMessageType.GENERATE_LINE_STRING_BUFFERS;\n        break;\n      default:\n      // pass\n    }\n\n    /** @type {import('./constants.js').WebGLWorkerGenerateBuffersMessage} */\n    const message = {\n      id: messageId,\n      type: messageType,\n      renderInstructions: batch.renderInstructions.buffer,\n      renderInstructionsTransform: batch.renderInstructionsTransform,\n      customAttributesCount: this.customAttributes.length,\n    };\n    this.worker_.postMessage(message, [batch.renderInstructions.buffer]);\n\n    // leave ownership of render instructions\n    batch.renderInstructions = null;\n\n    const handleMessage =\n      /**\n       * @param {*} event Event.\n       */\n      (event) => {\n        const received = event.data;\n\n        // this is not the response to our request: skip\n        if (received.id !== messageId) {\n          return;\n        }\n\n        // we've received our response: stop listening\n        this.worker_.removeEventListener('message', handleMessage);\n\n        // store transform & invert transform for webgl buffers\n        batch.verticesBufferTransform = received.renderInstructionsTransform;\n        makeInverseTransform(\n          batch.invertVerticesBufferTransform,\n          batch.verticesBufferTransform\n        );\n\n        // copy & flush received buffers to GPU\n        batch.verticesBuffer.fromArrayBuffer(received.vertexBuffer);\n        this.helper_.flushBufferData(batch.verticesBuffer);\n        batch.indicesBuffer.fromArrayBuffer(received.indexBuffer);\n        this.helper_.flushBufferData(batch.indicesBuffer);\n\n        // take back ownership of the render instructions for further use\n        batch.renderInstructions = new Float32Array(\n          received.renderInstructions\n        );\n\n        callback();\n      };\n\n    this.worker_.addEventListener('message', handleMessage);\n  }\n}\n\nexport default AbstractBatchRenderer;\n","/**\n * @module ol/render/webgl/LineStringBatchRenderer\n */\nimport AbstractBatchRenderer from './BatchRenderer.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * Names of attributes made available to the vertex shader.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const Attributes = {\n  SEGMENT_START: 'a_segmentStart',\n  SEGMENT_END: 'a_segmentEnd',\n  PARAMETERS: 'a_parameters',\n};\n\nclass LineStringBatchRenderer extends AbstractBatchRenderer {\n  /**\n   * @param {import(\"../../webgl/Helper.js\").default} helper WebGL helper instance\n   * @param {Worker} worker WebGL worker instance\n   * @param {string} vertexShader Vertex shader\n   * @param {string} fragmentShader Fragment shader\n   * @param {Array<import('./BatchRenderer.js').CustomAttribute>} customAttributes List of custom attributes\n   */\n  constructor(helper, worker, vertexShader, fragmentShader, customAttributes) {\n    super(helper, worker, vertexShader, fragmentShader, customAttributes);\n\n    // vertices for lines must hold both a position (x,y) and an offset (dx,dy)\n    this.attributes = [\n      {\n        name: Attributes.SEGMENT_START,\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: Attributes.SEGMENT_END,\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: Attributes.PARAMETERS,\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(\n      customAttributes.map(function (attribute) {\n        return {\n          name: 'a_' + attribute.name,\n          size: 1,\n          type: AttributeType.FLOAT,\n        };\n      })\n    );\n  }\n\n  /**\n   * Render instructions for lines are structured like so:\n   * [ customAttr0, ... , customAttrN, numberOfVertices0, x0, y0, ... , xN, yN, numberOfVertices1, ... ]\n   * @param {import(\"./MixedGeometryBatch.js\").LineStringGeometryBatch} batch Linestring geometry batch\n   * @override\n   */\n  generateRenderInstructions(batch) {\n    // here we anticipate the amount of render instructions for lines:\n    // 2 instructions per vertex for position (x and y)\n    // + 1 instruction per line per custom attributes\n    // + 1 instruction per line (for vertices count)\n    const totalInstructionsCount =\n      2 * batch.verticesCount +\n      (1 + this.customAttributes.length) * batch.geometriesCount;\n    if (\n      !batch.renderInstructions ||\n      batch.renderInstructions.length !== totalInstructionsCount\n    ) {\n      batch.renderInstructions = new Float32Array(totalInstructionsCount);\n    }\n\n    // loop on features to fill the render instructions\n    const flatCoords = [];\n    let renderIndex = 0;\n    for (const featureUid in batch.entries) {\n      const batchEntry = batch.entries[featureUid];\n      for (let i = 0, ii = batchEntry.flatCoordss.length; i < ii; i++) {\n        flatCoords.length = batchEntry.flatCoordss[i].length;\n        transform2D(\n          batchEntry.flatCoordss[i],\n          0,\n          flatCoords.length,\n          2,\n          batch.renderInstructionsTransform,\n          flatCoords\n        );\n\n        // custom attributes\n        for (let k = 0, kk = this.customAttributes.length; k < kk; k++) {\n          const value = this.customAttributes[k].callback(batchEntry.feature);\n          batch.renderInstructions[renderIndex++] = value;\n        }\n\n        // vertices count\n        batch.renderInstructions[renderIndex++] = flatCoords.length / 2;\n\n        // looping on points for positions\n        for (let j = 0, jj = flatCoords.length; j < jj; j += 2) {\n          batch.renderInstructions[renderIndex++] = flatCoords[j];\n          batch.renderInstructions[renderIndex++] = flatCoords[j + 1];\n        }\n      }\n    }\n  }\n}\n\nexport default LineStringBatchRenderer;\n","/**\n * @module ol/render/webgl/MixedGeometryBatch\n */\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport {ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER} from '../../webgl.js';\nimport {create as createTransform} from '../../transform.js';\nimport {getUid} from '../../util.js';\n\n/**\n * @typedef {Object} GeometryBatchItem Object that holds a reference to a feature as well as the raw coordinates of its various geometries\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Array<Array<number>>} flatCoordss Array of flat coordinates arrays, one for each geometry related to the feature\n * @property {number} [verticesCount] Only defined for linestring and polygon batches\n * @property {number} [ringsCount] Only defined for polygon batches\n * @property {Array<Array<number>>} [ringsVerticesCounts] Array of vertices counts in each ring for each geometry; only defined for polygons batches\n */\n\n/**\n * @typedef {PointGeometryBatch|LineStringGeometryBatch|PolygonGeometryBatch} GeometryBatch\n */\n\n/**\n * @typedef {Object} PolygonGeometryBatch A geometry batch specific to polygons\n * @property {Object<string, GeometryBatchItem>} entries Dictionary of all entries in the batch with associated computed values.\n * One entry corresponds to one feature. Key is feature uid.\n * @property {number} geometriesCount Amount of geometries in the batch.\n * @property {Float32Array} renderInstructions Render instructions for polygons are structured like so:\n * [ numberOfRings, numberOfVerticesInRing0, ..., numberOfVerticesInRingN, x0, y0, customAttr0, ..., xN, yN, customAttrN, numberOfRings,... ]\n * @property {WebGLArrayBuffer} verticesBuffer Vertices WebGL buffer\n * @property {WebGLArrayBuffer} indicesBuffer Indices WebGL buffer\n * @property {import(\"../../transform.js\").Transform} renderInstructionsTransform Converts world space coordinates to screen space; applies to the rendering instructions\n * @property {import(\"../../transform.js\").Transform} verticesBufferTransform Converts world space coordinates to screen space; applies to the webgl vertices buffer\n * @property {import(\"../../transform.js\").Transform} invertVerticesBufferTransform Screen space to world space; applies to the webgl vertices buffer\n * @property {number} verticesCount Amount of vertices from geometries in the batch.\n * @property {number} ringsCount How many outer and inner rings in this batch.\n */\n\n/**\n * @typedef {Object} LineStringGeometryBatch A geometry batch specific to lines\n * @property {Object<string, GeometryBatchItem>} entries Dictionary of all entries in the batch with associated computed values.\n * One entry corresponds to one feature. Key is feature uid.\n * @property {number} geometriesCount Amount of geometries in the batch.\n * @property {Float32Array} renderInstructions Render instructions for polygons are structured like so:\n * [ numberOfRings, numberOfVerticesInRing0, ..., numberOfVerticesInRingN, x0, y0, customAttr0, ..., xN, yN, customAttrN, numberOfRings,... ]\n * @property {WebGLArrayBuffer} verticesBuffer Vertices WebGL buffer\n * @property {WebGLArrayBuffer} indicesBuffer Indices WebGL buffer\n * @property {import(\"../../transform.js\").Transform} renderInstructionsTransform Converts world space coordinates to screen space; applies to the rendering instructions\n * @property {import(\"../../transform.js\").Transform} verticesBufferTransform Converts world space coordinates to screen space; applies to the webgl vertices buffer\n * @property {import(\"../../transform.js\").Transform} invertVerticesBufferTransform Screen space to world space; applies to the webgl vertices buffer\n * @property {number} verticesCount Amount of vertices from geometries in the batch.\n */\n\n/**\n * @typedef {Object} PointGeometryBatch A geometry batch specific to points\n * @property {Object<string, GeometryBatchItem>} entries Dictionary of all entries in the batch with associated computed values.\n * One entry corresponds to one feature. Key is feature uid.\n * @property {number} geometriesCount Amount of geometries in the batch.\n * @property {Float32Array} renderInstructions Render instructions for polygons are structured like so:\n * [ numberOfRings, numberOfVerticesInRing0, ..., numberOfVerticesInRingN, x0, y0, customAttr0, ..., xN, yN, customAttrN, numberOfRings,... ]\n * @property {WebGLArrayBuffer} verticesBuffer Vertices WebGL buffer\n * @property {WebGLArrayBuffer} indicesBuffer Indices WebGL buffer\n * @property {import(\"../../transform.js\").Transform} renderInstructionsTransform Converts world space coordinates to screen space; applies to the rendering instructions\n * @property {import(\"../../transform.js\").Transform} verticesBufferTransform Converts world space coordinates to screen space; applies to the webgl vertices buffer\n * @property {import(\"../../transform.js\").Transform} invertVerticesBufferTransform Screen space to world space; applies to the webgl vertices buffer\n */\n\n/**\n * @classdesc This class is used to group several geometries of various types together for faster rendering.\n * Three inner batches are maintained for polygons, lines and points. Each time a feature is added, changed or removed\n * from the batch, these inner batches are modified accordingly in order to keep them up-to-date.\n *\n * A feature can be present in several inner batches, for example a polygon geometry will be present in the polygon batch\n * and its linar rings will be present in the line batch. Multi geometries are also broken down into individual geometries\n * and added to the corresponding batches in a recursive manner.\n *\n * Corresponding {@link module:ol/render/webgl/BatchRenderer} instances are then used to generate the render instructions\n * and WebGL buffers (vertices and indices) for each inner batches; render instructions are stored on the inner batches,\n * alongside the transform used to convert world coords to screen coords at the time these instructions were generated.\n * The resulting WebGL buffers are stored on the batches as well.\n *\n * An important aspect of geometry batches is that there is no guarantee that render instructions and WebGL buffers\n * are synchronized, i.e. render instructions can describe a new state while WebGL buffers might not have been written yet.\n * This is why two world-to-screen transforms are stored on each batch: one for the render instructions and one for\n * the WebGL buffers.\n */\nclass MixedGeometryBatch {\n  constructor() {\n    /**\n     * @type {PolygonGeometryBatch}\n     */\n    this.polygonBatch = {\n      entries: {},\n      geometriesCount: 0,\n      verticesCount: 0,\n      ringsCount: 0,\n      renderInstructions: new Float32Array(0),\n      verticesBuffer: new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW),\n      indicesBuffer: new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, DYNAMIC_DRAW),\n      renderInstructionsTransform: createTransform(),\n      verticesBufferTransform: createTransform(),\n      invertVerticesBufferTransform: createTransform(),\n    };\n\n    /**\n     * @type {PointGeometryBatch}\n     */\n    this.pointBatch = {\n      entries: {},\n      geometriesCount: 0,\n      renderInstructions: new Float32Array(0),\n      verticesBuffer: new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW),\n      indicesBuffer: new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, DYNAMIC_DRAW),\n      renderInstructionsTransform: createTransform(),\n      verticesBufferTransform: createTransform(),\n      invertVerticesBufferTransform: createTransform(),\n    };\n\n    /**\n     * @type {LineStringGeometryBatch}\n     */\n    this.lineStringBatch = {\n      entries: {},\n      geometriesCount: 0,\n      verticesCount: 0,\n      renderInstructions: new Float32Array(0),\n      verticesBuffer: new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW),\n      indicesBuffer: new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, DYNAMIC_DRAW),\n      renderInstructionsTransform: createTransform(),\n      verticesBufferTransform: createTransform(),\n      invertVerticesBufferTransform: createTransform(),\n    };\n  }\n\n  /**\n   * @param {Array<import(\"../../Feature\").default>} features Array of features to add to the batch\n   */\n  addFeatures(features) {\n    for (let i = 0; i < features.length; i++) {\n      this.addFeature(features[i]);\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature\").default} feature Feature to add to the batch\n   */\n  addFeature(feature) {\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      return;\n    }\n    this.addGeometry_(geometry, feature);\n  }\n\n  /**\n   * @param {import(\"../../Feature\").default} feature Feature\n   * @return {GeometryBatchItem} Batch item added (or existing one)\n   * @private\n   */\n  addFeatureEntryInPointBatch_(feature) {\n    const uid = getUid(feature);\n    if (!(uid in this.pointBatch.entries)) {\n      this.pointBatch.entries[uid] = {\n        feature: feature,\n        flatCoordss: [],\n      };\n    }\n    return this.pointBatch.entries[uid];\n  }\n\n  /**\n   * @param {import(\"../../Feature\").default} feature Feature\n   * @return {GeometryBatchItem} Batch item added (or existing one)\n   * @private\n   */\n  addFeatureEntryInLineStringBatch_(feature) {\n    const uid = getUid(feature);\n    if (!(uid in this.lineStringBatch.entries)) {\n      this.lineStringBatch.entries[uid] = {\n        feature: feature,\n        flatCoordss: [],\n        verticesCount: 0,\n      };\n    }\n    return this.lineStringBatch.entries[uid];\n  }\n\n  /**\n   * @param {import(\"../../Feature\").default} feature Feature\n   * @return {GeometryBatchItem} Batch item added (or existing one)\n   * @private\n   */\n  addFeatureEntryInPolygonBatch_(feature) {\n    const uid = getUid(feature);\n    if (!(uid in this.polygonBatch.entries)) {\n      this.polygonBatch.entries[uid] = {\n        feature: feature,\n        flatCoordss: [],\n        verticesCount: 0,\n        ringsCount: 0,\n        ringsVerticesCounts: [],\n      };\n    }\n    return this.polygonBatch.entries[uid];\n  }\n\n  /**\n   * @param {import(\"../../Feature\").default} feature Feature\n   * @private\n   */\n  clearFeatureEntryInPointBatch_(feature) {\n    const entry = this.pointBatch.entries[getUid(feature)];\n    if (!entry) {\n      return;\n    }\n    this.pointBatch.geometriesCount -= entry.flatCoordss.length;\n    delete this.pointBatch.entries[getUid(feature)];\n  }\n\n  /**\n   * @param {import(\"../../Feature\").default} feature Feature\n   * @private\n   */\n  clearFeatureEntryInLineStringBatch_(feature) {\n    const entry = this.lineStringBatch.entries[getUid(feature)];\n    if (!entry) {\n      return;\n    }\n    this.lineStringBatch.verticesCount -= entry.verticesCount;\n    this.lineStringBatch.geometriesCount -= entry.flatCoordss.length;\n    delete this.lineStringBatch.entries[getUid(feature)];\n  }\n\n  /**\n   * @param {import(\"../../Feature\").default} feature Feature\n   * @private\n   */\n  clearFeatureEntryInPolygonBatch_(feature) {\n    const entry = this.polygonBatch.entries[getUid(feature)];\n    if (!entry) {\n      return;\n    }\n    this.polygonBatch.verticesCount -= entry.verticesCount;\n    this.polygonBatch.ringsCount -= entry.ringsCount;\n    this.polygonBatch.geometriesCount -= entry.flatCoordss.length;\n    delete this.polygonBatch.entries[getUid(feature)];\n  }\n\n  /**\n   * @param {import(\"../../geom\").Geometry} geometry Geometry\n   * @param {import(\"../../Feature\").default} feature Feature\n   * @private\n   */\n  addGeometry_(geometry, feature) {\n    const type = geometry.getType();\n    let flatCoords;\n    let verticesCount;\n    let batchEntry;\n    switch (type) {\n      case 'GeometryCollection':\n        /** @type {import(\"../../geom\").GeometryCollection} */ (geometry)\n          .getGeometries()\n          .map((geom) => this.addGeometry_(geom, feature));\n        break;\n      case 'MultiPolygon':\n        /** @type {import(\"../../geom\").MultiPolygon} */ (geometry)\n          .getPolygons()\n          .map((polygon) => this.addGeometry_(polygon, feature));\n        break;\n      case 'MultiLineString':\n        /** @type {import(\"../../geom\").MultiLineString} */ (geometry)\n          .getLineStrings()\n          .map((line) => this.addGeometry_(line, feature));\n        break;\n      case 'MultiPoint':\n        /** @type {import(\"../../geom\").MultiPoint} */ (geometry)\n          .getPoints()\n          .map((point) => this.addGeometry_(point, feature));\n        break;\n      case 'Polygon':\n        const polygonGeom = /** @type {import(\"../../geom\").Polygon} */ (\n          geometry\n        );\n        batchEntry = this.addFeatureEntryInPolygonBatch_(feature);\n        flatCoords = polygonGeom.getFlatCoordinates();\n        verticesCount = flatCoords.length / 2;\n        const ringsCount = polygonGeom.getLinearRingCount();\n        const ringsVerticesCount = polygonGeom\n          .getEnds()\n          .map((end, ind, arr) =>\n            ind > 0 ? (end - arr[ind - 1]) / 2 : end / 2\n          );\n        this.polygonBatch.verticesCount += verticesCount;\n        this.polygonBatch.ringsCount += ringsCount;\n        this.polygonBatch.geometriesCount++;\n        batchEntry.flatCoordss.push(flatCoords);\n        batchEntry.ringsVerticesCounts.push(ringsVerticesCount);\n        batchEntry.verticesCount += verticesCount;\n        batchEntry.ringsCount += ringsCount;\n        polygonGeom\n          .getLinearRings()\n          .map((ring) => this.addGeometry_(ring, feature));\n        break;\n      case 'Point':\n        const pointGeom = /** @type {import(\"../../geom\").Point} */ (geometry);\n        batchEntry = this.addFeatureEntryInPointBatch_(feature);\n        flatCoords = pointGeom.getFlatCoordinates();\n        this.pointBatch.geometriesCount++;\n        batchEntry.flatCoordss.push(flatCoords);\n        break;\n      case 'LineString':\n      case 'LinearRing':\n        const lineGeom = /** @type {import(\"../../geom\").LineString} */ (\n          geometry\n        );\n        batchEntry = this.addFeatureEntryInLineStringBatch_(feature);\n        flatCoords = lineGeom.getFlatCoordinates();\n        verticesCount = flatCoords.length / 2;\n        this.lineStringBatch.verticesCount += verticesCount;\n        this.lineStringBatch.geometriesCount++;\n        batchEntry.flatCoordss.push(flatCoords);\n        batchEntry.verticesCount += verticesCount;\n        break;\n      default:\n      // pass\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature\").default} feature Feature\n   */\n  changeFeature(feature) {\n    this.clearFeatureEntryInPointBatch_(feature);\n    this.clearFeatureEntryInPolygonBatch_(feature);\n    this.clearFeatureEntryInLineStringBatch_(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      return;\n    }\n    this.addGeometry_(geometry, feature);\n  }\n\n  /**\n   * @param {import(\"../../Feature\").default} feature Feature\n   */\n  removeFeature(feature) {\n    this.clearFeatureEntryInPointBatch_(feature);\n    this.clearFeatureEntryInPolygonBatch_(feature);\n    this.clearFeatureEntryInLineStringBatch_(feature);\n  }\n\n  clear() {\n    this.polygonBatch.entries = {};\n    this.polygonBatch.geometriesCount = 0;\n    this.polygonBatch.verticesCount = 0;\n    this.polygonBatch.ringsCount = 0;\n    this.lineStringBatch.entries = {};\n    this.lineStringBatch.geometriesCount = 0;\n    this.lineStringBatch.verticesCount = 0;\n    this.pointBatch.entries = {};\n    this.pointBatch.geometriesCount = 0;\n  }\n}\n\nexport default MixedGeometryBatch;\n","/**\n * @module ol/render/webgl/PointBatchRenderer\n */\n\nimport AbstractBatchRenderer from './BatchRenderer.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport {apply as applyTransform} from '../../transform.js';\n\n/**\n * Names of attributes made available to the vertex shader.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const Attributes = {\n  POSITION: 'a_position',\n  INDEX: 'a_index',\n};\n\nclass PointBatchRenderer extends AbstractBatchRenderer {\n  /**\n   * @param {import(\"../../webgl/Helper.js\").default} helper WebGL helper instance\n   * @param {Worker} worker WebGL worker instance\n   * @param {string} vertexShader Vertex shader\n   * @param {string} fragmentShader Fragment shader\n   * @param {Array<import('./BatchRenderer.js').CustomAttribute>} customAttributes List of custom attributes\n   */\n  constructor(helper, worker, vertexShader, fragmentShader, customAttributes) {\n    super(helper, worker, vertexShader, fragmentShader, customAttributes);\n\n    // vertices for point must hold both a position (x,y) and an index (their position in the quad)\n    this.attributes = [\n      {\n        name: Attributes.POSITION,\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: Attributes.INDEX,\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(\n      customAttributes.map(function (attribute) {\n        return {\n          name: 'a_' + attribute.name,\n          size: 1,\n          type: AttributeType.FLOAT,\n        };\n      })\n    );\n  }\n\n  /**\n   * Render instructions for lines are structured like so:\n   * [ x0, y0, customAttr0, ... , xN, yN, customAttrN ]\n   * @param {import(\"./MixedGeometryBatch.js\").PointGeometryBatch} batch Point geometry batch\n   * @override\n   */\n  generateRenderInstructions(batch) {\n    // here we anticipate the amount of render instructions for points:\n    // 2 instructions per vertex for position (x and y)\n    // + 1 instruction per vertex per custom attributes\n    const totalInstructionsCount =\n      (2 + this.customAttributes.length) * batch.geometriesCount;\n    if (\n      !batch.renderInstructions ||\n      batch.renderInstructions.length !== totalInstructionsCount\n    ) {\n      batch.renderInstructions = new Float32Array(totalInstructionsCount);\n    }\n\n    // loop on features to fill the render instructions\n    const tmpCoords = [];\n    let renderIndex = 0;\n    for (const featureUid in batch.entries) {\n      const batchEntry = batch.entries[featureUid];\n      for (let i = 0, ii = batchEntry.flatCoordss.length; i < ii; i++) {\n        tmpCoords[0] = batchEntry.flatCoordss[i][0];\n        tmpCoords[1] = batchEntry.flatCoordss[i][1];\n        applyTransform(batch.renderInstructionsTransform, tmpCoords);\n\n        batch.renderInstructions[renderIndex++] = tmpCoords[0];\n        batch.renderInstructions[renderIndex++] = tmpCoords[1];\n\n        // pushing custom attributes\n        for (let j = 0, jj = this.customAttributes.length; j < jj; j++) {\n          const value = this.customAttributes[j].callback(batchEntry.feature);\n          batch.renderInstructions[renderIndex++] = value;\n        }\n      }\n    }\n  }\n}\n\nexport default PointBatchRenderer;\n","/**\n * @module ol/render/webgl/PolygonBatchRenderer\n */\nimport AbstractBatchRenderer from './BatchRenderer.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * Names of attributes made available to the vertex shader.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const Attributes = {\n  POSITION: 'a_position',\n};\n\nclass PolygonBatchRenderer extends AbstractBatchRenderer {\n  /**\n   * @param {import(\"../../webgl/Helper.js\").default} helper WebGL helper instance\n   * @param {Worker} worker WebGL worker instance\n   * @param {string} vertexShader Vertex shader\n   * @param {string} fragmentShader Fragment shader\n   * @param {Array<import('./BatchRenderer.js').CustomAttribute>} customAttributes List of custom attributes\n   */\n  constructor(helper, worker, vertexShader, fragmentShader, customAttributes) {\n    super(helper, worker, vertexShader, fragmentShader, customAttributes);\n\n    // By default only a position attribute is required to render polygons\n    this.attributes = [\n      {\n        name: Attributes.POSITION,\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(\n      customAttributes.map(function (attribute) {\n        return {\n          name: 'a_' + attribute.name,\n          size: 1,\n          type: AttributeType.FLOAT,\n        };\n      })\n    );\n  }\n\n  /**\n   * Render instructions for polygons are structured like so:\n   * [ customAttr0, ..., customAttrN, numberOfRings, numberOfVerticesInRing0, ..., numberOfVerticesInRingN, x0, y0, ..., xN, yN, numberOfRings,... ]\n   * @param {import(\"./MixedGeometryBatch.js\").PolygonGeometryBatch} batch Polygon geometry batch\n   * @override\n   */\n  generateRenderInstructions(batch) {\n    // here we anticipate the amount of render instructions for polygons:\n    // 2 instructions per vertex for position (x and y)\n    // + 1 instruction per polygon per custom attributes\n    // + 1 instruction per polygon (for vertices count in polygon)\n    // + 1 instruction per ring (for vertices count in ring)\n    const totalInstructionsCount =\n      2 * batch.verticesCount +\n      (1 + this.customAttributes.length) * batch.geometriesCount +\n      batch.ringsCount;\n    if (\n      !batch.renderInstructions ||\n      batch.renderInstructions.length !== totalInstructionsCount\n    ) {\n      batch.renderInstructions = new Float32Array(totalInstructionsCount);\n    }\n\n    // loop on features to fill the render instructions\n    const flatCoords = [];\n    let renderIndex = 0;\n    for (const featureUid in batch.entries) {\n      const batchEntry = batch.entries[featureUid];\n      for (let i = 0, ii = batchEntry.flatCoordss.length; i < ii; i++) {\n        flatCoords.length = batchEntry.flatCoordss[i].length;\n        transform2D(\n          batchEntry.flatCoordss[i],\n          0,\n          flatCoords.length,\n          2,\n          batch.renderInstructionsTransform,\n          flatCoords\n        );\n\n        // custom attributes\n        for (let k = 0, kk = this.customAttributes.length; k < kk; k++) {\n          const value = this.customAttributes[k].callback(batchEntry.feature);\n          batch.renderInstructions[renderIndex++] = value;\n        }\n\n        // ring count\n        batch.renderInstructions[renderIndex++] =\n          batchEntry.ringsVerticesCounts[i].length;\n\n        // vertices count in each ring\n        for (\n          let j = 0, jj = batchEntry.ringsVerticesCounts[i].length;\n          j < jj;\n          j++\n        ) {\n          batch.renderInstructions[renderIndex++] =\n            batchEntry.ringsVerticesCounts[i][j];\n        }\n\n        // looping on points for positions\n        for (let j = 0, jj = flatCoords.length; j < jj; j += 2) {\n          batch.renderInstructions[renderIndex++] = flatCoords[j];\n          batch.renderInstructions[renderIndex++] = flatCoords[j + 1];\n        }\n      }\n    }\n  }\n}\n\nexport default PolygonBatchRenderer;\n","/**\n * @module ol/renderer/webgl/shaders\n */\nimport {asArray} from '../../color.js';\n\n/** @typedef {'color'|'opacity'|'width'} DefaultAttributes */\n\n/**\n * Packs red/green/blue channels of a color into a single float value; alpha is ignored.\n * This is how the color is expected to be computed.\n * @param {import(\"../../color.js\").Color|string} color Color as array of numbers or string\n * @return {number} Float value containing the color\n */\nexport function packColor(color) {\n  const array = asArray(color);\n  const r = array[0] * 256 * 256;\n  const g = array[1] * 256;\n  const b = array[2];\n  return r + g + b;\n}\n\nconst DECODE_COLOR_EXPRESSION = `vec3(\n  fract(floor(a_color / 256.0 / 256.0) / 256.0),\n  fract(floor(a_color / 256.0) / 256.0),\n  fract(a_color / 256.0)\n);`;\n\n/**\n * Default polygon vertex shader.\n * Relies on the color and opacity attributes.\n * @type {string}\n */\nexport const FILL_VERTEX_SHADER = `\n  precision mediump float;\n  uniform mat4 u_projectionMatrix;\n  attribute vec2 a_position;\n  attribute float a_color;\n  attribute float a_opacity;\n  varying vec3 v_color;\n  varying float v_opacity;\n\n  void main(void) {\n    gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\n    v_color = ${DECODE_COLOR_EXPRESSION}\n    v_opacity = a_opacity;\n  }`;\n\n/**\n * Default polygon fragment shader.\n * @type {string}\n */\nexport const FILL_FRAGMENT_SHADER = `\n  precision mediump float;\n  varying vec3 v_color;\n  varying float v_opacity;\n\n  void main(void) {\n    gl_FragColor = vec4(v_color, 1.0) * v_opacity;\n  }`;\n\n/**\n * Default linestring vertex shader.\n * Relies on color, opacity and width attributes.\n * @type {string}\n */\nexport const STROKE_VERTEX_SHADER = `\n  precision mediump float;\n  uniform mat4 u_projectionMatrix;\n  uniform vec2 u_sizePx;\n  attribute vec2 a_segmentStart;\n  attribute vec2 a_segmentEnd;\n  attribute float a_parameters;\n  attribute float a_color;\n  attribute float a_opacity;\n  attribute float a_width;\n  varying vec2 v_segmentStart;\n  varying vec2 v_segmentEnd;\n  varying float v_angleStart;\n  varying float v_angleEnd;\n  varying vec3 v_color;\n  varying float v_opacity;\n  varying float v_width;\n\n  vec2 worldToPx(vec2 worldPos) {\n    vec4 screenPos = u_projectionMatrix * vec4(worldPos, 0.0, 1.0);\n    return (0.5 * screenPos.xy + 0.5) * u_sizePx;\n  }\n\n  vec4 pxToScreen(vec2 pxPos) {\n    vec2 screenPos = pxPos * 4.0 / u_sizePx;\n    return vec4(screenPos.xy, 0.0, 0.0);\n  }\n\n  vec2 getOffsetDirection(vec2 normalPx, vec2 tangentPx, float joinAngle) {\n    if (cos(joinAngle) > 0.93) return normalPx - tangentPx;\n    float halfAngle = joinAngle / 2.0;\n    vec2 angleBisectorNormal = vec2(\n      sin(halfAngle) * normalPx.x + cos(halfAngle) * normalPx.y,\n      -cos(halfAngle) * normalPx.x + sin(halfAngle) * normalPx.y\n    );\n    float length = 1.0 / sin(halfAngle);\n    return angleBisectorNormal * length;\n  }\n\n  void main(void) {\n    float anglePrecision = 1500.0;\n    float paramShift = 10000.0;\n    v_angleStart = fract(a_parameters / paramShift) * paramShift / anglePrecision;\n    v_angleEnd = fract(floor(a_parameters / paramShift + 0.5) / paramShift) * paramShift / anglePrecision;\n    float vertexNumber = floor(a_parameters / paramShift / paramShift + 0.0001);\n    vec2 tangentPx = worldToPx(a_segmentEnd) - worldToPx(a_segmentStart);\n    tangentPx = normalize(tangentPx);\n    vec2 normalPx = vec2(-tangentPx.y, tangentPx.x);\n    float normalDir = vertexNumber < 0.5 || (vertexNumber > 1.5 && vertexNumber < 2.5) ? 1.0 : -1.0;\n    float tangentDir = vertexNumber < 1.5 ? 1.0 : -1.0;\n    float angle = vertexNumber < 1.5 ? v_angleStart : v_angleEnd;\n    vec2 offsetPx = getOffsetDirection(normalPx * normalDir, tangentDir * tangentPx, angle) * a_width * 0.5;\n    vec2 position =  vertexNumber < 1.5 ? a_segmentStart : a_segmentEnd;\n    gl_Position = u_projectionMatrix * vec4(position, 0.0, 1.0) + pxToScreen(offsetPx);\n    v_segmentStart = worldToPx(a_segmentStart);\n    v_segmentEnd = worldToPx(a_segmentEnd);\n    v_color = ${DECODE_COLOR_EXPRESSION}\n    v_opacity = a_opacity;\n    v_width = a_width;\n  }`;\n\n/**\n * Default linestring fragment shader.\n * @type {string}\n */\nexport const STROKE_FRAGMENT_SHADER = `\n  precision mediump float;\n  uniform float u_pixelRatio;\n  varying vec2 v_segmentStart;\n  varying vec2 v_segmentEnd;\n  varying float v_angleStart;\n  varying float v_angleEnd;\n  varying vec3 v_color;\n  varying float v_opacity;\n  varying float v_width;\n\n  float segmentDistanceField(vec2 point, vec2 start, vec2 end, float radius) {\n    vec2 startToPoint = point - start;\n    vec2 startToEnd = end - start;\n    float ratio = clamp(dot(startToPoint, startToEnd) / dot(startToEnd, startToEnd), 0.0, 1.0);\n    float dist = length(startToPoint - ratio * startToEnd);\n    return 1.0 - smoothstep(radius - 1.0, radius, dist);\n  }\n\n  void main(void) {\n    vec2 v_currentPoint = gl_FragCoord.xy / u_pixelRatio;\n    gl_FragColor = vec4(v_color, 1.0) * v_opacity;\n    gl_FragColor *= segmentDistanceField(v_currentPoint, v_segmentStart, v_segmentEnd, v_width);\n  }`;\n\n/**\n * Default point vertex shader.\n * Relies on color and opacity attributes.\n * @type {string}\n */\nexport const POINT_VERTEX_SHADER = `\n  precision mediump float;\n  uniform mat4 u_projectionMatrix;\n  uniform mat4 u_offsetScaleMatrix;\n  attribute vec2 a_position;\n  attribute float a_index;\n  attribute float a_color;\n  attribute float a_opacity;\n  varying vec2 v_texCoord;\n  varying vec3 v_color;\n  varying float v_opacity;\n\n  void main(void) {\n    mat4 offsetMatrix = u_offsetScaleMatrix;\n    float size = 6.0;\n    float offsetX = a_index == 0.0 || a_index == 3.0 ? -size / 2.0 : size / 2.0;\n    float offsetY = a_index == 0.0 || a_index == 1.0 ? -size / 2.0 : size / 2.0;\n    vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n    gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n    float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n    float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n    v_texCoord = vec2(u, v);\n    v_color = ${DECODE_COLOR_EXPRESSION}\n    v_opacity = a_opacity;\n  }`;\n\n/**\n * Default point fragment shader.\n * @type {string}\n */\nexport const POINT_FRAGMENT_SHADER = `\n  precision mediump float;\n  varying vec3 v_color;\n  varying float v_opacity;\n\n  void main(void) {\n      gl_FragColor = vec4(v_color, 1.0) * v_opacity;\n  }`;\n","/**\n * @module ol/renderer/webgl/VectorLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport LineStringBatchRenderer from '../../render/webgl/LineStringBatchRenderer.js';\nimport MixedGeometryBatch from '../../render/webgl/MixedGeometryBatch.js';\nimport PointBatchRenderer from '../../render/webgl/PointBatchRenderer.js';\nimport PolygonBatchRenderer from '../../render/webgl/PolygonBatchRenderer.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {DefaultUniform} from '../../webgl/Helper.js';\nimport {\n  FILL_FRAGMENT_SHADER,\n  FILL_VERTEX_SHADER,\n  POINT_FRAGMENT_SHADER,\n  POINT_VERTEX_SHADER,\n  STROKE_FRAGMENT_SHADER,\n  STROKE_VERTEX_SHADER,\n  packColor,\n} from './shaders.js';\nimport {buffer, createEmpty, equals, getWidth} from '../../extent.js';\nimport {create as createTransform} from '../../transform.js';\nimport {create as createWebGLWorker} from '../../worker/webgl.js';\nimport {listen, unlistenByKey} from '../../events.js';\n\n/**\n * @typedef {function(import(\"../../Feature\").default, Object<string, *>):number} CustomAttributeCallback A callback computing\n * the value of a custom attribute (different for each feature) to be passed on to the GPU.\n * Properties are available as 2nd arg for quicker access.\n */\n\n/**\n * @typedef {Object} ShaderProgram An object containing both shaders (vertex and fragment) as well as the required attributes\n * @property {string} [vertexShader] Vertex shader source (using the default one if unspecified).\n * @property {string} [fragmentShader] Fragment shader source (using the default one if unspecified).\n * @property {Object<import(\"./shaders.js\").DefaultAttributes,CustomAttributeCallback>} attributes Custom attributes made available in the vertex shader.\n * Keys are the names of the attributes which are then accessible in the vertex shader using the `a_` prefix, e.g.: `a_opacity`.\n * Default shaders rely on the attributes in {@link module:ol/render/webgl/shaders~DefaultAttributes}.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {ShaderProgram} [fill] Attributes and shaders for filling polygons.\n * @property {ShaderProgram} [stroke] Attributes and shaders for line strings and polygon strokes.\n * @property {ShaderProgram} [point] Attributes and shaders for points.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @param {Object<import(\"./shaders.js\").DefaultAttributes,CustomAttributeCallback>} obj Lookup of attribute getters.\n * @return {Array<import(\"../../render/webgl/BatchRenderer\").CustomAttribute>} An array of attribute descriptors.\n */\nfunction toAttributesArray(obj) {\n  return Object.keys(obj).map((key) => ({name: key, callback: obj[key]}));\n}\n\n/**\n * @classdesc\n * Experimental WebGL vector renderer. Supports polygons, lines and points:\n *  * Polygons are broken down into triangles\n *  * Lines are rendered as strips of quads\n *  * Points are rendered as quads\n *\n * You need to provide vertex and fragment shaders as well as custom attributes for each type of geometry. All shaders\n * can access the uniforms in the {@link module:ol/webgl/Helper~DefaultUniform} enum.\n * The vertex shaders can access the following attributes depending on the geometry type:\n *  * For polygons: {@link module:ol/render/webgl/PolygonBatchRenderer~Attributes}\n *  * For line strings: {@link module:ol/render/webgl/LineStringBatchRenderer~Attributes}\n *  * For points: {@link module:ol/render/webgl/PointBatchRenderer~Attributes}\n *\n * Please note that the fragment shaders output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Note: this uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n */\nclass WebGLVectorLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n   * @param {Options} options Options.\n   */\n  constructor(layer, options) {\n    const uniforms = options.uniforms || {};\n    const projectionMatrixTransform = createTransform();\n    uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n\n    super(layer, {\n      uniforms: uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    this.sourceRevision_ = -1;\n\n    this.previousExtent_ = createEmpty();\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentTransform_ = projectionMatrixTransform;\n\n    const fillAttributes = {\n      color: function () {\n        return packColor('#ddd');\n      },\n      opacity: function () {\n        return 1;\n      },\n      ...(options.fill && options.fill.attributes),\n    };\n\n    const strokeAttributes = {\n      color: function () {\n        return packColor('#eee');\n      },\n      opacity: function () {\n        return 1;\n      },\n      width: function () {\n        return 1.5;\n      },\n      ...(options.stroke && options.stroke.attributes),\n    };\n\n    const pointAttributes = {\n      color: function () {\n        return packColor('#eee');\n      },\n      opacity: function () {\n        return 1;\n      },\n      ...(options.point && options.point.attributes),\n    };\n\n    this.fillVertexShader_ =\n      (options.fill && options.fill.vertexShader) || FILL_VERTEX_SHADER;\n    this.fillFragmentShader_ =\n      (options.fill && options.fill.fragmentShader) || FILL_FRAGMENT_SHADER;\n    this.fillAttributes_ = toAttributesArray(fillAttributes);\n\n    this.strokeVertexShader_ =\n      (options.stroke && options.stroke.vertexShader) || STROKE_VERTEX_SHADER;\n    this.strokeFragmentShader_ =\n      (options.stroke && options.stroke.fragmentShader) ||\n      STROKE_FRAGMENT_SHADER;\n    this.strokeAttributes_ = toAttributesArray(strokeAttributes);\n\n    this.pointVertexShader_ =\n      (options.point && options.point.vertexShader) || POINT_VERTEX_SHADER;\n    this.pointFragmentShader_ =\n      (options.point && options.point.fragmentShader) || POINT_FRAGMENT_SHADER;\n    this.pointAttributes_ = toAttributesArray(pointAttributes);\n\n    /**\n     * @private\n     */\n    this.worker_ = createWebGLWorker();\n\n    /**\n     * @private\n     */\n    this.batch_ = new MixedGeometryBatch();\n\n    const source = this.getLayer().getSource();\n    this.batch_.addFeatures(source.getFeatures());\n    this.sourceListenKeys_ = [\n      listen(\n        source,\n        VectorEventType.ADDFEATURE,\n        this.handleSourceFeatureAdded_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CHANGEFEATURE,\n        this.handleSourceFeatureChanged_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceFeatureDelete_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CLEAR,\n        this.handleSourceFeatureClear_,\n        this\n      ),\n    ];\n  }\n\n  afterHelperCreated() {\n    this.polygonRenderer_ = new PolygonBatchRenderer(\n      this.helper,\n      this.worker_,\n      this.fillVertexShader_,\n      this.fillFragmentShader_,\n      this.fillAttributes_\n    );\n    this.pointRenderer_ = new PointBatchRenderer(\n      this.helper,\n      this.worker_,\n      this.pointVertexShader_,\n      this.pointFragmentShader_,\n      this.pointAttributes_\n    );\n    this.lineStringRenderer_ = new LineStringBatchRenderer(\n      this.helper,\n      this.worker_,\n      this.strokeVertexShader_,\n      this.strokeFragmentShader_,\n      this.strokeAttributes_\n    );\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureAdded_(event) {\n    const feature = event.feature;\n    this.batch_.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureChanged_(event) {\n    const feature = event.feature;\n    this.batch_.changeFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureDelete_(event) {\n    const feature = event.feature;\n    this.batch_.removeFeature(feature);\n  }\n\n  /**\n   * @private\n   */\n  handleSourceFeatureClear_() {\n    this.batch_.clear();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const projection = frameState.viewState.projection;\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const projectionExtent = projection.getExtent();\n    const extent = frameState.extent;\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n\n    do {\n      this.polygonRenderer_.render(\n        this.batch_.polygonBatch,\n        this.currentTransform_,\n        frameState,\n        world * worldWidth\n      );\n      this.lineStringRenderer_.render(\n        this.batch_.lineStringBatch,\n        this.currentTransform_,\n        frameState,\n        world * worldWidth\n      );\n      this.pointRenderer_.render(\n        this.batch_.pointBatch,\n        this.currentTransform_,\n        frameState,\n        world * worldWidth\n      );\n    } while (++world < endWorld);\n\n    this.helper.finalizeDraw(frameState);\n\n    const canvas = this.helper.getCanvas();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const opacity = layerState.opacity;\n    if (opacity !== parseFloat(canvas.style.opacity)) {\n      canvas.style.opacity = String(opacity);\n    }\n\n    this.postRender(gl, frameState);\n    return canvas;\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const viewState = frameState.viewState;\n    const viewNotMoving =\n      !frameState.viewHints[ViewHint.ANIMATING] &&\n      !frameState.viewHints[ViewHint.INTERACTING];\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n\n    if (sourceChanged) {\n      this.sourceRevision_ = vectorSource.getRevision();\n    }\n\n    if (viewNotMoving && (extentChanged || sourceChanged)) {\n      const projection = viewState.projection;\n      const resolution = viewState.resolution;\n\n      const renderBuffer =\n        layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n      const extent = buffer(frameState.extent, renderBuffer * resolution);\n      vectorSource.loadFeatures(extent, resolution, projection);\n\n      this.ready = false;\n      let remaining = 3;\n      const rebuildCb = () => {\n        remaining--;\n        this.ready = remaining <= 0;\n        this.getLayer().changed();\n      };\n\n      this.polygonRenderer_.rebuild(\n        this.batch_.polygonBatch,\n        frameState,\n        'Polygon',\n        rebuildCb\n      );\n      this.lineStringRenderer_.rebuild(\n        this.batch_.lineStringBatch,\n        frameState,\n        'LineString',\n        rebuildCb\n      );\n      this.pointRenderer_.rebuild(\n        this.batch_.pointBatch,\n        frameState,\n        'Point',\n        rebuildCb\n      );\n      this.previousExtent_ = frameState.extent.slice();\n    }\n\n    this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n    this.helper.prepareDraw(frameState);\n\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.worker_.terminate();\n    this.layer_ = null;\n    this.sourceListenKeys_.forEach(function (key) {\n      unlistenByKey(key);\n    });\n    this.sourceListenKeys_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default WebGLVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/renderer/canvas/VectorImageLayer\n */\nimport CanvasImageLayerRenderer from './ImageLayer.js';\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\nimport EventType from '../../events/EventType.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport ImageState from '../../ImageState.js';\nimport RBush from 'rbush';\nimport ViewHint from '../../ViewHint.js';\nimport {apply, compose, create} from '../../transform.js';\nimport {getHeight, getWidth, isEmpty, scaleFromCenter} from '../../extent.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasVectorImageLayerRenderer extends CanvasImageLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.layerImageRatio_ = layer.getImageRatio();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToVectorPixelTransform_ = create();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.vectorRenderer_.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.vectorRenderer_) {\n      return Promise.resolve([]);\n    }\n    const vectorPixel = apply(\n      this.coordinateToVectorPixelTransform_,\n      apply(this.renderedPixelToCoordinateTransform_, pixel.slice())\n    );\n    return this.vectorRenderer_.getFeatures(vectorPixel);\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    this.vectorRenderer_.handleFontsChanged();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const hints = frameState.viewHints;\n    const vectorRenderer = this.vectorRenderer_;\n    let renderedExtent = frameState.extent;\n    if (this.layerImageRatio_ !== 1) {\n      renderedExtent = renderedExtent.slice(0);\n      scaleFromCenter(renderedExtent, this.layerImageRatio_);\n    }\n    const width = getWidth(renderedExtent) / viewResolution;\n    const height = getHeight(renderedExtent) / viewResolution;\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      vectorRenderer.useContainer(null, null);\n      const context = vectorRenderer.context;\n      const layerState = frameState.layerStatesArray[frameState.layerIndex];\n      context.globalAlpha = layerState.opacity;\n      const imageLayerState = Object.assign({}, layerState, {opacity: 1});\n      const imageFrameState = /** @type {import(\"../../Map.js\").FrameState} */ (\n        Object.assign({}, frameState, {\n          declutterTree: new RBush(9),\n          extent: renderedExtent,\n          size: [width, height],\n          viewState: /** @type {import(\"../../View.js\").State} */ (\n            Object.assign({}, frameState.viewState, {\n              rotation: 0,\n            })\n          ),\n          layerStatesArray: [imageLayerState],\n          layerIndex: 0,\n        })\n      );\n      let emptyImage = true;\n      const image = new ImageCanvas(\n        renderedExtent,\n        viewResolution,\n        pixelRatio,\n        context.canvas,\n        function (callback) {\n          if (\n            vectorRenderer.prepareFrame(imageFrameState) &&\n            vectorRenderer.replayGroupChanged\n          ) {\n            vectorRenderer.clipping = false;\n            if (vectorRenderer.renderFrame(imageFrameState, null)) {\n              vectorRenderer.renderDeclutter(imageFrameState);\n              emptyImage = false;\n            }\n            callback();\n          }\n        }\n      );\n\n      image.addEventListener(EventType.CHANGE, () => {\n        if (image.getState() !== ImageState.LOADED) {\n          return;\n        }\n        this.image_ = emptyImage ? null : image;\n        const imageResolution = image.getResolution();\n        const imagePixelRatio = image.getPixelRatio();\n        const renderedResolution =\n          (imageResolution * pixelRatio) / imagePixelRatio;\n        this.renderedResolution = renderedResolution;\n        this.coordinateToVectorPixelTransform_ = compose(\n          this.coordinateToVectorPixelTransform_,\n          width / 2,\n          height / 2,\n          1 / renderedResolution,\n          -1 / renderedResolution,\n          0,\n          -viewState.center[0],\n          -viewState.center[1]\n        );\n      });\n      image.load();\n    }\n\n    if (this.image_) {\n      this.renderedPixelToCoordinateTransform_ =\n        frameState.pixelToCoordinateTransform.slice();\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   */\n  preRender() {}\n\n  /**\n   */\n  postRender() {}\n\n  /**\n   */\n  renderDeclutter() {}\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(\n        coordinate,\n        frameState,\n        hitTolerance,\n        callback,\n        matches\n      );\n    }\n    return super.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      callback,\n      matches\n    );\n  }\n}\n\nexport default CanvasVectorImageLayerRenderer;\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== 'vector'\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === 'vector'\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    if (declutter) {\n      tile.declutterExecutorGroups[layerUid] = [];\n    }\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        builderExtent,\n        resolution,\n        pixelRatio\n      );\n      const declutterBuilderGroup = declutter\n        ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n        : undefined;\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutterBuilderGroup\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer()\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n      if (declutterBuilderGroup) {\n        const declutterExecutorGroup = new CanvasExecutorGroup(\n          null,\n          resolution,\n          pixelRatio,\n          source.getOverlaps(),\n          declutterBuilderGroup.finish(),\n          layer.getRenderBuffer()\n        );\n        tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n      }\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n      if (declutterExecutorGroups) {\n        executorGroups.push(declutterExecutorGroups);\n      }\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures =\n          executorGroups === declutterExecutorGroups\n            ? frameState.declutterTree.all().map((item) => item.value)\n            : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice()\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile\n        .getSourceTiles()\n        .reduce(function (accumulator, sourceTile) {\n          return accumulator.concat(sourceTile.getFeatures());\n        }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection)\n          )\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.getLayer().getOpacity();\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const declutterExecutorGroups =\n        tile.declutterExecutorGroups[getUid(this.getLayer())];\n      if (declutterExecutorGroups) {\n        for (let j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n          declutterExecutorGroups[j].execute(\n            this.context,\n            1,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            undefined,\n            frameState.declutterTree\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset\n      )\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layer.getOpacity();\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes)\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      if (currentClip) {\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]]\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          1,\n          transform,\n          rotation,\n          hifi,\n          replayTypes\n        );\n      }\n      if (contextSaved) {\n        context.restore();\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder group for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio)\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        renderScale,\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()]\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/geom/Circle\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center)\n    );\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      translate(center, 0, center.length, stride, deltaX, deltaY, center)\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|Array<Array<number>>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return 2;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {import(\"../geom/Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n  /**\n   * @return {Array<number>|Array<Array<number>>} Ends or endss.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n}\n\nRenderFeature.prototype.getEndss = RenderFeature.prototype.getEnds;\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {get as getProjection, getTransform} from '../../proj.js';\nimport {squaredSegmentDistance, toDegrees, toRadians} from '../../math.js';\n\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (\n      squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) <\n      squaredTolerance\n    ) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(\n  lon1,\n  lat1,\n  lon2,\n  lat2,\n  projection,\n  squaredTolerance\n) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon =\n        toRadians(lon1) +\n        Math.atan2(\n          Math.sin(theta) * sinD * cosLat1,\n          cosD - sinLat1 * Math.sin(lat)\n        );\n      return [toDegrees(lon), toDegrees(lat)];\n    },\n    getTransform(geoProjection, projection),\n    squaredTolerance\n  );\n}\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon, lat1 + (lat2 - lat1) * frac];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance\n  );\n}\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon1 + (lon2 - lon1) * frac, lat];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance\n  );\n}\n","/**\n * @module ol/layer/Graticule\n */\nimport Collection from '../Collection.js';\nimport EventType from '../render/EventType.js';\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport VectorLayer from './Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  applyTransform,\n  approximatelyEquals,\n  containsCoordinate,\n  containsExtent,\n  equals,\n  getCenter,\n  getIntersection,\n  getWidth,\n  intersects,\n  isEmpty,\n  wrapX as wrapExtentX,\n} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {degreesToStringHDMS} from '../coordinate.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n} from '../proj.js';\nimport {getVectorContext} from '../render.js';\nimport {meridian, parallel} from '../geom/flat/geodesic.js';\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)',\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nconst INTERVALS = [\n  90,\n  45,\n  30,\n  20,\n  10,\n  5,\n  2,\n  1,\n  30 / 60,\n  20 / 60,\n  10 / 60,\n  5 / 60,\n  2 / 60,\n  1 / 60,\n  30 / 3600,\n  20 / 3600,\n  10 / 3600,\n  5 / 3600,\n  2 / 3600,\n  1 / 3600,\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom Geometry.\n * @property {string} text Text.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle] The\n * stroke style to use for drawing the graticule. If not provided, the following stroke will be used:\n * ```js\n * new Stroke({\n *   color: 'rgba(0, 0, 0, 0.2)' // a not fully opaque black\n * });\n * ```\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 30/60, 20/60, 10/60, 5/60, 2/60, 1/60, 30/3600, 20/3600, 10/3600, 5/3600, 2/3600, 1/3600]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system (currently only EPSG:4326 is supported).\n * Note that the view projection must define both extent and worldExtent.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass Graticule extends VectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign(\n      {\n        updateWhileAnimating: true,\n        updateWhileInteracting: true,\n        renderBuffer: 0,\n      },\n      options\n    );\n\n    delete baseOptions.maxLines;\n    delete baseOptions.strokeStyle;\n    delete baseOptions.targetSize;\n    delete baseOptions.showLabels;\n    delete baseOptions.lonLabelFormatter;\n    delete baseOptions.latLabelFormatter;\n    delete baseOptions.lonLabelPosition;\n    delete baseOptions.latLabelPosition;\n    delete baseOptions.lonLabelStyle;\n    delete baseOptions.latLabelStyle;\n    delete baseOptions.intervals;\n    super(baseOptions);\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLat_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLon_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLat_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLon_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxX_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxY_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minX_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minY_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.targetSize_ =\n      options.targetSize !== undefined ? options.targetSize : 100;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.meridians_ = [];\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.parallels_ = [];\n\n    /**\n     * @type {Stroke}\n     * @private\n     */\n    this.strokeStyle_ =\n      options.strokeStyle !== undefined\n        ? options.strokeStyle\n        : DEFAULT_STROKE_STYLE;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.fromLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.toLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.projectionCenterLonLat_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomRight_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topRight_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.meridiansLabels_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.parallelsLabels_ = null;\n\n    if (options.showLabels) {\n      /**\n       * @type {null|function(number):string}\n       * @private\n       */\n      this.lonLabelFormatter_ =\n        options.lonLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'EW')\n          : options.lonLabelFormatter;\n\n      /**\n       * @type {function(number):string}\n       * @private\n       */\n      this.latLabelFormatter_ =\n        options.latLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'NS')\n          : options.latLabelFormatter;\n\n      /**\n       * Longitude label position in fractions (0..1) of view extent. 0 means\n       * bottom, 1 means top.\n       * @type {number}\n       * @private\n       */\n      this.lonLabelPosition_ =\n        options.lonLabelPosition == undefined ? 0 : options.lonLabelPosition;\n\n      /**\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n       * means right.\n       * @type {number}\n       * @private\n       */\n      this.latLabelPosition_ =\n        options.latLabelPosition == undefined ? 1 : options.latLabelPosition;\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.lonLabelStyleBase_ = new Style({\n        text:\n          options.lonLabelStyle !== undefined\n            ? options.lonLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textBaseline: 'bottom',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.lonLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.lonLabelStyleBase_.getText().setText(label);\n        return this.lonLabelStyleBase_;\n      };\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.latLabelStyleBase_ = new Style({\n        text:\n          options.latLabelStyle !== undefined\n            ? options.latLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textAlign: 'right',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.latLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.latLabelStyleBase_.getText().setText(label);\n        return this.latLabelStyleBase_;\n      };\n\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n\n      this.addEventListener(EventType.POSTRENDER, this.drawLabels_.bind(this));\n    }\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.intervals_ =\n      options.intervals !== undefined ? options.intervals : INTERVALS;\n\n    // use a source with a custom loader for lines & text\n    this.setSource(\n      new VectorSource({\n        loader: this.loaderFunction.bind(this),\n        strategy: this.strategyFunction.bind(this),\n        features: new Collection(),\n        overlaps: false,\n        useSpatialIndex: false,\n        wrapX: options.wrapX,\n      })\n    );\n\n    /**\n     * feature pool to use when updating graticule\n     * @type {Array<Feature>}\n     * @private\n     */\n    this.featurePool_ = [];\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.lineStyle_ = new Style({\n      stroke: this.strokeStyle_,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.loadedExtent_ = null;\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.renderedResolution_ = null;\n\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Strategy function for loading features based on the view's extent and\n   * resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<import(\"../extent.js\").Extent>} Extents.\n   */\n  strategyFunction(extent, resolution) {\n    // extents may be passed in different worlds, to avoid endless loop we use only one\n    let realWorldExtent = extent.slice();\n    if (this.projection_ && this.getSource().getWrapX()) {\n      wrapExtentX(realWorldExtent, this.projection_);\n    }\n    if (this.loadedExtent_) {\n      if (\n        approximatelyEquals(this.loadedExtent_, realWorldExtent, resolution)\n      ) {\n        // make sure result is exactly equal to previous extent\n        realWorldExtent = this.loadedExtent_.slice();\n      } else {\n        // we should not keep track of loaded extents\n        this.getSource().removeLoadedExtent(this.loadedExtent_);\n      }\n    }\n    return [realWorldExtent];\n  }\n\n  /**\n   * Update geometries in the source based on current view\n   * @param {import(\"../extent\").Extent} extent Extent\n   * @param {number} resolution Resolution\n   * @param {import(\"../proj/Projection.js\").default} projection Projection\n   */\n  loaderFunction(extent, resolution, projection) {\n    this.loadedExtent_ = extent;\n    const source = this.getSource();\n\n    // only consider the intersection between our own extent & the requested one\n    const layerExtent = this.getExtent() || [\n      -Infinity,\n      -Infinity,\n      Infinity,\n      Infinity,\n    ];\n    const renderExtent = getIntersection(layerExtent, extent);\n\n    if (\n      this.renderedExtent_ &&\n      equals(this.renderedExtent_, renderExtent) &&\n      this.renderedResolution_ === resolution\n    ) {\n      return;\n    }\n    this.renderedExtent_ = renderExtent;\n    this.renderedResolution_ = resolution;\n\n    // bail out if nothing to render\n    if (isEmpty(renderExtent)) {\n      return;\n    }\n\n    // update projection info\n    const center = getCenter(renderExtent);\n    const squaredTolerance = (resolution * resolution) / 4;\n\n    const updateProjectionInfo =\n      !this.projection_ || !equivalentProjection(this.projection_, projection);\n\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n\n    // first make sure we have enough features in the pool\n    let featureCount = this.meridians_.length + this.parallels_.length;\n    if (this.meridiansLabels_) {\n      featureCount += this.meridians_.length;\n    }\n    if (this.parallelsLabels_) {\n      featureCount += this.parallels_.length;\n    }\n\n    let feature;\n    while (featureCount > this.featurePool_.length) {\n      feature = new Feature();\n      this.featurePool_.push(feature);\n    }\n\n    const featuresColl = source.getFeaturesCollection();\n    featuresColl.clear();\n    let poolIndex = 0;\n\n    // add features for the lines & labels\n    let i, l;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.meridians_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.parallels_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\n    const lineString = this.getMeridian_(\n      lon,\n      minLat,\n      maxLat,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        const text = this.lonLabelFormatter_(lon);\n        if (index in this.meridiansLabels_) {\n          this.meridiansLabels_[index].text = text;\n        } else {\n          this.meridiansLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\n    const lineString = this.getParallel_(\n      lat,\n      minLon,\n      maxLon,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        const text = this.latLabelFormatter_(lat);\n        if (index in this.parallelsLabels_) {\n          this.parallelsLabels_[index].text = text;\n        } else {\n          this.parallelsLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Render event.\n   * @private\n   */\n  drawLabels_(event) {\n    const rotation = event.frameState.viewState.rotation;\n    const resolution = event.frameState.viewState.resolution;\n    const size = event.frameState.size;\n    const extent = event.frameState.extent;\n    const rotationCenter = getCenter(extent);\n    let rotationExtent = extent;\n    if (rotation) {\n      const unrotatedWidth = size[0] * resolution;\n      const unrotatedHeight = size[1] * resolution;\n      rotationExtent = [\n        rotationCenter[0] - unrotatedWidth / 2,\n        rotationCenter[1] - unrotatedHeight / 2,\n        rotationCenter[0] + unrotatedWidth / 2,\n        rotationCenter[1] + unrotatedHeight / 2,\n      ];\n    }\n\n    let startWorld = 0;\n    let endWorld = 0;\n    let labelsAtStart = this.latLabelPosition_ < 0.5;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      startWorld = Math.floor((extent[0] - projectionExtent[0]) / worldWidth);\n      endWorld = Math.ceil((extent[2] - projectionExtent[2]) / worldWidth);\n      const inverted = Math.abs(rotation) > Math.PI / 2;\n      labelsAtStart = labelsAtStart !== inverted;\n    }\n    const vectorContext = getVectorContext(event);\n\n    for (let world = startWorld; world <= endWorld; ++world) {\n      let poolIndex = this.meridians_.length + this.parallels_.length;\n      let feature, index, l, textPoint;\n\n      if (this.meridiansLabels_) {\n        for (index = 0, l = this.meridiansLabels_.length; index < l; ++index) {\n          const lineString = this.meridians_[index];\n          if (!rotation && world === 0) {\n            textPoint = this.getMeridianPoint_(lineString, extent, index);\n          } else {\n            const clone = lineString.clone();\n            clone.translate(world * worldWidth, 0);\n            clone.rotate(-rotation, rotationCenter);\n            textPoint = this.getMeridianPoint_(clone, rotationExtent, index);\n            textPoint.rotate(rotation, rotationCenter);\n          }\n          feature = this.featurePool_[poolIndex++];\n          feature.setGeometry(textPoint);\n          feature.set('graticule_label', this.meridiansLabels_[index].text);\n          vectorContext.drawFeature(feature, this.lonLabelStyle_(feature));\n        }\n      }\n      if (this.parallelsLabels_) {\n        if (\n          (world === startWorld && labelsAtStart) ||\n          (world === endWorld && !labelsAtStart)\n        ) {\n          for (index = 0, l = this.parallels_.length; index < l; ++index) {\n            const lineString = this.parallels_[index];\n            if (!rotation && world === 0) {\n              textPoint = this.getParallelPoint_(lineString, extent, index);\n            } else {\n              const clone = lineString.clone();\n              clone.translate(world * worldWidth, 0);\n              clone.rotate(-rotation, rotationCenter);\n              textPoint = this.getParallelPoint_(clone, rotationExtent, index);\n              textPoint.rotate(rotation, rotationCenter);\n            }\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(textPoint);\n            feature.set('graticule_label', this.parallelsLabels_[index].text);\n            vectorContext.drawFeature(feature, this.latLabelStyle_(feature));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @private\n   */\n  createGraticule_(extent, center, resolution, squaredTolerance) {\n    const interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = 0;\n      this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n\n    let wrapX = false;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      if (getWidth(extent) >= worldWidth) {\n        extent[0] = projectionExtent[0];\n        extent[2] = projectionExtent[2];\n      } else {\n        wrapX = true;\n      }\n    }\n\n    // Constrain the center to fit into the extent available to the graticule\n\n    const validCenterP = [\n      clamp(center[0], this.minX_, this.maxX_),\n      clamp(center[1], this.minY_, this.maxY_),\n    ];\n\n    // Transform the center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    const centerLonLat = this.toLonLatTransform_(validCenterP);\n    if (isNaN(centerLonLat[1])) {\n      centerLonLat[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n    let centerLon = clamp(centerLonLat[0], this.minLon_, this.maxLon_);\n    let centerLat = clamp(centerLonLat[1], this.minLat_, this.maxLat_);\n    const maxLines = this.maxLines_;\n    let cnt, idx, lat, lon;\n\n    // Limit the extent to fit into the extent available to the graticule\n\n    let validExtentP = extent;\n    if (!wrapX) {\n      validExtentP = [\n        clamp(extent[0], this.minX_, this.maxX_),\n        clamp(extent[1], this.minY_, this.maxY_),\n        clamp(extent[2], this.minX_, this.maxX_),\n        clamp(extent[3], this.minY_, this.maxY_),\n      ];\n    }\n\n    // Transform the extent to get the lon lat ranges for the edges of the extent\n\n    const validExtent = applyTransform(\n      validExtentP,\n      this.toLonLatTransform_,\n      undefined,\n      8\n    );\n\n    let maxLat = validExtent[3];\n    let maxLon = validExtent[2];\n    let minLat = validExtent[1];\n    let minLon = validExtent[0];\n\n    if (!wrapX) {\n      // Check if extremities of the world extent lie inside the extent\n      // (for example the pole in a polar projection)\n      // and extend the extent as appropriate\n\n      if (containsCoordinate(validExtentP, this.bottomLeft_)) {\n        minLon = this.minLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.bottomRight_)) {\n        maxLon = this.maxLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topLeft_)) {\n        minLon = this.minLon_;\n        maxLat = this.maxLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topRight_)) {\n        maxLon = this.maxLon_;\n        maxLat = this.maxLat_;\n      }\n\n      // The transformed center may also extend the lon lat ranges used for rendering\n\n      maxLat = clamp(maxLat, centerLat, this.maxLat_);\n      maxLon = clamp(maxLon, centerLon, this.maxLon_);\n      minLat = clamp(minLat, this.minLat_, centerLat);\n      minLon = clamp(minLon, this.minLon_, centerLon);\n    }\n\n    // Create meridians\n\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon -= interval) >= minLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.minLon_ && cnt++ < maxLines) {\n        lon = Math.max(lon - interval, this.minLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon += interval) <= maxLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.maxLon_ && cnt++ < maxLines) {\n        lon = Math.min(lon + interval, this.maxLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n\n    // Create parallels\n\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @return {number} The interval in degrees.\n   * @private\n   */\n  getInterval_(resolution) {\n    const centerLon = this.projectionCenterLonLat_[0];\n    const centerLat = this.projectionCenterLonLat_[1];\n    let interval = -1;\n    const target = Math.pow(this.targetSize_ * resolution, 2);\n    /** @type {Array<number>} **/\n    const p1 = [];\n    /** @type {Array<number>} **/\n    const p2 = [];\n    for (let i = 0, ii = this.intervals_.length; i < ii; ++i) {\n      const delta = clamp(this.intervals_[i] / 2, 0, 90);\n      // Don't attempt to transform latitudes beyond the poles!\n      const clampedLat = clamp(centerLat, -90 + delta, 90 - delta);\n      p1[0] = centerLon - delta;\n      p1[1] = clampedLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = clampedLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = this.intervals_[i];\n    }\n    return interval;\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The meridian line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\n    const flatCoordinates = meridian(\n      lon,\n      minLat,\n      maxLat,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n      this.meridians_[index] = lineString;\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Meridian\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Meridian point.\n   * @private\n   */\n  getMeridianPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let bottom = 1;\n    let top = flatCoordinates.length - 1;\n    if (flatCoordinates[bottom] > flatCoordinates[top]) {\n      bottom = top;\n      top = 1;\n    }\n    const clampedBottom = Math.max(extent[1], flatCoordinates[bottom]);\n    const clampedTop = Math.min(extent[3], flatCoordinates[top]);\n    const lat = clamp(\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n      clampedBottom,\n      clampedTop\n    );\n    const coordinate0 =\n      flatCoordinates[bottom - 1] +\n      ((flatCoordinates[top - 1] - flatCoordinates[bottom - 1]) *\n        (lat - flatCoordinates[bottom])) /\n        (flatCoordinates[top] - flatCoordinates[bottom]);\n    const coordinate = [coordinate0, lat];\n    const point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of meridians.  Meridians are lines of equal longitude.\n   * @return {Array<LineString>} The meridians.\n   * @api\n   */\n  getMeridians() {\n    return this.meridians_;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The parallel line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\n    const flatCoordinates = parallel(\n      lat,\n      minLon,\n      maxLon,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Parallels.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Parallel point.\n   * @private\n   */\n  getParallelPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let left = 0;\n    let right = flatCoordinates.length - 2;\n    if (flatCoordinates[left] > flatCoordinates[right]) {\n      left = right;\n      right = 0;\n    }\n    const clampedLeft = Math.max(extent[0], flatCoordinates[left]);\n    const clampedRight = Math.min(extent[2], flatCoordinates[right]);\n    const lon = clamp(\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n      clampedLeft,\n      clampedRight\n    );\n    const coordinate1 =\n      flatCoordinates[left + 1] +\n      ((flatCoordinates[right + 1] - flatCoordinates[left + 1]) *\n        (lon - flatCoordinates[left])) /\n        (flatCoordinates[right] - flatCoordinates[left]);\n    const coordinate = [lon, coordinate1];\n    const point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of parallels.  Parallels are lines of equal latitude.\n   * @return {Array<LineString>} The parallels.\n   * @api\n   */\n  getParallels() {\n    return this.parallels_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateProjectionInfo_(projection) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const worldExtent = projection.getWorldExtent();\n\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n\n    // If the world extent crosses the dateline define a custom transform to\n    // return longitudes which wrap the dateline\n\n    const toLonLatTransform = getTransform(projection, epsg4326Projection);\n    if (this.minLon_ < this.maxLon_) {\n      this.toLonLatTransform_ = toLonLatTransform;\n    } else {\n      const split = this.minLon_ + this.maxLon_ / 2;\n      this.maxLon_ += 360;\n      this.toLonLatTransform_ = function (coordinates, output, dimension) {\n        dimension = dimension || 2;\n        const lonLatCoordinates = toLonLatTransform(\n          coordinates,\n          output,\n          dimension\n        );\n        for (let i = 0, l = lonLatCoordinates.length; i < l; i += dimension) {\n          if (lonLatCoordinates[i] < split) {\n            lonLatCoordinates[i] += 360;\n          }\n        }\n        return lonLatCoordinates;\n      };\n    }\n\n    // Transform the extent to get the limits of the view projection extent\n    // which should be available to the graticule\n\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n    const worldExtentP = applyTransform(\n      [this.minLon_, this.minLat_, this.maxLon_, this.maxLat_],\n      this.fromLonLatTransform_,\n      undefined,\n      8\n    );\n\n    this.minX_ = worldExtentP[0];\n    this.maxX_ = worldExtentP[2];\n    this.minY_ = worldExtentP[1];\n    this.maxY_ = worldExtentP[3];\n\n    // Determine the view projection coordinates of the extremities of the world extent\n    // as these may lie inside a view extent (for example the pole in a polar projection)\n\n    this.bottomLeft_ = this.fromLonLatTransform_([this.minLon_, this.minLat_]);\n    this.bottomRight_ = this.fromLonLatTransform_([this.maxLon_, this.minLat_]);\n    this.topLeft_ = this.fromLonLatTransform_([this.minLon_, this.maxLat_]);\n    this.topRight_ = this.fromLonLatTransform_([this.maxLon_, this.maxLat_]);\n\n    // Transform the projection center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(\n      getCenter(projection.getExtent())\n    );\n    if (isNaN(this.projectionCenterLonLat_[1])) {\n      this.projectionCenterLonLat_[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n\n    this.projection_ = projection;\n  }\n}\n\nexport default Graticule;\n","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render.js';\n * import Fill from 'ol/style/Fill.js';\n * import Polygon from 'ol/geom/Polygon.js';\n *\n * const canvas = document.createElement('canvas');\n * const render = toContext(\n *     canvas.getContext('2d'),\n *     {size: [100, 100]}\n * );\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\n * );\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, options) {\n  const canvas = context.canvas;\n  options = options ? options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\n    throw new Error('Only works for render events from Canvas 2D layers');\n  }\n\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\n  const a = event.inversePixelTransform[0];\n  const b = event.inversePixelTransform[1];\n  const canvasPixelRatio = Math.sqrt(a * a + b * b);\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    canvasPixelRatio\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection\n    );\n  }\n\n  return new CanvasImmediateRenderer(\n    event.context,\n    canvasPixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n","/**\n * @module ol/layer/Heatmap\n */\nimport BaseVector from './BaseVector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default<import(\"../geom/Point.js\").default>} [source] Point source.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius',\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {BaseVector<import(\"../source/Vector.js\").default, WebGLPointsLayerRenderer>}\n * @api\n */\nclass Heatmap extends BaseVector {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    this.addChangeListener(Property.GRADIENT, this.handleGradientChanged_);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    const weight = options.weight ? options.weight : 'weight';\n    if (typeof weight === 'string') {\n      this.weightFunction_ = function (feature) {\n        return feature.get(weight);\n      };\n    } else {\n      this.weightFunction_ = weight;\n    }\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n\n  createRenderer() {\n    return new WebGLPointsLayerRenderer(this, {\n      className: this.getClassName(),\n      attributes: [\n        {\n          name: 'weight',\n          callback: (feature) => {\n            const weight = this.weightFunction_(feature);\n            return weight !== undefined ? clamp(weight, 0, 1) : 1;\n          },\n        },\n      ],\n      vertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_weight = a_weight;\n        }`,\n      fragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\n        }`,\n      hitVertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n        attribute vec4 a_hitColor;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_hitColor = a_hitColor;\n          v_weight = a_weight;\n        }`,\n      hitFragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          if (alpha < 0.05) {\n            discard;\n          }\n\n          gl_FragColor = v_hitColor;\n        }`,\n      uniforms: {\n        u_size: () => {\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n        },\n        u_blurSlope: () => {\n          return (\n            this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR))\n          );\n        },\n      },\n      postProcesses: [\n        {\n          fragmentShader: `\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n            uniform float u_opacity;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a * u_opacity;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }`,\n          uniforms: {\n            u_gradientTexture: () => {\n              return this.gradient_;\n            },\n            u_opacity: () => {\n              return this.getOpacity();\n            },\n          },\n        },\n      ],\n    });\n  }\n\n  renderDeclutter() {}\n}\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\nexport default Heatmap;\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {assert} from '../asserts.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [options] Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1]\n          );\n          coordsLen += 2;\n        }\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        values,\n        id\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n            ? new LineString(flatCoordinates, 'XY')\n            : geometryType === 'MultiPoint'\n            ? new MultiPoint(flatCoordinates, 'XY')\n            : geometryType === 'MultiLineString'\n            ? new MultiLineString(flatCoordinates, 'XY', ends)\n            : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return features;\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n          ? pbf.readDouble()\n          : tag === 4\n          ? pbf.readVarint64()\n          : tag === 5\n          ? pbf.readVarint()\n          : tag === 6\n          ? pbf.readSVarint()\n          : tag === 7\n          ? pbf.readBoolean()\n          : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../geom/Geometry.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../geom/Geometry.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options} [options] Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Object} */ (Object.assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(\n      /** @type {import(\"./BaseVector.js\").Options<import(\"../source/VectorTile.js\").default>} */ (\n        baseOptions\n      )\n    );\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    // `renderMode` must be `'hybrid'` or `'vector'`.\n    assert(renderMode == 'hybrid' || renderMode == 'vector', 28);\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/layer/MapboxVector\n */\nimport BaseEvent from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport MVT from '../format/MVT.js';\nimport VectorTileLayer from '../layer/VectorTile.js';\nimport VectorTileSource from '../source/VectorTile.js';\nimport {applyBackground, applyStyle} from 'ol-mapbox-style';\n\n/**\n * @classdesc\n * Event emitted on configuration or loading error.\n */\nclass ErrorEvent extends BaseEvent {\n  /**\n   * @param {Error} error error object.\n   */\n  constructor(error) {\n    super(EventType.ERROR);\n\n    /**\n     * @type {Error}\n     */\n    this.error = error;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {string} styleUrl The URL of the Mapbox style object to use for this layer.  For a\n * style created with Mapbox Studio and hosted on Mapbox, this will look like\n * 'mapbox://styles/you/your-style'.\n * @property {string} [accessToken] The access token for your Mapbox style. This has to be provided\n * for `mapbox://` style urls. For `https://` and other urls, any access key must be the last query\n * parameter of the style url.\n * @property {string} [source] If your style uses more than one source, you need to use either the\n * `source` property or the `layers` property to limit rendering to a single vector source.  The\n * `source` property corresponds to the id of a vector source in your Mapbox style.\n * @property {Array<string>} [layers] Limit rendering to the list of included layers.  All layers\n * must share the same vector source.  If your style uses more than one source, you need to use\n * either the `source` property or the `layers` property to limit rendering to a single vector\n * source.\n * @property {boolean} [declutter=true] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer.\n * If not specified, the background from the Mapbox style object will be used. Set to `false` to prevent\n * the Mapbox style's background from being used.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `maxResolution` will\n * match the style source's `minzoom`.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `minZoom` will match\n * the style source's `minzoom`.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"./VectorTile.js\").VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * A vector tile layer based on a Mapbox style that uses a single vector source.  Configure\n * the layer with the `styleUrl` and `accessToken` shown in Mapbox Studio's share panel.\n * If the style uses more than one source, use the `source` property to choose a single\n * vector source.  If you want to render a subset of the layers in the style, use the `layers`\n * property (all layers must share the same vector source).  See the constructor options for\n * more detail.\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new MapboxVectorLayer({\n *           styleUrl: 'mapbox://styles/mapbox/bright-v9',\n *           accessToken: 'your-mapbox-access-token-here',\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * On configuration or loading error, the layer will trigger an `'error'` event.  Listeners\n * will receive an object with an `error` property that can be used to diagnose the problem.\n *\n * **Note for users of the full build**: The `MapboxVectorLayer` requires the\n * [ol-mapbox-style](https://github.com/openlayers/ol-mapbox-style) library to be loaded as well.\n *\n * @param {Options} options Options.\n * @extends {VectorTileLayer}\n * @fires module:ol/events/Event~BaseEvent#event:error\n * @api\n */\nclass MapboxVectorLayer extends VectorTileLayer {\n  /**\n   * @param {Options} options Layer options.  At a minimum, `styleUrl` and `accessToken`\n   * must be provided.\n   */\n  constructor(options) {\n    const declutter = 'declutter' in options ? options.declutter : true;\n    const source = new VectorTileSource({\n      state: 'loading',\n      format: new MVT(),\n    });\n\n    super({\n      source: source,\n      background: options.background,\n      declutter: declutter,\n      className: options.className,\n      opacity: options.opacity,\n      visible: options.visible,\n      zIndex: options.zIndex,\n      minResolution: options.minResolution,\n      maxResolution: options.maxResolution,\n      minZoom: options.minZoom,\n      maxZoom: options.maxZoom,\n      renderOrder: options.renderOrder,\n      renderBuffer: options.renderBuffer,\n      renderMode: options.renderMode,\n      map: options.map,\n      updateWhileAnimating: options.updateWhileAnimating,\n      updateWhileInteracting: options.updateWhileInteracting,\n      preload: options.preload,\n      useInterimTilesOnError: options.useInterimTilesOnError,\n      properties: options.properties,\n    });\n\n    if (options.accessToken) {\n      this.accessToken = options.accessToken;\n    }\n    const url = options.styleUrl;\n    applyStyle(this, url, options.layers || options.source, {\n      accessToken: this.accessToken,\n    })\n      .then(() => {\n        source.setState('ready');\n      })\n      .catch((error) => {\n        this.dispatchEvent(new ErrorEvent(error));\n        const source = this.getSource();\n        source.setState('error');\n      });\n    if (this.getBackground() === undefined) {\n      applyBackground(this, options.styleUrl, {\n        accessToken: this.accessToken,\n      });\n    }\n  }\n}\n\nexport default MapboxVectorLayer;\n","/**\n * @module ol/layer/VectorImage\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text on this layer. The priority is defined\n * by the `zIndex` of the style and the render order of features. Higher z-index means higher priority.\n * Within the same z-index, a feature rendered before another has higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {number} [imageRatio=1] Ratio by which the rendered extent should be larger than the\n * viewport extent. A larger ratio avoids cut images during panning, but will cause a decrease in performance.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, to an image. This layer type provides great performance\n * during panning and zooming, but point symbols and texts are always rotated with the view and\n * pixels are scaled during zoom animations. For more accurate rendering of vector data, use\n * {@link module:ol/layer/Vector~VectorLayer} instead.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorImageLayerRenderer>}\n * @api\n */\nclass VectorImageLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.imageRatio;\n    super(baseOptions);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.imageRatio_ =\n      options.imageRatio !== undefined ? options.imageRatio : 1;\n  }\n\n  /**\n   * @return {number} Ratio between rendered extent size and viewport extent size.\n   */\n  getImageRatio() {\n    return this.imageRatio_;\n  }\n\n  createRenderer() {\n    return new CanvasVectorImageLayerRenderer(this);\n  }\n}\n\nexport default VectorImageLayer;\n","/**\n * @module ol/layer/WebGLPoints\n */\nimport Layer from './Layer.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {parseLiteralStyle} from '../webgl/ShaderBuilder.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<import(\"../geom/Point.js\").default>} VectorSourceType\n * @typedef {Object} Options\n * @property {import('../style/literal.js').LiteralStyle} style Literal style to apply to the layer features.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {VectorSourceType} [source] Point source.\n * @property {boolean} [disableHitDetection=false] Setting this to true will provide a slight performance boost, but will\n * prevent all hit detection on the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer optimized for rendering large point datasets. Takes a `style` property which\n * is a serializable JSON object describing how the layer should be rendered.\n *\n * Here are a few samples of literal style objects:\n * ```js\n * const style = {\n *   symbol: {\n *     symbolType: 'circle',\n *     size: 8,\n *     color: '#33AAFF',\n *     opacity: 0.9\n *   }\n * }\n * ```\n *\n * ```js\n * const style = {\n *   symbol: {\n *     symbolType: 'image',\n *     offset: [0, 12],\n *     size: [4, 8],\n *     src: '../static/exclamation-mark.png'\n *   }\n * }\n * ```\n *\n * **Important: a `WebGLPoints` layer must be manually disposed when removed, otherwise the underlying WebGL context\n * will not be garbage collected.**\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<import(\"../geom/Point.js\").default>} VectorSourceType\n * @extends {Layer<VectorSourceType, WebGLPointsLayerRenderer>}\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nclass WebGLPointsLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} options Options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {import('../webgl/ShaderBuilder.js').StyleParseResult}\n     */\n    this.parseResult_ = parseLiteralStyle(options.style);\n\n    /**\n     * @type {Object<string, (string|number)>}\n     * @private\n     */\n    this.styleVariables_ = options.style.variables || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hitDetectionDisabled_ = !!options.disableHitDetection;\n  }\n\n  createRenderer() {\n    return new WebGLPointsLayerRenderer(this, {\n      vertexShader: this.parseResult_.builder.getSymbolVertexShader(),\n      fragmentShader: this.parseResult_.builder.getSymbolFragmentShader(),\n      hitVertexShader:\n        !this.hitDetectionDisabled_ &&\n        this.parseResult_.builder.getSymbolVertexShader(true),\n      hitFragmentShader:\n        !this.hitDetectionDisabled_ &&\n        this.parseResult_.builder.getSymbolFragmentShader(true),\n      uniforms: this.parseResult_.uniforms,\n      attributes: this.parseResult_.attributes,\n    });\n  }\n\n  /**\n   * Update any variables used by the layer style and trigger a re-render.\n   * @param {Object<string, number>} variables Variables to update.\n   */\n  updateStyleVariables(variables) {\n    Object.assign(this.styleVariables_, variables);\n    this.changed();\n  }\n}\n\nexport default WebGLPointsLayer;\n","/**\n * @module ol/layer/WebGLTile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport LayerProperty from '../layer/Property.js';\nimport WebGLTileLayerRenderer, {\n  Attributes,\n  Uniforms,\n} from '../renderer/webgl/TileLayer.js';\nimport {\n  PALETTE_TEXTURE_ARRAY,\n  ValueTypes,\n  expressionToGlsl,\n  getStringNumberEquivalent,\n  uniformNameForVariable,\n} from '../style/expressions.js';\n\n/**\n * @typedef {import(\"../source/DataTile.js\").default|import(\"../source/TileImage.js\").default} SourceType\n */\n\n/**\n * @typedef {Object} Style\n * Translates tile data to rendered pixels.\n *\n * @property {Object<string, (string|number)>} [variables] Style variables.  Each variable must hold a number or string.  These\n * variables can be used in the `color`, `brightness`, `contrast`, `exposure`, `saturation` and `gamma`\n * {@link import(\"../style/expressions.js\").ExpressionValue expressions}, using the `['var', 'varName']` operator.\n * To update style variables, use the {@link import(\"./WebGLTile.js\").default#updateStyleVariables} method.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [color] An expression applied to color values.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [brightness=0] Value used to decrease or increase\n * the layer brightness.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [contrast=0] Value used to decrease or increase\n * the layer contrast.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [exposure=0] Value used to decrease or increase\n * the layer exposure.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [saturation=0] Value used to decrease or increase\n * the layer saturation.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [gamma=1] Apply a gamma correction to the layer.\n * Values range from 0 to infinity.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Style} [style] Style to apply to the layer.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {SourceType} [source] Source for this layer.\n * @property {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>} [sources] Array\n * of sources for this layer. Takes precedence over `source`. Can either be an array of sources, or a function that\n * expects an extent and a resolution (in view projection units per pixel) and returns an array of sources. See\n * {@link module:ol/source.sourcesFromTileGrid} for a helper function to generate sources that are organized in a\n * pyramid following the same pattern as a tile grid. **Note:** All sources must have the same band count and content.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map~Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {number} [cacheSize=512] The internal texture cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @typedef {Object} ParsedStyle\n * @property {string} vertexShader The vertex shader.\n * @property {string} fragmentShader The fragment shader.\n * @property {Object<string,import(\"../webgl/Helper.js\").UniformValue>} uniforms Uniform definitions.\n * @property {Array<import(\"../webgl/PaletteTexture.js\").default>} paletteTextures Palette textures.\n */\n\n/**\n * @param {Style} style The layer style.\n * @param {number} [bandCount] The number of bands.\n * @return {ParsedStyle} Shaders and uniforms generated from the style.\n */\nfunction parseStyle(style, bandCount) {\n  const vertexShader = `\n    attribute vec2 ${Attributes.TEXTURE_COORD};\n    uniform mat4 ${Uniforms.TILE_TRANSFORM};\n    uniform float ${Uniforms.TEXTURE_PIXEL_WIDTH};\n    uniform float ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n    uniform float ${Uniforms.TEXTURE_RESOLUTION};\n    uniform float ${Uniforms.TEXTURE_ORIGIN_X};\n    uniform float ${Uniforms.TEXTURE_ORIGIN_Y};\n    uniform float ${Uniforms.DEPTH};\n\n    varying vec2 v_textureCoord;\n    varying vec2 v_mapCoord;\n\n    void main() {\n      v_textureCoord = ${Attributes.TEXTURE_COORD};\n      v_mapCoord = vec2(\n        ${Uniforms.TEXTURE_ORIGIN_X} + ${Uniforms.TEXTURE_RESOLUTION} * ${Uniforms.TEXTURE_PIXEL_WIDTH} * v_textureCoord[0],\n        ${Uniforms.TEXTURE_ORIGIN_Y} - ${Uniforms.TEXTURE_RESOLUTION} * ${Uniforms.TEXTURE_PIXEL_HEIGHT} * v_textureCoord[1]\n      );\n      gl_Position = ${Uniforms.TILE_TRANSFORM} * vec4(${Attributes.TEXTURE_COORD}, ${Uniforms.DEPTH}, 1.0);\n    }\n  `;\n\n  /**\n   * @type {import(\"../style/expressions.js\").ParsingContext}\n   */\n  const context = {\n    inFragmentShader: true,\n    variables: [],\n    attributes: [],\n    stringLiteralsMap: {},\n    functions: {},\n    bandCount: bandCount,\n  };\n\n  const pipeline = [];\n\n  if (style.color !== undefined) {\n    const color = expressionToGlsl(context, style.color, ValueTypes.COLOR);\n    pipeline.push(`color = ${color};`);\n  }\n\n  if (style.contrast !== undefined) {\n    const contrast = expressionToGlsl(\n      context,\n      style.contrast,\n      ValueTypes.NUMBER\n    );\n    pipeline.push(\n      `color.rgb = clamp((${contrast} + 1.0) * color.rgb - (${contrast} / 2.0), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`\n    );\n  }\n\n  if (style.exposure !== undefined) {\n    const exposure = expressionToGlsl(\n      context,\n      style.exposure,\n      ValueTypes.NUMBER\n    );\n    pipeline.push(\n      `color.rgb = clamp((${exposure} + 1.0) * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`\n    );\n  }\n\n  if (style.saturation !== undefined) {\n    const saturation = expressionToGlsl(\n      context,\n      style.saturation,\n      ValueTypes.NUMBER\n    );\n    pipeline.push(`\n      float saturation = ${saturation} + 1.0;\n      float sr = (1.0 - saturation) * 0.2126;\n      float sg = (1.0 - saturation) * 0.7152;\n      float sb = (1.0 - saturation) * 0.0722;\n      mat3 saturationMatrix = mat3(\n        sr + saturation, sr, sr,\n        sg, sg + saturation, sg,\n        sb, sb, sb + saturation\n      );\n      color.rgb = clamp(saturationMatrix * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\n    `);\n  }\n\n  if (style.gamma !== undefined) {\n    const gamma = expressionToGlsl(context, style.gamma, ValueTypes.NUMBER);\n    pipeline.push(`color.rgb = pow(color.rgb, vec3(1.0 / ${gamma}));`);\n  }\n\n  if (style.brightness !== undefined) {\n    const brightness = expressionToGlsl(\n      context,\n      style.brightness,\n      ValueTypes.NUMBER\n    );\n    pipeline.push(\n      `color.rgb = clamp(color.rgb + ${brightness}, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`\n    );\n  }\n\n  /** @type {Object<string,import(\"../webgl/Helper\").UniformValue>} */\n  const uniforms = {};\n\n  const numVariables = context.variables.length;\n  if (numVariables > 1 && !style.variables) {\n    throw new Error(\n      `Missing variables in style (expected ${context.variables})`\n    );\n  }\n\n  for (let i = 0; i < numVariables; ++i) {\n    const variableName = context.variables[i];\n    if (!(variableName in style.variables)) {\n      throw new Error(`Missing '${variableName}' in style variables`);\n    }\n    const uniformName = uniformNameForVariable(variableName);\n    uniforms[uniformName] = function () {\n      let value = style.variables[variableName];\n      if (typeof value === 'string') {\n        value = getStringNumberEquivalent(context, value);\n      }\n      return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n    };\n  }\n\n  const uniformDeclarations = Object.keys(uniforms).map(function (name) {\n    return `uniform float ${name};`;\n  });\n\n  const textureCount = Math.ceil(bandCount / 4);\n  uniformDeclarations.push(\n    `uniform sampler2D ${Uniforms.TILE_TEXTURE_ARRAY}[${textureCount}];`\n  );\n\n  if (context.paletteTextures) {\n    uniformDeclarations.push(\n      `uniform sampler2D ${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}];`\n    );\n  }\n\n  const functionDefintions = Object.keys(context.functions).map(function (\n    name\n  ) {\n    return context.functions[name];\n  });\n\n  const fragmentShader = `\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    #else\n    precision mediump float;\n    #endif\n\n    varying vec2 v_textureCoord;\n    varying vec2 v_mapCoord;\n    uniform vec4 ${Uniforms.RENDER_EXTENT};\n    uniform float ${Uniforms.TRANSITION_ALPHA};\n    uniform float ${Uniforms.TEXTURE_PIXEL_WIDTH};\n    uniform float ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n    uniform float ${Uniforms.RESOLUTION};\n    uniform float ${Uniforms.ZOOM};\n\n    ${uniformDeclarations.join('\\n')}\n\n    ${functionDefintions.join('\\n')}\n\n    void main() {\n      if (\n        v_mapCoord[0] < ${Uniforms.RENDER_EXTENT}[0] ||\n        v_mapCoord[1] < ${Uniforms.RENDER_EXTENT}[1] ||\n        v_mapCoord[0] > ${Uniforms.RENDER_EXTENT}[2] ||\n        v_mapCoord[1] > ${Uniforms.RENDER_EXTENT}[3]\n      ) {\n        discard;\n      }\n\n      vec4 color = texture2D(${\n        Uniforms.TILE_TEXTURE_ARRAY\n      }[0],  v_textureCoord);\n\n      ${pipeline.join('\\n')}\n\n      if (color.a == 0.0) {\n        discard;\n      }\n\n      gl_FragColor = color;\n      gl_FragColor.rgb *= gl_FragColor.a;\n      gl_FragColor *= ${Uniforms.TRANSITION_ALPHA};\n    }`;\n\n  return {\n    vertexShader: vertexShader,\n    fragmentShader: fragmentShader,\n    uniforms: uniforms,\n    paletteTextures: context.paletteTextures,\n  };\n}\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends BaseTileLayer<SourceType, WebGLTileLayerRenderer>\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nclass WebGLTileLayer extends BaseTileLayer {\n  /**\n   * @param {Options} options Tile layer options.\n   */\n  constructor(options) {\n    options = options ? Object.assign({}, options) : {};\n\n    const style = options.style || {};\n    delete options.style;\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    super(options);\n\n    /**\n     * @type {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>}\n     * @private\n     */\n    this.sources_ = options.sources;\n\n    /**\n     * @type {SourceType|null}\n     * @private\n     */\n    this.renderedSource_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.style_ = style;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    /**\n     * @type {Object<string, (string|number)>}\n     * @private\n     */\n    this.styleVariables_ = this.style_.variables || {};\n\n    this.addChangeListener(LayerProperty.SOURCE, this.handleSourceUpdate_);\n  }\n\n  /**\n   * Gets the sources for this layer, for a given extent and resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<SourceType>} Sources.\n   */\n  getSources(extent, resolution) {\n    const source = this.getSource();\n    return this.sources_\n      ? typeof this.sources_ === 'function'\n        ? this.sources_(extent, resolution)\n        : this.sources_\n      : source\n      ? [source]\n      : [];\n  }\n\n  /**\n   * @return {SourceType} The source being rendered.\n   */\n  getRenderSource() {\n    return this.renderedSource_ || this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getRenderSource();\n    return source ? source.getState() : 'undefined';\n  }\n\n  /**\n   * @private\n   */\n  handleSourceUpdate_() {\n    if (this.hasRenderer()) {\n      this.getRenderer().clearCache();\n    }\n    if (this.getSource()) {\n      this.setStyle(this.style_);\n    }\n  }\n\n  /**\n   * @private\n   * @return {number} The number of source bands.\n   */\n  getSourceBandCount_() {\n    const max = Number.MAX_SAFE_INTEGER;\n    const sources = this.getSources([-max, -max, max, max], max);\n    return sources && sources.length && 'bandCount' in sources[0]\n      ? sources[0].bandCount\n      : 4;\n  }\n\n  createRenderer() {\n    const parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n\n    return new WebGLTileLayerRenderer(this, {\n      vertexShader: parsedStyle.vertexShader,\n      fragmentShader: parsedStyle.fragmentShader,\n      uniforms: parsedStyle.uniforms,\n      cacheSize: this.cacheSize_,\n      paletteTextures: parsedStyle.paletteTextures,\n    });\n  }\n\n  /**\n   * @param {import(\"../Map\").FrameState} frameState Frame state.\n   * @param {Array<SourceType>} sources Sources.\n   * @return {HTMLElement} Canvas.\n   */\n  renderSources(frameState, sources) {\n    const layerRenderer = this.getRenderer();\n    let canvas;\n    for (let i = 0, ii = sources.length; i < ii; ++i) {\n      this.renderedSource_ = sources[i];\n      if (layerRenderer.prepareFrame(frameState)) {\n        canvas = layerRenderer.renderFrame(frameState);\n      }\n    }\n    return canvas;\n  }\n\n  /**\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    this.rendered = true;\n    const viewState = frameState.viewState;\n    const sources = this.getSources(frameState.extent, viewState.resolution);\n    let ready = true;\n    for (let i = 0, ii = sources.length; i < ii; ++i) {\n      const source = sources[i];\n      const sourceState = source.getState();\n      if (sourceState == 'loading') {\n        const onChange = () => {\n          if (source.getState() == 'ready') {\n            source.removeEventListener('change', onChange);\n            this.changed();\n          }\n        };\n        source.addEventListener('change', onChange);\n      }\n      ready = ready && sourceState == 'ready';\n    }\n    const canvas = this.renderSources(frameState, sources);\n    if (this.getRenderer().renderComplete && ready) {\n      // Fully rendered, done.\n      this.renderedResolution_ = viewState.resolution;\n      return canvas;\n    }\n    // Render sources from previously fully rendered frames\n    if (this.renderedResolution_ > 0.5 * viewState.resolution) {\n      const altSources = this.getSources(\n        frameState.extent,\n        this.renderedResolution_\n      ).filter((source) => !sources.includes(source));\n      if (altSources.length > 0) {\n        return this.renderSources(frameState, altSources);\n      }\n    }\n    return canvas;\n  }\n\n  /**\n   * Update the layer style.  The `updateStyleVariables` function is a more efficient\n   * way to update layer rendering.  In cases where the whole style needs to be updated,\n   * this method may be called instead.  Note that calling this method will also replace\n   * any previously set variables, so the new style also needs to include new variables,\n   * if needed.\n   * @param {Style} style The new style.\n   */\n  setStyle(style) {\n    this.styleVariables_ = style.variables || {};\n    this.style_ = style;\n    const parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n    const renderer = this.getRenderer();\n    renderer.reset({\n      vertexShader: parsedStyle.vertexShader,\n      fragmentShader: parsedStyle.fragmentShader,\n      uniforms: parsedStyle.uniforms,\n      paletteTextures: parsedStyle.paletteTextures,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update any variables used by the layer style and trigger a re-render.\n   * @param {Object<string, number>} variables Variables to update.\n   * @api\n   */\n  updateStyleVariables(variables) {\n    Object.assign(this.styleVariables_, variables);\n    this.changed();\n  }\n}\n\n/**\n * Clean up underlying WebGL resources.\n * @function\n * @api\n */\nWebGLTileLayer.prototype.dispose;\n\nexport default WebGLTileLayer;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {get as getProjection, getUserProjection} from '../proj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nexport class DragAndDropEvent extends Event {\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>} [features] Features.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   */\n  constructor(type, file, features, projection) {\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = projection;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'addfeatures', DragAndDropEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'addfeatures', Return>} DragAndDropOnSignature\n */\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      handleEvent: TRUE,\n    });\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragAndDropOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.readAsBuffer_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */\n    this.formats_ = [];\n    const formatConstructors = options.formatConstructors\n      ? options.formatConstructors\n      : [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      let format = formatConstructors[i];\n      if (typeof format === 'function') {\n        format = new format();\n      }\n      this.formats_.push(format);\n      this.readAsBuffer_ =\n        this.readAsBuffer_ || format.getType() === 'arraybuffer';\n    }\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection\n      ? getProjection(options.projection)\n      : null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.target = options.target ? options.target : null;\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      projection = getUserProjection();\n      if (!projection) {\n        const view = map.getView();\n        projection = view.getProjection();\n      }\n    }\n\n    let text;\n    const formats = this.formats_;\n    for (let i = 0, ii = formats.length; i < ii; ++i) {\n      const format = formats[i];\n      let input = result;\n      if (this.readAsBuffer_ && format.getType() !== 'arraybuffer') {\n        if (text === undefined) {\n          text = new TextDecoder().decode(result);\n        }\n        input = text;\n      }\n      const features = this.tryReadFeatures_(format, input, {\n        featureProjection: projection,\n      });\n      if (features && features.length > 0) {\n        if (this.source_) {\n          this.source_.clear();\n          this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(\n          new DragAndDropEvent(\n            DragAndDropEventType.ADD_FEATURES,\n            file,\n            features,\n            projection\n          )\n        );\n        break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, this.handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n        listen(dropArea, EventType.DROP, this.handleStop, this),\n      ];\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return (\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        (format.readFeatures(text, options))\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleDrop(event) {\n    const files = event.dataTransfer.files;\n    for (let i = 0, ii = files.length; i < ii; ++i) {\n      const file = files.item(i);\n      const reader = new FileReader();\n      reader.addEventListener(\n        EventType.LOAD,\n        this.handleResult_.bind(this, file)\n      );\n      if (this.readAsBuffer_) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n}\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport {mouseOnly, shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {\n  always,\n  never,\n  noModifierKeys,\n  shiftKeyOnly,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {clamp, squaredDistance, toFixed} from '../math.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {\n  distance,\n  squaredDistance as squaredCoordinateDistance,\n} from '../coordinate.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/Geometry.js\").Type} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean|import(\"../events/condition.js\").Condition} [trace=false] Trace a portion of another geometry.\n * Ignored when in freehand mode.\n * @property {VectorSource} [traceSource] Source for features to trace.  If tracing is active and a `traceSource` is\n * not provided, the interaction's `source` will be used.  Tracing requires that the interaction is configured with\n * either a `traceSource` or a `source`.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the draw interaction.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * @typedef {Object} TraceState\n * @property {boolean} active Tracing active.\n * @property {import(\"../pixel.js\").Pixel} [startPx] The initially clicked pixel location.\n * @property {Array<TraceTarget>} [targets] Targets available for tracing.\n * @property {number} [targetIndex] The index of the currently traced target.  A value of -1 indicates\n * that no trace target is active.\n */\n\n/**\n * @typedef {Object} TraceTarget\n * @property {Array<import(\"../coordinate.js\").Coordinate>} coordinates Target coordinates.\n * @property {boolean} ring The target coordinates are a linear ring.\n * @property {number} startIndex The index of first traced coordinate.  A fractional index represents an\n * edge intersection.  Index values for rings will wrap (may be negative or larger than coordinates length).\n * @property {number} endIndex The index of last traced coordinate.  Details from startIndex also apply here.\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'Polygon' | 'Circle'} Mode\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n */\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {Array<Feature>} features The candidate features.\n * @return {Array<TraceTarget>} The trace targets.\n */\nfunction getTraceTargets(coordinate, features) {\n  /**\n   * @type {Array<TraceTarget>}\n   */\n  const targets = [];\n\n  for (let i = 0; i < features.length; ++i) {\n    const feature = features[i];\n    const geometry = feature.getGeometry();\n    appendGeometryTraceTargets(coordinate, geometry, targets);\n  }\n\n  return targets;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} a One coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b Another coordinate.\n * @return {number} The squared distance between the two coordinates.\n */\nfunction getSquaredDistance(a, b) {\n  return squaredDistance(a[0], a[1], b[0], b[1]);\n}\n\n/**\n * @param {LineCoordType} coordinates The ring coordinates.\n * @param {number} index The index.  May be wrapped.\n * @return {import(\"../coordinate.js\").Coordinate} The coordinate.\n */\nfunction getCoordinate(coordinates, index) {\n  const count = coordinates.length;\n  if (index < 0) {\n    return coordinates[index + count];\n  }\n  if (index >= count) {\n    return coordinates[index - count];\n  }\n  return coordinates[index];\n}\n\n/**\n * Get the cumulative squared distance along a ring path.  The end index index may be \"wrapped\" and it may\n * be less than the start index to indicate the direction of travel.  The start and end index may have\n * a fractional part to indicate a point between two coordinates.\n * @param {LineCoordType} coordinates Ring coordinates.\n * @param {number} startIndex The start index.\n * @param {number} endIndex The end index.\n * @return {number} The cumulative squared distance along the ring path.\n */\nfunction getCumulativeSquaredDistance(coordinates, startIndex, endIndex) {\n  let lowIndex, highIndex;\n  if (startIndex < endIndex) {\n    lowIndex = startIndex;\n    highIndex = endIndex;\n  } else {\n    lowIndex = endIndex;\n    highIndex = startIndex;\n  }\n  const lowWholeIndex = Math.ceil(lowIndex);\n  const highWholeIndex = Math.floor(highIndex);\n\n  if (lowWholeIndex > highWholeIndex) {\n    // both start and end are on the same segment\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    return getSquaredDistance(start, end);\n  }\n\n  let sd = 0;\n\n  if (lowIndex < lowWholeIndex) {\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = getCoordinate(coordinates, lowWholeIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  if (highWholeIndex < highIndex) {\n    const start = getCoordinate(coordinates, highWholeIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  for (let i = lowWholeIndex; i < highWholeIndex - 1; ++i) {\n    const start = getCoordinate(coordinates, i);\n    const end = getCoordinate(coordinates, i + 1);\n    sd += getSquaredDistance(start, end);\n  }\n\n  return sd;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {import(\"../geom/Geometry.js\").default} geometry The candidate geometry.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendGeometryTraceTargets(coordinate, geometry, targets) {\n  if (geometry instanceof LineString) {\n    appendTraceTarget(coordinate, geometry.getCoordinates(), false, targets);\n    return;\n  }\n  if (geometry instanceof MultiLineString) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], false, targets);\n    }\n    return;\n  }\n  if (geometry instanceof Polygon) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], true, targets);\n    }\n    return;\n  }\n  if (geometry instanceof MultiPolygon) {\n    const polys = geometry.getCoordinates();\n    for (let i = 0, ii = polys.length; i < ii; ++i) {\n      const coordinates = polys[i];\n      for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n        appendTraceTarget(coordinate, coordinates[j], true, targets);\n      }\n    }\n    return;\n  }\n  if (geometry instanceof GeometryCollection) {\n    const geometries = geometry.getGeometries();\n    for (let i = 0; i < geometries.length; ++i) {\n      appendGeometryTraceTargets(coordinate, geometries[i], targets);\n    }\n    return;\n  }\n  // other types cannot be traced\n}\n\n/**\n * @typedef {Object} TraceTargetUpdateInfo\n * @property {number} index The new target index.\n * @property {number} endIndex The new segment end index.\n */\n\n/**\n * @type {TraceTargetUpdateInfo}\n */\nconst sharedUpdateInfo = {index: -1, endIndex: NaN};\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {TraceState} traceState The trace state.\n * @param {import(\"../Map.js\").default} map The map.\n * @param {number} snapTolerance The snap tolerance.\n * @return {TraceTargetUpdateInfo} Information about the new trace target.  The returned\n * object is reused between calls and must not be modified by the caller.\n */\nfunction getTraceTargetUpdate(coordinate, traceState, map, snapTolerance) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n\n  let closestTargetDistance = Infinity;\n\n  let newTargetIndex = -1;\n  let newEndIndex = NaN;\n\n  for (\n    let targetIndex = 0;\n    targetIndex < traceState.targets.length;\n    ++targetIndex\n  ) {\n    const target = traceState.targets[targetIndex];\n    const coordinates = target.coordinates;\n\n    let minSegmentDistance = Infinity;\n    let endIndex;\n    for (\n      let coordinateIndex = 0;\n      coordinateIndex < coordinates.length - 1;\n      ++coordinateIndex\n    ) {\n      const start = coordinates[coordinateIndex];\n      const end = coordinates[coordinateIndex + 1];\n      const rel = getPointSegmentRelationship(x, y, start, end);\n      if (rel.squaredDistance < minSegmentDistance) {\n        minSegmentDistance = rel.squaredDistance;\n        endIndex = coordinateIndex + rel.along;\n      }\n    }\n\n    if (minSegmentDistance < closestTargetDistance) {\n      closestTargetDistance = minSegmentDistance;\n      if (target.ring && traceState.targetIndex === targetIndex) {\n        // same target, maintain the same trace direction\n        if (target.endIndex > target.startIndex) {\n          // forward trace\n          if (endIndex < target.startIndex) {\n            endIndex += coordinates.length;\n          }\n        } else if (target.endIndex < target.startIndex) {\n          // reverse trace\n          if (endIndex > target.startIndex) {\n            endIndex -= coordinates.length;\n          }\n        }\n      }\n      newEndIndex = endIndex;\n      newTargetIndex = targetIndex;\n    }\n  }\n\n  const newTarget = traceState.targets[newTargetIndex];\n  let considerBothDirections = newTarget.ring;\n  if (traceState.targetIndex === newTargetIndex && considerBothDirections) {\n    // only consider switching trace direction if close to the start\n    const newCoordinate = interpolateCoordinate(\n      newTarget.coordinates,\n      newEndIndex\n    );\n    const pixel = map.getPixelFromCoordinate(newCoordinate);\n    if (distance(pixel, traceState.startPx) > snapTolerance) {\n      considerBothDirections = false;\n    }\n  }\n\n  if (considerBothDirections) {\n    const coordinates = newTarget.coordinates;\n    const count = coordinates.length;\n    const startIndex = newTarget.startIndex;\n    const endIndex = newEndIndex;\n    if (startIndex < endIndex) {\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex - count\n      );\n      if (reverseDistance < forwardDistance) {\n        newEndIndex -= count;\n      }\n    } else {\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex + count\n      );\n      if (forwardDistance < reverseDistance) {\n        newEndIndex += count;\n      }\n    }\n  }\n\n  sharedUpdateInfo.index = newTargetIndex;\n  sharedUpdateInfo.endIndex = newEndIndex;\n  return sharedUpdateInfo;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The clicked coordinate.\n * @param {Array<import(\"../coordinate.js\").Coordinate>} coordinates The geometry component coordinates.\n * @param {boolean} ring The coordinates represent a linear ring.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendTraceTarget(coordinate, coordinates, ring, targets) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const start = coordinates[i];\n    const end = coordinates[i + 1];\n    const rel = getPointSegmentRelationship(x, y, start, end);\n    if (rel.squaredDistance === 0) {\n      const index = i + rel.along;\n      targets.push({\n        coordinates: coordinates,\n        ring: ring,\n        startIndex: index,\n        endIndex: index,\n      });\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {Object} PointSegmentRelationship\n * @property {number} along The closest point expressed as a fraction along the segment length.\n * @property {number} squaredDistance The squared distance of the point to the segment.\n */\n\n/**\n * @type {PointSegmentRelationship}\n */\nconst sharedRel = {along: 0, squaredDistance: 0};\n\n/**\n * @param {number} x The point x.\n * @param {number} y The point y.\n * @param {import(\"../coordinate.js\").Coordinate} start The segment start.\n * @param {import(\"../coordinate.js\").Coordinate} end The segment end.\n * @return {PointSegmentRelationship} The point segment relationship.  The returned object is\n * shared between calls and must not be modified by the caller.\n */\nfunction getPointSegmentRelationship(x, y, start, end) {\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  let along = 0;\n  let px = x1;\n  let py = y1;\n  if (dx !== 0 || dy !== 0) {\n    along = clamp(((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy), 0, 1);\n    px += dx * along;\n    py += dy * along;\n  }\n\n  sharedRel.along = along;\n  sharedRel.squaredDistance = toFixed(squaredDistance(x, y, px, py), 10);\n  return sharedRel;\n}\n\n/**\n * @param {LineCoordType} coordinates The coordinates.\n * @param {number} index The index.  May be fractional and may wrap.\n * @return {import(\"../coordinate.js\").Coordinate} The interpolated coordinate.\n */\nfunction interpolateCoordinate(coordinates, index) {\n  const count = coordinates.length;\n\n  let startIndex = Math.floor(index);\n  const along = index - startIndex;\n  if (startIndex >= count) {\n    startIndex -= count;\n  } else if (startIndex < 0) {\n    startIndex += count;\n  }\n\n  let endIndex = startIndex + 1;\n  if (endIndex >= count) {\n    endIndex -= count;\n  }\n\n  const start = coordinates[startIndex];\n  const x0 = start[0];\n  const y0 = start[1];\n  const end = coordinates[endIndex];\n  const dx = end[0] - x0;\n  const dy = end[1] - y0;\n\n  return [x0 + dx * along, y0 + dy * along];\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/Geometry.js\").Type}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/Geometry.js\").Type} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === 'Polygon'\n      ? 3\n      : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === 'Circle'\n        ? 2\n        : options.maxPoints\n        ? options.maxPoints\n        : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === 'Circle') {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection)\n          );\n          circle.setCenterAndRadius(\n            center,\n            Math.sqrt(squaredLength),\n            this.geometryLayout_\n          );\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === 'Point') {\n          Constructor = Point;\n        } else if (mode === 'LineString') {\n          Constructor = LineString;\n        } else if (mode === 'Polygon') {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === 'Polygon') {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates(\n                  [coordinates[0].concat([coordinates[0][0]])],\n                  this.geometryLayout_\n                );\n              } else {\n                geometry.setCoordinates([], this.geometryLayout_);\n              }\n            } else {\n              geometry.setCoordinates(coordinates, this.geometryLayout_);\n            }\n          } else {\n            geometry = new Constructor(coordinates, this.geometryLayout_);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.traceCondition_;\n    this.setTrace(options.trace || false);\n\n    /**\n     * @type {TraceState}\n     * @private\n     */\n    this.traceState_ = {active: false};\n\n    /**\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.traceSource_ = options.traceSource || options.source || null;\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Toggle tracing mode or set a tracing condition.\n   *\n   * @param {boolean|import(\"../events/condition.js\").Condition} trace A boolean to toggle tracing mode or an event\n   *     condition that will be checked when a feature is clicked to determine if tracing should be active.\n   */\n  setTrace(trace) {\n    let condition;\n    if (!trace) {\n      condition = never;\n    } else if (trace === true) {\n      condition = always;\n    } else {\n      condition = trace;\n    }\n    this.traceCondition_ = condition;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== 'Point' && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    }\n\n    if (!this.condition_(event)) {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(() => {\n      this.handlePointerMove_(\n        new MapBrowserEvent(\n          MapBrowserEventType.POINTERMOVE,\n          event.map,\n          event.originalEvent,\n          false,\n          event.frameState\n        )\n      );\n    }, this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  deactivateTrace_() {\n    this.traceState_ = {active: false};\n  }\n\n  /**\n   * Activate or deactivate trace state based on a browser event.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  toggleTraceState_(event) {\n    if (!this.traceSource_ || !this.traceCondition_(event)) {\n      return;\n    }\n\n    if (this.traceState_.active) {\n      this.deactivateTrace_();\n      return;\n    }\n\n    const map = this.getMap();\n    const lowerLeft = map.getCoordinateFromPixel([\n      event.pixel[0] - this.snapTolerance_,\n      event.pixel[1] + this.snapTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      event.pixel[0] + this.snapTolerance_,\n      event.pixel[1] - this.snapTolerance_,\n    ]);\n    const extent = boundingExtent([lowerLeft, upperRight]);\n    const features = this.traceSource_.getFeaturesInExtent(extent);\n    if (features.length === 0) {\n      return;\n    }\n\n    const targets = getTraceTargets(event.coordinate, features);\n    if (targets.length) {\n      this.traceState_ = {\n        active: true,\n        startPx: event.pixel.slice(),\n        targets: targets,\n        targetIndex: -1,\n      };\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} endIndex The new end index of the trace.\n   * @private\n   */\n  addOrRemoveTracedCoordinates_(target, endIndex) {\n    // three cases to handle:\n    //  1. traced in the same direction and points need adding\n    //  2. traced in the same direction and points need removing\n    //  3. traced in a new direction\n    const previouslyForward = target.startIndex <= target.endIndex;\n    const currentlyForward = target.startIndex <= endIndex;\n    if (previouslyForward === currentlyForward) {\n      // same direction\n      if (\n        (previouslyForward && endIndex > target.endIndex) ||\n        (!previouslyForward && endIndex < target.endIndex)\n      ) {\n        // case 1 - add new points\n        this.addTracedCoordinates_(target, target.endIndex, endIndex);\n      } else if (\n        (previouslyForward && endIndex < target.endIndex) ||\n        (!previouslyForward && endIndex > target.endIndex)\n      ) {\n        // case 2 - remove old points\n        this.removeTracedCoordinates_(endIndex, target.endIndex);\n      }\n    } else {\n      // case 3 - remove old points, add new points\n      this.removeTracedCoordinates_(target.startIndex, target.endIndex);\n      this.addTracedCoordinates_(target, target.startIndex, endIndex);\n    }\n  }\n\n  /**\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  removeTracedCoordinates_(fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    let remove = 0;\n    if (fromIndex < toIndex) {\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        end -= 1;\n      }\n      remove = end - start + 1;\n    } else {\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      remove = start - end + 1;\n    }\n\n    if (remove > 0) {\n      this.removeLastPoints_(remove);\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  addTracedCoordinates_(target, fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    const coordinates = [];\n    if (fromIndex < toIndex) {\n      // forward trace\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        // if end is snapped to a vertex, it will be added later\n        end -= 1;\n      }\n      for (let i = start; i <= end; ++i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    } else {\n      // reverse trace\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      for (let i = start; i >= end; --i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    }\n    if (coordinates.length) {\n      this.appendCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Update the trace.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  updateTrace_(event) {\n    const traceState = this.traceState_;\n    if (!traceState.active) {\n      return;\n    }\n\n    if (traceState.targetIndex === -1) {\n      // check if we are ready to pick a target\n      if (distance(traceState.startPx, event.pixel) < this.snapTolerance_) {\n        return;\n      }\n    }\n\n    const updatedTraceTarget = getTraceTargetUpdate(\n      event.coordinate,\n      traceState,\n      this.getMap(),\n      this.snapTolerance_\n    );\n\n    if (traceState.targetIndex !== updatedTraceTarget.index) {\n      // target changed\n      if (traceState.targetIndex !== -1) {\n        // remove points added during previous trace\n        const oldTarget = traceState.targets[traceState.targetIndex];\n        this.removeTracedCoordinates_(oldTarget.startIndex, oldTarget.endIndex);\n      }\n      // add points for the new target\n      const newTarget = traceState.targets[updatedTraceTarget.index];\n      this.addTracedCoordinates_(\n        newTarget,\n        newTarget.startIndex,\n        updatedTraceTarget.endIndex\n      );\n    } else {\n      // target stayed the same\n      const target = traceState.targets[traceState.targetIndex];\n      this.addOrRemoveTracedCoordinates_(target, updatedTraceTarget.endIndex);\n    }\n\n    // modify the state with updated info\n    traceState.targetIndex = updatedTraceTarget.index;\n    const target = traceState.targets[traceState.targetIndex];\n    target.endIndex = updatedTraceTarget.endIndex;\n\n    // update event coordinate and pixel to match end point of final segment\n    const coordinate = interpolateCoordinate(\n      target.coordinates,\n      target.endIndex\n    );\n    const pixel = this.getMap().getPixelFromCoordinate(coordinate);\n    event.coordinate = coordinate;\n    event.pixel = [Math.round(pixel[0]), Math.round(pixel[1])];\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n      const tracing = this.traceState_.active;\n      this.toggleTraceState_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === 'Point')\n        ) {\n          if (this.atFinish_(event.pixel, tracing)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (!this.finishCoordinate_) {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n      return;\n    }\n\n    this.updateTrace_(event);\n    this.modifyDrawing_(event.coordinate);\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {boolean} [tracing] Drawing in trace mode (only stop if at the starting point).\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel, tracing) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === 'Point') {\n        at = true;\n      } else if (mode === 'Circle') {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === 'LineString') {\n        potentiallyDone =\n          !tracing && this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === 'Polygon') {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n        if (tracing) {\n          potentiallyFinishCoordinates = [sketchCoords[0][0]];\n        } else {\n          potentiallyFinishCoordinates = [\n            sketchCoords[0][0],\n            sketchCoords[0][sketchCoords[0].length - 2],\n          ];\n        }\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout()\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates()\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    while (start.length < stride) {\n      start.push(0);\n    }\n    this.finishCoordinate_ = start;\n    if (this.mode_ === 'Point') {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === 'Polygon') {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    let coordinates, last;\n    while (coordinate.length < stride) {\n      coordinate.push(0);\n    }\n    if (this.mode_ === 'Point') {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (geometry.getType() === 'Polygon' && this.mode_ !== 'Polygon') {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === 'LineString' || mode === 'Circle') {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * @param {number} n The number of points to remove.\n   */\n  removeLastPoints_(n) {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    const mode = this.mode_;\n    for (let i = 0; i < n; ++i) {\n      let coordinates;\n      if (mode === 'LineString' || mode === 'Circle') {\n        coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n        coordinates.splice(-2, 1);\n        if (coordinates.length >= 2) {\n          this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n          const finishCoordinate = this.finishCoordinate_.slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        this.geometryFunction_(coordinates, geometry, projection);\n        if (geometry.getType() === 'Polygon' && this.sketchLine_) {\n          this.createOrUpdateCustomSketchLine_(\n            /** @type {Polygon} */ (geometry)\n          );\n        }\n      } else if (mode === 'Polygon') {\n        coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n        coordinates.splice(-2, 1);\n        const sketchLineGeom = this.sketchLine_.getGeometry();\n        if (coordinates.length >= 2) {\n          const finishCoordinate = coordinates[coordinates.length - 2].slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        sketchLineGeom.setCoordinates(coordinates);\n        this.geometryFunction_(this.sketchCoords_, geometry, projection);\n      }\n\n      if (coordinates.length === 1) {\n        this.abortDrawing();\n        break;\n      }\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    this.removeLastPoints_(1);\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === 'LineString') {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === 'Polygon') {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === 'MultiPoint') {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiLineString') {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiPolygon') {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)])\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    this.deactivateTrace_();\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === 'LineString' || mode === 'Circle') {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === 'Polygon') {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(sides, angle) {\n  return function (coordinates, geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    geometry = geometry || fromCircle(new Circle(center), sides);\n\n    let internalAngle = angle;\n    if (!angle && angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      internalAngle = Math.atan2(y, x);\n    }\n    makeRegular(\n      /** @type {Polygon} */ (geometry),\n      center,\n      radius,\n      internalAngle\n    );\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      })\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n      return 'Point';\n    case 'LineString':\n    case 'MultiLineString':\n      return 'LineString';\n    case 'Polygon':\n    case 'MultiPolygon':\n      return 'Polygon';\n    case 'Circle':\n      return 'Circle';\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/interaction/Extent\n */\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {always} from '../events/condition.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {toUserExtent} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to the `Polygon` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to the `Point` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nexport class ExtentEvent extends Event {\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n  constructor(extent) {\n    super(ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'extentchanged', ExtentEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'extentchanged', Return>} ExtentOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nclass Extent extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ExtentOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * Condition\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!options) {\n      options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.boxStyle\n        ? options.boxStyle\n        : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.pointerStyle\n        ? options.pointerStyle\n        : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    if (options.extent) {\n      this.setExtent(options.extent);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../Map.js\").default} map map\n   * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  snapToVertex_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n    const sortByDistance = function (a, b) {\n      return (\n        squaredDistanceToSegment(pixelCoordinate, a) -\n        squaredDistanceToSegment(pixelCoordinate, b)\n      );\n    };\n    const extent = this.getExtentInternal();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      const segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      const closestSegment = segments[0];\n\n      let vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      const vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        const pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex =\n            squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  handlePointerMove_(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    let vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @return {Feature} extent as featrue\n   * @private\n   */\n  createOrUpdateExtentFeature_(extent) {\n    let extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @return {Feature} vertex as feature\n   * @private\n   */\n  createOrUpdatePointerFeature_(vertex) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    super.handleEvent(mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    const extent = this.getExtentInternal();\n    let vertex = this.snapToVertex_(pixel, map);\n\n    //find the extent corner opposite the passed corner\n    const getOpposingPoint = function (point) {\n      let x_ = null;\n      let y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      const x =\n        vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n      const y =\n        vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n        //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([x, extent[1]]),\n          getOpposingPoint([x, extent[3]])\n        );\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([extent[0], y]),\n          getOpposingPoint([extent[2], y])\n        );\n      }\n      //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      const pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    const extent = this.getExtentInternal();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtent() {\n    return toUserExtent(\n      this.getExtentInternal(),\n      this.getMap().getView().getProjection()\n    );\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtentInternal() {\n    return this.extent_;\n  }\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  setExtent(extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  }\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Polygon'];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function (point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  }\n  return null;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [\n      [extent[0], extent[1]],\n      [extent[0], extent[3]],\n    ],\n    [\n      [extent[0], extent[3]],\n      [extent[2], extent[3]],\n    ],\n    [\n      [extent[2], extent[3]],\n      [extent[2], extent[1]],\n    ],\n    [\n      [extent[2], extent[1]],\n      [extent[0], extent[1]],\n    ],\n  ];\n}\n\nexport default Extent;\n","/**\n * @module ol/interaction/Link\n */\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport MapEventType from '../MapEventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {toFixed} from '../math.js';\n\n/**\n * @param {number} number A number.\n * @return {number} A number with at most 5 decimal places.\n */\nfunction to5(number) {\n  return toFixed(number, 5);\n}\n\n/**\n * @param {string} string A string.\n * @return {number} A number representing the string.\n */\nfunction readNumber(string) {\n  return parseFloat(string);\n}\n\n/**\n * @param {number} number A number.\n * @return {string} A string representing the number.\n */\nfunction writeNumber(number) {\n  return to5(number).toString();\n}\n\n/**\n * @param {number} a A number.\n * @param {number} b A number.\n * @return {boolean} The numbers are different.\n */\nfunction differentNumber(a, b) {\n  if (isNaN(a)) {\n    return false;\n  }\n  return a !== readNumber(writeNumber(b));\n}\n\n/**\n * @param {Array<number>} a An array of two numbers.\n * @param {Array<number>} b An array of two numbers.\n * @return {boolean} The arrays are different.\n */\nfunction differentArray(a, b) {\n  return differentNumber(a[0], b[0]) || differentNumber(a[1], b[1]);\n}\n\n/** @typedef {'x'|'y'|'z'|'r'|'l'} Params */\n\n/**\n * @typedef {Object} Options\n * @property {boolean|import('../View.js').AnimationOptions} [animate=true] Animate view transitions.\n * @property {Array<Params>} [params=['x', 'y', 'z', 'r', 'l']] Properties to track. Default is to track\n * `x` (center x), `y` (center y), `z` (zoom), `r` (rotation) and `l` (layers).\n * @property {boolean} [replace=false] Replace the current URL without creating the new entry in browser history.\n * By default, changes in the map state result in a new entry being added to the browser history.\n * @property {string} [prefix=''] By default, the URL will be updated with search parameters x, y, z, and r.  To\n * avoid collisions with existing search parameters that your application uses, you can supply a custom prefix for\n * the ones used by this interaction (e.g. 'ol:').\n */\n\n/**\n * @classdesc\n * An interaction that synchronizes the map state with the URL.\n *\n * @api\n */\nclass Link extends Interaction {\n  /**\n   * @param {Options} [options] Link options.\n   */\n  constructor(options) {\n    super();\n\n    options = Object.assign(\n      {\n        animate: true,\n        params: ['x', 'y', 'z', 'r', 'l'],\n        replace: false,\n        prefix: '',\n      },\n      options || {}\n    );\n\n    let animationOptions;\n    if (options.animate === true) {\n      animationOptions = {duration: 250};\n    } else if (!options.animate) {\n      animationOptions = null;\n    } else {\n      animationOptions = options.animate;\n    }\n\n    /**\n     * @type {import('../View.js').AnimationOptions|null}\n     * @private\n     */\n    this.animationOptions_ = animationOptions;\n\n    /**\n     * @type {Object<Params, boolean>}\n     * @private\n     */\n    this.params_ = options.params.reduce((acc, value) => {\n      acc[value] = true;\n      return acc;\n    }, {});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.replace_ = options.replace;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.prefix_ = options.prefix;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.initial_ = true;\n\n    this.updateState_ = this.updateState_.bind(this);\n  }\n\n  /**\n   * @private\n   * @param {string} name A parameter name.\n   * @return {string} A name with the prefix applied.\n   */\n  getParamName_(name) {\n    if (!this.prefix_) {\n      return name;\n    }\n    return this.prefix_ + name;\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @return {string|null} The parameter value.\n   */\n  get_(params, name) {\n    return params.get(this.getParamName_(name));\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @param {string} value The param value.\n   */\n  set_(params, name, value) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.set(this.getParamName_(name), value);\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   */\n  delete_(params, name) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.delete(this.getParamName_(name));\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      this.unregisterListeners_(oldMap);\n    }\n    if (map) {\n      this.initial_ = true;\n      this.updateState_();\n      this.registerListeners_(map);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  registerListeners_(map) {\n    this.listenerKeys_.push(\n      listen(map, MapEventType.MOVEEND, this.updateUrl_, this),\n      listen(map.getLayerGroup(), EventType.CHANGE, this.updateUrl_, this),\n      listen(map, 'change:layergroup', this.handleChangeLayerGroup_, this)\n    );\n\n    if (!this.replace_) {\n      addEventListener('popstate', this.updateState_);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  unregisterListeners_(map) {\n    for (let i = 0, ii = this.listenerKeys_.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys_[i]);\n    }\n    this.listenerKeys_.length = 0;\n\n    if (!this.replace_) {\n      removeEventListener('popstate', this.updateState_);\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    this.delete_(params, 'x');\n    this.delete_(params, 'y');\n    this.delete_(params, 'z');\n    this.delete_(params, 'r');\n    this.delete_(params, 'l');\n    window.history.replaceState(null, '', url);\n  }\n\n  /**\n   * @private\n   */\n  handleChangeLayerGroup_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    this.unregisterListeners_(map);\n    this.registerListeners_(map);\n    this.initial_ = true;\n    this.updateUrl_();\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n\n    let updateView = false;\n\n    /**\n     * @type {import('../View.js').AnimationOptions}\n     */\n    const viewProperties = {};\n\n    const zoom = readNumber(this.get_(params, 'z'));\n    if ('z' in this.params_ && differentNumber(zoom, view.getZoom())) {\n      updateView = true;\n      viewProperties.zoom = zoom;\n    }\n\n    const rotation = readNumber(this.get_(params, 'r'));\n    if ('r' in this.params_ && differentNumber(rotation, view.getRotation())) {\n      updateView = true;\n      viewProperties.rotation = rotation;\n    }\n\n    const center = [\n      readNumber(this.get_(params, 'x')),\n      readNumber(this.get_(params, 'y')),\n    ];\n    if (\n      ('x' in this.params_ || 'y' in this.params_) &&\n      differentArray(center, view.getCenter())\n    ) {\n      updateView = true;\n      viewProperties.center = center;\n    }\n\n    if (updateView) {\n      if (!this.initial_ && this.animationOptions_) {\n        view.animate(Object.assign(viewProperties, this.animationOptions_));\n      } else {\n        if (viewProperties.center) {\n          view.setCenter(viewProperties.center);\n        }\n        if ('zoom' in viewProperties) {\n          view.setZoom(viewProperties.zoom);\n        }\n        if ('rotation' in viewProperties) {\n          view.setRotation(viewProperties.rotation);\n        }\n      }\n    }\n\n    const layers = map.getAllLayers();\n    const layersParam = this.get_(params, 'l');\n    if (\n      'l' in this.params_ &&\n      layersParam &&\n      layersParam.length === layers.length\n    ) {\n      for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const value = parseInt(layersParam[i]);\n        if (!isNaN(value)) {\n          const visible = Boolean(value);\n          const layer = layers[i];\n          if (layer.getVisible() !== visible) {\n            layer.setVisible(visible);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateUrl_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n    const initial = this.initial_;\n    this.initial_ = false;\n\n    const center = view.getCenter();\n    const zoom = view.getZoom();\n    const rotation = view.getRotation();\n\n    const layers = map.getAllLayers();\n    const visibilities = new Array(layers.length);\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      visibilities[i] = layers[i].getVisible() ? '1' : '0';\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n\n    this.set_(params, 'x', writeNumber(center[0]));\n    this.set_(params, 'y', writeNumber(center[1]));\n    this.set_(params, 'z', writeNumber(zoom));\n    this.set_(params, 'r', writeNumber(rotation));\n    this.set_(params, 'l', visibilities.join(''));\n\n    if (url.href !== window.location.href) {\n      if (initial || this.replace_) {\n        window.history.replaceState(history.state, '', url);\n      } else {\n        window.history.pushState(null, '', url);\n      }\n    }\n  }\n}\n\nexport default Link;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {Feature} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<Array<number>>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition.primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition.singleClick} with\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition.always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style/Style~Style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector~BaseVectorLayer} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, features, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerance`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ModifyOnSignature<void>}\n     */\n    this.un;\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n    this.hitDetection_ = null;\n\n    /** @type {Collection<Feature>} */\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this)\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this)\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer'\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this)\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this)\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const segment = segments[i];\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\n          const feature = segment[s].feature;\n          if (feature && !features.includes(feature)) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n      if (this.featuresBeingModified_.getLength() === 0) {\n        this.featuresBeingModified_ = null;\n      } else {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYSTART,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of candidate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      }\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(evt.element);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    this.removeFeature_(evt.element);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (!features.includes(feature)) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (!geometries.includes(geometry)) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case 'Point':\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'MultiPoint':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'LineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiLineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Polygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiPolygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Circle':\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection)\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === 'Circle' &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          if (\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            let coordinates = segmentDataMatch.geometry.getCoordinates();\n            switch (segmentDataMatch.geometry.getType()) {\n              // prevent dragging closed linestrings by the connecting node\n              case 'LineString':\n              case 'MultiLineString':\n                continue;\n              // if dragging the first vertex of a polygon, ensure the other segment\n              // belongs to the closing vertex of the linear ring\n              case 'MultiPolygon':\n                coordinates = coordinates[depth[1]];\n              /* falls through */\n              case 'Polygon':\n                if (\n                  segmentDataMatch.index !==\n                  coordinates[depth[0]].length - 2\n                ) {\n                  continue;\n                }\n                break;\n              default:\n              // pass\n            }\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === 'Circle') {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../Map.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [coordinate] The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, coordinate) {\n    const pixelCoordinate = coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    /** @type {Array<SegmentData>|undefined} */\n    let nodes;\n    /** @type {Point|undefined} */\n    let hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          const geom = geometry || feature.getGeometry();\n          if (\n            geom.getType() === 'Point' &&\n            feature instanceof Feature &&\n            this.features_.getArray().includes(feature)\n          ) {\n            hitPointGeometry = /** @type {Point} */ (geom);\n            const coordinate = hitPointGeometry\n              .getFlatCoordinates()\n              .slice(0, 2);\n            nodes = [\n              {\n                feature,\n                geometry: hitPointGeometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter}\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === 'Circle' &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case 'MultiLineString':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'Polygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'MultiPolygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'LineString':\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      if (this.featuresBeingModified_) {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYEND,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case 'MultiLineString':\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'LineString':\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'MultiPolygon':\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case 'Polygon':\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      }\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === 'Circle') {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n          circleGeometry.clone().transform(userProjection, projection)\n        );\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection)\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === 'Circle' &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection)\n      ),\n      projection\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").default, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {Collection<Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {Collection<Feature>}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {Collection<Feature>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n    if (!this.getLayer(feature)) {\n      const layer = /** @type {VectorLayer} */ (\n        this.getMap()\n          .getAllLayers()\n          .find(function (layer) {\n            if (\n              layer instanceof VectorLayer &&\n              layer.getSource() &&\n              layer.getSource().hasFeature(feature)\n            ) {\n              return layer;\n            }\n          })\n      );\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    if (this.style_) {\n      this.restorePreviousStyle_(evt.element);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const deselected = [];\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const selected = [];\n\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          this.addFeatureLayerAssociation_(feature, layer);\n          selected.push(feature);\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          if ((add || toggle) && !features.getArray().includes(feature)) {\n            this.addFeatureLayerAssociation_(feature, layer);\n            selected.push(feature);\n          } else if (\n            (remove || toggle) &&\n            features.getArray().includes(feature)\n          ) {\n            deselected.push(feature);\n            this.removeFeatureLayerAssociation_(feature);\n          }\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent\n        )\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles['Polygon'], styles['LineString']);\n  extend(styles['GeometryCollection'], styles['LineString']);\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {boundingExtent, buffer, createEmpty} from '../extent.js';\nimport {\n  closestOnCircle,\n  closestOnSegment,\n  squaredDistance,\n} from '../coordinate.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Result\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\n  ) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n      .feature;\n  } else if (\n    /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element\n  ) {\n    return /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element;\n  }\n}\n\nconst tempSegment = [];\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector~VectorSource} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap.js';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @type {import(\"../source/Vector.js\").default|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @const\n     * @private\n     * @type {Object<string, function(Array<Array<import('../coordinate.js').Coordinate>>, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.GEOMETRY_SEGMENTERS_ = {\n      'Point': this.segmentPointGeometry_.bind(this),\n      'LineString': this.segmentLineStringGeometry_.bind(this),\n      'LinearRing': this.segmentLineStringGeometry_.bind(this),\n      'Polygon': this.segmentPolygonGeometry_.bind(this),\n      'MultiPoint': this.segmentMultiPointGeometry_.bind(this),\n      'MultiLineString': this.segmentMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.segmentMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.segmentGeometryCollectionGeometry_.bind(this),\n      'Circle': this.segmentCircleGeometry_.bind(this),\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [register] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, register) {\n    register = register !== undefined ? register : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometry.getType()];\n      if (segmenter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(\n          createEmpty()\n        );\n        const segments =\n          /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ ([]);\n        segmenter(segments, geometry);\n        if (segments.length === 1) {\n          this.rBush_.insert(boundingExtent(segments[0]), {\n            feature: feature,\n            segment: segments[0],\n          });\n        } else if (segments.length > 1) {\n          const extents = segments.map((s) => boundingExtent(s));\n          const segmentsData = segments.map((segment) => ({\n            feature: feature,\n            segment: segment,\n          }));\n          this.rBush_.load(extents, segmentsData);\n        }\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_,\n        this\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  forEachFeatureAdd_(feature) {\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  forEachFeatureRemove_(feature) {\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    /** @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} */\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = Object.values(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, unlisten) {\n    const unregister = unlisten !== undefined ? unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (\n      this.getFeatures_()\n    );\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(\n            this.features_,\n            CollectionEventType.ADD,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.features_,\n            CollectionEventType.REMOVE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(\n            this.source_,\n            VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.source_,\n            VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../Map.js\").default} map Map.\n   * @return {Result|null} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    const box = toUserExtent(\n      buffer(\n        boundingExtent([projectedCoordinate]),\n        map.getView().getResolution() * this.pixelTolerance_\n      ),\n      projection\n    );\n\n    const segments = this.rBush_.getInExtent(box);\n\n    const segmentsLength = segments.length;\n    if (segmentsLength === 0) {\n      return null;\n    }\n\n    let closestVertex;\n    let minSquaredDistance = Infinity;\n\n    const squaredPixelTolerance = this.pixelTolerance_ * this.pixelTolerance_;\n    const getResult = () => {\n      if (closestVertex) {\n        const vertexPixel = map.getPixelFromCoordinate(closestVertex);\n        const squaredPixelDistance = squaredDistance(pixel, vertexPixel);\n        if (squaredPixelDistance <= squaredPixelTolerance) {\n          return {\n            vertex: closestVertex,\n            vertexPixel: [\n              Math.round(vertexPixel[0]),\n              Math.round(vertexPixel[1]),\n            ],\n          };\n        }\n      }\n      return null;\n    };\n\n    if (this.vertex_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() !== 'Circle') {\n          segmentData.segment.forEach((vertex) => {\n            const tempVertexCoord = fromUserCoordinate(vertex, projection);\n            const delta = squaredDistance(projectedCoordinate, tempVertexCoord);\n            if (delta < minSquaredDistance) {\n              closestVertex = vertex;\n              minSquaredDistance = delta;\n            }\n          });\n        }\n      }\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    if (this.edge_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        let vertex = null;\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() === 'Circle') {\n          let circleGeometry = segmentData.feature.getGeometry();\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circleGeometry = circleGeometry\n              .clone()\n              .transform(userProjection, projection);\n          }\n          vertex = closestOnCircle(\n            projectedCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n          );\n        } else {\n          const [segmentStart, segmentEnd] = segmentData.segment;\n          // points have only one coordinate\n          if (segmentEnd) {\n            tempSegment[0] = fromUserCoordinate(segmentStart, projection);\n            tempSegment[1] = fromUserCoordinate(segmentEnd, projection);\n            vertex = closestOnSegment(projectedCoordinate, tempSegment);\n          }\n        }\n        if (vertex) {\n          const delta = squaredDistance(projectedCoordinate, vertex);\n          if (delta < minSquaredDistance) {\n            closestVertex = toUserCoordinate(vertex, projection);\n            minSquaredDistance = delta;\n          }\n        }\n      }\n\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentCircleGeometry_(segments, geometry) {\n    const projection = this.getMap().getView().getProjection();\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentGeometryCollectionGeometry_(segments, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometries[i].getType()];\n      if (segmenter) {\n        segmenter(segments, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentLineStringGeometry_(segments, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiLineStringGeometry_(segments, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPointGeometry_(segments, geometry) {\n    geometry.getCoordinates().forEach((point) => {\n      segments.push([point]);\n    });\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPolygonGeometry_(segments, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          segments.push(coordinates.slice(i, i + 2));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPointGeometry_(segments, geometry) {\n    segments.push([geometry.getCoordinates()]);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPolygonGeometry_(segments, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport InteractionProperty from './Property.js';\nimport PointerInteraction from './Pointer.js';\nimport {TRUE} from '../functions.js';\nimport {always} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(Feature, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {Collection<Feature>} [features] Features contained in this collection will be able to be translated together.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * Not used if `features` is provided.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise. Not used if `features` is provided.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<Feature>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   */\n  constructor(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * The coordinate of the start position before translation started.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.startCoordinate = startCoordinate;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'translateend'|'translatestart'|'translating', TranslateEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'translateend'|'translatestart'|'translating', Return>} TranslateOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n * If you want to translate multiple features in a single action (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.\n *\n * @fires TranslateEvent\n * @api\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TranslateOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n    /**\n     * The start position before translation started.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.startCoordinate_ = null;\n\n    /**\n     * @type {Collection<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers && !this.features_) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter && !this.features_ ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @type {Feature}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    this.addChangeListener(\n      InteractionProperty.ACTIVE,\n      this.handleActiveChanged_\n    );\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    if (!event.originalEvent || !this.condition_(event)) {\n      return false;\n    }\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.startCoordinate_ = event.coordinate;\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n      // cleanup\n      this.startCoordinate_ = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      const newCoordinate = event.coordinate;\n      const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n      const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      features.forEach(function (feature) {\n        const geom = feature.getGeometry();\n        geom.translate(deltaX, deltaY);\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING,\n          features,\n          newCoordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n    }\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleMoveEvent(event) {\n    const elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../Map.js\").default} map Map to test the intersection on.\n   * @return {Feature} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(\n      pixel,\n      (feature, layer) => {\n        if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n          return undefined;\n        }\n        if (this.features_ && !this.features_.getArray().includes(feature)) {\n          return undefined;\n        }\n        return feature;\n      },\n      {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_,\n      }\n    );\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\nexport default Translate;\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/EsriJSON\n */\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent} from '../extent.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"arcgis-rest-api\").Feature} EsriJSONFeature\n * @typedef {import(\"arcgis-rest-api\").FeatureSet} EsriJSONFeatureSet\n * @typedef {import(\"arcgis-rest-api\").Geometry} EsriJSONGeometry\n * @typedef {import(\"arcgis-rest-api\").Point} EsriJSONPoint\n * @typedef {import(\"arcgis-rest-api\").Polyline} EsriJSONPolyline\n * @typedef {import(\"arcgis-rest-api\").Polygon} EsriJSONPolygon\n * @typedef {import(\"arcgis-rest-api\").Multipoint} EsriJSONMultipoint\n * @typedef {import(\"arcgis-rest-api\").HasZM} EsriJSONHasZM\n * @typedef {import(\"arcgis-rest-api\").Position} EsriJSONPosition\n * @typedef {import(\"arcgis-rest-api\").SpatialReferenceWkid} EsriJSONSpatialReferenceWkid\n */\n\n/**\n * @typedef {Object} EsriJSONMultiPolygon\n * @property {Array<Array<Array<Array<number>>>>} rings Rings for the MultiPolygon.\n * @property {boolean} [hasM] If the polygon coordinates have an M value.\n * @property {boolean} [hasZ] If the polygon coordinates have a Z value.\n * @property {EsriJSONSpatialReferenceWkid} [spatialReference] The coordinate reference system.\n */\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type, function(EsriJSONGeometry): import(\"../geom/Geometry.js\").default>}\n */\nconst GEOMETRY_READERS = {\n  Point: readPointGeometry,\n  LineString: readLineStringGeometry,\n  Polygon: readPolygonGeometry,\n  MultiPoint: readMultiPointGeometry,\n  MultiLineString: readMultiLineStringGeometry,\n  MultiPolygon: readMultiPolygonGeometry,\n};\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type, function(import(\"../geom/Geometry.js\").default, import(\"./Feature.js\").WriteOptions=): (EsriJSONGeometry)>}\n */\nconst GEOMETRY_WRITERS = {\n  Point: writePointGeometry,\n  LineString: writeLineStringGeometry,\n  Polygon: writePolygonGeometry,\n  MultiPoint: writeMultiPointGeometry,\n  MultiLineString: writeMultiLineStringGeometry,\n  MultiPolygon: writeMultiPolygonGeometry,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [geometryName] Geometry name to use when creating features.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the EsriJSON format.\n *\n * @api\n */\nclass EsriJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @param {string} [idField] Name of the field where to get the id from.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options, idField) {\n    const esriJSONFeature = /** @type {EsriJSONFeature} */ (object);\n    const geometry = readGeometry(esriJSONFeature.geometry, options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    }\n    feature.setGeometry(geometry);\n    if (esriJSONFeature.attributes) {\n      feature.setProperties(esriJSONFeature.attributes, true);\n      const id = esriJSONFeature.attributes[idField];\n      if (id !== undefined) {\n        feature.setId(/** @type {number} */ (id));\n      }\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    options = options ? options : {};\n    if (object['features']) {\n      const esriJSONFeatureSet = /** @type {EsriJSONFeatureSet} */ (object);\n      /** @type {Array<import(\"../Feature.js\").default>} */\n      const features = [];\n      const esriJSONFeatures = esriJSONFeatureSet.features;\n      for (let i = 0, ii = esriJSONFeatures.length; i < ii; ++i) {\n        features.push(\n          this.readFeatureFromObject(\n            esriJSONFeatures[i],\n            options,\n            object.objectIdFieldName\n          )\n        );\n      }\n      return features;\n    }\n    return [this.readFeatureFromObject(object, options)];\n  }\n\n  /**\n   * @param {EsriJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    if (\n      object['spatialReference'] &&\n      object['spatialReference']['wkid'] !== undefined\n    ) {\n      const spatialReference = /** @type {EsriJSONSpatialReferenceWkid} */ (\n        object['spatialReference']\n      );\n      const crs = spatialReference.wkid;\n      return getProjection('EPSG:' + crs);\n    }\n    return null;\n  }\n\n  /**\n   * Encode a geometry as a EsriJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {EsriJSONGeometry} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n\n  /**\n   * Encode a feature as a esriJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n    const object = {};\n    if (!feature.hasProperties()) {\n      object['attributes'] = {};\n      return object;\n    }\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object['geometry'] = writeGeometry(geometry, options);\n      const projection =\n        options && (options.dataProjection || options.featureProjection);\n      if (projection) {\n        object['geometry']['spatialReference'] =\n          /** @type {EsriJSONSpatialReferenceWkid} */ ({\n            wkid: Number(getProjection(projection).getCode().split(':').pop()),\n          });\n      }\n      delete properties[feature.getGeometryName()];\n    }\n    if (!isEmpty(properties)) {\n      object['attributes'] = properties;\n    } else {\n      object['attributes'] = {};\n    }\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a EsriJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {EsriJSONFeatureSet} EsriJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      'features': objects,\n    };\n  }\n}\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  /** @type {import(\"../geom/Geometry.js\").Type} */\n  let type;\n  if (typeof object['x'] === 'number' && typeof object['y'] === 'number') {\n    type = 'Point';\n  } else if (object['points']) {\n    type = 'MultiPoint';\n  } else if (object['paths']) {\n    const esriJSONPolyline = /** @type {EsriJSONPolyline} */ (object);\n    if (esriJSONPolyline.paths.length === 1) {\n      type = 'LineString';\n    } else {\n      type = 'MultiLineString';\n    }\n  } else if (object['rings']) {\n    const esriJSONPolygon = /** @type {EsriJSONPolygon} */ (object);\n    const layout = getGeometryLayout(esriJSONPolygon);\n    const rings = convertRings(esriJSONPolygon.rings, layout);\n    if (rings.length === 1) {\n      type = 'Polygon';\n      object = Object.assign({}, object, {['rings']: rings[0]});\n    } else {\n      type = 'MultiPolygon';\n      object = Object.assign({}, object, {['rings']: rings});\n    }\n  }\n  const geometryReader = GEOMETRY_READERS[type];\n  return transformGeometryWithOptions(geometryReader(object), false, options);\n}\n\n/**\n * Determines inner and outer rings.\n * Checks if any polygons in this array contain any other polygons in this\n * array. It is used for checking for holes.\n * Logic inspired by: https://github.com/Esri/terraformer-arcgis-parser\n * @param {Array<!Array<!Array<number>>>} rings Rings.\n * @param {import(\"../geom/Geometry.js\").GeometryLayout} layout Geometry layout.\n * @return {Array<!Array<!Array<!Array<number>>>>} Transformed rings.\n */\nfunction convertRings(rings, layout) {\n  const flatRing = [];\n  const outerRings = [];\n  const holes = [];\n  let i, ii;\n  for (i = 0, ii = rings.length; i < ii; ++i) {\n    flatRing.length = 0;\n    deflateCoordinates(flatRing, 0, rings[i], layout.length);\n    // is this ring an outer ring? is it clockwise?\n    const clockwise = linearRingIsClockwise(\n      flatRing,\n      0,\n      flatRing.length,\n      layout.length\n    );\n    if (clockwise) {\n      outerRings.push([rings[i]]);\n    } else {\n      holes.push(rings[i]);\n    }\n  }\n  while (holes.length) {\n    const hole = holes.shift();\n    let matched = false;\n    // loop over all outer rings and see if they contain our hole.\n    for (i = outerRings.length - 1; i >= 0; i--) {\n      const outerRing = outerRings[i][0];\n      const containsHole = containsExtent(\n        new LinearRing(outerRing).getExtent(),\n        new LinearRing(hole).getExtent()\n      );\n      if (containsHole) {\n        // the hole is contained push it into our polygon\n        outerRings[i].push(hole);\n        matched = true;\n        break;\n      }\n    }\n    if (!matched) {\n      // no outer rings contain this hole turn it into and outer\n      // ring (reverse it)\n      outerRings.push([hole.reverse()]);\n    }\n  }\n  return outerRings;\n}\n\n/**\n * @param {EsriJSONPoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Point.\n */\nfunction readPointGeometry(object) {\n  let point;\n  if (object.m !== undefined && object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z, object.m], 'XYZM');\n  } else if (object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z], 'XYZ');\n  } else if (object.m !== undefined) {\n    point = new Point([object.x, object.y, object.m], 'XYM');\n  } else {\n    point = new Point([object.x, object.y]);\n  }\n  return point;\n}\n\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} LineString.\n */\nfunction readLineStringGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new LineString(object.paths[0], layout);\n}\n\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiLineString(object.paths, layout);\n}\n\n/**\n * @param {EsriJSONHasZM} object Object.\n * @return {import(\"../geom/Geometry.js\").GeometryLayout} The geometry layout to use.\n */\nfunction getGeometryLayout(object) {\n  /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n  let layout = 'XY';\n  if (object.hasZ === true && object.hasM === true) {\n    layout = 'XYZM';\n  } else if (object.hasZ === true) {\n    layout = 'XYZ';\n  } else if (object.hasM === true) {\n    layout = 'XYM';\n  }\n  return layout;\n}\n\n/**\n * @param {EsriJSONMultipoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiPoint(object.points, layout);\n}\n\n/**\n * @param {EsriJSONMultiPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiPolygon(object.rings, layout);\n}\n\n/**\n * @param {EsriJSONPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new Polygon(object.rings, layout);\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPoint} EsriJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  const coordinates = geometry.getCoordinates();\n  /** @type {EsriJSONPoint} */\n  let esriJSON;\n  const layout = geometry.getLayout();\n  if (layout === 'XYZ') {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2],\n    };\n  } else if (layout === 'XYM') {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n      m: coordinates[2],\n    };\n  } else if (layout === 'XYZM') {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2],\n      m: coordinates[3],\n    };\n  } else if (layout === 'XY') {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n    };\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n  return esriJSON;\n}\n\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @return {Object} Object with boolean hasZ and hasM keys.\n */\nfunction getHasZM(geometry) {\n  const layout = geometry.getLayout();\n  return {\n    hasZ: layout === 'XYZ' || layout === 'XYZM',\n    hasM: layout === 'XYM' || layout === 'XYZM',\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} lineString Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeLineStringGeometry(lineString, options) {\n  const hasZM = getHasZM(lineString);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    paths: [\n      /** @type {Array<EsriJSONPosition>} */ (lineString.getCoordinates()),\n    ],\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} polygon Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writePolygonGeometry(polygon, options) {\n  // Esri geometries use the left-hand rule\n  const hasZM = getHasZM(polygon);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    rings: /** @type {Array<Array<EsriJSONPosition>>} */ (\n      polygon.getCoordinates(false)\n    ),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} multiLineString Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeMultiLineStringGeometry(multiLineString, options) {\n  const hasZM = getHasZM(multiLineString);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    paths: /** @type {Array<Array<EsriJSONPosition>>} */ (\n      multiLineString.getCoordinates()\n    ),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} multiPoint Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONMultipoint} EsriJSON geometry.\n */\nfunction writeMultiPointGeometry(multiPoint, options) {\n  const hasZM = getHasZM(multiPoint);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    points: /** @type {Array<EsriJSONPosition>} */ (\n      multiPoint.getCoordinates()\n    ),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  const hasZM = getHasZM(geometry);\n  const coordinates = geometry.getCoordinates(false);\n  const output = [];\n  for (let i = 0; i < coordinates.length; i++) {\n    for (let x = coordinates[i].length - 1; x >= 0; x--) {\n      output.push(coordinates[i][x]);\n    }\n  }\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    rings: /** @type {Array<Array<EsriJSONPosition>>} */ (output),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  const geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(\n    transformGeometryWithOptions(geometry, true, options),\n    options\n  );\n}\n\nexport default EsriJSON;\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        let array;\n        if (name in object) {\n          array = object[name];\n        } else {\n          array = [];\n          object[name] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        object[name] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, thisArg) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      thisArg !== undefined ? thisArg : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, thisArg) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [fixedNodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [fixedNamespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(fixedNodeName, fixedNamespaceURI) {\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [newNodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, newNodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = newNodeName;\n      }\n\n      const namespaceURI =\n        fixedNamespaceURI !== undefined ? fixedNamespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, structureNS) {\n  structureNS = structureNS !== undefined ? structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, thisArg) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(thisArg, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, thisArg) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, thisArg);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  const length = (keys !== undefined ? keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        thisArg !== undefined ? thisArg : this,\n        value,\n        objectStack,\n        keys !== undefined ? keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          thisArg,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, keys, thisArg);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'xml';\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, options);\n    } else if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    }\n    return this.readFeatureFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, options) {\n    const features = this.readFeaturesFromDocument(doc, options);\n    if (features.length > 0) {\n      return features[0];\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    if (!source) {\n      return [];\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, options);\n    } else if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    }\n    return this.readFeaturesFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), options)\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, options);\n    } else if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    }\n    return this.readGeometryFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readProjectionFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   */\n  writeFeature(feature, options) {\n    const node = this.writeFeatureNode(feature, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, options) {\n    const node = this.writeFeaturesNode(features, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   */\n  writeGeometry(geometry, options) {\n    const node = this.writeGeometryNode(geometry, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {\n  getAllTextContent,\n  getAttributeNS,\n  makeArrayPusher,\n  makeReplacer,\n  parseNode,\n  pushParseAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n */\nexport const GMLNS = 'http://www.opengis.net/gml';\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc.\n *\n * @const\n * @type {RegExp}\n */\nconst ONLY_WHITESPACE_RE = /^\\s*$/;\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} [srsName] srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n * @api\n */\nclass GMLBase extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @protected\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType = options.featureType;\n\n    /**\n     * @protected\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS = options.featureNS;\n\n    /**\n     * @protected\n     * @type {string|undefined}\n     */\n    this.srsName = options.srsName;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.schemaLocation = '';\n\n    /**\n     * @type {Object<string, Object<string, Object>>}\n     */\n    this.FEATURE_COLLECTION_PARSERS = {};\n    this.FEATURE_COLLECTION_PARSERS[this.namespace] = {\n      'featureMember': makeArrayPusher(this.readFeaturesInternal),\n      'featureMembers': makeReplacer(this.readFeaturesInternal),\n    };\n\n    this.supportedMediaTypes = ['application/gml+xml'];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<Feature> | undefined} Features.\n   */\n  readFeaturesInternal(node, objectStack) {\n    const localName = node.localName;\n    let features = null;\n    if (localName == 'FeatureCollection') {\n      features = pushParseAndPop(\n        [],\n        this.FEATURE_COLLECTION_PARSERS,\n        node,\n        objectStack,\n        this\n      );\n    } else if (\n      localName == 'featureMembers' ||\n      localName == 'featureMember' ||\n      localName == 'member'\n    ) {\n      const context = objectStack[0];\n      let featureType = context['featureType'];\n      let featureNS = context['featureNS'];\n      const prefix = 'p';\n      const defaultPrefix = 'p0';\n      if (!featureType && node.childNodes) {\n        (featureType = []), (featureNS = {});\n        for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\n          const child = /** @type {Element} */ (node.childNodes[i]);\n          if (child.nodeType === 1) {\n            const ft = child.nodeName.split(':').pop();\n            if (!featureType.includes(ft)) {\n              let key = '';\n              let count = 0;\n              const uri = child.namespaceURI;\n              for (const candidate in featureNS) {\n                if (featureNS[candidate] === uri) {\n                  key = candidate;\n                  break;\n                }\n                ++count;\n              }\n              if (!key) {\n                key = prefix + count;\n                featureNS[key] = uri;\n              }\n              featureType.push(key + ':' + ft);\n            }\n          }\n        }\n        if (localName != 'featureMember') {\n          // recheck featureType for each featureMember\n          context['featureType'] = featureType;\n          context['featureNS'] = featureNS;\n        }\n      }\n      if (typeof featureNS === 'string') {\n        const ns = featureNS;\n        featureNS = {};\n        featureNS[defaultPrefix] = ns;\n      }\n      /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\n      const parsersNS = {};\n      const featureTypes = Array.isArray(featureType)\n        ? featureType\n        : [featureType];\n      for (const p in featureNS) {\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\n          const featurePrefix = featureTypes[i].includes(':')\n            ? featureTypes[i].split(':')[0]\n            : defaultPrefix;\n          if (featurePrefix === p) {\n            parsers[featureTypes[i].split(':').pop()] =\n              localName == 'featureMembers'\n                ? makeArrayPusher(this.readFeatureElement, this)\n                : makeReplacer(this.readFeatureElement, this);\n          }\n        }\n        parsersNS[featureNS[p]] = parsers;\n      }\n      if (localName == 'featureMember' || localName == 'member') {\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n      } else {\n        features = pushParseAndPop([], parsersNS, node, objectStack);\n      }\n    }\n    if (features === null) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readGeometryOrExtent(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\n    context['srsDimension'] =\n      node.firstElementChild.getAttribute('srsDimension');\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readExtentElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const extent = /** @type {import(\"../extent.js\").Extent} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return extent ? transformExtentWithOptions(extent, context) : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|undefined} Geometry.\n   */\n  readGeometryElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return geometry\n      ? transformGeometryWithOptions(geometry, false, context)\n      : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {boolean} asFeature whether result should be wrapped as a feature.\n   * @return {Feature|Object} Feature\n   */\n  readFeatureElementInternal(node, objectStack, asFeature) {\n    let geometryName;\n    const values = {};\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      let value;\n      const localName = n.localName;\n      // first, check if it is simple attribute\n      if (\n        n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n          (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))\n      ) {\n        value = getAllTextContent(n, false);\n        if (ONLY_WHITESPACE_RE.test(value)) {\n          value = undefined;\n        }\n      } else {\n        if (asFeature) {\n          //if feature, try it as a geometry or extent\n          value =\n            localName === 'boundedBy'\n              ? this.readExtentElement(n, objectStack)\n              : this.readGeometryElement(n, objectStack);\n        }\n        if (!value) {\n          //if not a geometry or not a feature, treat it as a complex attribute\n          value = this.readFeatureElementInternal(n, objectStack, false);\n        } else if (localName !== 'boundedBy') {\n          // boundedBy is an extent and must not be considered as a geometry\n          geometryName = localName;\n        }\n      }\n\n      const len = n.attributes.length;\n      if (len > 0) {\n        value = {_content_: value};\n        for (let i = 0; i < len; i++) {\n          const attName = n.attributes[i].name;\n          value[attName] = n.attributes[i].value;\n        }\n      }\n\n      if (values[localName]) {\n        if (!(values[localName] instanceof Array)) {\n          values[localName] = [values[localName]];\n        }\n        values[localName].push(value);\n      } else {\n        values[localName] = value;\n      }\n    }\n    if (!asFeature) {\n      return values;\n    }\n    const feature = new Feature(values);\n    if (geometryName) {\n      feature.setGeometryName(geometryName);\n    }\n    const fid =\n      node.getAttribute('fid') || getAttributeNS(node, this.namespace, 'id');\n    if (fid) {\n      feature.setId(fid);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Feature} Feature.\n   */\n  readFeatureElement(node, objectStack) {\n    return this.readFeatureElementInternal(node, objectStack, true);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Point|undefined} Point.\n   */\n  readPoint(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new Point(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPoint|undefined} MultiPoint.\n   */\n  readMultiPoint(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const coordinates = pushParseAndPop(\n      [],\n      this.MULTIPOINT_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (coordinates) {\n      return new MultiPoint(coordinates);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiLineString(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTILINESTRING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (lineStrings) {\n      return new MultiLineString(lineStrings);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiPolygon(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTIPOLYGON_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  pointMemberParser(node, objectStack) {\n    parseNode(this.POINTMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  lineStringMemberParser(node, objectStack) {\n    parseNode(this.LINESTRINGMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  polygonMemberParser(node, objectStack) {\n    parseNode(this.POLYGONMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readLineString(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} LinearRing flat coordinates.\n   */\n  readFlatLinearRing(node, objectStack) {\n    const ring = pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (ring) {\n      return ring;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LinearRing|undefined} LinearRing.\n   */\n  readLinearRing(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new LinearRing(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readPolygon(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>} Flat coordinates.\n   */\n  readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    const geometry = this.readGeometryElement(node, [\n      this.getReadOptions(node, options ? options : {}),\n    ]);\n    return geometry ? geometry : null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {\n      featureType: this.featureType,\n      featureNS: this.featureNS,\n    };\n    if (internalOptions) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    const features = this.readFeaturesInternal(node, [internalOptions]);\n    return features || [];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return getProjection(\n      this.srsName\n        ? this.srsName\n        : node.firstElementChild.getAttribute('srsName')\n    );\n  }\n}\n\nGMLBase.prototype.namespace = GMLNS;\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n  },\n};\n\nexport default GMLBase;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/GML2\n */\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  createElementNS,\n  getAllTextContent,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {writeStringTextNode} from './xsd.js';\n\n/**\n * @const\n * @type {string}\n */\nconst schemaLocation =\n  GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nclass GML2 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    this.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] = makeArrayPusher(\n      this.readFeaturesInternal\n    );\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatCoordinates(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n      objectStack[0]\n    );\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      if (proj) {\n        axisOrientation = proj.getAxisOrientation();\n      }\n    }\n    const coordsGroups = s.trim().split(/\\s+/);\n    const flatCoordinates = [];\n    for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n      const coords = coordsGroups[i].split(/,+/);\n      const x = parseFloat(coords[0]);\n      const y = parseFloat(coords[1]);\n      const z = coords.length === 3 ? parseFloat(coords[2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readBox(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.BOX_PARSERS_,\n      node,\n      objectStack,\n      this\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[1][3],\n      flatCoordinates[1][4]\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  innerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml', nodeName);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n      node.appendChild(coordinates);\n      this.writeCoordinates_(coordinates, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {string} namespaceURI XML namespace.\n   * @return {Element} coordinates node.\n   * @private\n   */\n  createCoordinatesNode_(namespaceURI) {\n    const coordinates = createElementNS(namespaceURI, 'coordinates');\n    coordinates.setAttribute('decimal', '.');\n    coordinates.setAttribute('cs', ',');\n    coordinates.setAttribute('ts', ' ');\n\n    return coordinates;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCoordinates_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      const point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs'\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    let coords =\n      axisOrientation.substr(0, 2) === 'en'\n        ? point[0] + ',' + point[1]\n        : point[1] + ',' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ',' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    const point = geometry.getCoordinates();\n    const coord = this.getCoords_(point, srsName, hasZ);\n    writeStringTextNode(coordinates, coord);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      'http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML2.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML2.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML2.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML2.prototype.writeEnvelope),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML2.prototype.writePointMember),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\nexport default GML2;\n","/**\n * @module ol/format/GML3\n */\nimport GML2 from './GML2.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from './xsd.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n * @private\n */\nconst schemaLocation =\n  GMLNS +\n  ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n  '1.0.0/gmlsf.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nclass GML3 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.surface_ = options.surface !== undefined ? options.surface : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.curve_ = options.curve !== undefined ? options.curve : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiCurve_ =\n      options.multiCurve !== undefined ? options.multiCurve : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiSurface_ =\n      options.multiSurface !== undefined ? options.multiSurface : true;\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hasZ = options.hasZ !== undefined ? options.hasZ : false;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiCurve(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (lineStrings) {\n      const multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Polygon.\n   */\n  readFlatCurveRing(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    const flatCoordinates = [];\n    for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n      extend(flatCoordinates, lineStrings[i].getFlatCoordinates());\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiSurface(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTISURFACE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  curveMemberParser(node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  surfaceMemberParser(node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.PATCHES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readSegment(node, objectStack) {\n    return pushParseAndPop([], this.SEGMENTS_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPolygonPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readLineStringSegment(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  interiorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  exteriorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readSurface(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.SURFACE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readCurve(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.CURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readEnvelope(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.ENVELOPE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[2][0],\n      flatCoordinates[2][1]\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPos(node, objectStack) {\n    let s = getAllTextContent(node, false);\n    const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array<number>} */\n    const flatCoordinates = [];\n    let m;\n    while ((m = re.exec(s))) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n      return undefined;\n    }\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    if (axisOrientation === 'neu') {\n      let i, ii;\n      for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        const y = flatCoordinates[i];\n        const x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n    const len = flatCoordinates.length;\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n    if (len === 0) {\n      return undefined;\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPosList(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    const contextDimension = context['srsDimension'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    const coords = s.split(/\\s+/);\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\n    let dim = 2;\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('dimension'));\n    } else if (\n      /** @type {Element} */ (node.parentNode).getAttribute('srsDimension')\n    ) {\n      dim = readNonNegativeIntegerString(\n        /** @type {Element} */ (node.parentNode).getAttribute('srsDimension')\n      );\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n    let x, y, z;\n    const flatCoordinates = [];\n    for (let i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = dim === 3 ? parseFloat(coords[i + 2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} value Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePos_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    const point = value.getCoordinates();\n    let coords;\n    // only 2d for simple features profile\n    if (axisOrientation.substr(0, 2) === 'en') {\n      coords = point[0] + ' ' + point[1];\n    } else {\n      coords = point[1] + ' ' + point[0];\n    }\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n    writeStringTextNode(node, coords);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    let coords =\n      axisOrientation.substr(0, 2) === 'en'\n        ? point[0] + ' ' + point[1]\n        : point[1] + ' ' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePosList_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    let point;\n    for (let i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior'\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    const hasZ = context['hasZ'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeFeatureMembers_(node, features, objectStack) {\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureType = context['featureType'];\n    const featureNS = context['featureNS'];\n    /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n    const serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(\n      this.writeFeatureElement,\n      this\n    );\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      serializers,\n      makeSimpleNodeFactory(featureType, featureNS),\n      features,\n      objectStack\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      this.namespace,\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const curve = context['curve'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS(this.namespace, nodeName);\n  }\n\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeGeometryNode(geometry, options) {\n    options = this.adaptOptions(options);\n    const geom = createElementNS(this.namespace, 'geom');\n    const context = {\n      node: geom,\n      hasZ: this.hasZ,\n      srsName: this.srsName,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  }\n\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Element} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const node = createElementNS(this.namespace, 'featureMembers');\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation\n    );\n    const context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML3.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML3.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML3.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML3;\n","/**\n * @module ol/format/GML\n */\nimport GML3 from './GML3.js';\n\n/**\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @class\n * @param {import(\"./GMLBase.js\").Options} [options]\n *     Optional configuration object.\n * @api\n */\nconst GML = GML3;\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n * @return {string} Result.\n * @api\n */\nGML.prototype.writeFeatures;\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n * @return {Node} Node.\n * @api\n */\nGML.prototype.writeFeaturesNode;\n\nexport default GML;\n","/**\n * @module ol/format/GML32\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\nimport {\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n} from '../xml.js';\nimport {writeStringTextNode} from '../format/xsd.js';\n\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nclass GML32 extends GML3 {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n  }\n}\n\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML32.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML32.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML32.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML32.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML32.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML32;\n","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  makeArrayPusher,\n  makeArraySerializer,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readDateTime,\n  readDecimal,\n  readPositiveInteger,\n  readString,\n  writeDateTimeTextNode,\n  writeDecimalTextNode,\n  writeNonNegativeIntegerTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.topografix.com/GPX/1/1 ' +\n  'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeArrayPusher(readRte),\n  'trk': makeArrayPusher(readTrk),\n  'wpt': makeArrayPusher(readWpt),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeObjectPropertySetter(readString, 'linkText'),\n  'type': makeObjectPropertySetter(readString, 'linkType'),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeChildAppender(writeRte),\n  'trk': makeChildAppender(writeTrk),\n  'wpt': makeChildAppender(writeWpt),\n});\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node):void} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ] HasZ.\n * @property {boolean} [hasM] HasM.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nclass GPX extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(Feature, Node): void|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  handleReadExtensions_(features) {\n    if (!features) {\n      features = [];\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (this.readExtensions_) {\n        const extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    const feature = featureReader(node, [this.getReadOptions(node, options)]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      const features = pushParseAndPop([], GPX_PARSERS, node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      }\n      return [];\n    }\n    return [];\n  }\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    //FIXME Serialize metadata\n    const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}),\n      GPX_SERIALIZERS,\n      GPX_NODE_FACTORY,\n      features,\n      [options]\n    );\n    return gpx;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n  'type': makeObjectPropertySetter(readString),\n  'rtept': parseRtePt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'type': makeObjectPropertySetter(readString),\n  'extensions': parseExtensions,\n  'trkseg': parseTrkSeg,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': parseTrkPt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n  'magvar': makeObjectPropertySetter(readDecimal),\n  'geoidheight': makeObjectPropertySetter(readDecimal),\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'sym': makeObjectPropertySetter(readString),\n  'type': makeObjectPropertySetter(readString),\n  'fix': makeObjectPropertySetter(readString),\n  'sat': makeObjectPropertySetter(readPositiveInteger),\n  'hdop': makeObjectPropertySetter(readDecimal),\n  'vdop': makeObjectPropertySetter(readDecimal),\n  'pdop': makeObjectPropertySetter(readDecimal),\n  'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n  'dgpsid': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n});\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'rtept',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'rtept': makeArraySerializer(makeChildAppender(writeWptType)),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time']);\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'trkseg',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg)),\n});\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': makeChildAppender(writeWptType),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'ele',\n  'time',\n  'magvar',\n  'geoidheight',\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'sym',\n  'type',\n  'fix',\n  'sat',\n  'hdop',\n  'vdop',\n  'pdop',\n  'ageofdgpsdata',\n  'dgpsid',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeChildAppender(writeDecimalTextNode),\n  'time': makeChildAppender(writeDateTimeTextNode),\n  'magvar': makeChildAppender(writeDecimalTextNode),\n  'geoidheight': makeChildAppender(writeDecimalTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'sym': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'fix': makeChildAppender(writeStringTextNode),\n  'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'hdop': makeChildAppender(writeDecimalTextNode),\n  'vdop': makeChildAppender(writeDecimalTextNode),\n  'pdop': makeChildAppender(writeDecimalTextNode),\n  'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n  'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk',\n};\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, nodeName) {\n  const geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat'))\n  );\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>} [ends] Ends.\n * @return {import(\"../geom/Geometry.js\").GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n  let layout = 'XY';\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = 'XYZM';\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = 'XYZ';\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = 'XYM';\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = (flatCoordinates.length / 4) * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = (ends[i] / 4) * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      rteValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      rteValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      trkValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      trkValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'layoutOptions': {},\n    },\n    RTE_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(flatCoordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'ends': [],\n      'layoutOptions': {},\n    },\n    TRK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [properties['linkText'], properties['linkType']];\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    link,\n    objectStack,\n    LINK_SEQUENCE\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case 'XYZM':\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n    // fall through\n    case 'XYZ':\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case 'XYM':\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n    // pass\n  }\n  const orderedKeys =\n    node.nodeName == 'rtept'\n      ? RTEPT_TYPE_SEQUENCE[namespaceURI]\n      : WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'LineString') {\n    const lineString = /** @type {LineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    RTE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'MultiLineString') {\n    const multiLineString = /** @type {MultiLineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    TRK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(\n    context,\n    TRKSEG_SERIALIZERS,\n    TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(),\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'Point') {\n    const point = /** @type {Point} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\nexport default GPX;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), options);\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'text';\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return this.writeFeatureText(feature, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return this.writeFeaturesText(features, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  }\n  return '';\n}\n\nexport default TextFeature;\n","/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {'barometric' | 'gps' | 'none'} IGCZ\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n */\n\n/**\n * @const\n * @type {RegExp}\n */\nconst B_RECORD_RE =\n  /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nconst NEWLINE_RE = /\\r\\n|\\r|\\n/;\n\n/**\n * @typedef {Object} Options\n * @property {IGCZ} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nclass IGC extends TextFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {IGCZ}\n     */\n    this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : 'none';\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const altitudeMode = this.altitudeMode_;\n    const lines = text.split(NEWLINE_RE);\n    /** @type {Object<string, string>} */\n    const properties = {};\n    const flatCoordinates = [];\n    let year = 2000;\n    let month = 0;\n    let day = 1;\n    let lastDateTime = -1;\n    let i, ii;\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      let m;\n      if (line.charAt(0) == 'B') {\n        m = B_RECORD_RE.exec(line);\n        if (m) {\n          const hour = parseInt(m[1], 10);\n          const minute = parseInt(m[2], 10);\n          const second = parseInt(m[3], 10);\n          let y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n          if (m[6] == 'S') {\n            y = -y;\n          }\n          let x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n          if (m[9] == 'W') {\n            x = -x;\n          }\n          flatCoordinates.push(x, y);\n          if (altitudeMode != 'none') {\n            let z;\n            if (altitudeMode == 'gps') {\n              z = parseInt(m[11], 10);\n            } else if (altitudeMode == 'barometric') {\n              z = parseInt(m[12], 10);\n            } else {\n              z = 0;\n            }\n            flatCoordinates.push(z);\n          }\n          let dateTime = Date.UTC(year, month, day, hour, minute, second);\n          // Detect UTC midnight wrap around.\n          if (dateTime < lastDateTime) {\n            dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n          }\n          flatCoordinates.push(dateTime / 1000);\n          lastDateTime = dateTime;\n        }\n      } else if (line.charAt(0) == 'H') {\n        m = HFDTE_RECORD_RE.exec(line);\n        if (m) {\n          day = parseInt(m[1], 10);\n          month = parseInt(m[2], 10) - 1;\n          year = 2000 + parseInt(m[3], 10);\n        } else {\n          m = H_RECORD_RE.exec(line);\n          if (m) {\n            properties[m[1]] = m[2].trim();\n          }\n        }\n      }\n    }\n    if (flatCoordinates.length === 0) {\n      return null;\n    }\n    const layout = altitudeMode == 'none' ? 'XYM' : 'XYZM';\n    const lineString = new LineString(flatCoordinates, layout);\n    const feature = new Feature(\n      transformGeometryWithOptions(lineString, false, options)\n    );\n    feature.setProperties(properties, true);\n    return feature;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    if (feature) {\n      return [feature];\n    }\n    return [];\n  }\n}\n\nexport default IGC;\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport Icon from '../style/Icon.js';\nimport ImageState from '../ImageState.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  isDocument,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeReplacer,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readBoolean,\n  readDecimal,\n  readString,\n  writeBooleanTextNode,\n  writeCDATASection,\n  writeDecimalTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {toRadians} from '../math.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} yunits Units of Y.\n * @property {import(\"../style/Icon.js\").IconOrigin} [origin] Origin.\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<Array<number>>} coordinates Coordinates.\n * @property {Array<number>} whens Whens.\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.opengis.net/kml/2.2 ' +\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/Icon.js\").IconAnchorUnits>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': 'fraction',\n  'pixels': 'pixels',\n  'insetPixels': 'pixels',\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser,\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill|null}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill|null} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {import(\"../style/Image.js\").default|null}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default|null} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke|null}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke|null} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text|null}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text|null} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style|null}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style|null} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>|null} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n/**\n * Function that returns the scale needed to normalize an icon image to 32 pixels.\n * @param {import(\"../size.js\").Size} size Image size.\n * @return {number} Scale.\n */\nfunction scaleForSize(size) {\n  return 32 / Math.min(size[0], size[1]);\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR,\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2];\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: 'bottom-left',\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: scaleForSize(DEFAULT_IMAGE_STYLE_SIZE),\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC,\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1,\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2,\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8,\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0,\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet TEXTAREA;\n\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * @api\n */\nclass KML extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle\n      ? options.defaultStyle\n      : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ =\n      options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    this.writeStyles_ =\n      options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ =\n      options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    /**\n     * @type {IconUrlFunction}\n     */\n    this.iconUrlFunction_ = options.iconUrlFunction\n      ? options.iconUrlFunction\n      : defaultIconUrlFunction;\n\n    this.supportedMediaTypes = ['application/vnd.google-earth.kml+xml'];\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this),\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop(\n      {'geometry': null},\n      PLACEMARK_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n      objectStack[0]\n    );\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style,\n        styleUrl,\n        this.defaultStyle_,\n        this.sharedStyles_,\n        this.showPointNames_\n      );\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle.call(this, node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(node, [\n      this.getReadOptions(node, options),\n    ]);\n    if (feature) {\n      return feature;\n    }\n    return null;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        return features;\n      }\n      return [];\n    } else if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (feature) {\n        return [feature];\n      }\n      return [];\n    } else if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readNameFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' ||\n          localName == 'Folder' ||\n          localName == 'Placemark' ||\n          localName == 'kml')\n      ) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromNode(/** @type {Element} */ (source))\n      );\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          networkLinks,\n          this.readNetworkLinksFromNode(/** @type {Element} */ (n))\n        );\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        n.localName == 'NetworkLink'\n      ) {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        regions,\n        this.readRegionFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: kml,\n      };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n      context,\n      KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      [options],\n      orderedKeys,\n      this\n    );\n    return kml;\n  }\n}\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  const textOffset = [0, 0];\n  /** @type {CanvasTextAlign} */\n  let textAlign = 'start';\n  const imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    const imageSize = imageStyle.getSize();\n    if (imageSize && imageSize.length == 2) {\n      const imageScale = imageStyle.getScaleArray();\n      const anchor = imageStyle.getAnchor();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = imageScale[0] * (imageSize[0] - anchor[0]);\n      textOffset[1] = imageScale[1] * (imageSize[1] / 2 - anchor[1]);\n      textAlign = 'left';\n    }\n  }\n  let textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(\n  style,\n  styleUrl,\n  defaultStyle,\n  sharedStyles,\n  showPointNames\n) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      let drawName = showPointNames;\n      let name = '';\n      let multiGeometryPoints = [];\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          if (geometry instanceof GeometryCollection) {\n            multiGeometryPoints = geometry\n              .getGeometriesArrayRecursive()\n              .filter(function (geometry) {\n                const type = geometry.getType();\n                return type === 'Point' || type === 'MultiPoint';\n              });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            const type = geometry.getType();\n            drawName = type === 'Point' || type === 'MultiPoint';\n          }\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && /&[^&]+;/.test(name)) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      let featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        const nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          const baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null,\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  }\n  return defaultStyle;\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255,\n    ];\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  s = s.replace(/\\s*,\\s*/g, ',');\n  const re =\n    /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  const s = getAllTextContent(node, false)\n    .trim()\n    .replace(/^(?!.*#)/, '#');\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  /** @type {import('../style/Icon.js').IconOrigin} */\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-left';\n    } else {\n      origin = 'top-left';\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-right';\n    } else {\n      origin = 'top-right';\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin,\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  let src;\n  const href = /** @type {string|undefined} */ (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  /** @type {import('../style/Icon.js').IconOrigin|undefined} */\n  let anchorOrigin = 'bottom-left';\n  const hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (/^https?:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    // Google hotspots from https://kml4earth.appspot.com/icons.html#notes\n    if (src.includes('pushpin')) {\n      anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('arrow-reverse')) {\n      anchor = [54, 42];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('paddle')) {\n      anchor = [32, 1];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */ (IconObject['x']);\n  const y = /** @type {number|undefined} */ (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */ (IconObject['w']);\n  const h = /** @type {number|undefined} */ (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */ (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  const scale = /** @type {number|undefined} */ (object['scale']);\n\n  const color = /** @type {Array<number>|undefined} */ (object['color']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: 'bottom-left',\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color,\n    });\n\n    const imageScale = imageStyle.getScaleArray()[0];\n    const imageSize = imageStyle.getSize();\n    if (imageSize === null) {\n      const imageState = imageStyle.getImageState();\n      if (imageState === ImageState.IDLE || imageState === ImageState.LOADING) {\n        const listener = function () {\n          const imageState = imageStyle.getImageState();\n          if (\n            !(\n              imageState === ImageState.IDLE ||\n              imageState === ImageState.LOADING\n            )\n          ) {\n            const imageSize = imageStyle.getSize();\n            if (imageSize && imageSize.length == 2) {\n              const resizeScale = scaleForSize(imageSize);\n              imageStyle.setScale(imageScale * resizeScale);\n            }\n            imageStyle.unlistenImageChange(listener);\n          }\n        };\n        imageStyle.listenImageChange(listener);\n        if (imageState === ImageState.IDLE) {\n          imageStyle.load();\n        }\n      }\n    } else if (imageSize.length == 2) {\n      const resizeScale = scaleForSize(imageSize);\n      imageStyle.setScale(imageScale * resizeScale);\n    }\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color:\n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    }),\n    scale: /** @type {number|undefined} */ (object['scale']),\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const coordinates = gxTrackObject.coordinates;\n  const s = getAllTextContent(node, false);\n  const re =\n    /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    coordinates.push([x, y, z]);\n  } else {\n    coordinates.push([]);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop(\n    [],\n    GX_MULTITRACK_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'when': whenParser,\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      coordinates: [],\n      whens: [],\n    }),\n    GX_TRACK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = [];\n  const coordinates = gxTrackObject.coordinates;\n  const whens = gxTrackObject.whens;\n  for (\n    let i = 0, ii = Math.min(coordinates.length, whens.length);\n    i < ii;\n    ++i\n  ) {\n    if (coordinates[i].length == 3) {\n      flatCoordinates.push(\n        coordinates[i][0],\n        coordinates[i][1],\n        coordinates[i][2],\n        whens[i]\n      );\n    }\n  }\n  return new LineString(flatCoordinates, 'XYZM');\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeObjectPropertySetter(readURI),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  }\n  return null;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(\n    null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, 'XYZ');\n    lineString.setProperties(properties, true);\n    return lineString;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, 'XYZ', [\n      flatCoordinates.length,\n    ]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop(\n    [],\n    MULTI_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == 'Point') {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'LineString') {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'Polygon') {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'GeometryCollection') {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, 'XYZ');\n    point.setProperties(properties, true);\n    return point;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatLinearRings = pushParseAndPop(\n    [null],\n    FLAT_LINEAR_RINGS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, 'XYZ', ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {},\n    STYLE_PARSERS,\n    node,\n    objectStack,\n    this\n  );\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle =\n    /** @type {Fill} */\n    (\n      'fillStyle' in styleObject ? styleObject['fillStyle'] : DEFAULT_FILL_STYLE\n    );\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = /** @type {import(\"../style/Image.js\").default} */ (\n        styleObject['imageStyle']\n      );\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle =\n    /** @type {Text} */\n    (\n      'textStyle' in styleObject ? styleObject['textStyle'] : DEFAULT_TEXT_STYLE\n    );\n  const strokeStyle =\n    /** @type {Stroke} */\n    (\n      'strokeStyle' in styleObject\n        ? styleObject['strokeStyle']\n        : DEFAULT_STROKE_STYLE\n    );\n  const outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type !== 'Polygon' && type !== 'MultiPolygon';\n                })\n            );\n          } else if (type !== 'Polygon' && type !== 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        image: imageStyle,\n        stroke: strokeStyle,\n        text: textStyle,\n        zIndex: undefined, // FIXME\n      }),\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Polygon' || type === 'MultiPolygon';\n                })\n            );\n          } else if (type === 'Polygon' || type === 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        stroke: null,\n        zIndex: undefined, // FIXME\n      }),\n    ];\n  }\n  return [\n    new Style({\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined, // FIXME\n    }),\n  ];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      },\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */ (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */ (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop(\n    {},\n    LAT_LON_ALT_BOX_PARSERS,\n    node,\n    objectStack\n  );\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north']),\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  // KML spec only allows one LinearRing  per innerBoundaryIs, but Google Earth\n  // allows multiple, so we parse multiple here too.\n  'LinearRing': makeArrayPusher(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  const innerBoundaryFlatLinearRings = pushParseAndPop(\n    /** @type {Array<Array<number>>} */ ([]),\n    INNER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (innerBoundaryFlatLinearRings.length > 0) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(...innerBoundaryFlatLinearRings);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    OUTER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == 'XY' || layout == 'XYM') {\n    dimension = 2;\n  } else if (layout == 'XYZ' || layout == 'XYZM') {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName),\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.displayName],\n        objectStack,\n        ['displayName']\n      );\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.value],\n        objectStack,\n        ['value']\n      );\n    }\n  } else {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      [value],\n      objectStack,\n      ['value']\n    );\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function (value, objectStack, nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY,\n    features,\n    objectStack,\n    undefined,\n    this\n  );\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Element} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY,\n      [{name: names[i], value: values[i]}],\n      objectStack\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS,\n  ['href'],\n  makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h'])\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeChildAppender(writeStringTextNode),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n  })\n);\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function (value, objectStack, nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + nodeName);\n};\n\n/**\n * @param {Element} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    GX_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'scale',\n  'heading',\n  'Icon',\n  'color',\n  'hotSpot',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const /** @type {Object<string, any>} */ properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src,\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n          x: anchor[0],\n          xunits: 'pixels',\n          y: size[1] - anchor[1],\n          yunits: 'pixels',\n        };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  let scale = style.getScaleArray()[0];\n  let imageSize = size;\n  if (imageSize === null) {\n    imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n  }\n  if (imageSize.length == 2) {\n    const resizeScale = scaleForSize(imageSize);\n    scale = scale / resizeScale;\n  }\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'scale',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry',\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function (value, objectStack, nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()\n      ]\n    );\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type === 'GeometryCollection') {\n    /** @type {GeometryCollection} */ (geometry)\n      .getGeometriesArrayRecursive()\n      .forEach(function (geometry) {\n        const type = geometry.getType();\n        if (type === 'MultiPoint') {\n          geometries = geometries.concat(\n            /** @type {MultiPoint} */ (geometry).getPoints()\n          );\n        } else if (type === 'MultiLineString') {\n          geometries = geometries.concat(\n            /** @type {MultiLineString} */ (geometry).getLineStrings()\n          );\n        } else if (type === 'MultiPolygon') {\n          geometries = geometries.concat(\n            /** @type {MultiPolygon} */ (geometry).getPolygons()\n          );\n        } else if (\n          type === 'Point' ||\n          type === 'LineString' ||\n          type === 'Polygon'\n        ) {\n          geometries.push(geometry);\n        } else {\n          assert(false, 39); // Unknown geometry type\n        }\n      });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === 'MultiPoint') {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === 'MultiLineString') {\n    geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === 'MultiPolygon') {\n    geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(\n    context,\n    MULTI_GEOMETRY_SERIALIZERS,\n    factory,\n    geometries,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY,\n    [linearRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'open',\n  'visibility',\n  'address',\n  'phoneNumber',\n  'description',\n  'styleUrl',\n  'Style',\n]);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1,\n  };\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {})\n    .sort()\n    .filter(function (v) {\n      return !filter[v];\n    });\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const styleArray = Array.isArray(styles) ? styles : [styles];\n      let pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          const geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            const type = geometry.getType();\n            if (type === 'GeometryCollection') {\n              return /** @type {GeometryCollection} */ (geometry)\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Point' || type === 'MultiPoint';\n                }).length;\n            }\n            return type === 'Point' || type === 'MultiPoint';\n          }\n        });\n        ('Point');\n      }\n      if (this.writeStyles_) {\n        let lineStyles = styleArray;\n        let polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'LineString' || type === 'MultiLineString';\n                  }).length;\n              }\n              return type === 'LineString' || type === 'MultiLineString';\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'Polygon' || type === 'MultiPolygon';\n                  }).length;\n              }\n              return type === 'Polygon' || type === 'MultiPolygon';\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles,\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        const textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(\n      context,\n      PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY,\n      [namesAndValues],\n      objectStack\n    );\n  }\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY,\n    [geometry],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'extrude',\n  'tessellate',\n  'altitudeMode',\n  'coordinates',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'fill',\n  'outline',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Element} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings,\n    objectStack\n  );\n  // outer ring\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const fill = style.getFill();\n  const stroke = style.getStroke();\n  const properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    POLY_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'IconStyle',\n  'LabelStyle',\n  'LineStyle',\n  'PolyStyle',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  if (styles.pointStyles.length) {\n    const textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    const imageStyle = styles.pointStyles[0].getImage();\n    if (\n      imageStyle &&\n      typeof (/** @type {?} */ (imageStyle).getSrc) === 'function'\n    ) {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    const strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    const strokeStyle = styles.polyStyles[0].getStroke();\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;\n","/**\n * @module ol/format/OSMXML\n */\n// FIXME add typedef for stack state objects\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {makeStructureNS, pushParseAndPop} from '../xml.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null>}\n */\nconst NAMESPACE_URIS = [null];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WAY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'nd': readNd,\n  'tag': readTag,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'node': readNode,\n  'way': readWay,\n});\n\n/**\n * @classdesc\n * Feature format for reading data in the\n * [OSMXML format](https://wiki.openstreetmap.org/wiki/OSM_XML).\n *\n * @api\n */\nclass OSMXML extends XMLFeature {\n  constructor() {\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    options = this.getReadOptions(node, options);\n    if (node.localName == 'osm') {\n      const state = pushParseAndPop(\n        {\n          nodes: {},\n          ways: [],\n          features: [],\n        },\n        PARSERS,\n        node,\n        [options]\n      );\n      // parse nodes in ways\n      for (let j = 0; j < state.ways.length; j++) {\n        const values = /** @type {Object} */ (state.ways[j]);\n        /** @type {Array<number>} */\n        const flatCoordinates = [];\n        for (let i = 0, ii = values.ndrefs.length; i < ii; i++) {\n          const point = state.nodes[values.ndrefs[i]];\n          extend(flatCoordinates, point);\n        }\n        let geometry;\n        if (values.ndrefs[0] == values.ndrefs[values.ndrefs.length - 1]) {\n          // closed way\n          geometry = new Polygon(flatCoordinates, 'XY', [\n            flatCoordinates.length,\n          ]);\n        } else {\n          geometry = new LineString(flatCoordinates, 'XY');\n        }\n        transformGeometryWithOptions(geometry, false, options);\n        const feature = new Feature(geometry);\n        if (values.id !== undefined) {\n          feature.setId(values.id);\n        }\n        feature.setProperties(values.tags, true);\n        state.features.push(feature);\n      }\n      if (state.features) {\n        return state.features;\n      }\n    }\n    return [];\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'tag': readTag,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNode(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const id = node.getAttribute('id');\n  /** @type {import(\"../coordinate.js\").Coordinate} */\n  const coordinates = [\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')),\n  ];\n  state.nodes[id] = coordinates;\n\n  const values = pushParseAndPop(\n    {\n      tags: {},\n    },\n    NODE_PARSERS,\n    node,\n    objectStack\n  );\n  if (!isEmpty(values.tags)) {\n    const geometry = new Point(coordinates);\n    transformGeometryWithOptions(geometry, false, options);\n    const feature = new Feature(geometry);\n    if (id !== undefined) {\n      feature.setId(id);\n    }\n    feature.setProperties(values.tags, true);\n    state.features.push(feature);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readWay(node, objectStack) {\n  const id = node.getAttribute('id');\n  const values = pushParseAndPop(\n    {\n      id: id,\n      ndrefs: [],\n      tags: {},\n    },\n    WAY_PARSERS,\n    node,\n    objectStack\n  );\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  state.ways.push(values);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNd(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.ndrefs.push(node.getAttribute('ref'));\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readTag(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.tags[node.getAttribute('k')] = node.getAttribute('v');\n}\n\nexport default OSMXML;\n","/**\n * @module ol/format/XML\n */\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {}\n}\n\nexport default XML;\n","/**\n * @module ol/format/xlink\n */\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/OWS\n */\nimport XML from './XML.js';\nimport {\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readHref} from './xlink.js';\nimport {readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined, // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name}, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop(\n    {'href': href},\n    REQUEST_METHOD_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\nexport default OWS;\n","/**\n * @module ol/geom/flat/flip\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destOffset] Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, dest, destOffset) {\n  if (dest !== undefined) {\n    dest = dest;\n    destOffset = destOffset !== undefined ? destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  let j = offset;\n  while (j < end) {\n    const x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (let k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n","/**\n * @module ol/format/Polyline\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {assert} from '../asserts.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {get as getProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nclass Polyline extends TextFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const geometry = this.readGeometryFromText(text, options);\n    return new Feature(geometry);\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    return [feature];\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    const stride = getStrideForLayout(this.geometryLayout_);\n    const flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    const coordinates = inflateCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    const lineString = new LineString(coordinates, this.geometryLayout_);\n\n    return transformGeometryWithOptions(\n      lineString,\n      false,\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default<LineString>} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, options);\n    }\n    assert(false, 40); // Expected `feature` to have a geometry\n    return '';\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default<LineString>>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return this.writeFeatureText(features[0], options);\n  }\n\n  /**\n   * @param {LineString} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    geometry =\n      /** @type {LineString} */\n      (\n        transformGeometryWithOptions(geometry, true, this.adaptOptions(options))\n      );\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  }\n}\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      const num = numbers[i];\n      const delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number} [factor] The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  /** @type {Array<number>} */\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  const numbers = decodeFloats(encoded, factor);\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, factor) {\n  factor = factor ? factor : 1e5;\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} [factor] The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, factor) {\n  factor = factor ? factor : 1e5;\n  const numbers = decodeSignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num < 0 ? ~(num << 1) : num << 1;\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  const numbers = decodeUnsignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num & 1 ? ~(num >> 1) : num >> 1;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  let encoded = '';\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  const numbers = [];\n  let current = 0;\n  let shift = 0;\n  for (let i = 0, ii = encoded.length; i < ii; ++i) {\n    const b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  let value,\n    encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\nexport default Polyline;\n","/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nclass TopoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.layerName_ = options.layerName;\n\n    /**\n     * @private\n     * @type {?Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    if (object.type == 'Topology') {\n      const topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n      let transform,\n        scale = null,\n        translate = null;\n      if (topoJSONTopology['transform']) {\n        transform = topoJSONTopology['transform'];\n        scale = transform['scale'];\n        translate = transform['translate'];\n      }\n      const arcs = topoJSONTopology['arcs'];\n      if (transform) {\n        transformArcs(arcs, scale, translate);\n      }\n      /** @type {Array<Feature>} */\n      const features = [];\n      const topoJSONFeatures = topoJSONTopology['objects'];\n      const property = this.layerName_;\n      let feature;\n      for (const objectName in topoJSONFeatures) {\n        if (this.layers_ && !this.layers_.includes(objectName)) {\n          continue;\n        }\n        if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n          feature = /** @type {TopoJSONGeometryCollection} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push.apply(\n            features,\n            readFeaturesFromGeometryCollection(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options\n            )\n          );\n        } else {\n          feature = /** @type {TopoJSONGeometry} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push(\n            readFeatureFromGeometry(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options\n            )\n          );\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return this.dataProjection;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n};\n\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n  /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n  const coordinates = [];\n  let index;\n  for (let i = 0, ii = indices.length; i < ii; ++i) {\n    index = indices[i];\n    if (i > 0) {\n      // splicing together arcs, discard last point\n      coordinates.pop();\n    }\n    if (index >= 0) {\n      // forward arc\n      const arc = arcs[index];\n      for (let j = 0, jj = arc.length; j < jj; ++j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    } else {\n      // reverse arc\n      const arc = arcs[~index];\n      for (let j = arc.length - 1; j >= 0; --j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    }\n  }\n  return coordinates;\n}\n\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    transformVertex(coordinates, scale, translate);\n  }\n  return new Point(coordinates);\n}\n\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      transformVertex(coordinates[i], scale, translate);\n    }\n  }\n  return new MultiPoint(coordinates);\n}\n\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n  const coordinates = concatenateArcs(object['arcs'], arcs);\n  return new LineString(coordinates);\n}\n\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new MultiLineString(coordinates);\n}\n\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new Polygon(coordinates);\n}\n\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    // for each polygon\n    const polyArray = object['arcs'][i];\n    const ringCoords = [];\n    for (let j = 0, jj = polyArray.length; j < jj; ++j) {\n      // for each ring\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n    }\n    coordinates[i] = ringCoords;\n  }\n  return new MultiPolygon(coordinates);\n}\n\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Array<Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(\n  collection,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options\n) {\n  const geometries = collection['geometries'];\n  const features = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    features[i] = readFeatureFromGeometry(\n      geometries[i],\n      arcs,\n      scale,\n      translate,\n      property,\n      name,\n      options\n    );\n  }\n  return features;\n}\n\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Feature} Feature.\n */\nfunction readFeatureFromGeometry(\n  object,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options\n) {\n  let geometry = null;\n  const type = object.type;\n  if (type) {\n    const geometryReader = GEOMETRY_READERS[type];\n    if (type === 'Point' || type === 'MultiPoint') {\n      geometry = geometryReader(object, scale, translate);\n    } else {\n      geometry = geometryReader(object, arcs);\n    }\n    geometry = transformGeometryWithOptions(geometry, false, options);\n  }\n  const feature = new Feature({geometry: geometry});\n  if (object.id !== undefined) {\n    feature.setId(object.id);\n  }\n  let properties = object.properties;\n  if (property) {\n    if (!properties) {\n      properties = {};\n    }\n    properties[property] = name;\n  }\n  if (properties) {\n    feature.setProperties(properties, true);\n  }\n  return feature;\n}\n\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n  for (let i = 0, ii = arcs.length; i < ii; ++i) {\n    transformArc(arcs[i], scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n  let x = 0;\n  let y = 0;\n  for (let i = 0, ii = arc.length; i < ii; ++i) {\n    const vertex = arc[i];\n    x += vertex[0];\n    y += vertex[1];\n    vertex[0] = x;\n    vertex[1] = y;\n    transformVertex(vertex, scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n  vertex[0] = vertex[0] * scale[0] + translate[0];\n  vertex[1] = vertex[1] * scale[1] + translate[1];\n}\n\nexport default TopoJSON;\n","/**\n * @module ol/format/filter/Filter\n */\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nclass Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   */\n  constructor(tagName) {\n    /**\n     * @private\n     * @type {!string}\n     */\n    this.tagName_ = tagName;\n  }\n\n  /**\n   * The XML tag name for a filter.\n   * @return {!string} Name.\n   */\n  getTagName() {\n    return this.tagName_;\n  }\n}\n\nexport default Filter;\n","/**\n * @module ol/format/filter/LogicalNary\n */\nimport Filter from './Filter.js';\nimport {assert} from '../../asserts.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nclass LogicalNary extends Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {Array<import(\"./Filter.js\").default>} conditions Conditions.\n   */\n  constructor(tagName, conditions) {\n    super(tagName);\n\n    /**\n     * @type {Array<import(\"./Filter.js\").default>}\n     */\n    this.conditions = conditions;\n    assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n  }\n}\n\nexport default LogicalNary;\n","/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nclass And extends LogicalNary {\n  /**\n   * @param {...import(\"./Filter.js\").default} conditions Conditions.\n   */\n  constructor(conditions) {\n    super('And', Array.prototype.slice.call(arguments));\n  }\n}\n\nexport default And;\n","/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nclass Bbox extends Filter {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be set\n   * on geometries when this is not provided.\n   */\n  constructor(geometryName, extent, srsName) {\n    super('BBOX');\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName;\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent = extent;\n    if (extent.length !== 4) {\n      throw new Error(\n        'Expected an extent with four values ([minX, minY, maxX, maxY])'\n      );\n    }\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = srsName;\n  }\n}\n\nexport default Bbox;\n","/**\n * @module ol/format/filter/Spatial\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @abstract\n */\nclass Spatial extends Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n  constructor(tagName, geometryName, geometry, srsName) {\n    super(tagName);\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName || 'the_geom';\n\n    /**\n     * @type {import(\"../../geom/Geometry.js\").default}\n     */\n    this.geometry = geometry;\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = srsName;\n  }\n}\n\nexport default Spatial;\n","/**\n * @module ol/format/filter/Contains\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n * @api\n */\nclass Contains extends Spatial {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n  constructor(geometryName, geometry, srsName) {\n    super('Contains', geometryName, geometry, srsName);\n  }\n}\n\nexport default Contains;\n","/**\n * @module ol/format/filter/DWithin\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<DWithin>` operator to test whether a geometry-valued property\n * is within a distance to a given geometry.\n * @api\n */\nclass DWithin extends Spatial {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n   * @param {!number} distance Distance.\n   * @param {!string} unit Unit.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n  constructor(geometryName, geometry, distance, unit, srsName) {\n    super('DWithin', geometryName, geometry, srsName);\n\n    /**\n     * @public\n     * @type {!number}\n     */\n    this.distance = distance;\n\n    /**\n     * @public\n     * @type {!string}\n     */\n    this.unit = unit;\n  }\n}\n\nexport default DWithin;\n","/**\n * @module ol/format/filter/Disjoint\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Disjoint>` operator to test whether a geometry-valued property\n * is disjoint to a given geometry.\n * @api\n */\nclass Disjoint extends Spatial {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n  constructor(geometryName, geometry, srsName) {\n    super('Disjoint', geometryName, geometry, srsName);\n  }\n}\n\nexport default Disjoint;\n","/**\n * @module ol/format/filter/Comparison\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @abstract\n */\nclass Comparison extends Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {!string} propertyName Name of the context property to compare.\n   */\n  constructor(tagName, propertyName) {\n    super(tagName);\n\n    /**\n     * @type {!string}\n     */\n    this.propertyName = propertyName;\n  }\n}\n\nexport default Comparison;\n","/**\n * @module ol/format/filter/During\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n * @api\n */\nclass During extends Comparison {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!string} begin The begin date in ISO-8601 format.\n   * @param {!string} end The end date in ISO-8601 format.\n   */\n  constructor(propertyName, begin, end) {\n    super('During', propertyName);\n\n    /**\n     * @type {!string}\n     */\n    this.begin = begin;\n\n    /**\n     * @type {!string}\n     */\n    this.end = end;\n  }\n}\n\nexport default During;\n","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @abstract\n */\nclass ComparisonBinary extends Comparison {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!(string|number)} expression The value to compare.\n   * @param {boolean} [matchCase] Case-sensitive?\n   */\n  constructor(tagName, propertyName, expression, matchCase) {\n    super(tagName, propertyName);\n\n    /**\n     * @type {!(string|number)}\n     */\n    this.expression = expression;\n\n    /**\n     * @type {boolean|undefined}\n     */\n    this.matchCase = matchCase;\n  }\n}\n\nexport default ComparisonBinary;\n","/**\n * @module ol/format/filter/EqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n * @api\n */\nclass EqualTo extends ComparisonBinary {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!(string|number)} expression The value to compare.\n   * @param {boolean} [matchCase] Case-sensitive?\n   */\n  constructor(propertyName, expression, matchCase) {\n    super('PropertyIsEqualTo', propertyName, expression, matchCase);\n  }\n}\n\nexport default EqualTo;\n","/**\n * @module ol/format/filter/GreaterThan\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n * @api\n */\nclass GreaterThan extends ComparisonBinary {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} expression The value to compare.\n   */\n  constructor(propertyName, expression) {\n    super('PropertyIsGreaterThan', propertyName, expression);\n  }\n}\n\nexport default GreaterThan;\n","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n * @api\n */\nclass GreaterThanOrEqualTo extends ComparisonBinary {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} expression The value to compare.\n   */\n  constructor(propertyName, expression) {\n    super('PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n  }\n}\n\nexport default GreaterThanOrEqualTo;\n","/**\n * @module ol/format/filter/Intersects\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n * @api\n */\nclass Intersects extends Spatial {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n  constructor(geometryName, geometry, srsName) {\n    super('Intersects', geometryName, geometry, srsName);\n  }\n}\n\nexport default Intersects;\n","/**\n * @module ol/format/filter/IsBetween\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n * @api\n */\nclass IsBetween extends Comparison {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} lowerBoundary The lower bound of the range.\n   * @param {!number} upperBoundary The upper bound of the range.\n   */\n  constructor(propertyName, lowerBoundary, upperBoundary) {\n    super('PropertyIsBetween', propertyName);\n\n    /**\n     * @type {!number}\n     */\n    this.lowerBoundary = lowerBoundary;\n\n    /**\n     * @type {!number}\n     */\n    this.upperBoundary = upperBoundary;\n  }\n}\n\nexport default IsBetween;\n","/**\n * @module ol/format/filter/IsLike\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n * @api\n */\nclass IsLike extends Comparison {\n  /**\n   * [constructor description]\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!string} pattern Text pattern.\n   * @param {string} [wildCard] Pattern character which matches any sequence of\n   *    zero or more string characters. Default is '*'.\n   * @param {string} [singleChar] pattern character which matches any single\n   *    string character. Default is '.'.\n   * @param {string} [escapeChar] Escape character which can be used to escape\n   *    the pattern characters. Default is '!'.\n   * @param {boolean} [matchCase] Case-sensitive?\n   */\n  constructor(\n    propertyName,\n    pattern,\n    wildCard,\n    singleChar,\n    escapeChar,\n    matchCase\n  ) {\n    super('PropertyIsLike', propertyName);\n\n    /**\n     * @type {!string}\n     */\n    this.pattern = pattern;\n\n    /**\n     * @type {!string}\n     */\n    this.wildCard = wildCard !== undefined ? wildCard : '*';\n\n    /**\n     * @type {!string}\n     */\n    this.singleChar = singleChar !== undefined ? singleChar : '.';\n\n    /**\n     * @type {!string}\n     */\n    this.escapeChar = escapeChar !== undefined ? escapeChar : '!';\n\n    /**\n     * @type {boolean|undefined}\n     */\n    this.matchCase = matchCase;\n  }\n}\n\nexport default IsLike;\n","/**\n * @module ol/format/filter/IsNull\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n * @api\n */\nclass IsNull extends Comparison {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   */\n  constructor(propertyName) {\n    super('PropertyIsNull', propertyName);\n  }\n}\n\nexport default IsNull;\n","/**\n * @module ol/format/filter/LessThan\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n * @api\n */\nclass LessThan extends ComparisonBinary {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} expression The value to compare.\n   */\n  constructor(propertyName, expression) {\n    super('PropertyIsLessThan', propertyName, expression);\n  }\n}\n\nexport default LessThan;\n","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n * @api\n */\nclass LessThanOrEqualTo extends ComparisonBinary {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!number} expression The value to compare.\n   */\n  constructor(propertyName, expression) {\n    super('PropertyIsLessThanOrEqualTo', propertyName, expression);\n  }\n}\n\nexport default LessThanOrEqualTo;\n","/**\n * @module ol/format/filter/Not\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n * @api\n */\nclass Not extends Filter {\n  /**\n   * @param {!import(\"./Filter.js\").default} condition Filter condition.\n   */\n  constructor(condition) {\n    super('Not');\n\n    /**\n     * @type {!import(\"./Filter.js\").default}\n     */\n    this.condition = condition;\n  }\n}\n\nexport default Not;\n","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n * @api\n */\nclass NotEqualTo extends ComparisonBinary {\n  /**\n   * @param {!string} propertyName Name of the context property to compare.\n   * @param {!(string|number)} expression The value to compare.\n   * @param {boolean} [matchCase] Case-sensitive?\n   */\n  constructor(propertyName, expression, matchCase) {\n    super('PropertyIsNotEqualTo', propertyName, expression, matchCase);\n  }\n}\n\nexport default NotEqualTo;\n","/**\n * @module ol/format/filter/Or\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n * @api\n */\nclass Or extends LogicalNary {\n  /**\n   * @param {...import(\"./Filter.js\").default} conditions Conditions.\n   */\n  constructor(conditions) {\n    super('Or', Array.prototype.slice.call(arguments));\n  }\n}\n\nexport default Or;\n","/**\n * @module ol/format/filter/ResourceId\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n *\n * @abstract\n */\nclass ResourceId extends Filter {\n  /**\n   * @param {!string} rid Resource ID.\n   */\n  constructor(rid) {\n    super('ResourceId');\n\n    /**\n     * @type {!string}\n     */\n    this.rid = rid;\n  }\n}\n\nexport default ResourceId;\n","/**\n * @module ol/format/filter/Within\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n * @api\n */\nclass Within extends Spatial {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   */\n  constructor(geometryName, geometry, srsName) {\n    super('Within', geometryName, geometry, srsName);\n  }\n}\n\nexport default Within;\n","/**\n * @module ol/format/WFS\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GML32 from './GML32.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  isDocument,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSimpleNodeFactory,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {and as andFilterFn, bbox as bboxFilterFn} from './filter.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readNonNegativeIntegerString,\n  readPositiveInteger,\n  writeStringTextNode,\n} from './xsd.js';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readExtentElement,\n      'bounds'\n    ),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'member': makeArrayPusher(GMLBase.prototype.readFeaturesInternal),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary'\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary'\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response.\n * Default is `ol/format/GML2` for WFS 1.0.0, `ol/format/GML3` for WFS 1.1.0 and `ol/format/GML32` for WFS 2.0.0.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n * @property {string} [version='1.1.0'] WFS version to use. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string|FeatureType>} featureTypes The feature type names or FeatureType objects to\n * define a unique bbox filter per feature type name (in this case, options `bbox` and `geometryName` are\n * ignored.).\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter. The `geometryName`\n * option must be set.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * e.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n/**\n * @typedef {Object} FeatureType\n * @property {!string} name The feature type name.\n * @property {!import(\"../extent.js\").Extent} bbox Extent to use for the BBOX filter.\n * @property {!string} geometryName Geometry name to use in the BBOX filter.\n */\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures NumberOfFeatures.\n * @property {import(\"../extent.js\").Extent} bounds Bounds.\n */\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted TotalDeleted.\n * @property {number} totalInserted TotalInserted.\n * @property {number} totalUpdated TotalUpdated.\n * @property {Array<string>} insertIds InsertIds.\n */\n\n/**\n * @type {string}\n */\nconst FEATURE_PREFIX = 'feature';\n\n/**\n * @type {string}\n */\nconst XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n/**\n * @type {Object<string, string>}\n */\nconst OGCNS = {\n  '2.0.0': 'http://www.opengis.net/ogc/1.1',\n  '1.1.0': 'http://www.opengis.net/ogc',\n  '1.0.0': 'http://www.opengis.net/ogc',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst WFSNS = {\n  '2.0.0': 'http://www.opengis.net/wfs/2.0',\n  '1.1.0': 'http://www.opengis.net/wfs',\n  '1.0.0': 'http://www.opengis.net/wfs',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst FESNS = {\n  '2.0.0': 'http://www.opengis.net/fes/2.0',\n  '1.1.0': 'http://www.opengis.net/fes',\n  '1.0.0': 'http://www.opengis.net/fes',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst SCHEMA_LOCATIONS = {\n  '2.0.0':\n    'http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd',\n  '1.1.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd',\n};\n\n/**\n * @type {Object<string, object>}\n */\nconst GML_FORMATS = {\n  '2.0.0': GML32,\n  '1.1.0': GML3,\n  '1.0.0': GML2,\n};\n\n/**\n * @const\n * @type {string}\n */\nconst DEFAULT_VERSION = '1.1.0';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option to override the default.\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nclass WFS extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version ? options.version : DEFAULT_VERSION;\n\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {GMLBase}\n     */\n    this.gmlFormat_ = options.gmlFormat\n      ? options.gmlFormat\n      : new GML_FORMATS[this.version_]();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.schemaLocation_ = options.schemaLocation\n      ? options.schemaLocation\n      : SCHEMA_LOCATIONS[this.version_];\n  }\n\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n  getFeatureType() {\n    return this.featureType_;\n  }\n\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n  setFeatureType(featureType) {\n    this.featureType_ = featureType;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_,\n    });\n\n    Object.assign(context, this.getReadOptions(node, options ? options : {}));\n    const objectStack = [context];\n    let featuresNS;\n    if (this.version_ === '2.0.0') {\n      featuresNS = FEATURE_COLLECTION_PARSERS;\n    } else {\n      featuresNS = this.gmlFormat_.FEATURE_COLLECTION_PARSERS;\n    }\n    let features = pushParseAndPop(\n      [],\n      featuresNS,\n      node,\n      objectStack,\n      this.gmlFormat_\n    );\n    if (!features) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n  readTransactionResponse(source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source)\n      );\n    }\n    return this.readTransactionResponseFromNode(\n      /** @type {Element} */ (source)\n    );\n  }\n\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n  readFeatureCollectionMetadata(source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source)\n      );\n    }\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Element} */ (source)\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFeatureCollectionMetadataFromNode(\n          /** @type {Element} */ (n)\n        );\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromNode(node) {\n    const result = {};\n    const value = readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures')\n    );\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n      /** @type {FeatureCollectionMetadata} */ (result),\n      FEATURE_COLLECTION_PARSERS,\n      node,\n      [],\n      this.gmlFormat_\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromNode(node) {\n    return pushParseAndPop(\n      /** @type {TransactionResponse} */ ({}),\n      TRANSACTION_RESPONSE_PARSERS,\n      node,\n      []\n    );\n  }\n\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeGetFeature(options) {\n    const node = createElementNS(WFSNS[this.version_], 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', this.version_);\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', String(options.maxFeatures));\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', String(options.startIndex));\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', String(options.count));\n    }\n    if (options.viewParams !== undefined) {\n      node.setAttribute('viewParams', options.viewParams);\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation_\n    );\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'version': this.version_,\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'propertyNames': options.propertyNames ? options.propertyNames : [],\n    });\n    assert(Array.isArray(options.featureTypes), 11); // `options.featureTypes` must be an Array\n    if (typeof options.featureTypes[0] === 'string') {\n      let filter = options.filter;\n      if (options.bbox) {\n        assert(options.geometryName, 12); // `options.geometryName` must also be provided when `options.bbox` is set\n        filter = this.combineBboxAndFilter(\n          options.geometryName,\n          options.bbox,\n          options.srsName,\n          filter\n        );\n      }\n      Object.assign(context, {\n        'geometryName': options.geometryName,\n        'filter': filter,\n      });\n      writeGetFeature(\n        node,\n        /** @type {!Array<string>} */ (options.featureTypes),\n        [context]\n      );\n    } else {\n      // Write one query node per element in featuresType.\n      options.featureTypes.forEach((/** @type {FeatureType} */ featureType) => {\n        const completeFilter = this.combineBboxAndFilter(\n          featureType.geometryName,\n          featureType.bbox,\n          options.srsName,\n          options.filter\n        );\n        Object.assign(context, {\n          'geometryName': featureType.geometryName,\n          'filter': completeFilter,\n        });\n        writeGetFeature(node, [featureType.name], [context]);\n      });\n    }\n    return node;\n  }\n\n  /**\n   * Create a bbox filter and combine it with another optional filter.\n   *\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   * @param {import(\"./filter/Filter.js\").default} [filter] Filter condition.\n   * @return {import(\"./filter/Filter.js\").default} The filter.\n   */\n  combineBboxAndFilter(geometryName, extent, srsName, filter) {\n    const bboxFilter = bboxFilterFn(geometryName, extent, srsName);\n    if (filter) {\n      // if bbox and filter are both set, combine the two into a single filter\n      return andFilterFn(filter, bboxFilter);\n    }\n    return bboxFilter;\n  }\n\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n   * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n   * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n   * @param {WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeTransaction(inserts, updates, deletes, options) {\n    const objectStack = [];\n    const version = options.version ? options.version : this.version_;\n    const node = createElementNS(WFSNS[version], 'Transaction');\n\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    let baseObj;\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATIONS[version]\n    );\n\n    const request = createTransactionRequest(node, baseObj, version, options);\n    if (inserts) {\n      serializeTransactionRequest('Insert', inserts, objectStack, request);\n    }\n    if (updates) {\n      serializeTransactionRequest('Update', updates, objectStack, request);\n    }\n    if (deletes) {\n      serializeTransactionRequest('Delete', deletes, objectStack, request);\n    }\n    if (options.nativeElements) {\n      serializeTransactionRequest(\n        'Native',\n        options.nativeElements,\n        objectStack,\n        request\n      );\n    }\n    return node;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readProjectionFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    if (node.firstElementChild && node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (\n          !(\n            n.childNodes.length === 0 ||\n            (n.childNodes.length === 1 && n.firstChild.nodeType === 3)\n          )\n        ) {\n          const objectStack = [{}];\n          this.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {*} baseObj Base object.\n * @param {string} version Version.\n * @param {WriteTransactionOptions} options Options.\n * @return {Object} Request object.\n */\nfunction createTransactionRequest(node, baseObj, version, options) {\n  const featurePrefix = options.featurePrefix\n    ? options.featurePrefix\n    : FEATURE_PREFIX;\n  let gmlVersion;\n  if (version === '1.0.0') {\n    gmlVersion = 2;\n  } else if (version === '1.1.0') {\n    gmlVersion = 3;\n  } else if (version === '2.0.0') {\n    gmlVersion = 3.2;\n  }\n  const obj = Object.assign(\n    {node},\n    {\n      version,\n      'featureNS': options.featureNS,\n      'featureType': options.featureType,\n      'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion,\n      'hasZ': options.hasZ,\n      'srsName': options.srsName,\n    },\n    baseObj\n  );\n  return obj;\n}\n\n/**\n * @param {string} type Request type.\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @param {Element} request Transaction Request.\n */\nfunction serializeTransactionRequest(type, features, objectStack, request) {\n  pushSerializeAndPop(\n    request,\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory(type),\n    features,\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n  'http://www.opengis.net/ogc/1.1': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser,\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Feature': fidParser,\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else if (gmlVersion === 3) {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML32.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = OGCNS[version];\n  const filter = createElementNS(ns, 'Filter');\n  const child = createElementNS(ns, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', /** @type {string} */ (fid));\n  node.appendChild(filter);\n}\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @return {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.startsWith(prefix)) {\n    return featureType;\n  }\n  return prefix + featureType;\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const version = context['version'];\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (\n          value &&\n          typeof (/** @type {?} */ (value).getSimplifiedGeometry) === 'function'\n        ) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */ ({\n        version,\n        'gmlVersion': context['gmlVersion'],\n        node,\n        'hasZ': context['hasZ'],\n        'srsName': context['srsName'],\n      }),\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Property'),\n      values,\n      objectStack\n    );\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = WFSNS[version];\n  const name = createElementNS(ns, 'Name');\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = createElementNS(ns, 'Value');\n    node.appendChild(value);\n    if (\n      pair.value &&\n      typeof (/** @type {?} */ (pair.value).getSimplifiedGeometry) ===\n        'function'\n    ) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else if (gmlVersion === 3) {\n        GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else {\n        GML32.prototype.writeGeometryElement(value, pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n  'http://www.opengis.net/fes/2.0': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Disjoint': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'ResourceId': makeChildAppender(writeResourceIdFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const version = context['version'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  let typeNameAttr;\n  if (version === '2.0.0') {\n    typeNameAttr = 'typeNames';\n  } else {\n    typeNameAttr = 'typeName';\n  }\n  node.setAttribute(typeNameAttr, typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'),\n    propertyNames,\n    objectStack\n  );\n  const filter = context['filter'];\n  if (filter) {\n    const child = createElementNS(getFilterNS(version), 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter],\n    objectStack\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n/**\n * @param {Element} node Element.\n * @param {import(\"./filter/ResourceId.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeResourceIdFilter(node, filter, objectStack) {\n  node.setAttribute('rid', /** @type {string} */ (filter.rid));\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Spatial.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeSpatialFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/DWithin.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDWithinFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writeSpatialFilter(node, filter, objectStack);\n  const distance = createElementNS(getFilterNS(version), 'Distance');\n  writeStringTextNode(distance, filter.distance.toString());\n  if (version === '2.0.0') {\n    distance.setAttribute('uom', filter.unit);\n  } else {\n    distance.setAttribute('units', filter.unit);\n  }\n  node.appendChild(distance);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n\n  writeExpression(FESNS[version], 'ValueReference', node, filter.propertyName);\n  const timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  const end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    pushSerializeAndPop(\n      item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition],\n      objectStack\n    );\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const condition = filter.condition;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition],\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.expression);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writePropertyName(version, node, filter.propertyName);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  const ns = getFilterNS(version);\n\n  writePropertyName(version, node, filter.propertyName);\n\n  const lowerBoundary = createElementNS(ns, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeLiteral(version, lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = createElementNS(ns, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeLiteral(version, upperBoundary, '' + filter.upperBoundary);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.pattern);\n}\n\n/**\n * @param {string} ns Namespace.\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeExpression(ns, tagName, node, value) {\n  const property = createElementNS(ns, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeLiteral(version, node, value) {\n  writeExpression(getFilterNS(version), 'Literal', node, value);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writePropertyName(version, node, value) {\n  if (version === '2.0.0') {\n    writeExpression(FESNS[version], 'ValueReference', node, value);\n  } else {\n    writeExpression(OGCNS[version], 'PropertyName', node, value);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  const timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {string} version WFS version. If not provided defaults to '1.1.0'\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter, version) {\n  version = version || '1.1.0';\n  const child = createElementNS(getFilterNS(version), 'Filter');\n  const context = {\n    node: child,\n  };\n  Object.assign(context, {\n    'version': version,\n    'filter': filter,\n  });\n  writeFilterCondition(child, filter, [context]);\n  return child;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'),\n    featureTypes,\n    objectStack\n  );\n}\n\nfunction getFilterNS(version) {\n  let ns;\n  if (version === '2.0.0') {\n    ns = FESNS[version];\n  } else {\n    ns = OGCNS[version];\n  }\n  return ns;\n}\n\nexport default WFS;\n","/**\n * @module ol/format/filter\n */\nimport And from './filter/And.js';\nimport Bbox from './filter/Bbox.js';\nimport Contains from './filter/Contains.js';\nimport DWithin from './filter/DWithin.js';\nimport Disjoint from './filter/Disjoint.js';\nimport During from './filter/During.js';\nimport EqualTo from './filter/EqualTo.js';\nimport GreaterThan from './filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from './filter/GreaterThanOrEqualTo.js';\nimport Intersects from './filter/Intersects.js';\nimport IsBetween from './filter/IsBetween.js';\nimport IsLike from './filter/IsLike.js';\nimport IsNull from './filter/IsNull.js';\nimport LessThan from './filter/LessThan.js';\nimport LessThanOrEqualTo from './filter/LessThanOrEqualTo.js';\nimport Not from './filter/Not.js';\nimport NotEqualTo from './filter/NotEqualTo.js';\nimport Or from './filter/Or.js';\nimport ResourceId from './filter/ResourceId.js';\nimport Within from './filter/Within.js';\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(And, params))();\n}\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(Or, params))();\n}\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!import(\"./filter/Filter.js\").default} condition Filter condition.\n * @return {!Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n  return new Not(condition);\n}\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../extent.js\").Extent} extent Extent.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, srsName) {\n  return new Bbox(geometryName, extent, srsName);\n}\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, srsName) {\n  return new Contains(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, srsName) {\n  return new Intersects(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Disjoint>` operator to test whether a geometry-valued property\n * is disjoint to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Disjoint} `<Disjoint>` operator.\n * @api\n */\nexport function disjoint(geometryName, geometry, srsName) {\n  return new Disjoint(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, srsName) {\n  return new Within(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<DWithin>` operator to test whether a geometry-valued property\n * is within a distance to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {!number} distance Distance.\n * @param {!string} unit Unit.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!DWithin} `<DWithin>` operator.\n * @api\n */\nexport function dwithin(geometryName, geometry, distance, unit, srsName) {\n  return new DWithin(geometryName, geometry, distance, unit, srsName);\n}\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, matchCase) {\n  return new EqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, matchCase) {\n  return new NotEqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n  return new LessThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n  return new LessThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n  return new GreaterThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n  return new GreaterThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @return {!IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n  return new IsNull(propertyName);\n}\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @return {!IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string} [wildCard] Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string} [singleChar] pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string} [escapeChar] Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(\n  propertyName,\n  pattern,\n  wildCard,\n  singleChar,\n  escapeChar,\n  matchCase\n) {\n  return new IsLike(\n    propertyName,\n    pattern,\n    wildCard,\n    singleChar,\n    escapeChar,\n    matchCase\n  );\n}\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @return {!During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n  return new During(propertyName, begin, end);\n}\n\nexport function resourceId(rid) {\n  return new ResourceId(rid);\n}\n","/**\n * @module ol/format/WKB\n */\nimport Feature from '../Feature.js';\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\n\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\n\n// WKB spec: https://www.ogc.org/standards/sfa\n// EWKB spec: https://raw.githubusercontent.com/postgis/postgis/2.1.0/doc/ZMSgeoms.txt\n\n/**\n * @const\n * @enum {number}\n */\nconst WKBGeometryType = {\n  POINT: 1,\n  LINE_STRING: 2,\n  POLYGON: 3,\n  MULTI_POINT: 4,\n  MULTI_LINE_STRING: 5,\n  MULTI_POLYGON: 6,\n  GEOMETRY_COLLECTION: 7,\n\n  /*\n  CIRCULAR_STRING: 8,\n  COMPOUND_CURVE: 9,\n  CURVE_POLYGON: 10,\n\n  MULTI_CURVE: 11,\n  MULTI_SURFACE: 12,\n  CURVE: 13,\n  SURFACE: 14,\n  */\n\n  POLYHEDRAL_SURFACE: 15,\n  TIN: 16,\n  TRIANGLE: 17,\n};\n\nclass WkbReader {\n  /**\n   * @param {DataView} view source to read\n   */\n  constructor(view) {\n    /** @private */\n    this.view_ = view;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pos_ = 0;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.initialized_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isLittleEndian_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasZ_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasM_ = false;\n\n    /**\n     * @type {number|null}\n     * @private\n     */\n    this.srid_ = null;\n\n    /**\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     * @private\n     */\n    this.layout_ = 'XY';\n  }\n\n  /**\n   * @return {number} value\n   */\n  readUint8() {\n    return this.view_.getUint8(this.pos_++);\n  }\n\n  /**\n   * @param {boolean} [isLittleEndian] Whether read value as little endian\n   * @return {number} value\n   */\n  readUint32(isLittleEndian) {\n    return this.view_.getUint32(\n      (this.pos_ += 4) - 4,\n      isLittleEndian !== undefined ? isLittleEndian : this.isLittleEndian_\n    );\n  }\n\n  /**\n   * @param {boolean} [isLittleEndian] Whether read value as little endian\n   * @return {number} value\n   */\n  readDouble(isLittleEndian) {\n    return this.view_.getFloat64(\n      (this.pos_ += 8) - 8,\n      isLittleEndian !== undefined ? isLittleEndian : this.isLittleEndian_\n    );\n  }\n\n  /**\n   * @return {import('../coordinate.js').Coordinate} coords for Point\n   */\n  readPoint() {\n    /** @type import('../coordinate.js').Coordinate */\n    const coords = [];\n\n    coords.push(this.readDouble());\n    coords.push(this.readDouble());\n    if (this.hasZ_) {\n      coords.push(this.readDouble());\n    }\n    if (this.hasM_) {\n      coords.push(this.readDouble());\n    }\n\n    return coords;\n  }\n\n  /**\n   * @return {Array<import('../coordinate.js').Coordinate>} coords for LineString / LinearRing\n   */\n  readLineString() {\n    const numPoints = this.readUint32();\n\n    /** @type Array<import('../coordinate.js').Coordinate> */\n    const coords = [];\n    for (let i = 0; i < numPoints; i++) {\n      coords.push(this.readPoint());\n    }\n\n    return coords;\n  }\n\n  /**\n   * @return {Array<Array<import('../coordinate.js').Coordinate>>} coords for Polygon like\n   */\n  readPolygon() {\n    const numRings = this.readUint32();\n\n    /** @type Array<Array<import('../coordinate.js').Coordinate>> */\n    const rings = [];\n    for (let i = 0; i < numRings; i++) {\n      rings.push(this.readLineString()); // as a LinearRing\n    }\n\n    return rings;\n  }\n\n  /**\n   * @param {number} [expectedTypeId] Expected WKB Type ID\n   * @return {number} WKB Type ID\n   */\n  readWkbHeader(expectedTypeId) {\n    const byteOrder = this.readUint8();\n    const isLittleEndian = byteOrder > 0;\n\n    const wkbType = this.readUint32(isLittleEndian);\n    const wkbTypeThousandth = Math.floor((wkbType & 0x0fffffff) / 1000);\n    const hasZ =\n      Boolean(wkbType & 0x80000000) ||\n      wkbTypeThousandth === 1 ||\n      wkbTypeThousandth === 3;\n    const hasM =\n      Boolean(wkbType & 0x40000000) ||\n      wkbTypeThousandth === 2 ||\n      wkbTypeThousandth === 3;\n    const hasSRID = Boolean(wkbType & 0x20000000);\n    const typeId = (wkbType & 0x0fffffff) % 1000; // Assume 1000 is an upper limit for type ID\n    const layout = /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */ (\n      ['XY', hasZ ? 'Z' : '', hasM ? 'M' : ''].join('')\n    );\n\n    const srid = hasSRID ? this.readUint32(isLittleEndian) : null;\n\n    if (expectedTypeId !== undefined && expectedTypeId !== typeId) {\n      throw new Error('Unexpected WKB geometry type ' + typeId);\n    }\n\n    if (this.initialized_) {\n      // sanity checks\n      if (this.isLittleEndian_ !== isLittleEndian) {\n        throw new Error('Inconsistent endian');\n      }\n      if (this.layout_ !== layout) {\n        throw new Error('Inconsistent geometry layout');\n      }\n      if (srid && this.srid_ !== srid) {\n        throw new Error('Inconsistent coordinate system (SRID)');\n      }\n    } else {\n      this.isLittleEndian_ = isLittleEndian;\n      this.hasZ_ = hasZ;\n      this.hasM_ = hasM;\n      this.layout_ = layout;\n      this.srid_ = srid;\n      this.initialized_ = true;\n    }\n\n    return typeId;\n  }\n\n  /**\n   * @param {number} typeId WKB Type ID\n   * @return {any} values read\n   */\n  readWkbPayload(typeId) {\n    switch (typeId) {\n      case WKBGeometryType.POINT:\n        return this.readPoint();\n\n      case WKBGeometryType.LINE_STRING:\n        return this.readLineString();\n\n      case WKBGeometryType.POLYGON:\n      case WKBGeometryType.TRIANGLE:\n        return this.readPolygon();\n\n      case WKBGeometryType.MULTI_POINT:\n        return this.readMultiPoint();\n\n      case WKBGeometryType.MULTI_LINE_STRING:\n        return this.readMultiLineString();\n\n      case WKBGeometryType.MULTI_POLYGON:\n      case WKBGeometryType.POLYHEDRAL_SURFACE:\n      case WKBGeometryType.TIN:\n        return this.readMultiPolygon();\n\n      case WKBGeometryType.GEOMETRY_COLLECTION:\n        return this.readGeometryCollection();\n\n      default:\n        throw new Error(\n          'Unsupported WKB geometry type ' + typeId + ' is found'\n        );\n    }\n  }\n\n  /**\n   * @param {number} expectedTypeId Expected WKB Type ID\n   * @return {any} values read\n   */\n  readWkbBlock(expectedTypeId) {\n    return this.readWkbPayload(this.readWkbHeader(expectedTypeId));\n  }\n\n  /**\n   * @param {Function} reader reader function for each item\n   * @param {number} [expectedTypeId] Expected WKB Type ID\n   * @return {any} values read\n   */\n  readWkbCollection(reader, expectedTypeId) {\n    const num = this.readUint32();\n\n    const items = [];\n    for (let i = 0; i < num; i++) {\n      const result = reader.call(this, expectedTypeId);\n      if (result) {\n        items.push(result);\n      }\n    }\n\n    return items;\n  }\n\n  /**\n   * @return {Array<import('../coordinate.js').Coordinate>} coords for MultiPoint\n   */\n  readMultiPoint() {\n    return this.readWkbCollection(this.readWkbBlock, WKBGeometryType.POINT);\n  }\n\n  /**\n   * @return {Array<Array<import('../coordinate.js').Coordinate>>} coords for MultiLineString like\n   */\n  readMultiLineString() {\n    return this.readWkbCollection(\n      this.readWkbBlock,\n      WKBGeometryType.LINE_STRING\n    );\n  }\n\n  /**\n   * @return {Array<Array<Array<import('../coordinate.js').Coordinate>>>} coords for MultiPolygon like\n   */\n  readMultiPolygon() {\n    return this.readWkbCollection(this.readWkbBlock, WKBGeometryType.POLYGON);\n  }\n\n  /**\n   * @return {Array<import('../geom/Geometry.js').default>} array of geometries\n   */\n  readGeometryCollection() {\n    return this.readWkbCollection(this.readGeometry);\n  }\n\n  /**\n   * @return {import('../geom/Geometry.js').default} geometry\n   */\n  readGeometry() {\n    const typeId = this.readWkbHeader();\n    const result = this.readWkbPayload(typeId);\n\n    switch (typeId) {\n      case WKBGeometryType.POINT:\n        return new Point(\n          /** @type {import('../coordinate.js').Coordinate} */ (result),\n          this.layout_\n        );\n\n      case WKBGeometryType.LINE_STRING:\n        return new LineString(\n          /** @type {Array<import('../coordinate.js').Coordinate>} */ (result),\n          this.layout_\n        );\n\n      case WKBGeometryType.POLYGON:\n      case WKBGeometryType.TRIANGLE:\n        return new Polygon(\n          /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ (\n            result\n          ),\n          this.layout_\n        );\n\n      case WKBGeometryType.MULTI_POINT:\n        return new MultiPoint(\n          /** @type {Array<import('../coordinate.js').Coordinate>} */ (result),\n          this.layout_\n        );\n\n      case WKBGeometryType.MULTI_LINE_STRING:\n        return new MultiLineString(\n          /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ (\n            result\n          ),\n          this.layout_\n        );\n\n      case WKBGeometryType.MULTI_POLYGON:\n      case WKBGeometryType.POLYHEDRAL_SURFACE:\n      case WKBGeometryType.TIN:\n        return new MultiPolygon(\n          /** @type {Array<Array<Array<import('../coordinate.js').Coordinate>>>} */ (\n            result\n          ),\n          this.layout_\n        );\n\n      case WKBGeometryType.GEOMETRY_COLLECTION:\n        return new GeometryCollection(\n          /** @type {Array<import('../geom/Geometry.js').default>} */ (result)\n        );\n\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * @return {number|null} SRID in the EWKB. `null` if not defined.\n   */\n  getSrid() {\n    return this.srid_;\n  }\n}\n\nclass WkbWriter {\n  /**\n   * @type {Object}\n   * @property {string} [layout] geometryLayout\n   * @property {boolean} [littleEndian=true] littleEndian\n   * @property {boolean} [ewkb=true] Whether writes in EWKB format\n   * @property {Object} [nodata] NoData value for each axes\n   * @param {Object} opts options\n   */\n  constructor(opts) {\n    opts = opts || {};\n\n    /** @type {string} */\n    this.layout_ = opts.layout;\n    this.isLittleEndian_ = opts.littleEndian !== false;\n\n    this.isEWKB_ = opts.ewkb !== false;\n\n    /** @type {Array<Array<number>>} */\n    this.writeQueue_ = [];\n\n    /**\n     * @type {Object}\n     * @property {number} X NoData value for X\n     * @property {number} Y NoData value for Y\n     * @property {number} Z NoData value for Z\n     * @property {number} M NoData value for M\n     */\n    this.nodata_ = Object.assign({X: 0, Y: 0, Z: 0, M: 0}, opts.nodata);\n  }\n\n  /**\n   * @param {number} value value\n   */\n  writeUint8(value) {\n    this.writeQueue_.push([1, value]);\n  }\n\n  /**\n   * @param {number} value value\n   */\n  writeUint32(value) {\n    this.writeQueue_.push([4, value]);\n  }\n\n  /**\n   * @param {number} value value\n   */\n  writeDouble(value) {\n    this.writeQueue_.push([8, value]);\n  }\n\n  /**\n   * @param {import('../coordinate.js').Coordinate} coords coords\n   * @param {import(\"../geom/Geometry.js\").GeometryLayout} layout layout\n   */\n  writePoint(coords, layout) {\n    /**\n     * @type {Object}\n     * @property {number} X NoData value for X\n     * @property {number} Y NoData value for Y\n     * @property {number} [Z] NoData value for Z\n     * @property {number} [M] NoData value for M\n     */\n    const coordsObj = Object.assign.apply(\n      null,\n      layout.split('').map((axis, idx) => ({[axis]: coords[idx]}))\n    );\n\n    for (const axis of this.layout_) {\n      this.writeDouble(\n        axis in coordsObj ? coordsObj[axis] : this.nodata_[axis]\n      );\n    }\n  }\n\n  /**\n   * @param {Array<import('../coordinate.js').Coordinate>} coords coords\n   * @param {import(\"../geom/Geometry.js\").GeometryLayout} layout layout\n   */\n  writeLineString(coords, layout) {\n    this.writeUint32(coords.length); // numPoints\n    for (let i = 0; i < coords.length; i++) {\n      this.writePoint(coords[i], layout);\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} rings rings\n   * @param {import(\"../geom/Geometry.js\").GeometryLayout} layout layout\n   */\n  writePolygon(rings, layout) {\n    this.writeUint32(rings.length); // numRings\n    for (let i = 0; i < rings.length; i++) {\n      this.writeLineString(rings[i], layout); // as a LinearRing\n    }\n  }\n\n  /**\n   * @param {number} wkbType WKB Type ID\n   * @param {number} [srid] SRID\n   */\n  writeWkbHeader(wkbType, srid) {\n    wkbType %= 1000; // Assume 1000 is an upper limit for type ID\n    if (this.layout_.includes('Z')) {\n      wkbType += this.isEWKB_ ? 0x80000000 : 1000;\n    }\n    if (this.layout_.includes('M')) {\n      wkbType += this.isEWKB_ ? 0x40000000 : 2000;\n    }\n    if (this.isEWKB_ && Number.isInteger(srid)) {\n      wkbType |= 0x20000000;\n    }\n\n    this.writeUint8(this.isLittleEndian_ ? 1 : 0);\n    this.writeUint32(wkbType);\n    if (this.isEWKB_ && Number.isInteger(srid)) {\n      this.writeUint32(srid);\n    }\n  }\n\n  /**\n   * @param {Array<import('../coordinate.js').Coordinate>} coords coords\n   * @param {import(\"../geom/Geometry.js\").GeometryLayout} layout layout\n   */\n  writeMultiPoint(coords, layout) {\n    this.writeUint32(coords.length); // numItems\n    for (let i = 0; i < coords.length; i++) {\n      this.writeWkbHeader(1);\n      this.writePoint(coords[i], layout);\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} coords coords\n   * @param {import(\"../geom/Geometry.js\").GeometryLayout} layout layout\n   */\n  writeMultiLineString(coords, layout) {\n    this.writeUint32(coords.length); // numItems\n    for (let i = 0; i < coords.length; i++) {\n      this.writeWkbHeader(2);\n      this.writeLineString(coords[i], layout);\n    }\n  }\n\n  /**\n   * @param {Array<Array<Array<import('../coordinate.js').Coordinate>>>} coords coords\n   * @param {import(\"../geom/Geometry.js\").GeometryLayout} layout layout\n   */\n  writeMultiPolygon(coords, layout) {\n    this.writeUint32(coords.length); // numItems\n    for (let i = 0; i < coords.length; i++) {\n      this.writeWkbHeader(3);\n      this.writePolygon(coords[i], layout);\n    }\n  }\n\n  /**\n   * @param {Array<import('../geom/Geometry.js').default>} geometries geometries\n   */\n  writeGeometryCollection(geometries) {\n    this.writeUint32(geometries.length); // numItems\n\n    for (let i = 0; i < geometries.length; i++) {\n      this.writeGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geom geometry\n   * @param {import(\"../geom/Geometry.js\").GeometryLayout} [layout] layout\n   * @return {import(\"../geom/Geometry.js\").GeometryLayout} minumum layout made by common axes\n   */\n  findMinimumLayout(geom, layout = 'XYZM') {\n    /**\n     * @param {import(\"../geom/Geometry.js\").GeometryLayout} a A\n     * @param {import(\"../geom/Geometry.js\").GeometryLayout} b B\n     * @return {import(\"../geom/Geometry.js\").GeometryLayout} minumum layout made by common axes\n     */\n    const GeometryLayout_min = (a, b) => {\n      if (a === b) {\n        return a;\n      }\n\n      if (a === 'XYZM') {\n        // anything `b` is minimum\n        return b;\n      }\n      if (b === 'XYZM') {\n        // anything `a` is minimum\n        return a;\n      }\n\n      // otherwise, incompatible\n      return 'XY';\n    };\n\n    if (geom instanceof SimpleGeometry) {\n      return GeometryLayout_min(geom.getLayout(), layout);\n    }\n\n    if (geom instanceof GeometryCollection) {\n      const geoms = geom.getGeometriesArray();\n      for (let i = 0; i < geoms.length && layout !== 'XY'; i++) {\n        layout = this.findMinimumLayout(geoms[i], layout);\n      }\n    }\n\n    return layout;\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geom geometry\n   * @param {number} [srid] SRID\n   */\n  writeGeometry(geom, srid) {\n    /**\n     * @type {Object<import(\"../geom/Geometry.js\").Type, WKBGeometryType>}\n     */\n    const wkblut = {\n      Point: WKBGeometryType.POINT,\n      LineString: WKBGeometryType.LINE_STRING,\n      Polygon: WKBGeometryType.POLYGON,\n      MultiPoint: WKBGeometryType.MULTI_POINT,\n      MultiLineString: WKBGeometryType.MULTI_LINE_STRING,\n      MultiPolygon: WKBGeometryType.MULTI_POLYGON,\n      GeometryCollection: WKBGeometryType.GEOMETRY_COLLECTION,\n    };\n    const geomType = geom.getType();\n    const typeId = wkblut[geomType];\n\n    if (!typeId) {\n      throw new Error('GeometryType ' + geomType + ' is not supported');\n    }\n\n    // first call of writeGeometry() traverse whole geometries to determine its output layout if not specified on constructor.\n    if (!this.layout_) {\n      this.layout_ = this.findMinimumLayout(geom);\n    }\n\n    this.writeWkbHeader(typeId, srid);\n\n    if (geom instanceof SimpleGeometry) {\n      const writerLUT = {\n        Point: this.writePoint,\n        LineString: this.writeLineString,\n        Polygon: this.writePolygon,\n        MultiPoint: this.writeMultiPoint,\n        MultiLineString: this.writeMultiLineString,\n        MultiPolygon: this.writeMultiPolygon,\n      };\n      writerLUT[geomType].call(this, geom.getCoordinates(), geom.getLayout());\n    } else if (geom instanceof GeometryCollection) {\n      this.writeGeometryCollection(geom.getGeometriesArray());\n    }\n  }\n\n  getBuffer() {\n    const byteLength = this.writeQueue_.reduce((acc, item) => acc + item[0], 0);\n    const buffer = new ArrayBuffer(byteLength);\n    const view = new DataView(buffer);\n\n    let pos = 0;\n    this.writeQueue_.forEach((item) => {\n      switch (item[0]) {\n        case 1:\n          view.setUint8(pos, item[1]);\n          break;\n        case 4:\n          view.setUint32(pos, item[1], this.isLittleEndian_);\n          break;\n        case 8:\n          view.setFloat64(pos, item[1], this.isLittleEndian_);\n          break;\n        default:\n          break;\n      }\n\n      pos += item[0];\n    });\n\n    return buffer;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into multiple features on reading.\n * @property {boolean} [hex=true] Returns hex string instead of ArrayBuffer for output. This also is used as a hint internally whether it should load contents as text or ArrayBuffer on reading.\n * @property {boolean} [littleEndian=true] Use littleEndian for output.\n * @property {boolean} [ewkb=true] Use EWKB format for output.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout=null] Use specific coordinate layout for output features (null: auto detect)\n * @property {number} [nodataZ=0] If the `geometryLayout` doesn't match with geometry to be output, this value is used to fill missing coordinate value of Z.\n * @property {number} [nodataM=0] If the `geometryLayout` doesn't match with geometry to be output, this value is used to fill missing coordinate value of M.\n * @property {number|boolean} [srid=true] SRID for output. Specify integer value to enforce the value as a SRID. Specify `true` to extract from `dataProjection`. `false` to suppress the output. This option only takes effect when `ewkb` is `true`.\n */\n\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `Well-Known Binary` (WKB) format.\n * Also supports `Extended Well-Known Binary` (EWKB) format, used in PostGIS for example.\n *\n * @api\n */\nclass WKB extends FeatureFormat {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    this.splitCollection = Boolean(options.splitCollection);\n\n    this.viewCache_ = null;\n\n    this.hex_ = options.hex !== false;\n    this.littleEndian_ = options.littleEndian !== false;\n    this.ewkb_ = options.ewkb !== false;\n\n    this.layout_ = options.geometryLayout; // null for auto detect\n    this.nodataZ_ = options.nodataZ || 0;\n    this.nodataM_ = options.nodataM || 0;\n\n    this.srid_ = options.srid;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return this.hex_ ? 'text' : 'arraybuffer';\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @param {string|ArrayBuffer|ArrayBufferView} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return new Feature({\n      geometry: this.readGeometry(source, options),\n    });\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @param {string|ArrayBuffer|ArrayBufferView} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    let geometries = [];\n    const geometry = this.readGeometry(source, options);\n    if (this.splitCollection && geometry instanceof GeometryCollection) {\n      geometries = geometry.getGeometriesArray();\n    } else {\n      geometries = [geometry];\n    }\n    return geometries.map((geometry) => new Feature({geometry}));\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {string|ArrayBuffer|ArrayBufferView} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    const view = getDataView(source);\n    if (!view) {\n      return null;\n    }\n\n    const reader = new WkbReader(view);\n    const geometry = reader.readGeometry();\n\n    this.viewCache_ = view; // cache for internal subsequent call of readProjection()\n    options = this.getReadOptions(source, options);\n    this.viewCache_ = null; // release\n\n    return transformGeometryWithOptions(geometry, false, options);\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @param {string|ArrayBuffer|ArrayBufferView} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   */\n  readProjection(source) {\n    const view = this.viewCache_ || getDataView(source);\n    if (!view) {\n      return undefined;\n    }\n\n    const reader = new WkbReader(view);\n    reader.readWkbHeader();\n\n    return (\n      (reader.getSrid() && getProjection('EPSG:' + reader.getSrid())) ||\n      undefined\n    );\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return this.writeGeometry(feature.getGeometry(), options);\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return this.writeGeometry(\n      new GeometryCollection(features.map((f) => f.getGeometry())),\n      options\n    );\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    options = this.adaptOptions(options);\n\n    const writer = new WkbWriter({\n      layout: this.layout_,\n      littleEndian: this.littleEndian_,\n      ewkb: this.ewkb_,\n\n      nodata: {\n        Z: this.nodataZ_,\n        M: this.nodataM_,\n      },\n    });\n\n    // extract SRID from `dataProjection`\n    let srid = Number.isInteger(this.srid_) ? Number(this.srid_) : null;\n    if (this.srid_ !== false && !Number.isInteger(this.srid_)) {\n      const dataProjection =\n        options.dataProjection && getProjection(options.dataProjection);\n      if (dataProjection) {\n        const code = dataProjection.getCode();\n        if (code.startsWith('EPSG:')) {\n          srid = Number(code.substring(5));\n        }\n      }\n    }\n\n    writer.writeGeometry(\n      transformGeometryWithOptions(geometry, true, options),\n      srid\n    );\n    const buffer = writer.getBuffer();\n\n    return this.hex_ ? encodeHexString(buffer) : buffer;\n  }\n}\n\n/**\n * @param {ArrayBuffer} buffer source buffer\n * @return {string} encoded hex string\n */\nfunction encodeHexString(buffer) {\n  const view = new Uint8Array(buffer);\n  return Array.from(view.values())\n    .map((x) => (x < 16 ? '0' : '') + Number(x).toString(16).toUpperCase())\n    .join('');\n}\n\n/**\n * @param {string} text source text\n * @return {DataView} decoded binary buffer\n */\nfunction decodeHexString(text) {\n  const buffer = new Uint8Array(text.length / 2);\n  for (let i = 0; i < text.length / 2; i++) {\n    buffer[i] = parseInt(text.substr(i * 2, 2), 16);\n  }\n  return new DataView(buffer.buffer);\n}\n\n/**\n * @param {string | ArrayBuffer | ArrayBufferView} source source\n * @return {DataView} data view\n */\nfunction getDataView(source) {\n  if (typeof source === 'string') {\n    return decodeHexString(source);\n  } else if (ArrayBuffer.isView(source)) {\n    if (source instanceof DataView) {\n      return source;\n    }\n    return new DataView(source.buffer, source.byteOffset, source.byteLength);\n  } else if (source instanceof ArrayBuffer) {\n    return new DataView(source);\n  }\n  return null;\n}\n\nexport default WKB;\n","/**\n * @module ol/format/WKT\n */\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport TextFeature from './TextFeature.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * Geometry constructors\n * @enum {function (new:import(\"../geom/Geometry.js\").default, Array, import(\"../geom/Geometry.js\").GeometryLayout)}\n */\nconst GeometryConstructor = {\n  'POINT': Point,\n  'LINESTRING': LineString,\n  'POLYGON': Polygon,\n  'MULTIPOINT': MultiPoint,\n  'MULTILINESTRING': MultiLineString,\n  'MULTIPOLYGON': MultiPolygon,\n};\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n\n/**\n * @typedef {Object} Token\n * @property {number} type Type.\n * @property {number|string} [value] Value.\n * @property {number} position Position.\n */\n\n/**\n * @const\n * @type {string}\n */\nconst EMPTY = 'EMPTY';\n\n/**\n * @const\n * @type {string}\n */\nconst Z = 'Z';\n\n/**\n * @const\n * @type {string}\n */\nconst M = 'M';\n\n/**\n * @const\n * @type {string}\n */\nconst ZM = 'ZM';\n\n/**\n * @const\n * @enum {number}\n */\nconst TokenType = {\n  START: 0,\n  TEXT: 1,\n  LEFT_PAREN: 2,\n  RIGHT_PAREN: 3,\n  NUMBER: 4,\n  COMMA: 5,\n  EOF: 6,\n};\n\n/**\n * @type {Object<import(\"../geom/Geometry.js\").Type, string>}\n */\nconst wktTypeLookup = {\n  Point: 'POINT',\n  LineString: 'LINESTRING',\n  Polygon: 'POLYGON',\n  MultiPoint: 'MULTIPOINT',\n  MultiLineString: 'MULTILINESTRING',\n  MultiPolygon: 'MULTIPOLYGON',\n  GeometryCollection: 'GEOMETRYCOLLECTION',\n  Circle: 'CIRCLE',\n};\n\n/**\n * Class to tokenize a WKT string.\n */\nclass Lexer {\n  /**\n   * @param {string} wkt WKT string.\n   */\n  constructor(wkt) {\n    /**\n     * @type {string}\n     */\n    this.wkt = wkt;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.index_ = -1;\n  }\n\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is alphabetic.\n   * @private\n   */\n  isAlpha_(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z');\n  }\n\n  /**\n   * @param {string} c Character.\n   * @param {boolean} [decimal] Whether the string number\n   *     contains a dot, i.e. is a decimal number.\n   * @return {boolean} Whether the character is numeric.\n   * @private\n   */\n  isNumeric_(c, decimal) {\n    decimal = decimal !== undefined ? decimal : false;\n    return (c >= '0' && c <= '9') || (c == '.' && !decimal);\n  }\n\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is whitespace.\n   * @private\n   */\n  isWhiteSpace_(c) {\n    return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n  }\n\n  /**\n   * @return {string} Next string character.\n   * @private\n   */\n  nextChar_() {\n    return this.wkt.charAt(++this.index_);\n  }\n\n  /**\n   * Fetch and return the next token.\n   * @return {Token} Next string token.\n   */\n  nextToken() {\n    const c = this.nextChar_();\n    const position = this.index_;\n    /** @type {number|string} */\n    let value = c;\n    let type;\n\n    if (c == '(') {\n      type = TokenType.LEFT_PAREN;\n    } else if (c == ',') {\n      type = TokenType.COMMA;\n    } else if (c == ')') {\n      type = TokenType.RIGHT_PAREN;\n    } else if (this.isNumeric_(c) || c == '-') {\n      type = TokenType.NUMBER;\n      value = this.readNumber_();\n    } else if (this.isAlpha_(c)) {\n      type = TokenType.TEXT;\n      value = this.readText_();\n    } else if (this.isWhiteSpace_(c)) {\n      return this.nextToken();\n    } else if (c === '') {\n      type = TokenType.EOF;\n    } else {\n      throw new Error('Unexpected character: ' + c);\n    }\n\n    return {position: position, value: value, type: type};\n  }\n\n  /**\n   * @return {number} Numeric token value.\n   * @private\n   */\n  readNumber_() {\n    let c;\n    const index = this.index_;\n    let decimal = false;\n    let scientificNotation = false;\n    do {\n      if (c == '.') {\n        decimal = true;\n      } else if (c == 'e' || c == 'E') {\n        scientificNotation = true;\n      }\n      c = this.nextChar_();\n    } while (\n      this.isNumeric_(c, decimal) ||\n      // if we haven't detected a scientific number before, 'e' or 'E'\n      // hint that we should continue to read\n      (!scientificNotation && (c == 'e' || c == 'E')) ||\n      // once we know that we have a scientific number, both '-' and '+'\n      // are allowed\n      (scientificNotation && (c == '-' || c == '+'))\n    );\n    return parseFloat(this.wkt.substring(index, this.index_--));\n  }\n\n  /**\n   * @return {string} String token value.\n   * @private\n   */\n  readText_() {\n    let c;\n    const index = this.index_;\n    do {\n      c = this.nextChar_();\n    } while (this.isAlpha_(c));\n    return this.wkt.substring(index, this.index_--).toUpperCase();\n  }\n}\n\n/**\n * Class to parse the tokens from the WKT string.\n */\nclass Parser {\n  /**\n   * @param {Lexer} lexer The lexer.\n   */\n  constructor(lexer) {\n    /**\n     * @type {Lexer}\n     * @private\n     */\n    this.lexer_ = lexer;\n\n    /**\n     * @type {Token}\n     * @private\n     */\n    this.token_ = {\n      position: 0,\n      type: TokenType.START,\n    };\n\n    /**\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     * @private\n     */\n    this.layout_ = 'XY';\n  }\n\n  /**\n   * Fetch the next token form the lexer and replace the active token.\n   * @private\n   */\n  consume_() {\n    this.token_ = this.lexer_.nextToken();\n  }\n\n  /**\n   * Tests if the given type matches the type of the current token.\n   * @param {TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n  isTokenType(type) {\n    return this.token_.type == type;\n  }\n\n  /**\n   * If the given type matches the current token, consume it.\n   * @param {TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n  match(type) {\n    const isMatch = this.isTokenType(type);\n    if (isMatch) {\n      this.consume_();\n    }\n    return isMatch;\n  }\n\n  /**\n   * Try to parse the tokens provided by the lexer.\n   * @return {import(\"../geom/Geometry.js\").default} The geometry.\n   */\n  parse() {\n    this.consume_();\n    return this.parseGeometry_();\n  }\n\n  /**\n   * Try to parse the dimensional info.\n   * @return {import(\"../geom/Geometry.js\").GeometryLayout} The layout.\n   * @private\n   */\n  parseGeometryLayout_() {\n    /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n    let layout = 'XY';\n    const dimToken = this.token_;\n    if (this.isTokenType(TokenType.TEXT)) {\n      const dimInfo = dimToken.value;\n      if (dimInfo === Z) {\n        layout = 'XYZ';\n      } else if (dimInfo === M) {\n        layout = 'XYM';\n      } else if (dimInfo === ZM) {\n        layout = 'XYZM';\n      }\n      if (layout !== 'XY') {\n        this.consume_();\n      }\n    }\n    return layout;\n  }\n\n  /**\n   * @return {Array<import(\"../geom/Geometry.js\").default>} A collection of geometries.\n   * @private\n   */\n  parseGeometryCollectionText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const geometries = [];\n      do {\n        geometries.push(this.parseGeometry_());\n      } while (this.match(TokenType.COMMA));\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return geometries;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<number>} All values in a point.\n   * @private\n   */\n  parsePointText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePoint_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<number>>} All points in a linestring.\n   * @private\n   */\n  parseLineStringText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePointList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<Array<number>>>} All points in a polygon.\n   * @private\n   */\n  parsePolygonText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parseLineStringTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<number>>} All points in a multipoint.\n   * @private\n   */\n  parseMultiPointText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      let coordinates;\n      if (this.token_.type == TokenType.LEFT_PAREN) {\n        coordinates = this.parsePointTextList_();\n      } else {\n        coordinates = this.parsePointList_();\n      }\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<Array<number>>>} All linestring points\n   *                                          in a multilinestring.\n   * @private\n   */\n  parseMultiLineStringText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parseLineStringTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<Array<Array<number>>>>} All polygon points in a multipolygon.\n   * @private\n   */\n  parseMultiPolygonText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePolygonTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<number>} A point.\n   * @private\n   */\n  parsePoint_() {\n    const coordinates = [];\n    const dimensions = this.layout_.length;\n    for (let i = 0; i < dimensions; ++i) {\n      const token = this.token_;\n      if (this.match(TokenType.NUMBER)) {\n        coordinates.push(/** @type {number} */ (token.value));\n      } else {\n        break;\n      }\n    }\n    if (coordinates.length == dimensions) {\n      return coordinates;\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<Array<number>>} An array of points.\n   * @private\n   */\n  parsePointList_() {\n    const coordinates = [this.parsePoint_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePoint_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {Array<Array<number>>} An array of points.\n   * @private\n   */\n  parsePointTextList_() {\n    const coordinates = [this.parsePointText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePointText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {Array<Array<Array<number>>>} An array of points.\n   * @private\n   */\n  parseLineStringTextList_() {\n    const coordinates = [this.parseLineStringText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parseLineStringText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {Array<Array<Array<Array<number>>>>} An array of points.\n   * @private\n   */\n  parsePolygonTextList_() {\n    const coordinates = [this.parsePolygonText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePolygonText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {boolean} Whether the token implies an empty geometry.\n   * @private\n   */\n  isEmptyGeometry_() {\n    const isEmpty =\n      this.isTokenType(TokenType.TEXT) && this.token_.value == EMPTY;\n    if (isEmpty) {\n      this.consume_();\n    }\n    return isEmpty;\n  }\n\n  /**\n   * Create an error message for an unexpected token error.\n   * @return {string} Error message.\n   * @private\n   */\n  formatErrorMessage_() {\n    return (\n      'Unexpected `' +\n      this.token_.value +\n      '` at position ' +\n      this.token_.position +\n      ' in `' +\n      this.lexer_.wkt +\n      '`'\n    );\n  }\n\n  /**\n   * @return {import(\"../geom/Geometry.js\").default} The geometry.\n   * @private\n   */\n  parseGeometry_() {\n    const token = this.token_;\n    if (this.match(TokenType.TEXT)) {\n      const geomType = /** @type {string} */ (token.value);\n      this.layout_ = this.parseGeometryLayout_();\n      const isEmpty = this.isEmptyGeometry_();\n      if (geomType == 'GEOMETRYCOLLECTION') {\n        if (isEmpty) {\n          return new GeometryCollection([]);\n        }\n        const geometries = this.parseGeometryCollectionText_();\n        return new GeometryCollection(geometries);\n      }\n      const ctor = GeometryConstructor[geomType];\n      if (!ctor) {\n        throw new Error('Invalid geometry type: ' + geomType);\n      }\n\n      let coordinates;\n\n      if (isEmpty) {\n        if (geomType == 'POINT') {\n          coordinates = [NaN, NaN];\n        } else {\n          coordinates = [];\n        }\n      } else {\n        switch (geomType) {\n          case 'POINT': {\n            coordinates = this.parsePointText_();\n            break;\n          }\n          case 'LINESTRING': {\n            coordinates = this.parseLineStringText_();\n            break;\n          }\n          case 'POLYGON': {\n            coordinates = this.parsePolygonText_();\n            break;\n          }\n          case 'MULTIPOINT': {\n            coordinates = this.parseMultiPointText_();\n            break;\n          }\n          case 'MULTILINESTRING': {\n            coordinates = this.parseMultiLineStringText_();\n            break;\n          }\n          case 'MULTIPOLYGON': {\n            coordinates = this.parseMultiPolygonText_();\n            break;\n          }\n          default:\n            break;\n        }\n      }\n\n      return new ctor(coordinates, this.layout_);\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n}\n\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @api\n */\nclass WKT extends TextFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * Split GeometryCollection into multiple features.\n     * @type {boolean}\n     * @private\n     */\n    this.splitCollection_ =\n      options.splitCollection !== undefined ? options.splitCollection : false;\n  }\n\n  /**\n   * Parse a WKT string.\n   * @param {string} wkt WKT string.\n   * @return {import(\"../geom/Geometry.js\").default}\n   *     The geometry created.\n   * @private\n   */\n  parse_(wkt) {\n    const lexer = new Lexer(wkt);\n    const parser = new Parser(lexer);\n    return parser.parse();\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const geom = this.readGeometryFromText(text, options);\n    const feature = new Feature();\n    feature.setGeometry(geom);\n    return feature;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    let geometries = [];\n    const geometry = this.readGeometryFromText(text, options);\n    if (this.splitCollection_ && geometry.getType() == 'GeometryCollection') {\n      geometries = /** @type {GeometryCollection} */ (\n        geometry\n      ).getGeometriesArray();\n    } else {\n      geometries = [geometry];\n    }\n    const features = [];\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const feature = new Feature();\n      feature.setGeometry(geometries[i]);\n      features.push(feature);\n    }\n    return features;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    const geometry = this.parse_(text);\n    return transformGeometryWithOptions(geometry, false, options);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, options);\n    }\n    return '';\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    if (features.length == 1) {\n      return this.writeFeatureText(features[0], options);\n    }\n    const geometries = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      geometries.push(features[i].getGeometry());\n    }\n    const collection = new GeometryCollection(geometries);\n    return this.writeGeometryText(collection, options);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    return encode(transformGeometryWithOptions(geometry, true, options));\n  }\n}\n\n/**\n * @param {Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n  const coordinates = geom.getCoordinates();\n  if (coordinates.length === 0) {\n    return '';\n  }\n  return coordinates.join(' ');\n}\n\n/**\n * @param {MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n  const array = [];\n  const components = geom.getPoints();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePointGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n  const array = [];\n  const geoms = geom.getGeometries();\n  for (let i = 0, ii = geoms.length; i < ii; ++i) {\n    array.push(encode(geoms[i]));\n  }\n  return array.join(',');\n}\n\n/**\n * @param {LineString|import(\"../geom/LinearRing.js\").default} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n  const coordinates = geom.getCoordinates();\n  const array = [];\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    array.push(coordinates[i].join(' '));\n  }\n  return array.join(',');\n}\n\n/**\n * @param {MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n  const array = [];\n  const components = geom.getLineStrings();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n  const array = [];\n  const rings = geom.getLinearRings();\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n  const array = [];\n  const components = geom.getPolygons();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePolygonGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n  const layout = geom.getLayout();\n  let dimInfo = '';\n  if (layout === 'XYZ' || layout === 'XYZM') {\n    dimInfo += Z;\n  }\n  if (layout === 'XYM' || layout === 'XYZM') {\n    dimInfo += M;\n  }\n  return dimInfo;\n}\n\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default): string>}\n */\nconst GeometryEncoder = {\n  'Point': encodePointGeometry,\n  'LineString': encodeLineStringGeometry,\n  'Polygon': encodePolygonGeometry,\n  'MultiPoint': encodeMultiPointGeometry,\n  'MultiLineString': encodeMultiLineStringGeometry,\n  'MultiPolygon': encodeMultiPolygonGeometry,\n  'GeometryCollection': encodeGeometryCollectionGeometry,\n};\n\n/**\n * Encode a geometry as WKT.\n * @param {import(\"../geom/Geometry.js\").default} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n  const type = geom.getType();\n  const geometryEncoder = GeometryEncoder[type];\n  const enc = geometryEncoder(geom);\n  let wktType = wktTypeLookup[type];\n  if (typeof (/** @type {?} */ (geom).getFlatCoordinates) === 'function') {\n    const dimInfo = encodeGeometryLayout(\n      /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geom)\n    );\n    if (dimInfo.length > 0) {\n      wktType += ' ' + dimInfo;\n    }\n  }\n  if (enc.length === 0) {\n    return wktType + ' ' + EMPTY;\n  }\n  return wktType + '(' + enc + ')';\n}\n\nexport default WKT;\n","/**\n * @module ol/format/WMSCapabilities\n */\nimport XML from './XML.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {\n  readBooleanString,\n  readDecimal,\n  readDecimalString,\n  readNonNegativeIntegerString,\n  readPositiveInteger,\n  readString,\n} from './xsd.js';\nimport {readHref} from './xlink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wms'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Service': makeObjectPropertySetter(readService),\n  'Capability': makeObjectPropertySetter(readCapability),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CAPABILITY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Request': makeObjectPropertySetter(readRequest),\n  'Exception': makeObjectPropertySetter(readException),\n  'Layer': makeObjectPropertySetter(readCapabilityLayer),\n});\n\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @api\n */\nclass WMSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {string|undefined}\n     */\n    this.version = undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    this.version = node.getAttribute('version').trim();\n    const wmsCapabilityObject = pushParseAndPop(\n      {\n        'version': this.version,\n      },\n      PARSERS,\n      node,\n      []\n    );\n    return wmsCapabilityObject ? wmsCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Name': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'Abstract': makeObjectPropertySetter(readString),\n  'KeywordList': makeObjectPropertySetter(readKeywordList),\n  'OnlineResource': makeObjectPropertySetter(readHref),\n  'ContactInformation': makeObjectPropertySetter(readContactInformation),\n  'Fees': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'LayerLimit': makeObjectPropertySetter(readPositiveInteger),\n  'MaxWidth': makeObjectPropertySetter(readPositiveInteger),\n  'MaxHeight': makeObjectPropertySetter(readPositiveInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFORMATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\n  'ContactPosition': makeObjectPropertySetter(readString),\n  'ContactAddress': makeObjectPropertySetter(readContactAddress),\n  'ContactVoiceTelephone': makeObjectPropertySetter(readString),\n  'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\n  'ContactElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_PERSON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ContactPerson': makeObjectPropertySetter(readString),\n  'ContactOrganization': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AddressType': makeObjectPropertySetter(readString),\n  'Address': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'StateOrProvince': makeObjectPropertySetter(readString),\n  'PostCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXCEPTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Format': makeArrayPusher(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Name': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'Abstract': makeObjectPropertySetter(readString),\n  'KeywordList': makeObjectPropertySetter(readKeywordList),\n  'CRS': makeObjectPropertyPusher(readString),\n  'EX_GeographicBoundingBox': makeObjectPropertySetter(\n    readEXGeographicBoundingBox\n  ),\n  'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\n  'Dimension': makeObjectPropertyPusher(readDimension),\n  'Attribution': makeObjectPropertySetter(readAttribution),\n  'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\n  'Identifier': makeObjectPropertyPusher(readString),\n  'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\n  'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\n  'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\n  'Style': makeObjectPropertyPusher(readStyle),\n  'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\n  'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\n  'Layer': makeObjectPropertyPusher(readLayer),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ATTRIBUTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Title': makeObjectPropertySetter(readString),\n  'OnlineResource': makeObjectPropertySetter(readHref),\n  'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'westBoundLongitude': makeObjectPropertySetter(readDecimal),\n  'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\n  'southBoundLatitude': makeObjectPropertySetter(readDecimal),\n  'northBoundLatitude': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'GetCapabilities': makeObjectPropertySetter(readOperationType),\n  'GetMap': makeObjectPropertySetter(readOperationType),\n  'GetFeatureInfo': makeObjectPropertySetter(readOperationType),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Format': makeObjectPropertyPusher(readString),\n  'DCPType': makeObjectPropertyPusher(readDCPType),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCPTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHTTP),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertySetter(readFormatOnlineresource),\n  'Post': makeObjectPropertySetter(readFormatOnlineresource),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Name': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'Abstract': makeObjectPropertySetter(readString),\n  'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\n  'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\n  'StyleURL': makeObjectPropertySetter(readFormatOnlineresource),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FORMAT_ONLINERESOURCE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Format': makeObjectPropertySetter(readString),\n  'OnlineResource': makeObjectPropertySetter(readHref),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst KEYWORDLIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Keyword': makeArrayPusher(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readAttribution(node, objectStack) {\n  return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const extent = [\n    readDecimalString(node.getAttribute('minx')),\n    readDecimalString(node.getAttribute('miny')),\n    readDecimalString(node.getAttribute('maxx')),\n    readDecimalString(node.getAttribute('maxy')),\n  ];\n\n  const resolutions = [\n    readDecimalString(node.getAttribute('resx')),\n    readDecimalString(node.getAttribute('resy')),\n  ];\n\n  return {\n    'crs': node.getAttribute('CRS'),\n    'extent': extent,\n    'res': resolutions,\n  };\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../extent.js\").Extent|undefined} Bounding box object.\n */\nfunction readEXGeographicBoundingBox(node, objectStack) {\n  const geographicBoundingBox = pushParseAndPop(\n    {},\n    EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS,\n    node,\n    objectStack\n  );\n  if (!geographicBoundingBox) {\n    return undefined;\n  }\n  const westBoundLongitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['westBoundLongitude']);\n  const southBoundLatitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['southBoundLatitude']);\n  const eastBoundLongitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['eastBoundLongitude']);\n  const northBoundLatitude =\n    /** @type {number|undefined} */\n    (geographicBoundingBox['northBoundLatitude']);\n  if (\n    westBoundLongitude === undefined ||\n    southBoundLatitude === undefined ||\n    eastBoundLongitude === undefined ||\n    northBoundLatitude === undefined\n  ) {\n    return undefined;\n  }\n  return [\n    westBoundLongitude,\n    southBoundLatitude,\n    eastBoundLongitude,\n    northBoundLatitude,\n  ];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Capability object.\n */\nfunction readCapability(node, objectStack) {\n  return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Service object.\n */\nfunction readService(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact information object.\n */\nfunction readContactInformation(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact person object.\n */\nfunction readContactPersonPrimary(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact address object.\n */\nfunction readContactAddress(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Format array.\n */\nfunction readException(node, objectStack) {\n  return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readCapabilityLayer(node, objectStack) {\n  const layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n\n  if (layerObject['Layer'] === undefined) {\n    return Object.assign(layerObject, readLayer(node, objectStack));\n  }\n\n  return layerObject;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readLayer(node, objectStack) {\n  const parentLayerObject = /**  @type {!Object<string,*>} */ (\n    objectStack[objectStack.length - 1]\n  );\n\n  const layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n\n  if (!layerObject) {\n    return undefined;\n  }\n  let queryable = readBooleanString(node.getAttribute('queryable'));\n  if (queryable === undefined) {\n    queryable = parentLayerObject['queryable'];\n  }\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\n\n  let cascaded = readNonNegativeIntegerString(node.getAttribute('cascaded'));\n  if (cascaded === undefined) {\n    cascaded = parentLayerObject['cascaded'];\n  }\n  layerObject['cascaded'] = cascaded;\n\n  let opaque = readBooleanString(node.getAttribute('opaque'));\n  if (opaque === undefined) {\n    opaque = parentLayerObject['opaque'];\n  }\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\n\n  let noSubsets = readBooleanString(node.getAttribute('noSubsets'));\n  if (noSubsets === undefined) {\n    noSubsets = parentLayerObject['noSubsets'];\n  }\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n\n  let fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\n  if (!fixedWidth) {\n    fixedWidth = parentLayerObject['fixedWidth'];\n  }\n  layerObject['fixedWidth'] = fixedWidth;\n\n  let fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\n  if (!fixedHeight) {\n    fixedHeight = parentLayerObject['fixedHeight'];\n  }\n  layerObject['fixedHeight'] = fixedHeight;\n\n  // See 7.2.4.8\n  const addKeys = ['Style', 'CRS', 'AuthorityURL'];\n  addKeys.forEach(function (key) {\n    if (key in parentLayerObject) {\n      const childValue = layerObject[key] || [];\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\n    }\n  });\n\n  const replaceKeys = [\n    'EX_GeographicBoundingBox',\n    'BoundingBox',\n    'Dimension',\n    'Attribution',\n    'MinScaleDenominator',\n    'MaxScaleDenominator',\n  ];\n  replaceKeys.forEach(function (key) {\n    if (!(key in layerObject)) {\n      const parentValue = parentLayerObject[key];\n      layerObject[key] = parentValue;\n    }\n  });\n\n  return layerObject;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nfunction readDimension(node, objectStack) {\n  const dimensionObject = {\n    'name': node.getAttribute('name'),\n    'units': node.getAttribute('units'),\n    'unitSymbol': node.getAttribute('unitSymbol'),\n    'default': node.getAttribute('default'),\n    'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\n    'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n    'current': readBooleanString(node.getAttribute('current')),\n    'values': readString(node),\n  };\n  return dimensionObject;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readFormatOnlineresource(node, objectStack) {\n  return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nfunction readRequest(node, objectStack) {\n  return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nfunction readDCPType(node, objectStack) {\n  return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nfunction readHTTP(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nfunction readOperationType(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readSizedFormatOnlineresource(node, objectStack) {\n  const formatOnlineresource = readFormatOnlineresource(node, objectStack);\n  if (formatOnlineresource) {\n    const size = [\n      readNonNegativeIntegerString(node.getAttribute('width')),\n      readNonNegativeIntegerString(node.getAttribute('height')),\n    ];\n    formatOnlineresource['size'] = size;\n    return formatOnlineresource;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nfunction readAuthorityURL(node, objectStack) {\n  const authorityObject = readFormatOnlineresource(node, objectStack);\n  if (authorityObject) {\n    authorityObject['name'] = node.getAttribute('name');\n    return authorityObject;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nfunction readMetadataURL(node, objectStack) {\n  const metadataObject = readFormatOnlineresource(node, objectStack);\n  if (metadataObject) {\n    metadataObject['type'] = node.getAttribute('type');\n    return metadataObject;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Keyword list.\n */\nfunction readKeywordList(node, objectStack) {\n  return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\n}\n\nexport default WMSCapabilities;\n","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport GML2 from './GML2.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n\n/**\n * @const\n * @type {string}\n */\nconst featureIdentifier = '_feature';\n\n/**\n * @const\n * @type {string}\n */\nconst layerIdentifier = '_layer';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nclass WMSGetFeatureInfo extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n    /**\n     * @private\n     * @type {GML2}\n     */\n    this.gmlFormat_ = new GML2();\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n  }\n\n  /**\n   * @return {Array<string>|null} layers\n   */\n  getLayers() {\n    return this.layers_;\n  }\n\n  /**\n   * @param {Array<string>|null} layers Layers to parse.\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  readFeatures_(node, objectStack) {\n    node.setAttribute('namespaceURI', this.featureNS_);\n    const localName = node.localName;\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = [];\n    if (node.childNodes.length === 0) {\n      return features;\n    }\n    if (localName == 'msGMLOutput') {\n      for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n        const layer = node.childNodes[i];\n        if (layer.nodeType !== Node.ELEMENT_NODE) {\n          continue;\n        }\n\n        const layerElement = /** @type {Element} */ (layer);\n        const context = objectStack[0];\n\n        const toRemove = layerIdentifier;\n        const layerName = layerElement.localName.replace(toRemove, '');\n\n        if (this.layers_ && !this.layers_.includes(layerName)) {\n          continue;\n        }\n\n        const featureType = layerName + featureIdentifier;\n\n        context['featureType'] = featureType;\n        context['featureNS'] = this.featureNS_;\n\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        parsers[featureType] = makeArrayPusher(\n          this.gmlFormat_.readFeatureElement,\n          this.gmlFormat_\n        );\n        const parsersNS = makeStructureNS(\n          [context['featureNS'], null],\n          parsers\n        );\n        layerElement.setAttribute('namespaceURI', this.featureNS_);\n        const layerFeatures = pushParseAndPop(\n          [],\n          // @ts-ignore\n          parsersNS,\n          layerElement,\n          objectStack,\n          this.gmlFormat_\n        );\n        if (layerFeatures) {\n          extend(features, layerFeatures);\n        }\n      }\n    }\n    if (localName == 'FeatureCollection') {\n      const gmlFeatures = pushParseAndPop(\n        [],\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS,\n        node,\n        [{}],\n        this.gmlFormat_\n      );\n      if (gmlFeatures) {\n        features = gmlFeatures;\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {};\n    if (options) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    return this.readFeatures_(node, [internalOptions]);\n  }\n}\n\nexport default WMSGetFeatureInfo;\n","/**\n * @module ol/format/WMTSCapabilities\n */\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport {boundingExtent} from '../extent.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readDecimal, readPositiveInteger, readString} from './xsd.js';\nimport {readHref} from './xlink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Contents': makeObjectPropertySetter(readContents),\n});\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    let version = node.getAttribute('version');\n    if (version) {\n      version = version.trim();\n    }\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(\n      WMTSCapabilityObject,\n      PARSERS,\n      node,\n      []\n    );\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Layer': makeObjectPropertyPusher(readLayer),\n  'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixSet': makeObjectPropertySetter(readString),\n  'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrix': makeObjectPropertySetter(readString),\n  'MinTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MinTileCol': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileCol': makeObjectPropertySetter(readPositiveInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n  'LowerCorner': makeArrayPusher(readCoordinates),\n  'UpperCorner': makeArrayPusher(readCoordinates),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n    'BoundingBox': makeObjectPropertySetter(readBoundingBox),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readPositiveInteger),\n    'TileHeight': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixWidth': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixHeight': makeObjectPropertySetter(readPositiveInteger),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\nexport default WMTSCapabilities;\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceNode} from '../dom.js';\n\nconst events = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'MSFullscreenChange',\n];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FullScreenOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isInFullscreen_ = false;\n\n    /**\n     * @private\n     */\n    this.boundHandleMapTargetChange_ = this.handleMapTargetChange_.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.documentListeners_ = [];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n    this.button_.title = tipLabel;\n    this.button_.setAttribute('type', 'button');\n    this.button_.appendChild(this.labelNode_);\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n    this.setClassName_(this.button_, this.isInFullscreen_);\n\n    this.element.className = `${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`;\n    this.element.appendChild(this.button_);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const doc = map.getOwnerDocument();\n    if (!isFullScreenSupported(doc)) {\n      return;\n    }\n    if (isFullScreen(doc)) {\n      exitFullScreen(doc);\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? doc.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const wasInFullscreen = this.isInFullscreen_;\n    this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n    if (wasInFullscreen !== this.isInFullscreen_) {\n      this.setClassName_(this.button_, this.isInFullscreen_);\n      if (this.isInFullscreen_) {\n        replaceNode(this.labelActiveNode_, this.labelNode_);\n        this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n      } else {\n        replaceNode(this.labelNode_, this.labelActiveNode_);\n        this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n      }\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    if (fullscreen) {\n      element.classList.remove(...this.inactiveClassName_);\n      element.classList.add(...this.activeClassName_);\n    } else {\n      element.classList.remove(...this.activeClassName_);\n      element.classList.add(...this.inactiveClassName_);\n    }\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (oldMap) {\n      oldMap.removeChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n\n    super.setMap(map);\n\n    this.handleMapTargetChange_();\n    if (map) {\n      map.addChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleMapTargetChange_() {\n    const listeners = this.documentListeners_;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      unlistenByKey(listeners[i]);\n    }\n    listeners.length = 0;\n\n    const map = this.getMap();\n    if (map) {\n      const doc = map.getOwnerDocument();\n      if (isFullScreenSupported(doc)) {\n        this.element.classList.remove(CLASS_UNSUPPORTED);\n      } else {\n        this.element.classList.add(CLASS_UNSUPPORTED);\n      }\n\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        listeners.push(\n          listen(doc, events[i], this.handleFullScreenChange_, this)\n        );\n      }\n      this.handleFullScreenChange_();\n    }\n  }\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n  const body = doc.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body.requestFullscreen && doc.fullscreenEnabled)\n  );\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n  return !!(doc['webkitIsFullScreen'] || doc.fullscreenElement);\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n  if (doc.exitFullscreen) {\n    doc.exitFullscreen();\n  } else if (doc['webkitExitFullscreen']) {\n    doc['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space is rendered\n * initially and the last position is retained when the mouse leaves the viewport.\n * When a string is provided (e.g. `'no position'` or `''` for an empty string) it is used as a\n * placeholder.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the projection's antimeridian, if it\n * is a global projection.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [options] Mouse position options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n    this.un;\n\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = options.placeholder !== undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.placeholder_ = this.renderOnMouseOut_ ? options.placeholder : '&#160;';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX === false ? false : true;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\n      this.get(COORDINATE_FORMAT)\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\n      this.get(PROJECTION)\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this)\n        );\n      }\n      this.updateHTML_(null);\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.placeholder_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        if (this.wrapX_) {\n          const projection =\n            userProjection || this.getProjection() || this.mapProjection_;\n          wrapX(coordinate, projection);\n        }\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport View from '../View.js';\nimport ViewProperty from '../ViewProperty.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {\n  containsExtent,\n  equals as equalsExtent,\n  getBottomRight,\n  getTopLeft,\n  scaleFromCenter,\n} from '../extent.js';\nimport {listen, listenOnce} from '../events.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {replaceNode} from '../dom.js';\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='‹'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='›'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Base.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Base.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,\n * a default view with the same projection as the main map will be used.\n */\n\n/**\n * Create a new control with a map acting as an overview map for another\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n  /**\n   * @param {Options} [options] OverviewMap options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     */\n    this.boundHandleRotationChanged_ = this.handleRotationChanged_.bind(this);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.viewExtent_ = undefined;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u2039';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u203A';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * Explicitly given view to be used instead of a view derived from the main map.\n     * @type {View}\n     * @private\n     */\n    this.view_ = options.view;\n\n    const ovmap = new Map({\n      view: options.view,\n      controls: new Collection(),\n      interactions: new Collection(),\n    });\n\n    /**\n     * @type {Map}\n     * @private\n     */\n    this.ovmap_ = ovmap;\n\n    if (options.layers) {\n      options.layers.forEach(function (layer) {\n        ovmap.addLayer(layer);\n      });\n    }\n\n    const box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: 'center-center',\n      element: box,\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const scope = this;\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = function (mousePosition) {\n      return {\n        clientX: mousePosition.clientX,\n        clientY: mousePosition.clientY,\n      };\n    };\n\n    const move = function (event) {\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\n      const coordinates = ovmap.getEventCoordinateInternal(\n        /** @type {MouseEvent} */ (position)\n      );\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = function (event) {\n      const coordinates = ovmap.getEventCoordinateInternal(event);\n\n      scope.getMap().getView().setCenterInternal(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function () {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(\n        listen(\n          map,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleMapPropertyChange_,\n          this\n        )\n      );\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n\n      if (!this.ovmap_.isRendered()) {\n        this.updateBoxAfterOvmapIsRendered_();\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {import(\"../View.js\").default} */ (\n        event.oldValue\n      );\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    } else if (\n      !this.ovmap_.isRendered() &&\n      (event.key === MapProperty.TARGET || event.key === MapProperty.SIZE)\n    ) {\n      this.ovmap_.updateSize();\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  bindView_(view) {\n    if (!this.view_) {\n      // Unless an explicit view definition was given, derive default from whatever main map uses.\n      const newView = new View({\n        projection: view.getProjection(),\n      });\n      this.ovmap_.setView(newView);\n    }\n\n    view.addChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n    // Sync once with the new view\n    this.handleRotationChanged_();\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    view.removeChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * @private\n   */\n  handleRotationChanged_() {\n    if (this.rotateWithView_) {\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    }\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\n      return;\n    }\n    this.viewExtent_ = extent;\n\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (\n      ovmap.getSize()\n    );\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtentInternal(ovmapSize);\n\n    const topLeftPixel = ovmap.getPixelFromCoordinateInternal(\n      getTopLeft(extent)\n    );\n    const bottomRightPixel = ovmap.getPixelFromCoordinateInternal(\n      getBottomRight(extent)\n    );\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (\n      boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO\n    ) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fitInternal(polygonFromExtent(extent));\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenterInternal(view.getCenterInternal());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = this.rotateWithView_ ? 0 : -view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const center = view.getCenterInternal();\n    const resolution = view.getResolution();\n    const ovresolution = ovview.getResolution();\n    const width = (mapSize[0] * resolution) / ovresolution;\n    const height = (mapSize[1] * resolution) / ovresolution;\n\n    // set position using center coordinates\n    overlay.setPosition(center);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = width + 'px';\n      box.style.height = height + 'px';\n      const transform = 'rotate(' + rotation + 'rad)';\n      box.style.transform = transform;\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateBoxAfterOvmapIsRendered_() {\n    if (this.ovmapPostrenderKey_) {\n      return;\n    }\n    this.ovmapPostrenderKey_ = listenOnce(\n      this.ovmap_,\n      MapEventType.POSTRENDER,\n      function (event) {\n        delete this.ovmapPostrenderKey_;\n        this.updateBox_();\n      },\n      this\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_) {\n      if (ovmap.isRendered()) {\n        this.viewExtent_ = undefined;\n        ovmap.render();\n        return;\n      }\n      ovmap.updateSize();\n      this.resetExtent_();\n      this.updateBoxAfterOvmapIsRendered_();\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the overview map view can rotate, `false` otherwise.\n   * @return {boolean} True if the control view can rotate.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Set whether the overview map view should rotate with the main map view.\n   * @param {boolean} rotateWithView True if the control view should rotate.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    if (this.rotateWithView_ === rotateWithView) {\n      return;\n    }\n    this.rotateWithView_ = rotateWithView;\n    if (this.getMap().getView().getRotation() !== 0) {\n      if (this.rotateWithView_) {\n        this.handleRotationChanged_();\n      } else {\n        this.ovmap_.getView().setRotation(0);\n      }\n      this.viewExtent_ = undefined;\n      this.validateExtent_();\n      this.updateBox_();\n    }\n  }\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../Map.js\").default} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n\n  /**\n   * Update the overview map element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n  }\n}\n\nexport default OverviewMap;\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm'\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {clamp} from '../math.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n  /**\n   * @param {Options} [options] Zoom slider options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n    });\n\n    /**\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n\n    containerElement.addEventListener(\n      PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERUP,\n      this.handleDraggerEnd_.bind(this),\n      false\n    );\n\n    containerElement.addEventListener(\n      EventType.CLICK,\n      this.handleContainerClick_.bind(this),\n      false\n    );\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @return {boolean} Initialization successful\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    let containerWidth = container.offsetWidth;\n    let containerHeight = container.offsetHeight;\n    if (containerWidth === 0 && containerHeight === 0) {\n      return (this.sliderInitialized_ = false);\n    }\n\n    const containerStyle = getComputedStyle(container);\n    containerWidth -=\n      parseFloat(containerStyle['paddingRight']) +\n      parseFloat(containerStyle['paddingLeft']);\n    containerHeight -=\n      parseFloat(containerStyle['paddingTop']) +\n      parseFloat(containerStyle['paddingBottom']);\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const thumbStyle = getComputedStyle(thumb);\n    const thumbWidth =\n      thumb.offsetWidth +\n      parseFloat(thumbStyle['marginRight']) +\n      parseFloat(thumbStyle['marginLeft']);\n    const thumbHeight =\n      thumb.offsetHeight +\n      parseFloat(thumbStyle['marginTop']) +\n      parseFloat(thumbStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerWidth > containerHeight) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerWidth - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerHeight - thumbHeight;\n    }\n    return (this.sliderInitialized_ = true);\n  }\n\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2\n    );\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      const element = /** @type {HTMLElement} */ (\n        this.element.firstElementChild\n      );\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        const drag = this.handleDraggerDrag_;\n        const end = this.handleDraggerEnd_;\n        const doc = this.getMap().getOwnerDocument();\n        this.dragListenerKeys_.push(\n          listen(doc, PointerEventType.POINTERMOVE, drag, this),\n          listen(doc, PointerEventType.POINTERUP, end, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const deltaX = event.clientX - this.startX_;\n      const deltaY = event.clientY - this.startY_;\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ =\n        this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.endInteraction();\n\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  }\n\n  /**\n   * Update the zoomslider element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    if (!mapEvent.frameState) {\n      return;\n    }\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\n      return;\n    }\n    const res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\nexport default ZoomSlider;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent|null}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : this.extent;\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","import $ol$AssertionError from './ol/AssertionError.js';\nimport {CollectionEvent as _ol_Collection$CollectionEvent} from './ol/Collection.js';\nimport $ol$Collection from './ol/Collection.js';\nimport $ol$DataTile from './ol/DataTile.js';\nimport $ol$Disposable from './ol/Disposable.js';\nimport $ol$Feature from './ol/Feature.js';\nimport {GeolocationError as _ol_Geolocation$GeolocationError} from './ol/Geolocation.js';\nimport $ol$Geolocation from './ol/Geolocation.js';\nimport $ol$Image from './ol/Image.js';\nimport $ol$ImageBase from './ol/ImageBase.js';\nimport $ol$ImageCanvas from './ol/ImageCanvas.js';\nimport $ol$ImageTile from './ol/ImageTile.js';\nimport $ol$Kinetic from './ol/Kinetic.js';\nimport $ol$Map from './ol/Map.js';\nimport $ol$MapBrowserEvent from './ol/MapBrowserEvent.js';\nimport $ol$MapBrowserEventHandler from './ol/MapBrowserEventHandler.js';\nimport $ol$MapEvent from './ol/MapEvent.js';\nimport {ObjectEvent as _ol_Object$ObjectEvent} from './ol/Object.js';\nimport $ol$Object from './ol/Object.js';\nimport $ol$Observable from './ol/Observable.js';\nimport $ol$Overlay from './ol/Overlay.js';\nimport $ol$Tile from './ol/Tile.js';\nimport $ol$TileCache from './ol/TileCache.js';\nimport $ol$TileQueue from './ol/TileQueue.js';\nimport $ol$TileRange from './ol/TileRange.js';\nimport $ol$VectorRenderTile from './ol/VectorRenderTile.js';\nimport $ol$VectorTile from './ol/VectorTile.js';\nimport $ol$View from './ol/View.js';\nimport {ResponseError as _ol_net$ResponseError} from './ol/net.js';\nimport {ClientError as _ol_net$ClientError} from './ol/net.js';\nimport $ol$webgl$Buffer from './ol/webgl/Buffer.js';\nimport $ol$webgl$Helper from './ol/webgl/Helper.js';\nimport $ol$webgl$PaletteTexture from './ol/webgl/PaletteTexture.js';\nimport $ol$webgl$PostProcessingPass from './ol/webgl/PostProcessingPass.js';\nimport $ol$webgl$RenderTarget from './ol/webgl/RenderTarget.js';\nimport {ShaderBuilder as _ol_webgl_ShaderBuilder$ShaderBuilder} from './ol/webgl/ShaderBuilder.js';\nimport $ol$webgl$TileTexture from './ol/webgl/TileTexture.js';\nimport $ol$tilegrid$TileGrid from './ol/tilegrid/TileGrid.js';\nimport $ol$tilegrid$WMTS from './ol/tilegrid/WMTS.js';\nimport $ol$style$Circle from './ol/style/Circle.js';\nimport $ol$style$Fill from './ol/style/Fill.js';\nimport $ol$style$Icon from './ol/style/Icon.js';\nimport $ol$style$IconImage from './ol/style/IconImage.js';\nimport $ol$style$IconImageCache from './ol/style/IconImageCache.js';\nimport $ol$style$Image from './ol/style/Image.js';\nimport $ol$style$RegularShape from './ol/style/RegularShape.js';\nimport $ol$style$Stroke from './ol/style/Stroke.js';\nimport $ol$style$Style from './ol/style/Style.js';\nimport $ol$style$Text from './ol/style/Text.js';\nimport $ol$structs$LRUCache from './ol/structs/LRUCache.js';\nimport $ol$structs$LinkedList from './ol/structs/LinkedList.js';\nimport $ol$structs$PriorityQueue from './ol/structs/PriorityQueue.js';\nimport $ol$structs$RBush from './ol/structs/RBush.js';\nimport $ol$source$BingMaps from './ol/source/BingMaps.js';\nimport $ol$source$CartoDB from './ol/source/CartoDB.js';\nimport $ol$source$Cluster from './ol/source/Cluster.js';\nimport $ol$source$DataTile from './ol/source/DataTile.js';\nimport $ol$source$GeoTIFF from './ol/source/GeoTIFF.js';\nimport $ol$source$IIIF from './ol/source/IIIF.js';\nimport {ImageSourceEvent as _ol_source_Image$ImageSourceEvent} from './ol/source/Image.js';\nimport $ol$source$Image from './ol/source/Image.js';\nimport $ol$source$ImageArcGISRest from './ol/source/ImageArcGISRest.js';\nimport $ol$source$ImageCanvas from './ol/source/ImageCanvas.js';\nimport $ol$source$ImageMapGuide from './ol/source/ImageMapGuide.js';\nimport $ol$source$ImageStatic from './ol/source/ImageStatic.js';\nimport $ol$source$ImageWMS from './ol/source/ImageWMS.js';\nimport $ol$source$OGCMapTile from './ol/source/OGCMapTile.js';\nimport $ol$source$OGCVectorTile from './ol/source/OGCVectorTile.js';\nimport $ol$source$OSM from './ol/source/OSM.js';\nimport {Processor as _ol_source_Raster$Processor} from './ol/source/Raster.js';\nimport {RasterSourceEvent as _ol_source_Raster$RasterSourceEvent} from './ol/source/Raster.js';\nimport $ol$source$Raster from './ol/source/Raster.js';\nimport $ol$source$Source from './ol/source/Source.js';\nimport $ol$source$Stamen from './ol/source/Stamen.js';\nimport $ol$source$Tile from './ol/source/Tile.js';\nimport {TileSourceEvent as _ol_source_Tile$TileSourceEvent} from './ol/source/Tile.js';\nimport $ol$source$TileArcGISRest from './ol/source/TileArcGISRest.js';\nimport $ol$source$TileDebug from './ol/source/TileDebug.js';\nimport $ol$source$TileImage from './ol/source/TileImage.js';\nimport $ol$source$TileJSON from './ol/source/TileJSON.js';\nimport $ol$source$TileWMS from './ol/source/TileWMS.js';\nimport {CustomTile as _ol_source_UTFGrid$CustomTile} from './ol/source/UTFGrid.js';\nimport $ol$source$UTFGrid from './ol/source/UTFGrid.js';\nimport $ol$source$UrlTile from './ol/source/UrlTile.js';\nimport {VectorSourceEvent as _ol_source_Vector$VectorSourceEvent} from './ol/source/Vector.js';\nimport $ol$source$Vector from './ol/source/Vector.js';\nimport $ol$source$VectorTile from './ol/source/VectorTile.js';\nimport $ol$source$WMTS from './ol/source/WMTS.js';\nimport $ol$source$XYZ from './ol/source/XYZ.js';\nimport {CustomTile as _ol_source_Zoomify$CustomTile} from './ol/source/Zoomify.js';\nimport $ol$source$Zoomify from './ol/source/Zoomify.js';\nimport $ol$reproj$DataTile from './ol/reproj/DataTile.js';\nimport $ol$reproj$Image from './ol/reproj/Image.js';\nimport $ol$reproj$Tile from './ol/reproj/Tile.js';\nimport $ol$reproj$Triangulation from './ol/reproj/Triangulation.js';\nimport $ol$renderer$Composite from './ol/renderer/Composite.js';\nimport $ol$renderer$Layer from './ol/renderer/Layer.js';\nimport $ol$renderer$Map from './ol/renderer/Map.js';\nimport $ol$renderer$webgl$Layer from './ol/renderer/webgl/Layer.js';\nimport $ol$renderer$webgl$PointsLayer from './ol/renderer/webgl/PointsLayer.js';\nimport $ol$renderer$webgl$TileLayer from './ol/renderer/webgl/TileLayer.js';\nimport $ol$renderer$webgl$VectorLayer from './ol/renderer/webgl/VectorLayer.js';\nimport $ol$renderer$canvas$ImageLayer from './ol/renderer/canvas/ImageLayer.js';\nimport $ol$renderer$canvas$Layer from './ol/renderer/canvas/Layer.js';\nimport $ol$renderer$canvas$TileLayer from './ol/renderer/canvas/TileLayer.js';\nimport $ol$renderer$canvas$VectorImageLayer from './ol/renderer/canvas/VectorImageLayer.js';\nimport $ol$renderer$canvas$VectorLayer from './ol/renderer/canvas/VectorLayer.js';\nimport $ol$renderer$canvas$VectorTileLayer from './ol/renderer/canvas/VectorTileLayer.js';\nimport $ol$render$Box from './ol/render/Box.js';\nimport $ol$render$Event from './ol/render/Event.js';\nimport $ol$render$Feature from './ol/render/Feature.js';\nimport $ol$render$VectorContext from './ol/render/VectorContext.js';\nimport $ol$render$webgl$BatchRenderer from './ol/render/webgl/BatchRenderer.js';\nimport $ol$render$webgl$LineStringBatchRenderer from './ol/render/webgl/LineStringBatchRenderer.js';\nimport $ol$render$webgl$MixedGeometryBatch from './ol/render/webgl/MixedGeometryBatch.js';\nimport $ol$render$webgl$PointBatchRenderer from './ol/render/webgl/PointBatchRenderer.js';\nimport $ol$render$webgl$PolygonBatchRenderer from './ol/render/webgl/PolygonBatchRenderer.js';\nimport $ol$render$canvas$Builder from './ol/render/canvas/Builder.js';\nimport $ol$render$canvas$BuilderGroup from './ol/render/canvas/BuilderGroup.js';\nimport $ol$render$canvas$Executor from './ol/render/canvas/Executor.js';\nimport $ol$render$canvas$ExecutorGroup from './ol/render/canvas/ExecutorGroup.js';\nimport $ol$render$canvas$ImageBuilder from './ol/render/canvas/ImageBuilder.js';\nimport $ol$render$canvas$Immediate from './ol/render/canvas/Immediate.js';\nimport $ol$render$canvas$LineStringBuilder from './ol/render/canvas/LineStringBuilder.js';\nimport $ol$render$canvas$PolygonBuilder from './ol/render/canvas/PolygonBuilder.js';\nimport $ol$render$canvas$TextBuilder from './ol/render/canvas/TextBuilder.js';\nimport $ol$proj$Projection from './ol/proj/Projection.js';\nimport $ol$layer$Base from './ol/layer/Base.js';\nimport $ol$layer$BaseImage from './ol/layer/BaseImage.js';\nimport $ol$layer$BaseTile from './ol/layer/BaseTile.js';\nimport $ol$layer$BaseVector from './ol/layer/BaseVector.js';\nimport $ol$layer$Graticule from './ol/layer/Graticule.js';\nimport {GroupEvent as _ol_layer_Group$GroupEvent} from './ol/layer/Group.js';\nimport $ol$layer$Group from './ol/layer/Group.js';\nimport $ol$layer$Heatmap from './ol/layer/Heatmap.js';\nimport $ol$layer$Image from './ol/layer/Image.js';\nimport $ol$layer$Layer from './ol/layer/Layer.js';\nimport $ol$layer$MapboxVector from './ol/layer/MapboxVector.js';\nimport $ol$layer$Tile from './ol/layer/Tile.js';\nimport $ol$layer$Vector from './ol/layer/Vector.js';\nimport $ol$layer$VectorImage from './ol/layer/VectorImage.js';\nimport $ol$layer$VectorTile from './ol/layer/VectorTile.js';\nimport $ol$layer$WebGLPoints from './ol/layer/WebGLPoints.js';\nimport $ol$layer$WebGLTile from './ol/layer/WebGLTile.js';\nimport $ol$interaction$DoubleClickZoom from './ol/interaction/DoubleClickZoom.js';\nimport {DragAndDropEvent as _ol_interaction_DragAndDrop$DragAndDropEvent} from './ol/interaction/DragAndDrop.js';\nimport $ol$interaction$DragAndDrop from './ol/interaction/DragAndDrop.js';\nimport {DragBoxEvent as _ol_interaction_DragBox$DragBoxEvent} from './ol/interaction/DragBox.js';\nimport $ol$interaction$DragBox from './ol/interaction/DragBox.js';\nimport $ol$interaction$DragPan from './ol/interaction/DragPan.js';\nimport $ol$interaction$DragRotate from './ol/interaction/DragRotate.js';\nimport $ol$interaction$DragRotateAndZoom from './ol/interaction/DragRotateAndZoom.js';\nimport $ol$interaction$DragZoom from './ol/interaction/DragZoom.js';\nimport {DrawEvent as _ol_interaction_Draw$DrawEvent} from './ol/interaction/Draw.js';\nimport $ol$interaction$Draw from './ol/interaction/Draw.js';\nimport {ExtentEvent as _ol_interaction_Extent$ExtentEvent} from './ol/interaction/Extent.js';\nimport $ol$interaction$Extent from './ol/interaction/Extent.js';\nimport $ol$interaction$Interaction from './ol/interaction/Interaction.js';\nimport $ol$interaction$KeyboardPan from './ol/interaction/KeyboardPan.js';\nimport $ol$interaction$KeyboardZoom from './ol/interaction/KeyboardZoom.js';\nimport $ol$interaction$Link from './ol/interaction/Link.js';\nimport {ModifyEvent as _ol_interaction_Modify$ModifyEvent} from './ol/interaction/Modify.js';\nimport $ol$interaction$Modify from './ol/interaction/Modify.js';\nimport $ol$interaction$MouseWheelZoom from './ol/interaction/MouseWheelZoom.js';\nimport $ol$interaction$PinchRotate from './ol/interaction/PinchRotate.js';\nimport $ol$interaction$PinchZoom from './ol/interaction/PinchZoom.js';\nimport $ol$interaction$Pointer from './ol/interaction/Pointer.js';\nimport {SelectEvent as _ol_interaction_Select$SelectEvent} from './ol/interaction/Select.js';\nimport $ol$interaction$Select from './ol/interaction/Select.js';\nimport $ol$interaction$Snap from './ol/interaction/Snap.js';\nimport {TranslateEvent as _ol_interaction_Translate$TranslateEvent} from './ol/interaction/Translate.js';\nimport $ol$interaction$Translate from './ol/interaction/Translate.js';\nimport $ol$geom$Circle from './ol/geom/Circle.js';\nimport $ol$geom$Geometry from './ol/geom/Geometry.js';\nimport $ol$geom$GeometryCollection from './ol/geom/GeometryCollection.js';\nimport $ol$geom$LineString from './ol/geom/LineString.js';\nimport $ol$geom$LinearRing from './ol/geom/LinearRing.js';\nimport $ol$geom$MultiLineString from './ol/geom/MultiLineString.js';\nimport $ol$geom$MultiPoint from './ol/geom/MultiPoint.js';\nimport $ol$geom$MultiPolygon from './ol/geom/MultiPolygon.js';\nimport $ol$geom$Point from './ol/geom/Point.js';\nimport $ol$geom$Polygon from './ol/geom/Polygon.js';\nimport $ol$geom$SimpleGeometry from './ol/geom/SimpleGeometry.js';\nimport $ol$format$EsriJSON from './ol/format/EsriJSON.js';\nimport $ol$format$Feature from './ol/format/Feature.js';\nimport $ol$format$GML from './ol/format/GML.js';\nimport $ol$format$GML2 from './ol/format/GML2.js';\nimport $ol$format$GML3 from './ol/format/GML3.js';\nimport $ol$format$GML32 from './ol/format/GML32.js';\nimport $ol$format$GMLBase from './ol/format/GMLBase.js';\nimport $ol$format$GPX from './ol/format/GPX.js';\nimport $ol$format$GeoJSON from './ol/format/GeoJSON.js';\nimport $ol$format$IGC from './ol/format/IGC.js';\nimport $ol$format$IIIFInfo from './ol/format/IIIFInfo.js';\nimport $ol$format$JSONFeature from './ol/format/JSONFeature.js';\nimport $ol$format$KML from './ol/format/KML.js';\nimport $ol$format$MVT from './ol/format/MVT.js';\nimport $ol$format$OSMXML from './ol/format/OSMXML.js';\nimport $ol$format$OWS from './ol/format/OWS.js';\nimport $ol$format$Polyline from './ol/format/Polyline.js';\nimport $ol$format$TextFeature from './ol/format/TextFeature.js';\nimport $ol$format$TopoJSON from './ol/format/TopoJSON.js';\nimport $ol$format$WFS from './ol/format/WFS.js';\nimport $ol$format$WKB from './ol/format/WKB.js';\nimport $ol$format$WKT from './ol/format/WKT.js';\nimport $ol$format$WMSCapabilities from './ol/format/WMSCapabilities.js';\nimport $ol$format$WMSGetFeatureInfo from './ol/format/WMSGetFeatureInfo.js';\nimport $ol$format$WMTSCapabilities from './ol/format/WMTSCapabilities.js';\nimport $ol$format$XML from './ol/format/XML.js';\nimport $ol$format$XMLFeature from './ol/format/XMLFeature.js';\nimport $ol$format$filter$And from './ol/format/filter/And.js';\nimport $ol$format$filter$Bbox from './ol/format/filter/Bbox.js';\nimport $ol$format$filter$Comparison from './ol/format/filter/Comparison.js';\nimport $ol$format$filter$ComparisonBinary from './ol/format/filter/ComparisonBinary.js';\nimport $ol$format$filter$Contains from './ol/format/filter/Contains.js';\nimport $ol$format$filter$DWithin from './ol/format/filter/DWithin.js';\nimport $ol$format$filter$Disjoint from './ol/format/filter/Disjoint.js';\nimport $ol$format$filter$During from './ol/format/filter/During.js';\nimport $ol$format$filter$EqualTo from './ol/format/filter/EqualTo.js';\nimport $ol$format$filter$Filter from './ol/format/filter/Filter.js';\nimport $ol$format$filter$GreaterThan from './ol/format/filter/GreaterThan.js';\nimport $ol$format$filter$GreaterThanOrEqualTo from './ol/format/filter/GreaterThanOrEqualTo.js';\nimport $ol$format$filter$Intersects from './ol/format/filter/Intersects.js';\nimport $ol$format$filter$IsBetween from './ol/format/filter/IsBetween.js';\nimport $ol$format$filter$IsLike from './ol/format/filter/IsLike.js';\nimport $ol$format$filter$IsNull from './ol/format/filter/IsNull.js';\nimport $ol$format$filter$LessThan from './ol/format/filter/LessThan.js';\nimport $ol$format$filter$LessThanOrEqualTo from './ol/format/filter/LessThanOrEqualTo.js';\nimport $ol$format$filter$LogicalNary from './ol/format/filter/LogicalNary.js';\nimport $ol$format$filter$Not from './ol/format/filter/Not.js';\nimport $ol$format$filter$NotEqualTo from './ol/format/filter/NotEqualTo.js';\nimport $ol$format$filter$Or from './ol/format/filter/Or.js';\nimport $ol$format$filter$ResourceId from './ol/format/filter/ResourceId.js';\nimport $ol$format$filter$Spatial from './ol/format/filter/Spatial.js';\nimport $ol$format$filter$Within from './ol/format/filter/Within.js';\nimport $ol$events$Event from './ol/events/Event.js';\nimport $ol$events$Target from './ol/events/Target.js';\nimport $ol$control$Attribution from './ol/control/Attribution.js';\nimport $ol$control$Control from './ol/control/Control.js';\nimport $ol$control$FullScreen from './ol/control/FullScreen.js';\nimport $ol$control$MousePosition from './ol/control/MousePosition.js';\nimport $ol$control$OverviewMap from './ol/control/OverviewMap.js';\nimport $ol$control$Rotate from './ol/control/Rotate.js';\nimport $ol$control$ScaleLine from './ol/control/ScaleLine.js';\nimport $ol$control$Zoom from './ol/control/Zoom.js';\nimport $ol$control$ZoomSlider from './ol/control/ZoomSlider.js';\nimport $ol$control$ZoomToExtent from './ol/control/ZoomToExtent.js';\n\nvar ol = {};\nol.AssertionError = $ol$AssertionError;\nol.Collection = $ol$Collection;\nol.Collection.CollectionEvent = _ol_Collection$CollectionEvent;\nol.DataTile = $ol$DataTile;\nol.Disposable = $ol$Disposable;\nol.Feature = $ol$Feature;\nol.Geolocation = $ol$Geolocation;\nol.Geolocation.GeolocationError = _ol_Geolocation$GeolocationError;\nol.Image = $ol$Image;\nol.ImageBase = $ol$ImageBase;\nol.ImageCanvas = $ol$ImageCanvas;\nol.ImageTile = $ol$ImageTile;\nol.Kinetic = $ol$Kinetic;\nol.Map = $ol$Map;\nol.MapBrowserEvent = $ol$MapBrowserEvent;\nol.MapBrowserEventHandler = $ol$MapBrowserEventHandler;\nol.MapEvent = $ol$MapEvent;\nol.Object = $ol$Object;\nol.Object.ObjectEvent = _ol_Object$ObjectEvent;\nol.Observable = $ol$Observable;\nol.Overlay = $ol$Overlay;\nol.Tile = $ol$Tile;\nol.TileCache = $ol$TileCache;\nol.TileQueue = $ol$TileQueue;\nol.TileRange = $ol$TileRange;\nol.VectorRenderTile = $ol$VectorRenderTile;\nol.VectorTile = $ol$VectorTile;\nol.View = $ol$View;\nol.control = {};\nol.control.Attribution = $ol$control$Attribution;\nol.control.Control = $ol$control$Control;\nol.control.FullScreen = $ol$control$FullScreen;\nol.control.MousePosition = $ol$control$MousePosition;\nol.control.OverviewMap = $ol$control$OverviewMap;\nol.control.Rotate = $ol$control$Rotate;\nol.control.ScaleLine = $ol$control$ScaleLine;\nol.control.Zoom = $ol$control$Zoom;\nol.control.ZoomSlider = $ol$control$ZoomSlider;\nol.control.ZoomToExtent = $ol$control$ZoomToExtent;\nol.events = {};\nol.events.Event = $ol$events$Event;\nol.events.Target = $ol$events$Target;\nol.format = {};\nol.format.EsriJSON = $ol$format$EsriJSON;\nol.format.Feature = $ol$format$Feature;\nol.format.GML = $ol$format$GML;\nol.format.GML2 = $ol$format$GML2;\nol.format.GML3 = $ol$format$GML3;\nol.format.GML32 = $ol$format$GML32;\nol.format.GMLBase = $ol$format$GMLBase;\nol.format.GPX = $ol$format$GPX;\nol.format.GeoJSON = $ol$format$GeoJSON;\nol.format.IGC = $ol$format$IGC;\nol.format.IIIFInfo = $ol$format$IIIFInfo;\nol.format.JSONFeature = $ol$format$JSONFeature;\nol.format.KML = $ol$format$KML;\nol.format.MVT = $ol$format$MVT;\nol.format.OSMXML = $ol$format$OSMXML;\nol.format.OWS = $ol$format$OWS;\nol.format.Polyline = $ol$format$Polyline;\nol.format.TextFeature = $ol$format$TextFeature;\nol.format.TopoJSON = $ol$format$TopoJSON;\nol.format.WFS = $ol$format$WFS;\nol.format.WKB = $ol$format$WKB;\nol.format.WKT = $ol$format$WKT;\nol.format.WMSCapabilities = $ol$format$WMSCapabilities;\nol.format.WMSGetFeatureInfo = $ol$format$WMSGetFeatureInfo;\nol.format.WMTSCapabilities = $ol$format$WMTSCapabilities;\nol.format.XML = $ol$format$XML;\nol.format.XMLFeature = $ol$format$XMLFeature;\nol.format.filter = {};\nol.format.filter.And = $ol$format$filter$And;\nol.format.filter.Bbox = $ol$format$filter$Bbox;\nol.format.filter.Comparison = $ol$format$filter$Comparison;\nol.format.filter.ComparisonBinary = $ol$format$filter$ComparisonBinary;\nol.format.filter.Contains = $ol$format$filter$Contains;\nol.format.filter.DWithin = $ol$format$filter$DWithin;\nol.format.filter.Disjoint = $ol$format$filter$Disjoint;\nol.format.filter.During = $ol$format$filter$During;\nol.format.filter.EqualTo = $ol$format$filter$EqualTo;\nol.format.filter.Filter = $ol$format$filter$Filter;\nol.format.filter.GreaterThan = $ol$format$filter$GreaterThan;\nol.format.filter.GreaterThanOrEqualTo = $ol$format$filter$GreaterThanOrEqualTo;\nol.format.filter.Intersects = $ol$format$filter$Intersects;\nol.format.filter.IsBetween = $ol$format$filter$IsBetween;\nol.format.filter.IsLike = $ol$format$filter$IsLike;\nol.format.filter.IsNull = $ol$format$filter$IsNull;\nol.format.filter.LessThan = $ol$format$filter$LessThan;\nol.format.filter.LessThanOrEqualTo = $ol$format$filter$LessThanOrEqualTo;\nol.format.filter.LogicalNary = $ol$format$filter$LogicalNary;\nol.format.filter.Not = $ol$format$filter$Not;\nol.format.filter.NotEqualTo = $ol$format$filter$NotEqualTo;\nol.format.filter.Or = $ol$format$filter$Or;\nol.format.filter.ResourceId = $ol$format$filter$ResourceId;\nol.format.filter.Spatial = $ol$format$filter$Spatial;\nol.format.filter.Within = $ol$format$filter$Within;\nol.geom = {};\nol.geom.Circle = $ol$geom$Circle;\nol.geom.Geometry = $ol$geom$Geometry;\nol.geom.GeometryCollection = $ol$geom$GeometryCollection;\nol.geom.LineString = $ol$geom$LineString;\nol.geom.LinearRing = $ol$geom$LinearRing;\nol.geom.MultiLineString = $ol$geom$MultiLineString;\nol.geom.MultiPoint = $ol$geom$MultiPoint;\nol.geom.MultiPolygon = $ol$geom$MultiPolygon;\nol.geom.Point = $ol$geom$Point;\nol.geom.Polygon = $ol$geom$Polygon;\nol.geom.SimpleGeometry = $ol$geom$SimpleGeometry;\nol.interaction = {};\nol.interaction.DoubleClickZoom = $ol$interaction$DoubleClickZoom;\nol.interaction.DragAndDrop = $ol$interaction$DragAndDrop;\nol.interaction.DragAndDrop.DragAndDropEvent = _ol_interaction_DragAndDrop$DragAndDropEvent;\nol.interaction.DragBox = $ol$interaction$DragBox;\nol.interaction.DragBox.DragBoxEvent = _ol_interaction_DragBox$DragBoxEvent;\nol.interaction.DragPan = $ol$interaction$DragPan;\nol.interaction.DragRotate = $ol$interaction$DragRotate;\nol.interaction.DragRotateAndZoom = $ol$interaction$DragRotateAndZoom;\nol.interaction.DragZoom = $ol$interaction$DragZoom;\nol.interaction.Draw = $ol$interaction$Draw;\nol.interaction.Draw.DrawEvent = _ol_interaction_Draw$DrawEvent;\nol.interaction.Extent = $ol$interaction$Extent;\nol.interaction.Extent.ExtentEvent = _ol_interaction_Extent$ExtentEvent;\nol.interaction.Interaction = $ol$interaction$Interaction;\nol.interaction.KeyboardPan = $ol$interaction$KeyboardPan;\nol.interaction.KeyboardZoom = $ol$interaction$KeyboardZoom;\nol.interaction.Link = $ol$interaction$Link;\nol.interaction.Modify = $ol$interaction$Modify;\nol.interaction.Modify.ModifyEvent = _ol_interaction_Modify$ModifyEvent;\nol.interaction.MouseWheelZoom = $ol$interaction$MouseWheelZoom;\nol.interaction.PinchRotate = $ol$interaction$PinchRotate;\nol.interaction.PinchZoom = $ol$interaction$PinchZoom;\nol.interaction.Pointer = $ol$interaction$Pointer;\nol.interaction.Select = $ol$interaction$Select;\nol.interaction.Select.SelectEvent = _ol_interaction_Select$SelectEvent;\nol.interaction.Snap = $ol$interaction$Snap;\nol.interaction.Translate = $ol$interaction$Translate;\nol.interaction.Translate.TranslateEvent = _ol_interaction_Translate$TranslateEvent;\nol.layer = {};\nol.layer.Base = $ol$layer$Base;\nol.layer.BaseImage = $ol$layer$BaseImage;\nol.layer.BaseTile = $ol$layer$BaseTile;\nol.layer.BaseVector = $ol$layer$BaseVector;\nol.layer.Graticule = $ol$layer$Graticule;\nol.layer.Group = $ol$layer$Group;\nol.layer.Group.GroupEvent = _ol_layer_Group$GroupEvent;\nol.layer.Heatmap = $ol$layer$Heatmap;\nol.layer.Image = $ol$layer$Image;\nol.layer.Layer = $ol$layer$Layer;\nol.layer.MapboxVector = $ol$layer$MapboxVector;\nol.layer.Tile = $ol$layer$Tile;\nol.layer.Vector = $ol$layer$Vector;\nol.layer.VectorImage = $ol$layer$VectorImage;\nol.layer.VectorTile = $ol$layer$VectorTile;\nol.layer.WebGLPoints = $ol$layer$WebGLPoints;\nol.layer.WebGLTile = $ol$layer$WebGLTile;\nol.net = {};\nol.net.ClientError = _ol_net$ClientError;\nol.net.ResponseError = _ol_net$ResponseError;\nol.proj = {};\nol.proj.Projection = $ol$proj$Projection;\nol.render = {};\nol.render.Box = $ol$render$Box;\nol.render.Event = $ol$render$Event;\nol.render.Feature = $ol$render$Feature;\nol.render.VectorContext = $ol$render$VectorContext;\nol.render.canvas = {};\nol.render.canvas.Builder = $ol$render$canvas$Builder;\nol.render.canvas.BuilderGroup = $ol$render$canvas$BuilderGroup;\nol.render.canvas.Executor = $ol$render$canvas$Executor;\nol.render.canvas.ExecutorGroup = $ol$render$canvas$ExecutorGroup;\nol.render.canvas.ImageBuilder = $ol$render$canvas$ImageBuilder;\nol.render.canvas.Immediate = $ol$render$canvas$Immediate;\nol.render.canvas.LineStringBuilder = $ol$render$canvas$LineStringBuilder;\nol.render.canvas.PolygonBuilder = $ol$render$canvas$PolygonBuilder;\nol.render.canvas.TextBuilder = $ol$render$canvas$TextBuilder;\nol.render.webgl = {};\nol.render.webgl.BatchRenderer = $ol$render$webgl$BatchRenderer;\nol.render.webgl.LineStringBatchRenderer = $ol$render$webgl$LineStringBatchRenderer;\nol.render.webgl.MixedGeometryBatch = $ol$render$webgl$MixedGeometryBatch;\nol.render.webgl.PointBatchRenderer = $ol$render$webgl$PointBatchRenderer;\nol.render.webgl.PolygonBatchRenderer = $ol$render$webgl$PolygonBatchRenderer;\nol.renderer = {};\nol.renderer.Composite = $ol$renderer$Composite;\nol.renderer.Layer = $ol$renderer$Layer;\nol.renderer.Map = $ol$renderer$Map;\nol.renderer.canvas = {};\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.Layer = $ol$renderer$canvas$Layer;\nol.renderer.canvas.TileLayer = $ol$renderer$canvas$TileLayer;\nol.renderer.canvas.VectorImageLayer = $ol$renderer$canvas$VectorImageLayer;\nol.renderer.canvas.VectorLayer = $ol$renderer$canvas$VectorLayer;\nol.renderer.canvas.VectorTileLayer = $ol$renderer$canvas$VectorTileLayer;\nol.renderer.webgl = {};\nol.renderer.webgl.Layer = $ol$renderer$webgl$Layer;\nol.renderer.webgl.PointsLayer = $ol$renderer$webgl$PointsLayer;\nol.renderer.webgl.TileLayer = $ol$renderer$webgl$TileLayer;\nol.renderer.webgl.VectorLayer = $ol$renderer$webgl$VectorLayer;\nol.reproj = {};\nol.reproj.DataTile = $ol$reproj$DataTile;\nol.reproj.Image = $ol$reproj$Image;\nol.reproj.Tile = $ol$reproj$Tile;\nol.reproj.Triangulation = $ol$reproj$Triangulation;\nol.source = {};\nol.source.BingMaps = $ol$source$BingMaps;\nol.source.CartoDB = $ol$source$CartoDB;\nol.source.Cluster = $ol$source$Cluster;\nol.source.DataTile = $ol$source$DataTile;\nol.source.GeoTIFF = $ol$source$GeoTIFF;\nol.source.IIIF = $ol$source$IIIF;\nol.source.Image = $ol$source$Image;\nol.source.Image.ImageSourceEvent = _ol_source_Image$ImageSourceEvent;\nol.source.ImageArcGISRest = $ol$source$ImageArcGISRest;\nol.source.ImageCanvas = $ol$source$ImageCanvas;\nol.source.ImageMapGuide = $ol$source$ImageMapGuide;\nol.source.ImageStatic = $ol$source$ImageStatic;\nol.source.ImageWMS = $ol$source$ImageWMS;\nol.source.OGCMapTile = $ol$source$OGCMapTile;\nol.source.OGCVectorTile = $ol$source$OGCVectorTile;\nol.source.OSM = $ol$source$OSM;\nol.source.Raster = $ol$source$Raster;\nol.source.Raster.Processor = _ol_source_Raster$Processor;\nol.source.Raster.RasterSourceEvent = _ol_source_Raster$RasterSourceEvent;\nol.source.Source = $ol$source$Source;\nol.source.Stamen = $ol$source$Stamen;\nol.source.Tile = $ol$source$Tile;\nol.source.Tile.TileSourceEvent = _ol_source_Tile$TileSourceEvent;\nol.source.TileArcGISRest = $ol$source$TileArcGISRest;\nol.source.TileDebug = $ol$source$TileDebug;\nol.source.TileImage = $ol$source$TileImage;\nol.source.TileJSON = $ol$source$TileJSON;\nol.source.TileWMS = $ol$source$TileWMS;\nol.source.UTFGrid = $ol$source$UTFGrid;\nol.source.UTFGrid.CustomTile = _ol_source_UTFGrid$CustomTile;\nol.source.UrlTile = $ol$source$UrlTile;\nol.source.Vector = $ol$source$Vector;\nol.source.Vector.VectorSourceEvent = _ol_source_Vector$VectorSourceEvent;\nol.source.VectorTile = $ol$source$VectorTile;\nol.source.WMTS = $ol$source$WMTS;\nol.source.XYZ = $ol$source$XYZ;\nol.source.Zoomify = $ol$source$Zoomify;\nol.source.Zoomify.CustomTile = _ol_source_Zoomify$CustomTile;\nol.structs = {};\nol.structs.LRUCache = $ol$structs$LRUCache;\nol.structs.LinkedList = $ol$structs$LinkedList;\nol.structs.PriorityQueue = $ol$structs$PriorityQueue;\nol.structs.RBush = $ol$structs$RBush;\nol.style = {};\nol.style.Circle = $ol$style$Circle;\nol.style.Fill = $ol$style$Fill;\nol.style.Icon = $ol$style$Icon;\nol.style.IconImage = $ol$style$IconImage;\nol.style.IconImageCache = $ol$style$IconImageCache;\nol.style.Image = $ol$style$Image;\nol.style.RegularShape = $ol$style$RegularShape;\nol.style.Stroke = $ol$style$Stroke;\nol.style.Style = $ol$style$Style;\nol.style.Text = $ol$style$Text;\nol.tilegrid = {};\nol.tilegrid.TileGrid = $ol$tilegrid$TileGrid;\nol.tilegrid.WMTS = $ol$tilegrid$WMTS;\nol.webgl = {};\nol.webgl.Buffer = $ol$webgl$Buffer;\nol.webgl.Helper = $ol$webgl$Helper;\nol.webgl.PaletteTexture = $ol$webgl$PaletteTexture;\nol.webgl.PostProcessingPass = $ol$webgl$PostProcessingPass;\nol.webgl.RenderTarget = $ol$webgl$RenderTarget;\nol.webgl.ShaderBuilder = {};\nol.webgl.ShaderBuilder.ShaderBuilder = _ol_webgl_ShaderBuilder$ShaderBuilder;\nol.webgl.TileTexture = $ol$webgl$TileTexture;\n\nexport default ol;"],"names":["messages","AssertionError","Error","constructor","code","message","super","this","name","$ol$AssertionError","stopPropagation","evt","$ol$events$Event","type","propagationStopped","defaultPrevented","target","preventDefault","ObjectEventType","$ol$Disposable","disposed","dispose","disposeInternal","ascending","a","b","linearFindNearest","arr","direction","n","length","i","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","TRUE","FALSE","VOID","clear","object","property","isEmpty","$ol$events$Target","Disposable","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","call","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","index","indexOf","splice","EventType$1","listen","thisArg","once","bind","originalListener","apply","arguments","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","on","un","revision_","changed","EventType","getRevision","onInternal","len","onceInternal","ol_key","unInternal","unByKey","prototype","$ol$Observable","abstract","uidCounter_","getUid","obj","ol_uid","String","ObjectEvent","oldValue","$ol$Object","values","values_","setProperties","get","value","hasOwnProperty","getKeys","getProperties","assign","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","CollectionEventType","Property","CollectionEvent","element","Collection","BaseObject","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","forEach","f","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","except","TileState","easeIn","t","Math","pow","easeOut","inAndOut","linear","$ol$Tile","tileCoord","state","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getKey","getInterimTile","tile","getState","refreshInterimChain","getTileCoord","load","getAlpha","id","time","start","delta","inTransition","endTransition","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI_BUG_237906","test","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","error","createCanvasContext2D","width","height","canvasPool","settings","canvas","shift","document","createElement","getContext","releaseCanvas","context","clearRect","outerWidth","offsetWidth","style","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","asImageLike","HTMLCanvasElement","HTMLVideoElement","asArrayLike","Uint8Array","Uint8ClampedArray","Float32Array","DataView","sharedContext","defaultSize","$ol$DataTile","Tile","loader_","loader","data_","error_","size_","size","getSize","imageData","getData","getError","then","catch","assert","assertion","errorCode","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","styles","createStyleFunction","setId","$ol$Feature","tmp_","reset","transform","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","e","coordinate","x","y","rotate","angle","cos","sin","scale","translate","dx","dy","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","mat","transformStringDiv","toString","transformString","join","Relationship","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","dest","slice","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","scaleFromCenter","deltaX","deltaY","applyTransform","transformFn","stops","xs","ys","l","_boundingExtentXYs","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","unitByCode","fromCode","METERS_PER_UNIT","radians","PI","degrees","ft","m","$ol$proj$Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","Projection","units","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","cache","transforms","add","destination","sourceCode","destinationCode","clamp","squaredSegmentDistance","squaredDistance","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","r","lerp","toFixed","decimals","factor","round","ceil","padNumber","number","precision","numberString","decimal","compareVersions","v1","v2","s1","split","s2","n1","n2","closestOnCircle","circle","getRadius","sqrt","closestOnSegment","segment","along","degreesToStringHDMS","hemispheres","fractionDigits","normalizedDegrees","abs","deg","sec","hdms","charAt","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","distance","squaredDistanceToSegment","worldsAway","sourceExtentWidth","getWorldsAway","DEFAULT_RADIUS","getDistance","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","bearing","lon1","dByR","lat","asin","levels","level","warn","args","console","showCoordinateWarning","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","projectionLike","replace","pointResolution","getter","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","projections2","forwardTransform","inverseTransform","transform2D","j","anchor","anchorX","anchorY","k","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","tmpTransform","$ol$geom$Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","fn","lastResult","lastArgs","lastThis","called","nextArgs","arrayEquals","memoizeOne","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","returnOrUpdate","simplify","tolerance","getType","intersectsExtent","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","getStrideForLayout","layout","$ol$geom$SimpleGeometry","Geometry","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","setLayout","nesting","getLayoutForStride","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","jj","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","snap","quantize","quantizeArray","simplifiedEnds","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","endss","coordinatesss","linearRing","twiceArea","linearRings","LinearRing","SimpleGeometry","maxDelta_","maxDeltaRevision_","linearRingArea","$ol$geom$LinearRing","Point","$ol$geom$Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRing","intersectsLinearRingArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","orientLinearRings","reverseCoordinates","orientLinearRingsArray","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","$ol$geom$Polygon","fromExtent","fromCircle","sides","arrayLength","startAngle","makeRegular","GeolocationErrorType","GeolocationError","BaseEvent","$ol$Geolocation","position_","transform_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","position","coords","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","sphereRadius","sphereOffset","circularPolygon","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","$ol$ImageBase","pixelRatio","pixelRatio_","getImage","getPixelRatio","getResolution","ImageState","listenImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","src","$ol$Image","ImageBase","crossOrigin","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$ol$ImageCanvas","canvas_","handleLoad_","err","$ol$ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","ctx","fillStyle","fillRect","getBlankImage","naturalWidth","naturalHeight","$ol$Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","Date","now","lastIndex","firstIndex","duration","getAngle","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","body","appendChild","rgb","fromString","cacheSize","s","g","exec","hasAlpha","substr","startsWith","map","Number","normalize","fromStringInternal_","asArray","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","setSize","maxCacheSize","$ol$style$IconImageCache","shared","LayerProperty","$ol$layer$Base","background_","background","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","layer","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","inView","layerState","viewState","zoom","$ol$layer$Layer","BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","setTimeout","getFeatures","pixel","Promise","resolve","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","getMapInternal","RenderEventType","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","expireIconCache","iconImageCache","$ol$renderer$Map","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","result","feature","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$ol$render$Event","inversePixelTransform","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","display","left","measureAndCacheTextWidth","reduce","curr","drawImageOrLabel","labelOrImage","originX","originY","w","h","save","globalAlpha","setTransform","contextInstructions","label","executeLabelInstructions","drawImage","restore","$ol$renderer$Composite","MapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","RenderEvent","declutterLayers","previousElement","layerIndex","sourceState","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","replaceChildren","GroupEvent","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","$ol$layer$Group","$ol$MapEvent","$ol$MapBrowserEvent","MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","MapBrowserEventType","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","PointerEventType","$ol$MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEvent","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","MapEventType","MapProperty","DROP","$ol$structs$PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$ol$TileQueue","PriorityQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","ViewHint","ViewProperty","CENTER","RESOLUTION","ROTATION","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","cappedMaxRes","disable","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","coordinatesEqual","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","rotX","rotY","$ol$View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","disableCoordinateWarning","applyOptions_","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","power","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","minZoom_","centerConstraint","smoothExtentConstraint","centerNone","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","rotationNone","theta","createSnapToN","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","oldPadding","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","animateInternal","animationCount","series","complete","easing","getResolutionForZoom","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","rotatedExtentForGeometry","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","$ol$control$Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","mapEvent","getElementById","$ol$control$Attribution","Control","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$ol$control$Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","view","getView","contains","$ol$control$Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","InteractionProperty","zoomByDelta","$ol$interaction$Interaction","setActive","getActive","mapBrowserEvent","active","$ol$interaction$DoubleClickZoom","Interaction","delta_","stopEvent","browserEvent","shiftKey","centroid","$ol$interaction$Pointer","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","all","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","getTargetElement","hasAttribute","targetElement","activeElement","focus","always","mouseActionButton","never","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","$ol$interaction$DragPan","PointerInteraction","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroidFromPointers","scaleCoordinate","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","$ol$interaction$DragRotate","lastAngle_","$ol$render$Box","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","top","getOverlayContainer","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","$ol$interaction$DragBox","box_","RenderBox","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$ol$interaction$DragZoom","DragBox","out_","out","KeyCode","$ol$interaction$KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","mapUnitsDelta","pan","$ol$interaction$KeyboardZoom","charCode","charCodeAt","$ol$interaction$MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$ol$interaction$PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","$ol$interaction$PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","num","hasArea","toSize","removeLayerMapProperty","Layer","setLayerMapProperty","$ol$Map","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","View","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","Zoom","zoomOptions","Rotate","rotateOptions","attribution","Attribution","attributionOptions","defaultControls","Kinetic","altShiftDragRotate","DragRotate","doubleClickZoom","DoubleClickZoom","zoomDelta","zoomDuration","dragPan","DragPan","pinchRotate","PinchRotate","pinchZoom","PinchZoom","keyboard","KeyboardPan","KeyboardZoom","mouseWheelZoom","MouseWheelZoom","shiftDragZoom","DragZoom","defaultInteractions","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","TileQueue","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","getAllLayers","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","unobserve","ShadowRoot","host","CompositeMapRenderer","MapBrowserEventHandler","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","equalsExtent","setLayerGroup","oldLayerGroup","computedStyle","parseFloat","getClientRects","oldSize","$ol$Overlay","insertFirst","autoPan","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","$ol$structs$LRUCache","highWaterMark","count_","entries_","oldest_","newest_","expireCache","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","fromKey","hash","$ol$TileCache","LRUCache","pruneExceptNewestZ","TileRange","containsTileRange","tileRange","$ol$TileRange","$ol$VectorRenderTile","urlTileCoord","getSourceTiles","context_","executorGroups","declutterExecutorGroups","loadingSourceTiles","hitDetectionImageData","replayState_","sourceTiles","errorTileKeys","wantedResolution","wrappedTileCoord","hasContext","getReplayState","dirty","renderedRenderOrder","renderedResolution","renderedRevision","renderedTileResolution","renderedTileRevision","renderedTileZ","$ol$VectorTile","format","format_","features_","url_","getFormat","onLoad","dataProjection","setFeatures","onError","setLoader","jsonp","url","errback","callbackParam","script","cleanup","async","timer","head","ResponseError","response","status","ClientError","client","getJSON","reject","XMLHttpRequest","JSON","parse","responseText","open","setRequestHeader","send","resolveUrl","base","URL","href","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","STATIC_DRAW","DYNAMIC_DRAW","CONTEXT_IDS","attributes","preserveDrawingBuffer","antialias","BufferUsage","getArrayClassForType","Uint32Array","$ol$webgl$Buffer","usage","ofSize","fromArray","from","fromArrayBuffer","getUsage","ContextEventType","$ol$webgl$PostProcessingPass","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","bufferData","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetOpacityLocation_","renderTargetTextureLocation_","uniforms_","uniforms","location","getGL","init","textureSize","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","viewport","internalFormat","RGBA","UNSIGNED_BYTE","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","nextPass","preCompose","postCompose","activeTexture","TEXTURE0","canvasId","getContextAttributes","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","uniform1f","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","ImageData","texture","uniform3f","uniform4f","fromTransform","mat4","DefaultUniform","AttributeType","UNSIGNED_SHORT","UNSIGNED_INT","canvasCache","getSharedCanvasCacheKey","uniqueCanvasCacheKeyCount","getByteSizeFromType","BYTES_PER_ELEMENT","Uint16Array","$ol$webgl$Helper","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","canvasCacheKey_","canvasCacheKey","getUniqueCanvasCacheKey","cacheItem","users","getCanvas","bufferCache_","extensionCache_","currentProgram_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocations_","attribLocations_","setUniforms","postProcessPasses_","postProcesses","WebGLPostProcessingPass","shaderCompileErrors_","canvasCacheKeyMatches","getExtension","bufferKey","bufferCache","webGlBuffer","flushBufferData","deleteBuffer","buf","bufferCacheEntry","isContextLost","loseContext","prepareDraw","disableAlphaBlend","ZERO","prepareDrawToRenderTarget","renderTarget","getFramebuffer","getTexture","drawElements","elementType","numItems","offsetInBytes","finalizeDraw","applyFrameState","offsetScaleMatrix","resetTransform","scaleTransform","offsetRotateMatrix","rotateTransform","setUniformMatrixValue","setUniformFloatValue","setUniformFloatVec2","HTMLImageElement","prevValue","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","getProgramParameter","LINK_STATUS","getAttributeLocation","makeProjectionTransform","uniform2fv","setUniformFloatVec4","uniform4fv","uniformMatrix4fv","enableAttributeArray_","attribName","enableAttributes","attr","computeAttributesStride","$ol$webgl$PaletteTexture","texture_","NEAREST","TEXTURE_MAG_FILTER","tmpArray4","$ol$webgl$RenderTarget","helper","helper_","framebuffer_","dataCacheDirty_","updateSize_","clearCachedData","readAll","readPixels","readPixel","$ol$reproj$Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","u2","beginPath","moveTo","lineTo","closePath","clip","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","triangulation","sources","gutter","renderEdges","imageSmoothingEnabled","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","getImageData","isBrokenDiagonalRendering","steps","ud","vd","step","strokeStyle","lineWidth","stroke","$ol$reproj$DataTile","DataTile","gutter_","reprojData_","reprojError_","reprojSize_","sourceTileGrid_","sourceTileGrid","targetTileGrid_","targetTileGrid","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","Triangulation","getZForResolution","sourceRange","getTileRangeForExtentAndZ","getTile","getTileFunction","srcX","srcY","reproject_","dataSources","tileData","arrayData","willReadFrequently","toArray","pixelSize","isFloat","pixelCount","DataType","tileDataR","bytesPerElement","bytesPerPixel","bytesPerRow","byteLength","bandCount","packedLength","packedData","dataIndex","rowOffset","colCount","rowIndex","colIndex","dataType","getTileSize","targetWidth","targetHeight","dataR","dataU","reproj","dataSource","createImageData","putImageData","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","$ol$reproj$Tile","renderEdges_","bindAndConfigure","resampleFilter","uploadDataTexture","textureType","canInterpolate","unpackAlignment","LUMINANCE","LUMINANCE_ALPHA","RGB","oldUnpackAlignment","getParameter","UNPACK_ALIGNMENT","pixelStorei","pixelContext","$ol$webgl$TileTexture","textures","renderSize_","grid","WebGLArrayBuffer","setTile","uploadTile_","ImageTile","ReprojTile","uploadImageTexture","sourceTileSize","textureCount","textureDataArrays","textureIndex","dataValue","pixelIndex","bandIndex","textureData","deleteTexture","getImagePixelData_","renderCol","renderRow","renderWidth","renderHeight","sourceWidthWithoutGutter","sourceHeightWithoutGutter","sourceCol","sourceRow","getArrayPixelData_","sourceSize","sourceWidth","sourceHeight","getPixelData","$ol$renderer$Layer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","createLoadedTileFinder","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","imageState","WebGLLayerRenderer","LayerRenderer","inversePixelTransform_","pixelContext_","postProcesses_","removeHelper","dispatchPreComposeEvent","dispatchPostComposeEvent","incrementGroup","groupNumber","layerClassName","WebGLHelper","afterHelperCreated","prepareFrameInternal","dispatchRenderEvent_","preRender","postRender","$ol$renderer$webgl$Layer","Uniforms","Attributes","attributeDescriptions","empty","depthForZ","addTileTextureToLookup","tileTexturesByZ","tileTexture","getRenderExtent","gridExtent","getTileGridForProjection","getCacheKey","getTileCoordKey","$ol$renderer$webgl$TileLayer","tileLayer","renderComplete","tileTransform_","tempMat4_","tempTileRange_","tempTileCoord_","createTileCoord","tempSize_","program_","vertexShader_","fragmentShader_","indices_","tileTextureCache_","paletteTextures_","paletteTextures","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","clearCache","enqueueTiles","initialZ","preload","tileSource","getGutterForProjection","tileTextureCache","minZ","zDirection","cacheKey","TileTexture","tileQueueKey","getTileCoordCenter","getPreload","targetZ","alphaLookup","uid","blend","tileTextures","ReprojDataTile","alpha","findAltTiles_","parentZ","zs","tileZ","tileSize","tileOrigin","getOrigin","tileWidthWithGutter","tileHeightWithGutter","aspectRatio","centerI","centerJ","tileScale","depth","tileCoordKey","tileCenterI","tileCenterJ","translateTransform","mat4FromTransform","textureProperty","uniformName","paletteIndex","paletteTexture","gutterExtent","updateCacheSize","layerExtent","getSources","getTileCoordForCoordAndZ","col","row","altZ","getTileRangeForTileCoordAndZ","covered","deleteProgram","ValueTypes","Operators","getValueType","stringify","valueArr","every","v","operator","getReturnType","numberToGlsl","arrayToGlsl","getStringNumberEquivalent","string","stringLiteralsMap","expressionToGlsl","typeHint","toGlsl","valueType","stringToGlsl","colorToGlsl","assertNumber","assertNumbers","assertString","assertBoolean","assertArgsCount","assertArgsMinCount","assertArgsMaxCount","assertArgsEven","assertUniqueInferredType","types","uniformNameForVariable","variableName","inFragmentShader","variables","colors","numColors","palette","candidate","paletteName","PaletteTexture","GET_BAND_VALUE_FUNC","getEqualOperator","getDecisionOperator","arg","band","functions","ifBlocks","colorIndex","parsedArgs","interpolation","outputType","exponent","stop1","output1","stop2","fallback","assertArgsOdd","ShaderBuilder","varyings","sizeExpression","rotationExpression","offsetExpression","colorExpression","texCoordExpression","discardExpression","rotateWithView","addUniform","addAttribute","addVarying","expression","setSizeExpression","setRotationExpression","setSymbolOffsetExpression","setColorExpression","setTextureCoordinateExpression","setFragmentDiscardExpression","setSymbolRotateWithView","getSizeExpression","getOffsetExpression","getColorExpression","getTextureCoordinateExpression","getFragmentDiscardExpression","getSymbolVertexShader","forHitDetection","offsetMatrix","concat","attribute","varying","getSymbolFragmentShader","hitDetectionBypass","tmpTileCoord","$ol$tilegrid$TileGrid","strict","compare","currentVal","res","isSorted","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileCoordChildTileRange","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordResolution","getFullTileRange","opt_direction","tileCoordIntersectsViewport","fullTileRanges","$ol$tilegrid$WMTS","TileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","ImageStyle","opacity_","rotateWithView_","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getHitDetectionImage","getImageState","getImageSize","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$ol$style$Image","asColorLike","RegularShape","hitDetectionCanvas_","fill_","fill","points","radius_","radius1","radius2_","radius2","stroke_","renderOptions_","getFill","getPoints","getRadius2","getStroke","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","lineDash","lineDashOffset","getColor","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","maxRadius","createPath_","setLineDash","drawHitDetectionCanvas_","arc","angle0","radiusC","$ol$style$RegularShape","CircleStyle","setRadius","$ol$style$Circle","Fill","color_","setColor","$ol$style$Fill","taintedTestContext","IconImage","hitDetectionImage_","imageState_","tainted_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","$ol$style$IconImage","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize_","imgSize","iconImage_","getIconImage","offset_","offsetOrigin_","offsetOrigin","width_","height_","updateScaleFromWidthAndHeight","setAnchor","iconImageSize","setWidth","setHeight","widthScale","heightScale","$ol$style$Icon","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","$ol$style$Stroke","Style","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setText","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","$ol$style$Style","Text","font_","textAlign_","textAlign","justify_","justify","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","$ol$style$Text","$ol$structs$LinkedList","circular","first_","last_","head_","circular_","length_","insertItem","next","removeItem","firstItem","lastItem","nextItem","getNextItem","prevItem","getPrevItem","getCurrItem","setFirstItem","list","quickselect","quickselectStep","defaultCompare","sd","swap","RBush","maxEntries","_maxEntries","_minEntries","_all","search","bbox","toBBox","nodesToSearch","child","childBBox","leaf","collides","insert","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","indexes","goingUp","findItem","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","targetNode","minEnlargement","bboxArea","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","bboxMargin","siblings","p","destNode","mid","$ol$structs$RBush","rbush_","RBush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","rbush","TileEventType","adaptAttributions","attributionLike","$ol$source$Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getInterpolate","refresh","setAttributions","getForProjection","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","createXYZ","xyzOptions","gridOptions","half","TileSourceEvent","$ol$source$Tile","Source","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","TileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getOpaque","getTileGrid","getTilePixelRatio","getTilePixelSize","scaleSize","getTileCoordForTileUrlFunction","withinExtentAndZ","tileCount","useTile","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","nullTileUrlFunction","expandUrl","urls","startCharCode","stopCharCode","fromCharCode","stop","UrlTile","TileSource","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","setTileLoadFunction","setTileUrlFunction","$ol$source$UrlTile","defaultTileLoadFunction","imageTile","$ol$source$TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","tileUrl","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$ol$source$BingMaps","TileImage","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","requestJSONP","handleImageryMetadataResponse","getApiKey","getImagerySet","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","digits","mask","quadKey","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","$ol$source$XYZ","$ol$source$CartoDB","XYZ","account_","account","mapId_","config_","config","templateCache_","initializeMap_","getConfig","updateConfig","setConfig","paramHash","applyTemplate_","mapUrl","handleInitResponse_","handleInitError_","tilesUrl","cdn_url","https","layergroupid","VectorEventType","loadFeaturesXhr","success","failure","xhr","responseType","withCredentials","onload","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","addFeatures","VectorSourceEvent","$ol$source$Vector","overlaps_","overlaps","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","wrapAndSliceX","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","featureChangeKeys","removed","$ol$source$Cluster","VectorSource","interpolationRatio","geometryFunction","createCustomCluster_","createCluster","boundRefresh_","updateDistance","setDistance","setMinDistance","getMinDistance","cluster","mapDistance","clustered","neighbors","neighbor","searchCenter","$ol$source$DataTile","tileGridForProjection_","tileCacheForProjection_","setTileSizes","getReprojTile_","reprojTilePixelRatio","sourceLoader","promiseGetter","readRGB","preference","getSamplesPerPixel","interpretation","fileDirectory","PhotometricInterpretation","interpretations","GeoTIFF","globals","photometricInterpretations","CMYK","YCbCr","CIELab","ICCLab","STATISTICS_MAXIMUM","STATISTICS_MINIMUM","workerPool","getBoundingBox","_","ImageWidth","ImageLength","referenceImage","ImageHeight","geoKeys","ProjectedCSTypeGeoKey","getCachedProjection","unitsFromCode","ProjLinearUnitsGeoKey","GeographicTypeGeoKey","GeogAngularUnitsGeoKey","getImagesForTIFF","tiff","getImageCount","requests","getImagesForSource","request","blob","fromBlob","overviews","fromUrls","fromUrl","assertEqual","expected","got","rejector","getMaxForDataType","Int8Array","Int16Array","Int32Array","GeoTIFFSource","sourceInfo_","numSources","sourceOptions_","sourceOptions","sourceImagery_","sourceMasks_","resolutionFactors_","samplesPerPixel_","nodataValues_","metadata_","normalize_","addAlpha_","convertToRGB_","convertToRGB","configure_","logError","determineProjection","firstSource","commonRenderTileSizes","commonSourceTileSizes","samplesPerPixel","nodataValues","metadata","sourceCount","sourceIndex","images","masks","NewSubfileType","imageCount","sourceOrigin","sourceTileSizes","renderTileSizes","sourceResolutions","imageIndex","nodataValue","getGDALNoData","getGDALMetadata","wantedSamples","bands","imageResolutions","getTileWidth","getTileHeight","resolutionFactor","scaledSourceResolutions","reverse","sourceImagery","unshift","outer","nodata","loadTile_","sourceInfo","pool","Pool","pixelBounds","samples","fillValue","bandNumber","sampleIndex","readOptions","interleave","readRasters","maskIndex","composeTile_","sourceSamples","addAlpha","dataLength","transparent","gain","bias","stats","sourceValue","nodataIsNaN","$ol$source$GeoTIFF","CustomTile","zoomifyImage_","$ol$source$Zoomify","tierSizeCalculation","tierSizeInTiles","tileSizeForTierSizeCalculation","tileCountUpToTier","tileWidth","tileIndex","localContext","TileGroup","ZoomifyTileClass","testTileUrl","Versions","IIIF_PROFILE_VALUES","level0","supports","formats","qualities","level1","level2","COMPLIANCE_VERSION1","COMPLIANCE_VERSION2","COMPLIANCE_VERSION3","versionFunctions","iiifInfo","levelProfile","getComplianceLevelSupportedFeatures","imageInfo","scale_factors","tile_width","tile_height","additionalProfile","profile","profileSupports","profileFormats","profileQualities","scaleFactors","extraFormats","preferredFormat","preferredFormats","acc","extraFeatures","extraQualities","$ol$format$IIIFInfo","setImageInfo","getImageApiVersion","getComplianceLevelEntryFromProfile","identifier","version","getComplianceLevelFromProfile","complianceLevel","getTileSourceOptions","preferredOptions","imageOptions","quality","formatPercentage","percentage","toLocaleString","maximumFractionDigits","$ol$source$IIIF","partialOptions","baseUrl","lastIndexOf","supportsListedSizes","supportsListedTiles","isInteger","supportsArbitraryTiling","tileHeight","LN2","maxScaleFactor","ignoredSizesIndex","IiifTileClass","regionParam","sizeParam","tileX","tileY","regionX","regionY","regionW","regionH","sizeW","sizeH","regionWidth","regionHeight","$ol$reproj$Image","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEventType","ImageSourceEvent","defaultImageLoadFunction","$ol$source$Image","reprojectedImage_","reprojectedRevision_","setResolutions","findNearestResolution","getImageInternal","ReprojImage","handleImageChange","appendParams","uri","params","keyParams","encodeURIComponent","qs","$ol$source$ImageArcGISRest","ImageSource","params_","imageSize_","renderedRevision_","ratio_","getParams","F","FORMAT","TRANSPARENT","halfWidth","halfHeight","imageResolution","getRequestUrl_","ImageWrapper","getImageLoadFunction","srid","modifiedUrl","setImageLoadFunction","updateParams","$ol$source$ImageCanvas","canvasFunction_","canvasFunction","canvasElement","ImageCanvas","$ol$source$ImageMapGuide","displayDpi_","displayDpi","useOverlay_","useOverlay","dpi","mcsW","mcsH","devW","devH","mpp","baseParams","OPERATION","VERSION","LOCALE","CLIENTAGENT","CLIP","SETDISPLAYDPI","SETDISPLAYWIDTH","SETDISPLAYHEIGHT","SETVIEWSCALE","SETVIEWCENTERX","SETVIEWCENTERY","$ol$source$ImageStatic","imageExtent_","imageExtent","imageSize","getImageExtent","extentWidth","extentHeight","DEFAULT_VERSION","GETFEATUREINFO_IMAGE_SIZE","$ol$source$ImageWMS","v13_","updateV13_","serverType_","serverType","getFeatureInfoUrl","projectionObj","sourceProjectionObj","SERVICE","REQUEST","QUERY_LAYERS","getLegendUrl","LAYERS","mpu","viewExtent","requestExtent","knownMapMediaTypes","knownVectorMediaTypes","parseTileMatrixSet","tileMatrixSet","tileUrlTemplate","tileMatrixSetLimits","crs","backwards","matrices","tileMatrices","matrixLookup","matrix","limitLookup","limit","tileMatrix","pointOfOrigin","cellSize","matrixWidth","matrixHeight","tileMapWidth","minTileCol","maxTileCol","tileMapHeight","cornerOfOrigin","minTileRow","maxTileRow","intersectExtents","urlTemplate","urlFunction","upsideDown","tileCol","tileRow","parseTileSetMetadata","tileSet","links","mediaType","fallbackUrlTemplate","link","rel","getMapTileUrlTemplate","supportedMediaTypes","hrefLookup","supportedMediaType","getVectorTileUrlTemplate","tileMatrixSetLink","find","tileMatrixSetDefinition","getTileSetInfo","$ol$source$OGCMapTile","handleTileSetInfo_","handleError_","tileSetInfo","$ol$source$VectorTile","defaultLoadFunction","sourceTileCache","tileGrids_","sourceTile","tileFeatures","usedSourceTiles","substring","getCacheKeyForTileKey","bufferExtent","sourceZ","sourceTileCoord","sourceTileState","listenChange","sourceTileKey","coordKey","tileExtent","VectorRenderTile","DEFAULT_MAX_ZOOM","$ol$source$OGCVectorTile","VectorTile","ATTRIBUTION","$ol$source$OSM","$ol$layer$BaseImage","$ol$renderer$canvas$Layer","tempTransform","pixelTransform","containerReused","useContainer","backgroundColor","firstElementChild","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","getRenderTransform","$ol$renderer$canvas$ImageLayer","CanvasLayerRenderer","imageLayer","viewResolution","imageSource","renderedExtent","imageMapWidth","imageMapHeight","imagePixelRatio","viewCenter","canvasTransform","toTransformString","clipped","dw","dh","previousAlpha","$ol$layer$Image","BaseImageLayer","CanvasImageLayerRenderer","TileProperty","$ol$layer$BaseTile","setPreload","setUseInterimTilesOnError","$ol$renderer$canvas$TileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","clips","clipZs","currentClip","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","tileCallback","$ol$layer$Tile","BaseTileLayer","CanvasTileLayerRenderer","hasImageData","createMinion","operation","workerHasImageData","newWorkerImageData","buffers","meta","imageOps","numBuffers","numBytes","arrays","pixels","createWorker","onMessage","lines","lib","worker","Worker","Blob","Buffer","createObjectURL","Processor","threads","_imageOps","workers","_onWorkerMessage","minion","terminated","postMessage","terminate","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","_enqueue","_dispatch","job","slices","_resolveJob","newImageData","RasterEventType","RasterSourceEvent","RasterSource","processor_","operationType_","operationType","threads_","layers_","createLayer","createLayers","useResolutions_","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","sourceAttribution","setOperation","updateFrameState_","allSourcesReady_","processSources_","imageDatas","onWorkerComplete_","layerOrSource","TileLayer","ImageLayer","$ol$source$Raster","ATTRIBUTIONS","OSM_ATTRIBUTION","LayerConfig","terrain","toner","watercolor","ProviderConfig","$ol$source$Stamen","provider","providerConfig","layerConfig","$ol$source$TileArcGISRest","getKeyForParams_","$ol$source$TileDebug","strokeRect","strokeText","fillText","$ol$source$TileJSON","tileJSON_","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","attributionExtent","$ol$source$TileWMS","bufferSize","preemptive","preemptive_","grid_","keys_","jsonp_","xRelative","yRelative","forDataAtCoordinate","loadInternal_","json","$ol$source$UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","$ol$source$WMTS","requestEncoding","version_","dimensions_","dimensions","matrixSet_","matrixSet","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","tilematrixset","Service","Request","Version","Format","TileMatrix","TileCol","TileRow","toStyle","flatStyle","prefix","iconSrc","iconImg","shapePoints","circleRadius","Circle","$ol$layer$BaseVector","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleLike","styleFunction","toStyleFunction","WebGLWorkerMessageType","earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","triangles","steiner","getLeftmost","compareX","eliminateHole","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","filterPoints","again","ear","zOrder","prevZ","nextZ","q","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","ax","bx","cx","ay","by","cy","pointInTriangle","maxZ","locallyInside","isValidDiagonal","splitPolygon","hole","bridge","hx","hy","qx","mx","my","tanMin","sectorContainsSector","findHoleBridge","bridgeReverse","leftmost","py","intersectsPolygon","inside","middleInside","p1","p2","q1","q2","o1","sign","o2","o3","o4","onSegment","Node","an","bp","sum","colorEncodeId","radix","divide","create","exports","earcutExports","default","deviation","polygonArea","trianglesArea","flatten","holes","holeIndex","$ol$renderer$webgl$PointsLayer","projectionMatrixTransform","sourceRevision_","verticesBuffer_","hitVerticesBuffer_","indicesBuffer_","hitDetectionEnabled_","hitFragmentShader","hitVertexShader","hitVertexShader_","hitFragmentShader_","hitProgram_","customAttributes","hitDetectionAttributes","currentTransform_","renderTransform_","invertRenderTransform_","renderInstructions_","hitRenderInstructions_","hitRenderTarget_","generateBuffersRun_","worker_","createWebGLWorker","received","projectionTransform","hitDetection","vertexBuffer","indexBuffer","makeInverseTransform","renderInstructions","generateBuffersRun","featureCache_","featureCount_","sourceListenKeys_","handleSourceFeatureAdded_","handleSourceFeatureChanged_","handleSourceFeatureDelete_","handleSourceFeatureClear_","WebGLRenderTarget","endWorld","startWorld","world","renderCount","multiplyTransform","renderHitDetection","vectorSource","viewNotMoving","sourceChanged","BaseVector","rebuildBuffers_","totalInstructionsCount","totalHitInstructionsCount","featureCache","tmpCoords","tmpColor","hitColor","renderIndex","hitIndex","featureUid","customAttributesCount","hitMessage","mult","colorDecodeId","workerMessageCounter","$ol$render$webgl$BatchRenderer","rebuild","batch","geometryType","renderInstructionsTransform","generateRenderInstructions","generateBuffers_","currentTransform","invertVerticesBufferTransform","verticesBuffer","indicesBuffer","messageId","messageType","handleMessage","verticesBufferTransform","SEGMENT_START","SEGMENT_END","PARAMETERS","$ol$render$webgl$LineStringBatchRenderer","AbstractBatchRenderer","verticesCount","geometriesCount","flatCoords","entries","batchEntry","flatCoordss","kk","$ol$render$webgl$MixedGeometryBatch","polygonBatch","ringsCount","pointBatch","lineStringBatch","addGeometry_","addFeatureEntryInPointBatch_","addFeatureEntryInLineStringBatch_","addFeatureEntryInPolygonBatch_","ringsVerticesCounts","clearFeatureEntryInPointBatch_","clearFeatureEntryInLineStringBatch_","clearFeatureEntryInPolygonBatch_","getGeometries","geom","getPolygons","getLineStrings","line","polygonGeom","ringsVerticesCount","ind","ring","pointGeom","lineGeom","changeFeature","POSITION","INDEX","$ol$render$webgl$PointBatchRenderer","$ol$render$webgl$PolygonBatchRenderer","packColor","DECODE_COLOR_EXPRESSION","FILL_VERTEX_SHADER","STROKE_VERTEX_SHADER","POINT_VERTEX_SHADER","toAttributesArray","$ol$renderer$webgl$VectorLayer","fillAttributes","strokeAttributes","pointAttributes","fillVertexShader_","fillFragmentShader_","fillAttributes_","strokeVertexShader_","strokeFragmentShader_","strokeAttributes_","pointVertexShader_","pointFragmentShader_","pointAttributes_","batch_","MixedGeometryBatch","polygonRenderer_","PolygonBatchRenderer","pointRenderer_","PointBatchRenderer","lineStringRenderer_","LineStringBatchRenderer","remaining","rebuildCb","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","CanvasInstruction","$ol$render$VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","$ol$render$canvas$Builder","VectorContext","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$ol$render$canvas$ImageBuilder","CanvasBuilder","imagePixelRatio_","anchorX_","anchorY_","originX_","originY_","declutterImageWithText_","myBegin","sharedData","$ol$render$canvas$LineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$ol$render$canvas$PolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","$ol$render$canvas$TextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryWidths","getFlatMidpoint","getFlatMidpoints","getFlatInteriorPoints","beg","saveTextStates_","p0","p3","flatEnd","flatOffset","o","oo","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Default","Builder","ImageBuilder","LineString","LineStringBuilder","TextBuilder","$ol$render$canvas$BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","lineStringLength","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","$ol$render$canvas$Executor","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","chunks","widths","heights","lineWidths","baseStyle","currentWidth","currentHeight","getTextDimensions","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","pixelCoordinates","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","execute","executeHitDetection","ORDER","circlePixelIndexArrayCache","$ol$render$canvas$ExecutorGroup","allInstructions","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","Executor","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","maxDistanceSq","distances","getPixelIndexArray","idx","executor","builderTypes","$ol$render$canvas$Immediate","userTransform","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","moveToLineTo_","close","drawRings_","simpleGeometry","transformGeom2D","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","CanvasImmediateRenderer","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","hitDetect","resultFeatures","GEOMETRY_RENDERERS","builderGroup","declutterBuilderGroup","imageBuilderGroup","imageReplay","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","renderGeometry","renderFeatureInternal","$ol$renderer$canvas$VectorLayer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","compositionContext_","renderWorlds","executorGroup","setupCompositionContext_","compositionContext","releaseCompositionContext_","makeScale","transformToString","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","getSquaredRenderTolerance","userExtent","replayGroupInstructions","ExecutorGroup","$ol$renderer$canvas$VectorImageLayer","vectorRenderer_","CanvasVectorLayerRenderer","layerImageRatio_","getImageRatio","coordinateToVectorPixelTransform_","renderedPixelToCoordinateTransform_","vectorPixel","vectorRenderer","imageLayerState","imageFrameState","emptyImage","IMAGE_REPLAYS","hybrid","vector","VECTOR_REPLAYS","$ol$renderer$canvas$VectorTileLayer","renderedLayerRevision_","tmpTransform_","prepareTile","updateExecutorGroup_","tileImageNeedsRender_","hifi","getRenderMode","renderTileImage_","layerRevision","builderState","layerUid","tt","sourceTileExtent","sharedExtent","builderExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","CanvasExecutorGroup","found","tilePixel","accumulator","getTileRenderTransform","worldOffset","renderMode","replayTypes","replayState","renderPixelRatio","renderScale","pixelScale","setCenterAndRadius","getRadiusSquared_","$ol$geom$Circle","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","cloneGeometries","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","$ol$geom$GeometryCollection","interpolatePoint","cumulativeLengths","haystack","needle","comparator","cmp","low","high","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","getCoordinateAtM","getCoordinateAt","$ol$geom$LineString","lineStrings","appendLineString","multiLineString","lineStringsCoordinateAtM","getLineString","midpoints","douglasPeuckerArray","intersectsLineStringArray","$ol$geom$MultiLineString","appendPoint","multiPoint","getPoint","$ol$geom$MultiPoint","linearRingss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","thisLayout","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingssArea","linearRingssCenter","getInteriorPoints","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","$ol$geom$MultiPolygon","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","midpoint","$ol$render$Feature","$ol$layer$Vector","BaseVectorLayer","geoA","geoB","geoStack","fractionStack","fractions","geoM","fracA","fracB","fracM","maxIterations","DEFAULT_STROKE_STYLE","INTERVALS","$ol$layer$Graticule","VectorLayer","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","maxLat_","maxLon_","minLat_","minLon_","maxX_","maxY_","minX_","minY_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","bottomLeft_","bottomRight_","topLeft_","topRight_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleBase_","lonLabelStyle_","latLabelStyleBase_","latLabelStyle_","drawLabels_","intervals_","loaderFunction","strategyFunction","featurePool_","lineStyle_","loadedExtent_","realWorldExtent","renderExtent","equivalentProjection","updateProjectionInfo_","createGraticule_","featuresColl","poolIndex","addMeridian_","lon","minLat","maxLat","getMeridian_","addParallel_","minLon","maxLon","getParallel_","rotationCenter","rotationExtent","unrotatedWidth","unrotatedHeight","labelsAtStart","vectorContext","CanvasRenderingContext2D","canvasPixelRatio","getVectorContext","textPoint","getMeridianPoint_","getParallelPoint_","getInterval_","validCenterP","centerLonLat","centerLon","centerLat","cnt","validExtentP","validExtent","clampedLat","frac","meridian","clampedBottom","clampedTop","getMeridians","lon2","parallel","clampedLeft","clampedRight","getParallels","toLonLatTransform","lonLatCoordinates","worldExtentP","DEFAULT_GRADIENT","$ol$layer$Heatmap","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weightFunction_","getBlur","getGradient","createLinearGradient","addColorStop","createGradient","WebGLPointsLayerRenderer","u_size","u_blurSlope","u_gradientTexture","u_opacity","$ol$format$Feature","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","transformed","transformExtentWithOptions","ieee754","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","pbf","Pbf","require$$0","ArrayBuffer","isView","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","readPackedEnd","readVarint","toNum","isSigned","makeRoomForExtraLength","startPos","extraLen","realloc","writePackedVarint","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","readInt32","destroy","readFields","readField","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","read","readDouble","readVarintRemainder","readVarint64","readSVarint","readBoolean","readString","subarray","readUtf8TextDecoder","str","b3","b0","bytesPerSequence","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","writeUtf8","writeBytes","writeRawMessage","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","layersPBFReader","layerPBFReader","featurePBFReader","readRawFeature","$ol$format$MVT","FeatureFormat","featureClass_","featureClass","geometryName","layerName_","layerName","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","prevEndIndex","inflateEnds","ctor","PBF","pbfLayers","pbfLayer","$ol$layer$VectorTile","renderMode_","CanvasVectorTileLayerRenderer","ErrorEvent","$ol$layer$MapboxVector","VectorTileLayer","VectorTileSource","MVT","accessToken","styleUrl","olms","applyStyle","applyBackground","$ol$layer$VectorImage","imageRatio","imageRatio_","CanvasVectorImageLayerRenderer","$ol$layer$WebGLPoints","parseResult_","symbStyle","symbol","texCoord","textureCoord","vertContext","parsedSize","parsedOffset","parsedTexCoord","parsedRotation","fragContext","parsedColor","parsedOpacity","opacityFilter","visibleSize","symbolType","st","builder","parsedFilter","varName","attrName","attributeName","props","parseLiteralStyle","styleVariables_","hitDetectionDisabled_","disableHitDetection","updateStyleVariables","parseStyle","pipeline","contrast","exposure","saturation","gamma","brightness","numVariables","uniformDeclarations","functionDefintions","WebGLTileLayer","sources_","renderedSource_","handleSourceUpdate_","getSourceBandCount_","MAX_SAFE_INTEGER","parsedStyle","WebGLTileLayerRenderer","renderSources","onChange","altSources","$ol$layer$WebGLTile","DragAndDropEventType","DragAndDropEvent","file","$ol$interaction$DragAndDrop","readAsBuffer_","formats_","formatConstructors","dropListenKeys_","source_","handleResult_","tryReadFeatures_","registerListeners_","dropArea","handleDrop","handleStop","unregisterListeners_","files","dataTransfer","reader","FileReader","readAsArrayBuffer","readAsText","dropEffect","$ol$interaction$DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","DrawEventType","DrawEvent","getSquaredDistance","getCoordinate","getCumulativeSquaredDistance","endIndex","lowIndex","highIndex","lowWholeIndex","highWholeIndex","interpolateCoordinate","appendGeometryTraceTargets","targets","appendTraceTarget","polys","sharedUpdateInfo","getPointSegmentRelationship","sharedRel","getDefaultStyleFunction","$ol$interaction$Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","snapTolerance_","snapTolerance","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryLayout_","geometryLayout","mode","squaredLength","squaredCoordinateDistance","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","freehandCondition_","freehand","freehandCondition","traceCondition_","setTrace","trace","traceState_","traceSource_","traceSource","updateState_","getOverlay","move","addToDrawing_","startDrawing_","deactivateTrace_","toggleTraceState_","getTraceTargets","startPx","targetIndex","addOrRemoveTracedCoordinates_","previouslyForward","addTracedCoordinates_","removeTracedCoordinates_","fromIndex","toIndex","removeLastPoints_","appendCoordinates","updateTrace_","traceState","updatedTraceTarget","closestTargetDistance","newTargetIndex","newEndIndex","minSegmentDistance","coordinateIndex","newTarget","considerBothDirections","newCoordinate","forwardDistance","reverseDistance","getTraceTargetUpdate","oldTarget","tracing","startingToDraw","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","createOrUpdateCustomSketchLine_","sketchLineGeom","removeLastPoint","sketchFeature","abortDrawing_","newDrawing","ending","sketchFeatures","overlaySource","ExtentEventType","ExtentEvent","getDefaultExtentStyleFunction","getDefaultPointerStyleFunction","getPointHandler","fixedPoint","getEdgeHandler","fixedP1","fixedP2","$ol$interaction$Extent","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","vertexOverlay_","pointerStyle","snapToVertex_","pixelCoordinate","sortByDistance","getExtentInternal","segments","getSegments","closestSegment","vertex","vertexPixel","coordinateDistance","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","readNumber","writeNumber","to5","differentNumber","$ol$interaction$Link","animationOptions","animationOptions_","replace_","prefix_","initial_","getParamName_","get_","set_","delete_","delete","oldMap","updateUrl_","handleChangeLayerGroup_","searchParams","history","replaceState","updateView","viewProperties","layersParam","initial","visibilities","pushState","tempSegment","ModifyEventType","ModifyEvent","compareIndexes","projectedDistanceToSegmentDataSquared","pointCoordinates","segmentData","distanceToCenterSquared","distanceToCircumference","closestOnSegmentData","$ol$interaction$Modify","boundHandleFeatureChange_","defaultDeleteCondition_","altKeyOnly","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","featuresBeingModified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","hitDetection_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","snapToPointer_","snapToPointer","writer","handlePointerAtPixel_","willModifyFeatures_","ss","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","rings","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","insertVertex_","nodes","hitPointGeometry","vertexSegments","geometryUid","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","component","newIndex","deleted","SelectEventType","SelectEvent","selected","deselected","originalFeatureStyles","Select","boundAddFeature_","boundRemoveFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","setHitTolerance","restorePreviousStyle_","applySelectedStyle_","removeFeatureLayerAssociation_","$ol$interaction$Select","getFeatureFromEvent","$ol$interaction$Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","GEOMETRY_SEGMENTERS_","segmentPointGeometry_","segmentLineStringGeometry_","segmentPolygonGeometry_","segmentMultiPointGeometry_","segmentMultiLineStringGeometry_","segmentMultiPolygonGeometry_","segmentGeometryCollectionGeometry_","segmentCircleGeometry_","register","feature_uid","segmenter","segmentsData","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","snapTo","updateFeature_","featuresToUpdate","unlisten","unregister","currentMap","projectedCoordinate","segmentsLength","closestVertex","squaredPixelTolerance","getResult","tempVertexCoord","segmentStart","segmentEnd","TranslateEventType","TranslateEvent","startCoordinate","$ol$interaction$Translate","lastCoordinate_","startCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","getObject","$ol$format$JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","GEOMETRY_READERS","getGeometryLayout","paths","GEOMETRY_WRITERS","esriJSON","hasZM","getHasZM","hasZ","hasM","esriJSONPolygon","flatRing","outerRings","matched","outerRing","convertRings","geometryReader","geometryWriter","$ol$format$EsriJSON","JSONFeature","idField","esriJSONFeature","esriJSONFeatures","objectIdFieldName","wkid","objects","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getDocument","getAllTextContent","normalizeWhitespace","getAllTextContent_","nodeType","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","fixedNodeName","fixedNamespaceURI","newNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","structureNS","parseNode","parsersNS","nextElementSibling","parsers","parser","pushParseAndPop","pushSerializeAndPop","xmlSerializer_","document_","implementation","createDocument","$ol$format$XMLFeature","XMLSerializer","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","GMLNS","ONLY_WHITESPACE_RE","GMLBase","XMLFeature","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","namespace","featureMember","readFeaturesInternal","featureMembers","defaultPrefix","ns","featureTypes","readFeatureElement","readGeometryOrExtent","getAttribute","GEOMETRY_PARSERS","readExtentElement","readGeometryElement","readFeatureElementInternal","asFeature","_content_","fid","getAttributeNS","readPoint","readFlatCoordinatesFromNode","readMultiPoint","MULTIPOINT_PARSERS","readMultiLineString","MULTILINESTRING_PARSERS","readMultiPolygon","MULTIPOLYGON_PARSERS","pointMemberParser","POINTMEMBER_PARSERS","lineStringMemberParser","LINESTRINGMEMBER_PARSERS","polygonMemberParser","POLYGONMEMBER_PARSERS","readLineString","readFlatLinearRing","GEOMETRY_FLAT_COORDINATES_PARSERS","readLinearRing","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS","internalOptions","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","$ol$format$GMLBase","readBooleanString","readDateTime","dateTime","readDecimal","readDecimalString","readPositiveInteger","readNonNegativeIntegerString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML2","readFlatCoordinates","containerSrs","coordsGroups","readBox","BOX_PARSERS_","innerBoundaryIsParser","flatLinearRing","outerBoundaryIsParser","GEOMETRY_NODE_FACTORY_","multiSurface","surface","multiCurve","writeFeatureElement","writeGeometryElement","writeCurveOrLineString","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","writeLineStringOrCurveMember","writeMultiCurveOrLineString","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","GEOMETRY_SERIALIZERS","getCoords_","writeSurfaceOrPolygon","RING_SERIALIZERS","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing","writeLinearRing","writePoint","writeMultiPoint","POINTMEMBER_SERIALIZERS","writePointMember","writeMultiSurfaceOrPolygon","SURFACEORPOLYGONMEMBER_SERIALIZERS","writeSurfaceOrPolygonMember","writeEnvelope","ENVELOPE_SERIALIZERS","innerBoundaryIs","outerBoundaryIs","Box","Curve","Surface","Envelope","curveMember","surfaceMember","lowerCorner","upperCorner","$ol$format$GML2","GML3","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve","MULTICURVE_PARSERS","readFlatCurveRing","readMultiSurface","MULTISURFACE_PARSERS","curveMemberParser","CURVEMEMBER_PARSERS","surfaceMemberParser","SURFACEMEMBER_PARSERS","readPatch","PATCHES_PARSERS","readSegment","SEGMENTS_PARSERS","readPolygonPatch","readLineStringSegment","interiorParser","exteriorParser","readSurface","SURFACE_PARSERS","readCurve","CURVE_PARSERS","readEnvelope","ENVELOPE_PARSERS","readFlatPos","re","readFlatPosList","contextDimension","writePos_","srsDimension","writePosList_","posList","writeFeatureMembers_","setAttributeNS","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","Ring","$ol$format$GML3","GML","$ol$format$GML","GML32","$ol$format$GML32","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","RTE_PARSERS","cmt","desc","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","applyLayoutOptions","$ol$format$GPX","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","featureReader","gpx","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","$ol$format$GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","$ol$format$TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","$ol$format$IGC","TextFeature","altitudeMode_","altitudeMode","year","month","day","lastDateTime","hour","minute","second","UTC","GX_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","readStyleURL","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","readURI","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_NO_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","TEXTAREA","DEFAULT_FILL_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","scaleForSize","defaultIconUrlFunction","findStyle","styleValue","defaultStyle","sharedStyles","readColor","hexColor","baseURI","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","GX_TRACK_PARSERS","when","whens","gxTrackObject","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","innerBoundaryFlatLinearRings","INNER_BOUNDARY_IS_PARSERS","OUTER_BOUNDARY_IS_PARSERS","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","iconUrlFunction_","resizeScale","LabelStyle","LineStyle","PolyStyle","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","rgba","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","createCDATASection","writeCDATASection","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","factory","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","names","pointStyles","lineStyles","polyStyles","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","styleArray","writeStyles_","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLY_STYLE_SEQUENCE","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","POLY_STYLE_SERIALIZERS","iconProperties","$ol$format$KML","defaultStyle_","extractStyles_","extractStyles","writeStyles","sharedStyles_","showPointNames_","showPointNames","iconUrlFunction","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","drawName","multiGeometryPoints","featureStyle","nameStyle","foundStyle","textOffset","createNameStyleFunction","createFeatureStyleFunction","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","WAY_PARSERS","nd","ndrefs","readTag","PARSERS","tags","NODE_PARSERS","way","ways","$ol$format$OSMXML","$ol$format$XML","readFromDocument","readFromNode","readHref","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","ADDRESS_PARSERS","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","Address","DCP_PARSERS","HTTP","HTTP_PARSERS","Get","REQUEST_METHOD_PARSERS","Post","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","$ol$format$OWS","XML","owsObject","flipXY","destOffset","encodeUnsignedInteger","encoded","$ol$format$Polyline","factor_","lastNumbers","numbers","current","decodeUnsignedIntegers","decodeSignedIntegers","decodeFloats","decodeDeltas","encodeUnsignedIntegers","encodeSignedIntegers","encodeFloats","encodeDeltas","transformVertex","arcs","concatenateArcs","polyArray","ringCoords","indices","readFeaturesFromGeometryCollection","readFeatureFromGeometry","transformArc","$ol$format$TopoJSON","topoJSONTopology","transformArcs","topoJSONFeatures","objectName","$ol$format$filter$Filter","tagName_","getTagName","$ol$format$filter$LogicalNary","Filter","$ol$format$filter$And","LogicalNary","$ol$format$filter$Bbox","$ol$format$filter$Spatial","$ol$format$filter$Contains","Spatial","$ol$format$filter$DWithin","unit","$ol$format$filter$Disjoint","$ol$format$filter$Comparison","propertyName","$ol$format$filter$During","Comparison","$ol$format$filter$ComparisonBinary","matchCase","$ol$format$filter$EqualTo","ComparisonBinary","$ol$format$filter$GreaterThan","$ol$format$filter$GreaterThanOrEqualTo","$ol$format$filter$Intersects","$ol$format$filter$IsBetween","lowerBoundary","upperBoundary","$ol$format$filter$IsLike","pattern","wildCard","singleChar","escapeChar","$ol$format$filter$IsNull","$ol$format$filter$LessThan","$ol$format$filter$LessThanOrEqualTo","$ol$format$filter$Not","$ol$format$filter$NotEqualTo","$ol$format$filter$Or","$ol$format$filter$ResourceId","rid","$ol$format$filter$Within","boundedBy","member","TRANSACTION_SUMMARY_PARSERS","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","readTransactionSummary","InsertResults","readInsertResults","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","Update","writeUpdate","Delete","writeDelete","writeProperty","Native","writeNative","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","SCHEMA_LOCATIONS","GML_FORMATS","serializeTransactionRequest","OGC_FID_PARSERS","FeatureId","fidParser","INSERT_RESULTS_PARSERS","gmlVersion","writeOgcFidFilter","getTypeName","featurePrefix","typeName","nativeElement","vendorId","safeToIgnore","GETFEATURE_SERIALIZERS","Query","writeQuery","During","writeDuringFilter","And","writeLogicalFilter","Or","Not","writeNotFilter","BBOX","writeBboxFilter","Contains","writeSpatialFilter","Intersects","Within","DWithin","writeDWithinFilter","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","writeIsNullFilter","PropertyIsBetween","writeIsBetweenFilter","PropertyIsLike","writeIsLikeFilter","Disjoint","ResourceId","propertyNames","typeNameAttr","getFilterNS","writeFilterCondition","writePropertyName","writeExpression","timePeriod","writeTimeInstant","writeLiteral","timeInstant","timePosition","writeGetFeature","$ol$format$WFS","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","featuresNS","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","handle","outputFormat","maxFeatures","resultType","viewParams","combineBboxAndFilter","completeFilter","bboxFilter","Bbox","bboxFilterFn","Function","andFilterFn","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","createTransactionRequest","nativeElements","WKBGeometryType","WkbReader","view_","pos_","initialized_","isLittleEndian_","hasZ_","hasM_","srid_","layout_","readUint8","getUint8","readUint32","isLittleEndian","getUint32","getFloat64","numPoints","numRings","readWkbHeader","expectedTypeId","wkbType","wkbTypeThousandth","hasSRID","typeId","readWkbPayload","readGeometryCollection","readWkbBlock","readWkbCollection","getSrid","WkbWriter","opts","littleEndian","isEWKB_","ewkb","writeQueue_","nodata_","X","Y","Z","writeUint8","writeUint32","coordsObj","axis","writeLineString","writeWkbHeader","writeMultiLineString","writeMultiPolygon","writeGeometryCollection","findMinimumLayout","geoms","wkblut","geomType","getBuffer","setUint8","setUint32","setFloat64","getDataView","decodeHexString","byteOffset","$ol$format$WKB","splitCollection","viewCache_","hex_","littleEndian_","ewkb_","nodataZ_","nodataZ","nodataM_","nodataM","toUpperCase","encodeHexString","GeometryConstructor","POINT","LINESTRING","POLYGON","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON","EMPTY","TokenType","wktTypeLookup","Lexer","wkt","index_","isAlpha_","isNumeric_","isWhiteSpace_","nextChar_","nextToken","readNumber_","readText_","scientificNotation","Parser","lexer","lexer_","token_","consume_","isTokenType","isMatch","parseGeometry_","parseGeometryLayout_","dimToken","dimInfo","parseGeometryCollectionText_","formatErrorMessage_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","token","isEmptyGeometry_","encodePointGeometry","encodeLineStringGeometry","encodePolygonGeometry","GeometryEncoder","components","encode","enc","geometryEncoder","wktType","encodeGeometryLayout","$ol$format$WKT","splitCollection_","parse_","SERVICE_PARSERS","Capability","CAPABILITY_PARSERS","REQUEST_PARSERS","Exception","EXCEPTION_PARSERS","layerObject","LAYER_PARSERS","readLayer","Name","KeywordList","readKeywordList","OnlineResource","ContactInformation","CONTACT_INFORMATION_PARSERS","LayerLimit","MaxWidth","MaxHeight","ContactPersonPrimary","CONTACT_PERSON_PARSERS","ContactPosition","ContactAddress","CONTACT_ADDRESS_PARSERS","ContactVoiceTelephone","ContactFacsimileTelephone","ContactElectronicMailAddress","ContactPerson","ContactOrganization","AddressType","StateOrProvince","PostCode","CRS","EX_GeographicBoundingBox","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","BoundingBox","Dimension","unitSymbol","multipleValues","nearestValue","ATTRIBUTION_PARSERS","AuthorityURL","authorityObject","readFormatOnlineresource","Identifier","MetadataURL","metadataObject","DataURL","FeatureListURL","MinScaleDenominator","MaxScaleDenominator","LogoURL","readSizedFormatOnlineresource","GetCapabilities","readOperationType","GetMap","GetFeatureInfo","OPERATIONTYPE_PARSERS","DCPType","DCPTYPE_PARSERS","LegendURL","StyleSheetURL","StyleURL","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","Keyword","parentLayerObject","queryable","cascaded","noSubsets","fixedWidth","fixedHeight","childValue","parentValue","formatOnlineresource","$ol$format$WMSCapabilities","wmsCapabilityObject","$ol$format$WMSGetFeatureInfo","readFeatures_","layerElement","toRemove","layerFeatures","gmlFeatures","OWS_NAMESPACE_URIS","Contents","CONTENTS_PARSERS","TileMatrixSet","TMS_PARSERS","isDefault","TileMatrixSetLink","TMS_LINKS_PARSERS","DIMENSION_PARSERS","ResourceURL","resourceType","WGS84BoundingBox","readBoundingBox","legend","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","WGS84_BBOX_READERS","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","$ol$format$WMTSCapabilities","owsParser_","OWS","WMTSCapabilityObject","events","FullScreenEventType","isFullScreenSupported","requestFullscreen","fullscreenEnabled","isFullScreen","fullscreenElement","requestFullScreen","$ol$control$FullScreen","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","cssClassName_","documentListeners_","activeClassName_","activeClassName","inactiveClassName_","inactiveClassName","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","exitFullscreen","exitFullScreen","requestFullScreenWithKeys","handleFullScreenChange_","wasInFullscreen","fullscreen","PROJECTION","COORDINATE_FORMAT","$ol$control$MousePosition","coordinateFormat","setCoordinateFormat","renderOnMouseOut_","placeholder","placeholder_","renderedHTML_","mapProjection_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","html","MAX_RATIO","MIN_RATIO","$ol$control$OverviewMap","boundHandleRotationChanged_","handleRotationChanged_","viewExtent_","ovmapDiv_","ovmap","Map","ovmap_","boxSizing","boxOverlay_","Overlay","scope","overlayBox","mousePosition","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","updateBoxAfterOvmapIsRendered_","newView","validateExtent_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","updateBox_","ovresolution","ovmapPostrenderKey_","getOverviewMap","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","$ol$control$ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","maxWidth_","maxWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","dpi_","setDpi","pointResolutionUnits","nominalCount","suffix","metersPerDegree","decimalCount","previousCount","previousWidth","previousDecimalCount","createScaleBar","resolutionScale","getScaleForResolution","mapScale","stepWidth","scaleSteps","createMarker","cls","createStepText","isLast","lengthString","Direction","$ol$control$ZoomSlider","currentResolution_","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","initSlider_","containerWidth","containerHeight","containerStyle","thumb","thumbStyle","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","setThumbPosition_","getPositionForResolution_","amount","$ol$control$ZoomToExtent","handleZoomToExtent","ol","$ol$Collection","_ol_Collection$CollectionEvent","Geolocation","_ol_Geolocation$GeolocationError","_ol_Object$ObjectEvent","FullScreen","MousePosition","OverviewMap","ScaleLine","ZoomSlider","ZoomToExtent","EsriJSON","GPX","GeoJSON","IGC","IIIFInfo","KML","OSMXML","Polyline","TopoJSON","WFS","WKB","WKT","WMSCapabilities","WMSGetFeatureInfo","WMTSCapabilities","EqualTo","GreaterThan","GreaterThanOrEqualTo","IsBetween","IsLike","IsNull","LessThan","LessThanOrEqualTo","NotEqualTo","DragAndDrop","_ol_interaction_DragAndDrop$DragAndDropEvent","_ol_interaction_DragBox$DragBoxEvent","DragRotateAndZoom","Draw","_ol_interaction_Draw$DrawEvent","Extent","_ol_interaction_Extent$ExtentEvent","Modify","_ol_interaction_Modify$ModifyEvent","Pointer","_ol_interaction_Select$SelectEvent","Snap","Translate","_ol_interaction_Translate$TranslateEvent","Base","BaseImage","BaseTile","Graticule","Group","_ol_layer_Group$GroupEvent","Heatmap","MapboxVector","Vector","VectorImage","WebGLPoints","WebGLTile","net","_ol_net$ClientError","_ol_net$ResponseError","BuilderGroup","Immediate","webgl","BatchRenderer","Composite","VectorImageLayer","PointsLayer","BingMaps","CartoDB","Cluster","IIIF","_ol_source_Image$ImageSourceEvent","ImageArcGISRest","ImageMapGuide","ImageStatic","ImageWMS","OGCMapTile","OGCVectorTile","OSM","Raster","_ol_source_Raster$Processor","_ol_source_Raster$RasterSourceEvent","Stamen","_ol_source_Tile$TileSourceEvent","TileArcGISRest","TileDebug","TileJSON","TileWMS","UTFGrid","_ol_source_UTFGrid$CustomTile","_ol_source_Vector$VectorSourceEvent","WMTS","Zoomify","_ol_source_Zoomify$CustomTile","structs","LinkedList","Helper","PostProcessingPass","RenderTarget","_ol_webgl_ShaderBuilder$ShaderBuilder"],"mappings":"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"}