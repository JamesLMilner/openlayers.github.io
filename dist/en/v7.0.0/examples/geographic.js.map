{"version":3,"file":"geographic.js","mappings":"sLAMA,E,QAAA,MAEA,MAAMA,EAAQ,EAAE,IAAK,IAEfC,EAAQ,IAAI,IAAMD,GAElBE,EAAM,IAAI,IAAI,CAClBC,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQL,EACRM,KAAM,IAERC,OAAQ,CACN,IAAI,IAAU,CACZC,OAAQ,IAAI,MAEd,IAAI,IAAY,CACdA,OAAQ,IAAI,IAAa,CACvBC,SAAU,CAAC,IAAI,IAAQR,MAEzBS,MAAO,CACL,gBAAiB,EACjB,oBAAqB,YAMvBC,EAAUC,SAASC,eAAe,SAElCC,EAAQ,IAAI,IAAQ,CACxBH,QAASA,EACTI,YAAa,gBACbC,WAAW,EACXC,OAAQ,CAAC,GAAI,MAIf,SAASC,EAAiBC,GACxB,MAAO,6DAGqBA,EAAW,GAAGC,QAAQ,6CACtBD,EAAW,GAAGC,QAAQ,4CAGpD,CAVAlB,EAAImB,WAAWP,GAYf,MAAMQ,EAAOV,SAASC,eAAe,QACrCX,EAAIqB,GAAG,WAAW,WAChB,MACMlB,EADOH,EAAIsB,UACGC,YACpBH,EAAKI,UAAYR,EAAiBb,EACpC,IAEAH,EAAIqB,GAAG,SAAS,SAAUI,GACxBC,EAAEjB,GAASkB,QAAQ,WAEnB,MAAMC,EAAU5B,EAAI6B,mBAAmBJ,EAAMK,OAAO,GACpD,GAAIF,EAAS,CACX,MAAMX,EAAaW,EAAQG,cAAcC,iBACzCpB,EAAMqB,YAAY,CAChBhB,EAAW,GAA6C,IAAxCiB,KAAKC,MAAMV,EAAMR,WAAW,GAAK,KACjDA,EAAW,KAEbS,EAAEjB,GAASkB,QAAQ,CACjBS,UAAW3B,EAAQ4B,cACnBC,MAAM,EACNC,UAAU,EACVC,QAASxB,EAAiBC,GAC1BwB,UAAW,QAEbf,EAAEjB,GAASkB,QAAQ,OACrB,CACF,IAEA3B,EAAIqB,GAAG,eAAe,SAAUI,GAC1BzB,EAAI0C,kBAAkBjB,EAAMK,OAC9B9B,EAAI2C,cAAcnC,MAAMoC,OAAS,UAEjC5C,EAAI2C,cAAcnC,MAAMoC,OAAS,SAErC,G","sources":["webpack:///./geographic.js"],"sourcesContent":["import {Feature, Map, Overlay, View} from '../src/ol/index.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport {Point} from '../src/ol/geom.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {useGeographic} from '../src/ol/proj.js';\n\nuseGeographic();\n\nconst place = [-110, 45];\n\nconst point = new Point(place);\n\nconst map = new Map({\n  target: 'map',\n  view: new View({\n    center: place,\n    zoom: 8,\n  }),\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    }),\n    new VectorLayer({\n      source: new VectorSource({\n        features: [new Feature(point)],\n      }),\n      style: {\n        'circle-radius': 9,\n        'circle-fill-color': 'red',\n      },\n    }),\n  ],\n});\n\nconst element = document.getElementById('popup');\n\nconst popup = new Overlay({\n  element: element,\n  positioning: 'bottom-center',\n  stopEvent: false,\n  offset: [0, -10],\n});\nmap.addOverlay(popup);\n\nfunction formatCoordinate(coordinate) {\n  return `\n    <table>\n      <tbody>\n        <tr><th>lon</th><td>${coordinate[0].toFixed(2)}</td></tr>\n        <tr><th>lat</th><td>${coordinate[1].toFixed(2)}</td></tr>\n      </tbody>\n    </table>`;\n}\n\nconst info = document.getElementById('info');\nmap.on('moveend', function () {\n  const view = map.getView();\n  const center = view.getCenter();\n  info.innerHTML = formatCoordinate(center);\n});\n\nmap.on('click', function (event) {\n  $(element).popover('dispose');\n\n  const feature = map.getFeaturesAtPixel(event.pixel)[0];\n  if (feature) {\n    const coordinate = feature.getGeometry().getCoordinates();\n    popup.setPosition([\n      coordinate[0] + Math.round(event.coordinate[0] / 360) * 360,\n      coordinate[1],\n    ]);\n    $(element).popover({\n      container: element.parentElement,\n      html: true,\n      sanitize: false,\n      content: formatCoordinate(coordinate),\n      placement: 'top',\n    });\n    $(element).popover('show');\n  }\n});\n\nmap.on('pointermove', function (event) {\n  if (map.hasFeatureAtPixel(event.pixel)) {\n    map.getViewport().style.cursor = 'pointer';\n  } else {\n    map.getViewport().style.cursor = 'inherit';\n  }\n});\n"],"names":["place","point","map","target","view","center","zoom","layers","source","features","style","element","document","getElementById","popup","positioning","stopEvent","offset","formatCoordinate","coordinate","toFixed","addOverlay","info","on","getView","getCenter","innerHTML","event","$","popover","feature","getFeaturesAtPixel","pixel","getGeometry","getCoordinates","setPosition","Math","round","container","parentElement","html","sanitize","content","placement","hasFeatureAtPixel","getViewport","cursor"],"sourceRoot":""}