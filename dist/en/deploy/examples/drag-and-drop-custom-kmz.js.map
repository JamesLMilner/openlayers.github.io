{"version":3,"file":"drag-and-drop-custom-kmz.js","mappings":"6NAaA,MAAMA,EAAM,IAAIC,MAEhB,SAASC,EAAWC,GAClB,IAAIC,EACJJ,EAAIK,KAAKF,GACT,MAAMG,EAAUN,EAAIO,KAAK,WAAW,GAIpC,OAHID,IACFF,EAAUE,EAAQE,UAEbJ,CACR,CAED,SAASK,EAAYC,GACnB,MAAMC,EAAQC,OAAOC,SAASH,KAAKI,YAAY,KAC/C,IAAe,IAAXH,EAAc,CAChB,MAAML,EAAUN,EAAIO,KAAKG,EAAKK,MAAMJ,EAAQ,IAC5C,GAAIL,EACF,OAAOU,IAAIC,gBAAgB,IAAIC,KAAK,CAACZ,EAAQa,kBAEhD,CACD,OAAOT,CACR,CAID,MAAMU,UAAYC,EAAAA,GAChBC,YAAYC,GACV,MAAMC,EAAUD,GAAe,CAAC,EAChCC,EAAQC,gBAAkBhB,EAC1BiB,MAAMF,EACP,CAEDG,UACE,MAAO,aACR,CAEDC,YAAYC,EAAQL,GAClB,MAAMpB,EAAUF,EAAW2B,GAC3B,OAAOH,MAAME,YAAYxB,EAASoB,EACnC,CAEDM,aAAaD,EAAQL,GACnB,MAAMpB,EAAUF,EAAW2B,GAC3B,OAAOH,MAAMI,aAAa1B,EAASoB,EACpC,EAKH,MAAMO,EAAyB,IAAIC,EAAAA,EAAY,CAC7CC,mBAAoB,CAACb,EAAKc,EAAAA,EAAKC,EAAAA,EAASC,EAAAA,EAAKf,EAAAA,GAAKgB,EAAAA,KAG9CC,EAAM,IAAIC,EAAAA,EAAI,CAClBC,cAAcC,EAAAA,EAAAA,KAAsBC,OAAO,CAACX,IAC5CY,OAAQ,CACN,IAAIC,EAAAA,EAAU,CACZf,OAAQ,IAAIgB,EAAAA,KAGhBC,OAAQ,MACRC,KAAM,IAAIC,EAAAA,GAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIVnB,EAAuBoB,GAAG,eAAe,SAAUC,GACjD,MAAMC,EAAe,IAAIC,EAAAA,EAAa,CACpCC,SAAUH,EAAMG,WAElBjB,EAAIkB,SACF,IAAIC,EAAAA,EAAY,CACd5B,OAAQwB,KAGZf,EAAIoB,UAAUC,IAAIN,EAAaO,YAChC,IAED,MAAMC,EAAqB,SAAUC,GACnC,MAAMP,EAAW,GAIjB,GAHAjB,EAAIyB,sBAAsBD,GAAO,SAAUE,GACzCT,EAASU,KAAKD,EACf,IACGT,EAASW,OAAS,EAAG,CACvB,MAAMC,EAAO,GACb,IAAIC,EAAGC,EACP,IAAKD,EAAI,EAAGC,EAAKd,EAASW,OAAQE,EAAIC,IAAMD,EAAG,CAC7C,MAAME,EACJf,EAASa,GAAGG,IAAI,gBAChBhB,EAASa,GAAGG,IAAI,SAChBhB,EAASa,GAAGG,IAAI,UAChBhB,EAASa,GAAGG,IAAI,SACdD,GACFH,EAAKF,KAAKK,EAEb,CACDE,SAASC,eAAe,QAAQC,UAAYP,EAAKQ,KAAK,UAAY,OACnE,MACCH,SAASC,eAAe,QAAQC,UAAY,QAE/C,EAEDpC,EAAIa,GAAG,eAAe,SAAUyB,GAC9B,GAAIA,EAAIC,SACN,OAEF,MAAMf,EAAQxB,EAAIwC,cAAcF,EAAIG,eACpClB,EAAmBC,EACpB,IAEDxB,EAAIa,GAAG,SAAS,SAAUyB,GACxBf,EAAmBe,EAAId,MACxB,IAID,MAAMkB,EAAOR,SAASC,eAAe,YAcrCD,SAASC,eAAe,gBAAgBQ,iBAAiB,SAAS,WAZlE,IAA4BC,IAaO,cAZjCC,MAYS,wBAXNC,MAAK,SAAUC,GACd,OAAOA,EAASC,MACjB,IACAF,MAAK,SAAUE,GACdN,EAAKtE,KAAOM,IAAIC,gBAAgBqE,GAChCN,EAAKO,SAAWL,EAChBF,EAAKQ,OACN,GAKJ,G","sources":["webpack:///./drag-and-drop-custom-kmz.js"],"sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {\n  DragAndDrop,\n  defaults as defaultInteractions,\n} from '../src/ol/interaction.js';\nimport {GPX, GeoJSON, IGC, KML, TopoJSON} from '../src/ol/format.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\n\n// Create functions to extract KML and icons from KMZ array buffer,\n// which must be done synchronously.\n\nconst zip = new JSZip();\n\nfunction getKMLData(buffer) {\n  let kmlData;\n  zip.load(buffer);\n  const kmlFile = zip.file(/\\.kml$/i)[0];\n  if (kmlFile) {\n    kmlData = kmlFile.asText();\n  }\n  return kmlData;\n}\n\nfunction getKMLImage(href) {\n  const index = window.location.href.lastIndexOf('/');\n  if (index !== -1) {\n    const kmlFile = zip.file(href.slice(index + 1));\n    if (kmlFile) {\n      return URL.createObjectURL(new Blob([kmlFile.asArrayBuffer()]));\n    }\n  }\n  return href;\n}\n\n// Define a KMZ format class by subclassing ol/format/KML\n\nclass KMZ extends KML {\n  constructor(opt_options) {\n    const options = opt_options || {};\n    options.iconUrlFunction = getKMLImage;\n    super(options);\n  }\n\n  getType() {\n    return 'arraybuffer';\n  }\n\n  readFeature(source, options) {\n    const kmlData = getKMLData(source);\n    return super.readFeature(kmlData, options);\n  }\n\n  readFeatures(source, options) {\n    const kmlData = getKMLData(source);\n    return super.readFeatures(kmlData, options);\n  }\n}\n\n// Set up map with Drag and Drop interaction\n\nconst dragAndDropInteraction = new DragAndDrop({\n  formatConstructors: [KMZ, GPX, GeoJSON, IGC, KML, TopoJSON],\n});\n\nconst map = new Map({\n  interactions: defaultInteractions().extend([dragAndDropInteraction]),\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    }),\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n\ndragAndDropInteraction.on('addfeatures', function (event) {\n  const vectorSource = new VectorSource({\n    features: event.features,\n  });\n  map.addLayer(\n    new VectorLayer({\n      source: vectorSource,\n    })\n  );\n  map.getView().fit(vectorSource.getExtent());\n});\n\nconst displayFeatureInfo = function (pixel) {\n  const features = [];\n  map.forEachFeatureAtPixel(pixel, function (feature) {\n    features.push(feature);\n  });\n  if (features.length > 0) {\n    const info = [];\n    let i, ii;\n    for (i = 0, ii = features.length; i < ii; ++i) {\n      const description =\n        features[i].get('description') ||\n        features[i].get('name') ||\n        features[i].get('_name') ||\n        features[i].get('layer');\n      if (description) {\n        info.push(description);\n      }\n    }\n    document.getElementById('info').innerHTML = info.join('<br/>') || '&nbsp';\n  } else {\n    document.getElementById('info').innerHTML = '&nbsp;';\n  }\n};\n\nmap.on('pointermove', function (evt) {\n  if (evt.dragging) {\n    return;\n  }\n  const pixel = map.getEventPixel(evt.originalEvent);\n  displayFeatureInfo(pixel);\n});\n\nmap.on('click', function (evt) {\n  displayFeatureInfo(evt.pixel);\n});\n\n// Sample data download\n\nconst link = document.getElementById('download');\n\nfunction download(fullpath, filename) {\n  fetch(fullpath)\n    .then(function (response) {\n      return response.blob();\n    })\n    .then(function (blob) {\n      link.href = URL.createObjectURL(blob);\n      link.download = filename;\n      link.click();\n    });\n}\n\ndocument.getElementById('download-kmz').addEventListener('click', function () {\n  download('data/kmz/iceland.kmz', 'iceland.kmz');\n});\n"],"names":["zip","JSZip","getKMLData","buffer","kmlData","load","kmlFile","file","asText","getKMLImage","href","index","window","location","lastIndexOf","slice","URL","createObjectURL","Blob","asArrayBuffer","KMZ","KML","constructor","opt_options","options","iconUrlFunction","super","getType","readFeature","source","readFeatures","dragAndDropInteraction","DragAndDrop","formatConstructors","GPX","GeoJSON","IGC","TopoJSON","map","Map","interactions","defaultInteractions","extend","layers","TileLayer","OSM","target","view","View","center","zoom","on","event","vectorSource","VectorSource","features","addLayer","VectorLayer","getView","fit","getExtent","displayFeatureInfo","pixel","forEachFeatureAtPixel","feature","push","length","info","i","ii","description","get","document","getElementById","innerHTML","join","evt","dragging","getEventPixel","originalEvent","link","addEventListener","filename","fetch","then","response","blob","download","click"],"sourceRoot":""}